---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "networking",
         position: (9, 16),
        },
        Raw {
         content: "resolvconf",
         position: (9, 27),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "resolvconfOptions",
        position: (11, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Concatenation,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (11, 23),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "extraOptions",
           position: (11, 27),
          },
         ],
        },
        default: None,
       },
       BinaryOperation {
        operator: Concatenation,
        operands: [
         FunctionApplication {
          function: Variable {
           identifier: "optional",
           position: (12, 8),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (12, 17),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "dnsSingleRequest",
               position: (12, 21),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "single-request",
              position: (12, 39),
             },
            ],
            position: (12, 38),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optional",
           position: (13, 8),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (13, 17),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "dnsExtensionMechanism",
               position: (13, 21),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "edns0",
              position: (13, 44),
             },
            ],
            position: (13, 43),
           },
          ],
         },
        ],
        position: (13, 5),
       },
      ],
      position: (12, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "configText",
        position: (15, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Addition,
      operands: [
       BinaryOperation {
        operator: Addition,
        operands: [
         BinaryOperation {
          operator: Addition,
          operands: [
           BinaryOperation {
            operator: Addition,
            operands: [
             String {
              parts: [
               Raw {
                content: "# This is the default, but we must set it here to prevent\n# a collision with an apparently unrelated environment\n# variable with the same name exported by dhcpcd.\ninterface_order='lo lo[0-9]*'\n",
                position: (17, 1),
               },
              ],
              position: (16, 5),
             },
             FunctionApplication {
              function: Variable {
               identifier: "optionalString",
               position: (21, 10),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (21, 25),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "services",
                   position: (21, 32),
                  },
                  Raw {
                   content: "nscd",
                   position: (21, 41),
                  },
                  Raw {
                   content: "enable",
                   position: (21, 46),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "# Invalidate the nscd cache whenever resolv.conf is\n# regenerated.\nlibc_restart='/run/current-system/systemd/bin/systemctl try-restart --no-block nscd.service 2> /dev/null'\n",
                  position: (22, 1),
                 },
                ],
                position: (21, 53),
               },
              ],
             },
            ],
            position: (21, 8),
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (25, 10),
            },
            arguments: [
             Parentheses {
              expression: BinaryOperation {
               operator: GreaterThan,
               operands: [
                FunctionApplication {
                 function: Variable {
                  identifier: "length",
                  position: (25, 26),
                 },
                 arguments: [
                  Variable {
                   identifier: "resolvconfOptions",
                   position: (25, 33),
                  },
                 ],
                },
                Int {
                 value: 0,
                 position: (25, 53),
                },
               ],
               position: (25, 51),
              },
              position: (25, 25),
             },
             String {
              parts: [
               Raw {
                content: "# Options as described in resolv.conf(5)\nresolv_conf_options=",
                position: (26, 1),
               },
               Raw {
                content: "'",
                position: (27, 27),
               },
               Interpolation {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "concatStringsSep",
                  position: (27, 30),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: " ",
                     position: (27, 48),
                    },
                   ],
                   position: (27, 47),
                  },
                  Variable {
                   identifier: "resolvconfOptions",
                   position: (27, 51),
                  },
                 ],
                },
               },
               Raw {
                content: "'\n",
                position: (27, 69),
               },
              ],
              position: (25, 56),
             },
            ],
           },
          ],
          position: (25, 8),
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (28, 10),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (28, 25),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "useLocalResolver",
               position: (28, 29),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "# This hosts runs a full-blown DNS resolver.\nname_servers='127.0.0.1'\n",
              position: (29, 1),
             },
            ],
            position: (28, 46),
           },
          ],
         },
        ],
        position: (28, 8),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (31, 10),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "extraConfig",
           position: (31, 14),
          },
         ],
        },
        default: None,
       },
      ],
      position: (31, 8),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (36, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (37, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (37, 31),
               },
              ],
              position: (37, 30),
             },
             String {
              parts: [
               Raw {
                content: "dnsSingleRequest",
                position: (37, 44),
               },
              ],
              position: (37, 43),
             },
            ],
            position: (37, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (37, 67),
               },
              ],
              position: (37, 66),
             },
             String {
              parts: [
               Raw {
                content: "resolvconf",
                position: (37, 80),
               },
              ],
              position: (37, 79),
             },
             String {
              parts: [
               Raw {
                content: "dnsSingleRequest",
                position: (37, 93),
               },
              ],
              position: (37, 92),
             },
            ],
            position: (37, 64),
           },
          ],
         },
         position: (37, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (38, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (38, 31),
               },
              ],
              position: (38, 30),
             },
             String {
              parts: [
               Raw {
                content: "dnsExtensionMechanism",
                position: (38, 44),
               },
              ],
              position: (38, 43),
             },
            ],
            position: (38, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (38, 72),
               },
              ],
              position: (38, 71),
             },
             String {
              parts: [
               Raw {
                content: "resolvconf",
                position: (38, 85),
               },
              ],
              position: (38, 84),
             },
             String {
              parts: [
               Raw {
                content: "dnsExtensionMechanism",
                position: (38, 98),
               },
              ],
              position: (38, 97),
             },
            ],
            position: (38, 69),
           },
          ],
         },
         position: (38, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (39, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (39, 31),
               },
              ],
              position: (39, 30),
             },
             String {
              parts: [
               Raw {
                content: "extraResolvconfConf",
                position: (39, 44),
               },
              ],
              position: (39, 43),
             },
            ],
            position: (39, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (39, 70),
               },
              ],
              position: (39, 69),
             },
             String {
              parts: [
               Raw {
                content: "resolvconf",
                position: (39, 83),
               },
              ],
              position: (39, 82),
             },
             String {
              parts: [
               Raw {
                content: "extraConfig",
                position: (39, 96),
               },
              ],
              position: (39, 95),
             },
            ],
            position: (39, 67),
           },
          ],
         },
         position: (39, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (40, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (40, 31),
               },
              ],
              position: (40, 30),
             },
             String {
              parts: [
               Raw {
                content: "resolvconfOptions",
                position: (40, 44),
               },
              ],
              position: (40, 43),
             },
            ],
            position: (40, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (40, 68),
               },
              ],
              position: (40, 67),
             },
             String {
              parts: [
               Raw {
                content: "resolvconf",
                position: (40, 81),
               },
              ],
              position: (40, 80),
             },
             String {
              parts: [
               Raw {
                content: "extraOptions",
                position: (40, 94),
               },
              ],
              position: (40, 93),
             },
            ],
            position: (40, 65),
           },
          ],
         },
         position: (40, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (41, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (41, 31),
               },
              ],
              position: (41, 30),
             },
             String {
              parts: [
               Raw {
                content: "resolvconf",
                position: (41, 44),
               },
              ],
              position: (41, 43),
             },
             String {
              parts: [
               Raw {
                content: "useHostResolvConf",
                position: (41, 57),
               },
              ],
              position: (41, 56),
             },
            ],
            position: (41, 28),
           },
           String {
            parts: [
             Raw {
              content: "This option was never used for anything anyways",
              position: (41, 79),
             },
            ],
            position: (41, 78),
           },
          ],
         },
         position: (41, 5),
        },
       ],
       position: (36, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (44, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "networking",
            position: (46, 5),
           },
           Raw {
            content: "resolvconf",
            position: (46, 16),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (48, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (48, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (49, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (49, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (50, 9),
                   },
                  ],
                 },
                 to: UnaryOperation {
                  operator: Not,
                  operand: Parentheses {
                   expression: HasProperty {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (50, 21),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "environment",
                        position: (50, 28),
                       },
                       Raw {
                        content: "etc",
                        position: (50, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Expression {
                       ast: String {
                        parts: [
                         Raw {
                          content: "resolv.conf",
                          position: (50, 47),
                         },
                        ],
                        position: (50, 46),
                       },
                      },
                     ],
                    },
                    position: (50, 44),
                   },
                   position: (50, 20),
                  },
                  position: (50, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (51, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "!(config.environment.etc ? \"resolv.conf\")",
                      position: (51, 43),
                     },
                    ],
                    position: (51, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (52, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "DNS configuration is managed by resolvconf.\n",
                    position: (53, 1),
                   },
                  ],
                  position: (52, 23),
                 },
                },
               ],
               recursive: false,
               position: (48, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "dnsSingleRequest",
               position: (57, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (57, 26),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "mkOption",
                 position: (57, 30),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (58, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (58, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (59, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Recent versions of glibc will issue both ipv4 (A) and ipv6 (AAAA)\naddress queries at the same time, from the same port. Sometimes upstream\nrouters will systemically drop the ipv4 queries. The symptom of this problem is\nthat 'getent hosts example.com' only returns ipv6 (or perhaps only ipv4) addresses. The\nworkaround for this is to specify the option 'single-request' in\n/etc/resolv.conf. This option enables that.\n",
                    position: (61, 1),
                   },
                  ],
                  position: (60, 23),
                 },
                },
               ],
               recursive: false,
               position: (57, 39),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "dnsExtensionMechanism",
               position: (70, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (70, 31),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (71, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (71, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (71, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (72, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (73, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Enable the <code>edns0</code> option in <filename>resolv.conf</filename>. With\nthat option set, <code>glibc</code> supports use of the extension mechanisms for\nDNS (EDNS) specified in RFC 2671. The most popular user of that feature is DNSSEC,\nwhich does not work without it.\n",
                    position: (74, 1),
                   },
                  ],
                  position: (73, 23),
                 },
                },
               ],
               recursive: false,
               position: (70, 40),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraConfig",
               position: (81, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (81, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (82, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (82, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (82, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (83, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (83, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (84, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "libc=NO",
                    position: (84, 20),
                   },
                  ],
                  position: (84, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (85, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra configuration to append to <filename>resolvconf.conf</filename>.\n",
                    position: (86, 1),
                   },
                  ],
                  position: (85, 23),
                 },
                },
               ],
               recursive: false,
               position: (81, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraOptions",
               position: (90, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (90, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (91, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (91, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (91, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (91, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (92, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (92, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (93, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "ndots:1",
                      position: (93, 22),
                     },
                    ],
                    position: (93, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "rotate",
                      position: (93, 32),
                     },
                    ],
                    position: (93, 31),
                   },
                  ],
                  position: (93, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (94, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Set the options in <filename>/etc/resolv.conf</filename>.\n",
                    position: (95, 1),
                   },
                  ],
                  position: (94, 23),
                 },
                },
               ],
               recursive: false,
               position: (90, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "useLocalResolver",
               position: (99, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (99, 26),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (100, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (100, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (101, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (102, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Use local DNS server for resolving.\n",
                    position: (103, 1),
                   },
                  ],
                  position: (102, 23),
                 },
                },
               ],
               recursive: false,
               position: (99, 35),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (46, 29),
         },
        },
       ],
       recursive: false,
       position: (44, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (111, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (111, 12),
       },
       arguments: [
        List {
         elements: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "environment",
                position: (113, 7),
               },
               Raw {
                content: "etc",
                position: (113, 19),
               },
               Expression {
                ast: String {
                 parts: [
                  Raw {
                   content: "resolvconf.conf",
                   position: (113, 24),
                  },
                 ],
                 position: (113, 23),
                },
               },
               Raw {
                content: "text",
                position: (113, 41),
               },
              ],
             },
             to: IfThenElse {
              predicate: UnaryOperation {
               operator: Not,
               operand: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (114, 13),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "enable",
                   position: (114, 17),
                  },
                 ],
                },
                default: None,
               },
               position: (114, 12),
              },
              then: String {
               parts: [
                Raw {
                 content: "echo \"resolvconf is disabled on this system but was used anyway:\" >&2\necho \"$0 $*\" >&2\nexit 1\n",
                 position: (117, 1),
                },
               ],
               position: (116, 11),
              },
              else_: Variable {
               identifier: "configText",
               position: (121, 14),
              },
              position: (114, 9),
             },
            },
           ],
           recursive: false,
           position: (112, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (124, 6),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (124, 11),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (124, 15),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "environment",
                   position: (125, 7),
                  },
                  Raw {
                   content: "systemPackages",
                   position: (125, 19),
                  },
                 ],
                },
                to: List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (125, 38),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "openresolv",
                      position: (125, 43),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (125, 36),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "systemd",
                   position: (127, 7),
                  },
                  Raw {
                   content: "services",
                   position: (127, 15),
                  },
                  Raw {
                   content: "resolvconf",
                   position: (127, 24),
                  },
                 ],
                },
                to: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "description",
                      position: (128, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "resolvconf update",
                      position: (128, 24),
                     },
                    ],
                    position: (128, 23),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "before",
                      position: (130, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "network-pre.target",
                        position: (130, 21),
                       },
                      ],
                      position: (130, 20),
                     },
                    ],
                    position: (130, 18),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "wants",
                      position: (131, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "network-pre.target",
                        position: (131, 20),
                       },
                      ],
                      position: (131, 19),
                     },
                    ],
                    position: (131, 17),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "wantedBy",
                      position: (132, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "multi-user.target",
                        position: (132, 23),
                       },
                      ],
                      position: (132, 22),
                     },
                    ],
                    position: (132, 20),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "restartTriggers",
                      position: (133, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "config",
                       position: (133, 29),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "environment",
                         position: (133, 36),
                        },
                        Raw {
                         content: "etc",
                         position: (133, 48),
                        },
                        Expression {
                         ast: String {
                          parts: [
                           Raw {
                            content: "resolvconf.conf",
                            position: (133, 53),
                           },
                          ],
                          position: (133, 52),
                         },
                        },
                        Raw {
                         content: "source",
                         position: (133, 70),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                    position: (133, 27),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "serviceConfig",
                      position: (135, 9),
                     },
                    ],
                   },
                   to: Map {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "Type",
                         position: (136, 11),
                        },
                       ],
                      },
                      to: String {
                       parts: [
                        Raw {
                         content: "oneshot",
                         position: (136, 19),
                        },
                       ],
                       position: (136, 18),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "ExecStart",
                         position: (137, 11),
                        },
                       ],
                      },
                      to: String {
                       parts: [
                        Interpolation {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "pkgs",
                           position: (137, 26),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "openresolv",
                             position: (137, 31),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "/bin/resolvconf -u",
                         position: (137, 42),
                        },
                       ],
                       position: (137, 23),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "RemainAfterExit",
                         position: (138, 11),
                        },
                       ],
                      },
                      to: Variable {
                       identifier: "true",
                       position: (138, 29),
                      },
                     },
                    ],
                    recursive: false,
                    position: (135, 25),
                   },
                  },
                 ],
                 recursive: false,
                 position: (127, 37),
                },
               },
              ],
              recursive: false,
              position: (124, 22),
             },
            ],
           },
           position: (124, 5),
          },
         ],
         position: (111, 20),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (35, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}