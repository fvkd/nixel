---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "spotifyd",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "toml",
        position: (7, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (7, 10),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "formats",
          position: (7, 15),
         },
         Raw {
          content: "toml",
          position: (7, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [],
        recursive: false,
        position: (7, 28),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "warnConfig",
        position: (8, 3),
       },
      ],
     },
     to: IfThenElse {
      predicate: BinaryOperation {
       operator: NotEqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (9, 8),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "config",
            position: (9, 12),
           },
          ],
         },
         default: None,
        },
        String {
         parts: [],
         position: (9, 22),
        },
       ],
       position: (9, 19),
      },
      then: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (10, 10),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "trace",
           position: (10, 14),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "Using the stringly typed .config attribute is discouraged. Use the TOML typed .settings attribute instead.",
           position: (10, 21),
          },
         ],
         position: (10, 20),
        },
       ],
      },
      else_: Variable {
       identifier: "id",
       position: (11, 10),
      },
      position: (9, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "spotifydConf",
        position: (12, 3),
       },
      ],
     },
     to: IfThenElse {
      predicate: BinaryOperation {
       operator: NotEqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (13, 8),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "settings",
            position: (13, 12),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [],
         recursive: false,
         position: (13, 24),
        },
       ],
       position: (13, 21),
      },
      then: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "toml",
         position: (14, 10),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "generate",
           position: (14, 15),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "spotify.conf",
           position: (14, 25),
          },
         ],
         position: (14, 24),
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (14, 39),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "settings",
            position: (14, 43),
           },
          ],
         },
         default: None,
        },
       ],
      },
      else_: FunctionApplication {
       function: Variable {
        identifier: "warnConfig",
        position: (15, 10),
       },
       arguments: [
        Parentheses {
         expression: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (15, 22),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "writeText",
              position: (15, 27),
             },
            ],
           },
           default: None,
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "spotifyd.conf",
              position: (15, 38),
             },
            ],
            position: (15, 37),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (15, 53),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "config",
               position: (15, 57),
              },
             ],
            },
            default: None,
           },
          ],
         },
         position: (15, 21),
        },
       ],
      },
      position: (13, 5),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (18, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (19, 5),
           },
           Raw {
            content: "spotifyd",
            position: (19, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (20, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (20, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "spotifyd, a Spotify playing daemon",
                 position: (20, 32),
                },
               ],
               position: (20, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "config",
               position: (22, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (22, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (23, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (23, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (24, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (24, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (25, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "(Deprecated) Configuration for Spotifyd. For syntax and directives, see\n<link xlink:href=\"https://github.com/Spotifyd/spotifyd#Configuration\"/>.\n",
                    position: (26, 1),
                   },
                  ],
                  position: (25, 23),
                 },
                },
               ],
               recursive: false,
               position: (22, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "settings",
               position: (31, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (31, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (32, 9),
                   },
                  ],
                 },
                 to: Map {
                  bindings: [],
                  recursive: false,
                  position: (32, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (33, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "toml",
                   position: (33, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "type",
                     position: (33, 21),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (34, 9),
                   },
                  ],
                 },
                 to: Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "global",
                       position: (34, 21),
                      },
                      Raw {
                       content: "bitrate",
                       position: (34, 28),
                      },
                     ],
                    },
                    to: Int {
                     value: 320,
                     position: (34, 38),
                    },
                   },
                  ],
                  recursive: false,
                  position: (34, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Configuration for Spotifyd. For syntax and directives, see\n<link xlink:href=\"https://github.com/Spotifyd/spotifyd#Configuration\"/>.\n",
                    position: (36, 1),
                   },
                  ],
                  position: (35, 23),
                 },
                },
               ],
               recursive: false,
               position: (31, 27),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (19, 25),
         },
        },
       ],
       recursive: false,
       position: (18, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (43, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (43, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (43, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (43, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (44, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (46, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: LogicalOr,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (46, 21),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "config",
                        position: (46, 25),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [],
                     position: (46, 35),
                    },
                   ],
                   position: (46, 32),
                  },
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (46, 41),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "settings",
                        position: (46, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (46, 57),
                    },
                   ],
                   position: (46, 54),
                  },
                 ],
                 position: (46, 38),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (47, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "At most one of the .config attribute and the .settings attribute may be set",
                   position: (47, 20),
                  },
                 ],
                 position: (47, 19),
                },
               },
              ],
              recursive: false,
              position: (45, 7),
             },
            ],
            position: (44, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (51, 5),
             },
             Raw {
              content: "services",
              position: (51, 13),
             },
             Raw {
              content: "spotifyd",
              position: (51, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (52, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (52, 21),
                  },
                 ],
                 position: (52, 20),
                },
               ],
               position: (52, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (53, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network-online.target",
                   position: (53, 18),
                  },
                 ],
                 position: (53, 17),
                },
                String {
                 parts: [
                  Raw {
                   content: "sound.target",
                   position: (53, 42),
                  },
                 ],
                 position: (53, 41),
                },
               ],
               position: (53, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (54, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "spotifyd, a Spotify playing daemon",
                 position: (54, 22),
                },
               ],
               position: (54, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "environment",
                 position: (55, 7),
                },
                Raw {
                 content: "SHELL",
                 position: (55, 19),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/bin/sh",
                 position: (55, 28),
                },
               ],
               position: (55, 27),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (56, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (57, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "spotifyd",
                        position: (57, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/spotifyd --no-daemon --cache-path /var/cache/spotifyd --config-path ",
                    position: (57, 38),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "spotifydConf",
                     position: (57, 113),
                    },
                   },
                  ],
                  position: (57, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (58, 20),
                   },
                  ],
                  position: (58, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RestartSec",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 12,
                  position: (59, 22),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "DynamicUser",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (60, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "CacheDirectory",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "spotifyd",
                    position: (61, 27),
                   },
                  ],
                  position: (61, 26),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "SupplementaryGroups",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "audio",
                      position: (62, 33),
                     },
                    ],
                    position: (62, 32),
                   },
                  ],
                  position: (62, 31),
                 },
                },
               ],
               recursive: false,
               position: (56, 23),
              },
             },
            ],
            recursive: false,
            position: (51, 33),
           },
          },
         ],
         recursive: false,
         position: (43, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (67, 3),
        },
        Raw {
         content: "maintainers",
         position: (67, 8),
        },
       ],
      },
      to: List {
       elements: [
        PropertyAccess {
         expression: Variable {
          identifier: "maintainers",
          position: (67, 24),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "anderslundstedt",
            position: (67, 36),
           },
          ],
         },
         default: None,
        },
       ],
       position: (67, 22),
      },
     },
    ],
    recursive: false,
    position: (17, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}