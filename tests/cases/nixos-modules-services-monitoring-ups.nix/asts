---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "power",
         position: (8, 16),
        },
        Raw {
         content: "ups",
         position: (8, 22),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: LetIn {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "upsOptions",
         position: (12, 3),
        },
       ],
      },
      Function {
       argument: None,
       arguments: FunctionArguments {
        arguments: [
         FunctionArgument {
          identifier: "config",
          default: None,
         },
         FunctionArgument {
          identifier: "name",
          default: None,
         },
        ],
        ellipsis: true,
       },
       definition: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (14, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "driver",
                position: (17, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (17, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (18, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (18, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (18, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (19, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Specify the program to run to talk to this UPS.  apcsmart,\nbestups, and sec are some examples.\n",
                     position: (20, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "port",
                position: (25, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (25, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (26, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (26, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (26, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (27, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "The serial port to which your UPS is connected.  /dev/ttyS0 is\nusually the first port on Linux boxes, for example.\n",
                     position: (28, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "shutdownOrder",
                position: (33, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (33, 23),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (34, 9),
                    },
                   ],
                  },
                  Int {
                   value: 0,
                   position: (34, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (35, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (35, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "int",
                      position: (35, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (36, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "When you have multiple UPSes on your system, you usually need to\nturn them off in a certain order.  upsdrvctl shuts down all the\n0s, then the 1s, 2s, and so on.  To exclude a UPS from the\nshutdown sequence, set this to -1.\n",
                     position: (37, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "maxStartDelay",
                position: (44, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (44, 23),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (45, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (45, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (46, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (46, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "uniq",
                       position: (46, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (46, 28),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "nullOr",
                         position: (46, 34),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (46, 41),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "int",
                          position: (46, 47),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (47, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "This can be set as a global variable above your first UPS\ndefinition and it can also be set in a UPS section.  This value\ncontrols how long upsdrvctl will wait for the driver to finish\nstarting.  This keeps your system from getting stuck due to a\nbroken driver or UPS.\n",
                     position: (48, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (56, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (56, 21),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (57, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (58, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (58, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (58, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (59, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Description of the UPS.\n",
                     position: (60, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "directives",
                position: (64, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (64, 20),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (65, 9),
                    },
                   ],
                  },
                  List {
                   elements: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (66, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (66, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "listOf",
                       position: (66, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (66, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (66, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (67, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "List of configuration directives for this UPS.\n",
                     position: (68, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "summary",
                position: (72, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (72, 17),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (73, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (74, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (74, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "lines",
                      position: (74, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (75, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Lines which would be added inside ups.conf for handling this UPS.\n",
                     position: (76, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "config",
             position: (82, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "directives",
                position: (83, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOrder",
               position: (83, 20),
              },
              arguments: [
               Int {
                value: 10,
                position: (83, 28),
               },
               BinaryOperation {
                operator: Concatenation,
                operands: [
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "driver = ",
                      position: (84, 10),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (84, 21),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "driver",
                          position: (84, 28),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "port = ",
                      position: (85, 10),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (85, 19),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "port",
                          position: (85, 26),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "desc = \"",
                      position: (86, 11),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (86, 21),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (86, 28),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "\"",
                      position: (86, 40),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "sdorder = ",
                      position: (87, 10),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "toString",
                        position: (87, 22),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "config",
                          position: (87, 31),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "shutdownOrder",
                            position: (87, 38),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                    ],
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optional",
                   position: (88, 13),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "config",
                       position: (88, 23),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "maxStartDelay",
                         position: (88, 30),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (88, 47),
                     },
                    ],
                    position: (88, 44),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "maxstartdelay = ",
                      position: (89, 14),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "toString",
                        position: (89, 32),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "config",
                          position: (89, 41),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "maxStartDelay",
                            position: (89, 48),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                    ],
                   },
                  ],
                 },
                ],
                position: (88, 9),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "summary",
                position: (92, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (93, 9),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "\n      ",
                  position: (93, 27),
                 },
                ],
               },
               BinaryOperation {
                operator: Concatenation,
                operands: [
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "[",
                      position: (94, 14),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "name",
                       position: (94, 17),
                      },
                     },
                     Raw {
                      content: "]",
                      position: (94, 22),
                     },
                    ],
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (94, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "directives",
                     position: (94, 36),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
                position: (94, 26),
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ),
        ],
        recursive: false,
       },
       position: (12, 16),
      },
     ),
    ],
    target: Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "options",
          position: (102, 3),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "power",
             position: (105, 5),
            },
            Raw {
             content: "ups",
             position: (105, 11),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (106, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (106, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (107, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "false",
                   position: (107, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (108, 9),
                    },
                   ],
                  },
                  With {
                   expression: Variable {
                    identifier: "types",
                    position: (108, 21),
                   },
                   target: Variable {
                    identifier: "bool",
                    position: (108, 28),
                   },
                   position: (108, 16),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (109, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Enables support for Power Devices, such as Uninterruptible Power\nSupplies, Power Distribution Units and Solar Controllers.\n",
                     position: (110, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "mode",
                position: (116, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (116, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (117, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "standalone",
                     position: (117, 20),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (118, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (118, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (118, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (119, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "The MODE determines which part of the NUT is to be started, and\nwhich configuration files must be modified.\n\nThe values of MODE can be:\n\n- none: NUT is not configured, or use the Integrated Power\n  Management, or use some external system to startup NUT\n  components. So nothing is to be started.\n\n- standalone: This mode address a local only configuration, with 1\n  UPS protecting the local system. This implies to start the 3 NUT\n  layers (driver, upsd and upsmon) and the matching configuration\n  files. This mode can also address UPS redundancy.\n\n- netserver: same as for the standalone configuration, but also\n  need some more ACLs and possibly a specific LISTEN directive in\n  upsd.conf.  Since this MODE is opened to the network, a special\n  care should be applied to security concerns.\n\n- netclient: this mode only requires upsmon.\n",
                     position: (120, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "schedulerRules",
                position: (143, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (143, 24),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (144, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/etc/nixos/upssched.conf",
                     position: (144, 20),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (145, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (145, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (145, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (146, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "File which contains the rules to handle UPS events.\n",
                     position: (147, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "maxStartDelay",
                position: (152, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (152, 23),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (153, 9),
                    },
                   ],
                  },
                  Int {
                   value: 45,
                   position: (153, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (154, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (154, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "int",
                      position: (154, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (155, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "This can be set as a global variable above your first UPS\ndefinition and it can also be set in a UPS section.  This value\ncontrols how long upsdrvctl will wait for the driver to finish\nstarting.  This keeps your system from getting stuck due to a\nbroken driver or UPS.\n",
                     position: (156, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "ups",
                position: (164, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (164, 13),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (165, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (167, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "This is where you configure all the UPSes that this system will be\nmonitoring directly.  These are usually attached to serial ports,\nbut USB devices are also supported.\n",
                     position: (168, 1),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (172, 9),
                    },
                   ],
                  },
                  With {
                   expression: Variable {
                    identifier: "types",
                    position: (172, 21),
                   },
                   target: FunctionApplication {
                    function: Variable {
                     identifier: "attrsOf",
                     position: (172, 28),
                    },
                    arguments: [
                     FunctionApplication {
                      function: Variable {
                       identifier: "submodule",
                       position: (172, 37),
                      },
                      arguments: [
                       Variable {
                        identifier: "upsOptions",
                        position: (172, 47),
                       },
                      ],
                     },
                    ],
                   },
                   position: (172, 16),
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "config",
          position: (178, 3),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "mkIf",
         position: (178, 12),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (178, 17),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (178, 21),
            },
           ],
          },
          default: None,
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "environment",
               position: (180, 5),
              },
              Raw {
               content: "systemPackages",
               position: (180, 17),
              },
             ],
            },
            List {
             elements: [
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (180, 36),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nut",
                  position: (180, 41),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (182, 5),
              },
              Raw {
               content: "services",
               position: (182, 13),
              },
              Raw {
               content: "upsmon",
               position: (182, 22),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (183, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Uninterruptible Power Supplies (Monitor)",
                  position: (183, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "after",
                  position: (184, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "network.target",
                    position: (184, 18),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "wantedBy",
                  position: (185, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "multi-user.target",
                    position: (185, 21),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "serviceConfig",
                  position: (186, 7),
                 },
                 Raw {
                  content: "Type",
                  position: (186, 21),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "forking",
                  position: (186, 29),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "script",
                  position: (187, 7),
                 },
                ],
               },
               String {
                parts: [
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (187, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nut",
                      position: (187, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/sbin/upsmon",
                  position: (187, 28),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (188, 7),
                 },
                 Raw {
                  content: "NUT_CONFPATH",
                  position: (188, 19),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/etc/nut/",
                  position: (188, 35),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (189, 7),
                 },
                 Raw {
                  content: "NUT_STATEPATH",
                  position: (189, 19),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/var/lib/nut/",
                  position: (189, 36),
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (192, 5),
              },
              Raw {
               content: "services",
               position: (192, 13),
              },
              Raw {
               content: "upsd",
               position: (192, 22),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (193, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Uninterruptible Power Supplies (Daemon)",
                  position: (193, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "after",
                  position: (194, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "network.target",
                    position: (194, 18),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "upsmon.service",
                    position: (194, 35),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "wantedBy",
                  position: (195, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "multi-user.target",
                    position: (195, 21),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "serviceConfig",
                  position: (196, 7),
                 },
                 Raw {
                  content: "Type",
                  position: (196, 21),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "forking",
                  position: (196, 29),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "script",
                  position: (198, 7),
                 },
                ],
               },
               String {
                parts: [
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (198, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nut",
                      position: (198, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/sbin/upsd -u root",
                  position: (198, 28),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (199, 7),
                 },
                 Raw {
                  content: "NUT_CONFPATH",
                  position: (199, 19),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/etc/nut/",
                  position: (199, 35),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (200, 7),
                 },
                 Raw {
                  content: "NUT_STATEPATH",
                  position: (200, 19),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/var/lib/nut/",
                  position: (200, 36),
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (203, 5),
              },
              Raw {
               content: "services",
               position: (203, 13),
              },
              Raw {
               content: "upsdrv",
               position: (203, 22),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (204, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Uninterruptible Power Supplies (Register all UPS)",
                  position: (204, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "after",
                  position: (205, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "upsd.service",
                    position: (205, 18),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "wantedBy",
                  position: (206, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "multi-user.target",
                    position: (206, 21),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "script",
                  position: (208, 7),
                 },
                ],
               },
               String {
                parts: [
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (208, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nut",
                      position: (208, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/bin/upsdrvctl -u root start",
                  position: (208, 28),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "serviceConfig",
                  position: (209, 7),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "Type",
                     position: (210, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "oneshot",
                     position: (210, 17),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "RemainAfterExit",
                     position: (211, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (211, 27),
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (213, 7),
                 },
                 Raw {
                  content: "NUT_CONFPATH",
                  position: (213, 19),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/etc/nut/",
                  position: (213, 35),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (214, 7),
                 },
                 Raw {
                  content: "NUT_STATEPATH",
                  position: (214, 19),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/var/lib/nut/",
                  position: (214, 36),
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "environment",
               position: (217, 5),
              },
              Raw {
               content: "etc",
               position: (217, 17),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "nut/nut.conf",
                     position: (218, 8),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "source",
                  position: (218, 22),
                 },
                ],
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (218, 31),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "writeText",
                    position: (218, 36),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "nut.conf",
                    position: (218, 47),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "MODE = ",
                    position: (220, 1),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (220, 20),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mode",
                        position: (220, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\n",
                    position: (220, 29),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "nut/ups.conf",
                     position: (222, 8),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "source",
                  position: (222, 22),
                 },
                ],
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (222, 31),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "writeText",
                    position: (222, 36),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "ups.conf",
                    position: (222, 47),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "maxstartdelay = ",
                    position: (224, 1),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (224, 29),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (224, 38),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "maxStartDelay",
                          position: (224, 42),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\n\n",
                    position: (224, 56),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "flip",
                      position: (226, 13),
                     },
                     arguments: [
                      Variable {
                       identifier: "concatStringsSep",
                       position: (226, 18),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "forEach",
                        position: (226, 36),
                       },
                       arguments: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "attrValues",
                          position: (226, 45),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (226, 56),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "ups",
                              position: (226, 60),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                        Function {
                         argument: Some(
                          "ups",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: PropertyAccess {
                          expression: Variable {
                           identifier: "ups",
                           position: (226, 71),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "summary",
                             position: (226, 75),
                            },
                           ],
                          },
                          default: None,
                         },
                         position: (226, 66),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "\n\n          ",
                         position: (226, 86),
                        },
                       ],
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\n",
                    position: (228, 13),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "nut/upssched.conf",
                     position: (230, 8),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "source",
                  position: (230, 27),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (230, 36),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "schedulerRules",
                   position: (230, 40),
                  },
                 ],
                },
                default: None,
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "power",
               position: (240, 5),
              },
              Raw {
               content: "ups",
               position: (240, 11),
              },
              Raw {
               content: "schedulerRules",
               position: (240, 15),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkDefault",
              position: (240, 32),
             },
             arguments: [
              String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (240, 45),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "nut",
                     position: (240, 50),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/etc/upssched.conf.sample",
                 position: (240, 54),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (242, 5),
              },
              Raw {
               content: "activationScripts",
               position: (242, 12),
              },
              Raw {
               content: "upsSetup",
               position: (242, 30),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "stringAfter",
              position: (242, 41),
             },
             arguments: [
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "users",
                   position: (242, 56),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "groups",
                   position: (242, 64),
                  },
                 ],
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "# Used to store pid files of drivers.\nmkdir -p /var/state/ups\n",
                 position: (244, 1),
                },
               ],
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ],
       },
      ),
     ],
     recursive: false,
    },
    position: (11, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (1, 1),
}