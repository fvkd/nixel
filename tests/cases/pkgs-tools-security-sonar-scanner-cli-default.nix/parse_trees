---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "stdenv" (1, 3)
        , := lexemes ","
          , "," (1, 9)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "lib" (1, 11)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (1, 16)
            , := lexemes ","
              , "," (1, 24)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "unzip" (1, 26)
              , := lexemes ","
                , "," (1, 31)
              formals := rules "formal"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "jre" (1, 33)
      } := lexemes "}"
        } "}" (1, 37)
      : := lexemes ":"
        : ":" (1, 38)
      expr_function := rules "LET" "binds" "IN" "expr_function"
        LET := lexemes "LET"
          LET "let" (3, 1)
        binds := rules "binds" "attrpath" "=" "expr" ";"
          binds := rules "binds" "attrpath" "=" "expr" ";"
            binds := rules 
            attrpath := rules "attr"
              attr := rules "ID"
                ID := lexemes "ID"
                  ID "version" (5, 3)
            = := lexemes "="
              = "=" (5, 11)
            expr := rules "expr_function"
              expr_function := rules "expr_if"
                expr_if := rules "expr_op"
                  expr_op := rules "expr_app"
                    expr_app := rules "expr_select"
                      expr_select := rules "expr_simple"
                        expr_simple := rules "\"" "string_parts" "\""
                          " := lexemes "\""
                            " "\"" (5, 13)
                          string_parts := rules "STR"
                            STR := lexemes "STR"
                              STR "4.7.0.2747" (5, 14)
                          " := lexemes "\""
                            " "\"" (5, 24)
            ; := lexemes ";"
              ; ";" (5, 25)
          attrpath := rules "attr"
            attr := rules "ID"
              ID := lexemes "ID"
                ID "sonarScannerArchPackage" (7, 3)
          = := lexemes "="
            = "=" (7, 27)
          expr := rules "expr_function"
            expr_function := rules "expr_if"
              expr_if := rules "expr_op"
                expr_op := rules "expr_app"
                  expr_app := rules "expr_select"
                    expr_select := rules "expr_simple"
                      expr_simple := rules "{" "binds" "}"
                        { := lexemes "{"
                          { "{" (7, 29)
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules 
                            attrpath := rules "string_attr"
                              string_attr := rules "\"" "string_parts" "\""
                                " := lexemes "\""
                                  " "\"" (8, 5)
                                string_parts := rules "STR"
                                  STR := lexemes "STR"
                                    STR "x86_64-linux" (8, 6)
                                " := lexemes "\""
                                  " "\"" (8, 18)
                            = := lexemes "="
                              = "=" (8, 20)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "{" "binds" "}"
                                          { := lexemes "{"
                                            { "{" (8, 22)
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules 
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "url" (9, 7)
                                              = := lexemes "="
                                                = "=" (9, 11)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (9, 13)
                                                            string_parts := rules "string_parts_interpolated"
                                                              string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                  STR := lexemes "STR"
                                                                    STR "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-" (9, 14)
                                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                    DOLLAR_CURLY "${" (9, 96)
                                                                  expr := rules "expr_function"
                                                                    expr_function := rules "expr_if"
                                                                      expr_if := rules "expr_op"
                                                                        expr_op := rules "expr_app"
                                                                          expr_app := rules "expr_select"
                                                                            expr_select := rules "expr_simple"
                                                                              expr_simple := rules "ID"
                                                                                ID := lexemes "ID"
                                                                                  ID "version" (9, 98)
                                                                  } := lexemes "}"
                                                                    } "}" (9, 105)
                                                                STR := lexemes "STR"
                                                                  STR "-linux.zip" (9, 106)
                                                            " := lexemes "\""
                                                              " "\"" (9, 116)
                                              ; := lexemes ";"
                                                ; ";" (9, 117)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "sha256" (10, 7)
                                            = := lexemes "="
                                              = "=" (10, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (10, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "0qy97lcn9nfwg0x32v9x5kh5jswnjyw3wpvxj45z7cddlj2is4iy" (10, 17)
                                                          " := lexemes "\""
                                                            " "\"" (10, 69)
                                            ; := lexemes ";"
                                              ; ";" (10, 70)
                                          } := lexemes "}"
                                            } "}" (11, 5)
                            ; := lexemes ";"
                              ; ";" (11, 6)
                          attrpath := rules "string_attr"
                            string_attr := rules "\"" "string_parts" "\""
                              " := lexemes "\""
                                " "\"" (12, 5)
                              string_parts := rules "STR"
                                STR := lexemes "STR"
                                  STR "x86_64-darwin" (12, 6)
                              " := lexemes "\""
                                " "\"" (12, 19)
                          = := lexemes "="
                            = "=" (12, 21)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "{" "binds" "}"
                                        { := lexemes "{"
                                          { "{" (12, 23)
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "url" (13, 7)
                                            = := lexemes "="
                                              = "=" (13, 11)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (13, 13)
                                                          string_parts := rules "string_parts_interpolated"
                                                            string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                              string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                STR := lexemes "STR"
                                                                  STR "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-" (13, 14)
                                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                  DOLLAR_CURLY "${" (13, 96)
                                                                expr := rules "expr_function"
                                                                  expr_function := rules "expr_if"
                                                                    expr_if := rules "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "version" (13, 98)
                                                                } := lexemes "}"
                                                                  } "}" (13, 105)
                                                              STR := lexemes "STR"
                                                                STR "-macosx.zip" (13, 106)
                                                          " := lexemes "\""
                                                            " "\"" (13, 117)
                                            ; := lexemes ";"
                                              ; ";" (13, 118)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "sha256" (14, 7)
                                          = := lexemes "="
                                            = "=" (14, 14)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (14, 16)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "0f8km7wqkw09g01l03kcrjgvq7b6xclzpvb5r64ymsmrc39p0ylp" (14, 17)
                                                        " := lexemes "\""
                                                          " "\"" (14, 69)
                                          ; := lexemes ";"
                                            ; ";" (14, 70)
                                        } := lexemes "}"
                                          } "}" (15, 5)
                          ; := lexemes ";"
                            ; ";" (15, 6)
                        } := lexemes "}"
                          } "}" (16, 3)
          ; := lexemes ";"
            ; ";" (16, 4)
        IN := lexemes "IN"
          IN "in" (18, 1)
        expr_function := rules "expr_if"
          expr_if := rules "expr_op"
            expr_op := rules "expr_app"
              expr_app := rules "expr_app" "expr_select"
                expr_app := rules "expr_select"
                  expr_select := rules "expr_simple" "." "attrpath"
                    expr_simple := rules "ID"
                      ID := lexemes "ID"
                        ID "stdenv" (18, 4)
                    . := lexemes "."
                      . "." (18, 10)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "mkDerivation" (18, 11)
                expr_select := rules "expr_simple"
                  expr_simple := rules "REC" "{" "binds" "}"
                    REC := lexemes "REC"
                      REC "rec" (18, 24)
                    { := lexemes "{"
                      { "{" (18, 28)
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "INHERIT" "attrs" ";"
                                  binds := rules 
                                  INHERIT := lexemes "INHERIT"
                                    INHERIT "inherit" (19, 3)
                                  attrs := rules "attrs" "attr"
                                    attrs := rules 
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "version" (19, 11)
                                  ; := lexemes ";"
                                    ; ";" (19, 18)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "pname" (20, 3)
                                = := lexemes "="
                                  = "=" (20, 9)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (20, 11)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "sonar-scanner-cli" (20, 12)
                                              " := lexemes "\""
                                                " "\"" (20, 29)
                                ; := lexemes ";"
                                  ; ";" (20, 30)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "src" (22, 3)
                              = := lexemes "="
                                = "=" (22, 7)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "fetchurl" (22, 9)
                                        expr_select := rules "expr_simple" "." "attrpath"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "sonarScannerArchPackage" (22, 18)
                                          . := lexemes "."
                                            . "." (22, 41)
                                          attrpath := rules "string_attr"
                                            string_attr := rules "DOLLAR_CURLY" "expr" "}"
                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                DOLLAR_CURLY "${" (22, 42)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple" "." "attrpath"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "stdenv" (22, 44)
                                                          . := lexemes "."
                                                            . "." (22, 50)
                                                          attrpath := rules "attrpath" "." "attr"
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "hostPlatform" (22, 51)
                                                            . := lexemes "."
                                                              . "." (22, 63)
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "system" (22, 64)
                                              } := lexemes "}"
                                                } "}" (22, 70)
                              ; := lexemes ";"
                                ; ";" (22, 71)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "nativeBuildInputs" (24, 3)
                            = := lexemes "="
                              = "=" (24, 21)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (24, 23)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules 
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "unzip" (24, 25)
                                          ] := lexemes "]"
                                            ] "]" (24, 31)
                            ; := lexemes ";"
                              ; ";" (24, 32)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "installPhase" (26, 3)
                          = := lexemes "="
                            = "=" (26, 16)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                        IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                          IND_STRING_OPEN "''\n" (26, 18)
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules 
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "    mkdir -p $out/lib\n    cp -r lib/* $out/lib/\n    mkdir -p $out/bin\n    cp bin/* $out/bin/\n    mkdir -p $out/conf\n    cp conf/* $out/conf/\n  " (27, 1)
                                        IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                          IND_STRING_CLOSE "''" (33, 3)
                          ; := lexemes ";"
                            ; ";" (33, 5)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "fixupPhase" (35, 3)
                        = := lexemes "="
                          = "=" (35, 14)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (35, 16)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules 
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "    substituteInPlace $out/bin/sonar-scanner \\\n      --replace \"\\$sonar_scanner_home/jre\" \"" (36, 1)
                                          DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                            DOLLAR_CURLY "${" (37, 45)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_app" "expr_select"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "lib" (37, 47)
                                                        . := lexemes "."
                                                          . "." (37, 50)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "getBin" (37, 51)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "jre" (37, 58)
                                          } := lexemes "}"
                                            } "}" (37, 61)
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "\"\n  " (37, 62)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (38, 3)
                        ; := lexemes ";"
                          ; ";" (38, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "meta" (40, 3)
                      = := lexemes "="
                        = "=" (40, 8)
                      expr := rules "expr_function"
                        expr_function := rules "WITH" "expr" ";" "expr_function"
                          WITH := lexemes "WITH"
                            WITH "with" (40, 10)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "lib" (40, 15)
                          ; := lexemes ";"
                            ; ";" (40, 18)
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "{" "binds" "}"
                                      { := lexemes "{"
                                        { "{" (40, 20)
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "homepage" (41, 5)
                                                = := lexemes "="
                                                  = "=" (41, 14)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (41, 16)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "https://github.com/SonarSource/sonar-scanner-cli" (41, 17)
                                                              " := lexemes "\""
                                                                " "\"" (41, 65)
                                                ; := lexemes ";"
                                                  ; ";" (41, 66)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "description" (42, 5)
                                              = := lexemes "="
                                                = "=" (42, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (42, 19)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "SonarQube Scanner used to start code analysis" (42, 20)
                                                            " := lexemes "\""
                                                              " "\"" (42, 65)
                                              ; := lexemes ";"
                                                ; ";" (42, 66)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "license" (43, 5)
                                            = := lexemes "="
                                              = "=" (43, 13)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "licenses" (43, 15)
                                                        . := lexemes "."
                                                          . "." (43, 23)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "gpl3Plus" (43, 24)
                                            ; := lexemes ";"
                                              ; ";" (43, 32)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "maintainers" (44, 5)
                                          = := lexemes "="
                                            = "=" (44, 17)
                                          expr := rules "expr_function"
                                            expr_function := rules "WITH" "expr" ";" "expr_function"
                                              WITH := lexemes "WITH"
                                                WITH "with" (44, 19)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "maintainers" (44, 24)
                                              ; := lexemes ";"
                                                ; ";" (44, 35)
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "[" "expr_list" "]"
                                                          [ := lexemes "["
                                                            [ "[" (44, 37)
                                                          expr_list := rules "expr_list" "expr_select"
                                                            expr_list := rules 
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "peterromfeldhk" (44, 39)
                                                          ] := lexemes "]"
                                                            ] "]" (44, 54)
                                          ; := lexemes ";"
                                            ; ";" (44, 55)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "platforms" (45, 5)
                                        = := lexemes "="
                                          = "=" (45, 15)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_app" "expr_select"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "builtins" (45, 17)
                                                      . := lexemes "."
                                                        . "." (45, 25)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "attrNames" (45, 26)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "sonarScannerArchPackage" (45, 36)
                                        ; := lexemes ";"
                                          ; ";" (45, 59)
                                      } := lexemes "}"
                                        } "}" (46, 3)
                      ; := lexemes ";"
                        ; ";" (46, 4)
                    } := lexemes "}"
                      } "}" (47, 1)