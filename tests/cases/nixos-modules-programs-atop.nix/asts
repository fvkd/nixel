---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 5),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 11),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (7, 18),
        },
        Raw {
         content: "atop",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (13, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (15, 5),
           },
           Raw {
            content: "atop",
            position: (15, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (17, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (17, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Atop",
                 position: (17, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (19, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (19, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (20, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (20, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (20, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (21, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (21, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "atop",
                     position: (21, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (22, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (22, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.atop",
                      position: (22, 42),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (23, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Which package to use for Atop.\n",
                    position: (24, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "netatop",
               position: (28, 7),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (29, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (29, 18),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (30, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (30, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "bool",
                        position: (30, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (31, 11),
                      },
                     ],
                    },
                    Variable {
                     identifier: "false",
                     position: (31, 21),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (32, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Whether to install and enable the netatop kernel module.\nNote: this sets the kernel taint flag \"O\" for loading out-of-tree modules.\n",
                       position: (33, 1),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (37, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (37, 19),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (38, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (38, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (38, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (39, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (39, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "boot",
                        position: (39, 28),
                       },
                       Raw {
                        content: "kernelPackages",
                        position: (39, 33),
                       },
                       Raw {
                        content: "netatop",
                        position: (39, 48),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "defaultText",
                       position: (40, 11),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "literalExpression",
                      position: (40, 25),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "config.boot.kernelPackages.netatop",
                         position: (40, 44),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (41, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Which package to use for netatop.\n",
                       position: (42, 1),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "atopgpu",
               position: (47, 7),
              },
              Raw {
               content: "enable",
               position: (47, 15),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (47, 24),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (48, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (48, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (48, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (49, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (49, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (50, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install and enable the atopgpud daemon to get information about\nNVIDIA gpus.\n",
                    position: (51, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "setuidWrapper",
               position: (56, 7),
              },
              Raw {
               content: "enable",
               position: (56, 21),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (56, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (57, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (57, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (57, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (58, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (58, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (59, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install a setuid wrapper for Atop. This is required to use some of\nthe features as non-root user (e.g.: ipc information, netatop, atopgpu).\nAtop tries to drop the root privileges shortly after starting.\n",
                    position: (60, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "atopService",
               position: (66, 7),
              },
              Raw {
               content: "enable",
               position: (66, 19),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (66, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (67, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (67, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (67, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (68, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (68, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (69, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to enable the atop service responsible for storing statistics for\nlong-term analysis.\n",
                    position: (70, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "atopRotateTimer",
               position: (74, 7),
              },
              Raw {
               content: "enable",
               position: (74, 23),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (74, 32),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (75, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (75, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (75, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (76, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (76, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (77, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to enable the atop-rotate timer, which restarts the atop service\ndaily to make sure the data files are rotate.\n",
                    position: (78, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "atopacctService",
               position: (82, 7),
              },
              Raw {
               content: "enable",
               position: (82, 23),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (82, 32),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (83, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (83, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (83, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (84, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (84, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (85, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to enable the atopacct service which manages process accounting.\nThis allows Atop to gather data about processes that disappeared in between\ntwo refresh intervals.\n",
                    position: (86, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "settings",
               position: (91, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (91, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (92, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (92, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrs",
                     position: (92, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (93, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (94, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "flags",
                       position: (95, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "a1f",
                       position: (95, 20),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "interval",
                       position: (96, 11),
                      },
                     ],
                    },
                    Int {
                     value: 5,
                     position: (96, 22),
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (98, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Parameters to be written to <filename>/etc/atoprc</filename>.\n",
                    position: (99, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: true,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (105, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (105, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (105, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (105, 21),
           },
          ],
         },
         default: None,
        },
        LetIn {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "atop",
              position: (107, 7),
             },
            ],
           },
           IfThenElse {
            predicate: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (108, 12),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "atopgpu",
                position: (108, 16),
               },
               Raw {
                content: "enable",
                position: (108, 24),
               },
              ],
             },
             default: None,
            },
            then: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (109, 12),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (109, 16),
                },
                Raw {
                 content: "override",
                 position: (109, 24),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "withAtopgpu",
                    position: (109, 35),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (109, 49),
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
            else_: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (111, 11),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "package",
                position: (111, 15),
               },
              ],
             },
             default: None,
            },
           },
          ),
         ],
         target: Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "environment",
               position: (114, 7),
              },
              Raw {
               content: "etc",
               position: (114, 19),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (114, 25),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (114, 31),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (114, 35),
                   },
                  ],
                 },
                 default: None,
                },
                Map {
                 bindings: [],
                 recursive: false,
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "atoprc",
                    position: (115, 9),
                   },
                   Raw {
                    content: "text",
                    position: (115, 16),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "concatStrings",
                   position: (115, 23),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "mapAttrsToList",
                     position: (116, 12),
                    },
                    arguments: [
                     Function {
                      argument: Some(
                       "n",
                      ),
                      arguments: FunctionArguments {
                       arguments: [],
                       ellipsis: false,
                      },
                      definition: Function {
                       argument: Some(
                        "v",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: String {
                        parts: [
                         Raw {
                          content: "",
                          position: (118, 1),
                         },
                         Expression {
                          expression: Variable {
                           identifier: "n",
                           position: (118, 17),
                          },
                         },
                         Raw {
                          content: " ",
                          position: (118, 19),
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "toString",
                            position: (118, 22),
                           },
                           arguments: [
                            Variable {
                             identifier: "v",
                             position: (118, 31),
                            },
                           ],
                          },
                         },
                         Raw {
                          content: "\n",
                          position: (118, 33),
                         },
                        ],
                       },
                      },
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (120, 13),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "settings",
                         position: (120, 17),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "environment",
               position: (122, 7),
              },
              Raw {
               content: "systemPackages",
               position: (122, 19),
              },
             ],
            },
            List {
             elements: [
              Variable {
               identifier: "atop",
               position: (122, 38),
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (122, 44),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "mkIf",
                   position: (122, 48),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (122, 53),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "netatop",
                    position: (122, 57),
                   },
                   Raw {
                    content: "enable",
                    position: (122, 65),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (122, 72),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "netatop",
                    position: (122, 76),
                   },
                   Raw {
                    content: "package",
                    position: (122, 84),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "boot",
               position: (123, 7),
              },
              Raw {
               content: "extraModulePackages",
               position: (123, 12),
              },
             ],
            },
            List {
             elements: [
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (123, 37),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "mkIf",
                   position: (123, 41),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (123, 46),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "netatop",
                    position: (123, 50),
                   },
                   Raw {
                    content: "enable",
                    position: (123, 58),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (123, 65),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "netatop",
                    position: (123, 69),
                   },
                   Raw {
                    content: "package",
                    position: (123, 77),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (124, 7),
              },
             ],
            },
            LetIn {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mkSystemd",
                  position: (126, 11),
                 },
                ],
               },
               Function {
                argument: Some(
                 "type",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "cond",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "name",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "restartTriggers",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Expression {
                         expression: Variable {
                          identifier: "name",
                          position: (127, 15),
                         },
                        },
                       ],
                      },
                      FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "lib",
                         position: (127, 23),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mkIf",
                           position: (127, 27),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "cond",
                         position: (127, 32),
                        },
                        Map {
                         bindings: [
                          Inherit(
                           None,
                           [
                            Raw {
                             content: "restartTriggers",
                             position: (128, 23),
                            },
                           ],
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "wantedBy",
                              position: (129, 15),
                             },
                            ],
                           },
                           List {
                            elements: [
                             IfThenElse {
                              predicate: BinaryOperation {
                               operator: EqualTo,
                               operands: [
                                Variable {
                                 identifier: "type",
                                 position: (129, 32),
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "services",
                                   position: (129, 41),
                                  },
                                 ],
                                },
                               ],
                              },
                              then: String {
                               parts: [
                                Raw {
                                 content: "multi-user.target",
                                 position: (129, 57),
                                },
                               ],
                              },
                              else_: IfThenElse {
                               predicate: BinaryOperation {
                                operator: EqualTo,
                                operands: [
                                 Variable {
                                  identifier: "type",
                                  position: (129, 84),
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "timers",
                                    position: (129, 93),
                                   },
                                  ],
                                 },
                                ],
                               },
                               then: String {
                                parts: [
                                 Raw {
                                  content: "timers.target",
                                  position: (129, 107),
                                 },
                                ],
                               },
                               else_: Variable {
                                identifier: "null",
                                position: (129, 127),
                               },
                              },
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  },
                 },
                },
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mkService",
                  position: (132, 11),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkSystemd",
                 position: (132, 23),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "services",
                    position: (132, 34),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mkTimer",
                  position: (133, 11),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkSystemd",
                 position: (133, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "timers",
                    position: (133, 32),
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             target: Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "packages",
                   position: (136, 11),
                  },
                 ],
                },
                List {
                 elements: [
                  Variable {
                   identifier: "atop",
                   position: (136, 24),
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "lib",
                     position: (136, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "mkIf",
                       position: (136, 34),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (136, 39),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "netatop",
                        position: (136, 43),
                       },
                       Raw {
                        content: "enable",
                        position: (136, 51),
                       },
                      ],
                     },
                     default: None,
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (136, 58),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "netatop",
                        position: (136, 62),
                       },
                       Raw {
                        content: "package",
                        position: (136, 70),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "services",
                   position: (137, 11),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkService",
                    position: (138, 13),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (138, 23),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "atopService",
                        position: (138, 27),
                       },
                       Raw {
                        content: "enable",
                        position: (138, 39),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "atop",
                       position: (138, 47),
                      },
                     ],
                    },
                    List {
                     elements: [
                      Variable {
                       identifier: "atop",
                       position: (138, 55),
                      },
                     ],
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Update,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "mkService",
                      position: (139, 16),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (139, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "atopacctService",
                          position: (139, 30),
                         },
                         Raw {
                          content: "enable",
                          position: (139, 46),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "atopacct",
                         position: (139, 54),
                        },
                       ],
                      },
                      List {
                       elements: [
                        Variable {
                         identifier: "atop",
                         position: (139, 66),
                        },
                       ],
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Update,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkService",
                        position: (140, 16),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (140, 26),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "netatop",
                            position: (140, 30),
                           },
                           Raw {
                            content: "enable",
                            position: (140, 38),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "netatop",
                           position: (140, 46),
                          },
                         ],
                        },
                        List {
                         elements: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (140, 57),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "netatop",
                              position: (140, 61),
                             },
                             Raw {
                              content: "package",
                              position: (140, 69),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkService",
                        position: (141, 16),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (141, 26),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "atopgpu",
                            position: (141, 30),
                           },
                           Raw {
                            content: "enable",
                            position: (141, 38),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "atopgpu",
                           position: (141, 46),
                          },
                         ],
                        },
                        List {
                         elements: [
                          Variable {
                           identifier: "atop",
                           position: (141, 57),
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "timers",
                   position: (142, 11),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkTimer",
                  position: (142, 20),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (142, 28),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "atopRotateTimer",
                      position: (142, 32),
                     },
                     Raw {
                      content: "enable",
                      position: (142, 48),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [
                    Raw {
                     content: "atop-rotate",
                     position: (142, 56),
                    },
                   ],
                  },
                  List {
                   elements: [
                    Variable {
                     identifier: "atop",
                     position: (142, 71),
                    },
                   ],
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "security",
               position: (145, 7),
              },
              Raw {
               content: "wrappers",
               position: (145, 16),
              },
             ],
            },
            FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (145, 27),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "mkIf",
                 position: (145, 31),
                },
               ],
              },
              default: None,
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (145, 36),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "setuidWrapper",
                  position: (145, 40),
                 },
                 Raw {
                  content: "enable",
                  position: (145, 54),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "atop",
                    position: (146, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "setuid",
                       position: (147, 13),
                      },
                     ],
                    },
                    Variable {
                     identifier: "true",
                     position: (147, 22),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "owner",
                       position: (148, 13),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "root",
                       position: (148, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "group",
                       position: (149, 13),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "root",
                       position: (149, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "source",
                       position: (150, 13),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Expression {
                       expression: Variable {
                        identifier: "atop",
                        position: (150, 25),
                       },
                      },
                      Raw {
                       content: "/bin/atop",
                       position: (150, 30),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}