---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "environment",
         position: (9, 16),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (15, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (17, 5),
           },
           Raw {
            content: "sessionVariables",
            position: (17, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 36),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (18, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (18, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (19, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "A set of environment variables used in the global environment.\nThese variables will be set by PAM early in the login process.\n\nThe value of each session variable can be either a string or a\nlist of strings. The latter is concatenated, interspersed with\ncolon characters.\n\nNote, due to limitations in the PAM format values may not\ncontain the <literal>\"</literal> character.\n\nAlso, these variables are merged into\n<xref linkend=\"opt-environment.variables\"/> and it is\ntherefore not possible to use PAM style variables such as\n<code>@{HOME}</code>.\n",
                 position: (20, 1),
                },
               ],
               position: (19, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (35, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (35, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (35, 26),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "either",
                    position: (35, 35),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (35, 42),
                    },
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "listOf",
                       position: (35, 47),
                      },
                      arguments: [
                       Variable {
                        identifier: "str",
                        position: (35, 54),
                       },
                      ],
                     },
                     position: (35, 46),
                    },
                   ],
                  },
                  position: (35, 34),
                 },
                ],
               },
               position: (35, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "apply",
                 position: (36, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mapAttrs",
                position: (36, 15),
               },
               arguments: [
                Parentheses {
                 expression: Function {
                  argument: Simple {
                   identifier: "n",
                  },
                  definition: Function {
                   argument: Simple {
                    identifier: "v",
                   },
                   definition: IfThenElse {
                    predicate: FunctionApplication {
                     function: Variable {
                      identifier: "isList",
                      position: (36, 34),
                     },
                     arguments: [
                      Variable {
                       identifier: "v",
                       position: (36, 41),
                      },
                     ],
                    },
                    then: FunctionApplication {
                     function: Variable {
                      identifier: "concatStringsSep",
                      position: (36, 48),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: ":",
                         position: (36, 66),
                        },
                       ],
                       position: (36, 65),
                      },
                      Variable {
                       identifier: "v",
                       position: (36, 69),
                      },
                     ],
                    },
                    else_: Variable {
                     identifier: "v",
                     position: (36, 76),
                    },
                    position: (36, 31),
                   },
                   position: (36, 28),
                  },
                  position: (36, 25),
                 },
                 position: (36, 24),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (17, 45),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (39, 5),
           },
           Raw {
            content: "profileRelativeSessionVariables",
            position: (39, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (39, 51),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (40, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (40, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (40, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Parentheses {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (40, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (40, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (40, 42),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (40, 48),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                 position: (40, 28),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (41, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "PATH",
                    position: (41, 19),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/bin",
                      position: (41, 29),
                     },
                    ],
                    position: (41, 28),
                   },
                  ],
                  position: (41, 26),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "MANPATH",
                    position: (41, 38),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/man",
                      position: (41, 51),
                     },
                    ],
                    position: (41, 50),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/share/man",
                      position: (41, 58),
                     },
                    ],
                    position: (41, 57),
                   },
                  ],
                  position: (41, 48),
                 },
                },
               ],
               recursive: false,
               position: (41, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (42, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Attribute set of environment variable used in the global\nenvironment. These variables will be set by PAM early in the\nlogin process.\n\nVariable substitution is available as described in\n<citerefentry>\n  <refentrytitle>pam_env.conf</refentrytitle>\n  <manvolnum>5</manvolnum>\n</citerefentry>.\n\nEach attribute maps to a list of relative paths. Each relative\npath is appended to the each profile of\n<option>environment.profiles</option> to form the content of\nthe corresponding environment variable.\n\nAlso, these variables are merged into\n<xref linkend=\"opt-environment.profileRelativeEnvVars\"/> and it is\ntherefore not possible to use PAM style variables such as\n<code>@{HOME}</code>.\n",
                 position: (43, 1),
                },
               ],
               position: (42, 21),
              },
             },
            ],
            recursive: false,
            position: (39, 60),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (15, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (67, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (68, 5),
           },
           Raw {
            content: "etc",
            position: (68, 17),
           },
           Expression {
            ast: String {
             parts: [
              Raw {
               content: "pam/environment",
               position: (68, 22),
              },
             ],
             position: (68, 21),
            },
           },
           Raw {
            content: "text",
            position: (68, 39),
           },
          ],
         },
         to: LetIn {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "suffixedVariables",
               position: (69, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "flip",
              position: (70, 9),
             },
             arguments: [
              Variable {
               identifier: "mapAttrs",
               position: (70, 14),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (70, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "profileRelativeSessionVariables",
                  position: (70, 27),
                 },
                ],
               },
               default: None,
              },
              Parentheses {
               expression: Function {
                argument: Simple {
                 identifier: "envVar",
                },
                definition: Function {
                 argument: Simple {
                  identifier: "suffixes",
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "flip",
                   position: (71, 11),
                  },
                  arguments: [
                   Variable {
                    identifier: "concatMap",
                    position: (71, 16),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (71, 26),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "profiles",
                       position: (71, 30),
                      },
                     ],
                    },
                    default: None,
                   },
                   Parentheses {
                    expression: Function {
                     argument: Simple {
                      identifier: "profile",
                     },
                     definition: FunctionApplication {
                      function: Variable {
                       identifier: "map",
                       position: (72, 13),
                      },
                      arguments: [
                       Parentheses {
                        expression: Function {
                         argument: Simple {
                          identifier: "suffix",
                         },
                         definition: String {
                          parts: [
                           Interpolation {
                            expression: Variable {
                             identifier: "profile",
                             position: (72, 29),
                            },
                           },
                           Interpolation {
                            expression: Variable {
                             identifier: "suffix",
                             position: (72, 39),
                            },
                           },
                          ],
                          position: (72, 26),
                         },
                         position: (72, 18),
                        },
                        position: (72, 17),
                       },
                       Variable {
                        identifier: "suffixes",
                        position: (72, 49),
                       },
                      ],
                     },
                     position: (71, 40),
                    },
                    position: (71, 39),
                   },
                  ],
                 },
                 position: (70, 68),
                },
                position: (70, 60),
               },
               position: (70, 59),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "replaceEnvVars",
               position: (79, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "replaceStrings",
              position: (79, 24),
             },
             arguments: [
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "$HOME",
                   position: (79, 41),
                  },
                 ],
                 position: (79, 40),
                },
                String {
                 parts: [
                  Raw {
                   content: "$USER",
                   position: (79, 49),
                  },
                 ],
                 position: (79, 48),
                },
               ],
               position: (79, 39),
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "@{HOME}",
                   position: (79, 59),
                  },
                 ],
                 position: (79, 58),
                },
                String {
                 parts: [
                  Raw {
                   content: "@{PAM_USER}",
                   position: (79, 69),
                  },
                 ],
                 position: (79, 68),
                },
               ],
               position: (79, 57),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "pamVariable",
               position: (81, 7),
              },
             ],
            },
            to: Function {
             argument: Simple {
              identifier: "n",
             },
             definition: Function {
              argument: Simple {
               identifier: "v",
              },
              definition: String {
               parts: [
                Interpolation {
                 expression: Variable {
                  identifier: "n",
                  position: (82, 13),
                 },
                },
                Raw {
                 content: "   DEFAULT=\"",
                 position: (82, 15),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (82, 29),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ":",
                      position: (82, 47),
                     },
                    ],
                    position: (82, 46),
                   },
                   Parentheses {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "map",
                      position: (82, 51),
                     },
                     arguments: [
                      Variable {
                       identifier: "replaceEnvVars",
                       position: (82, 55),
                      },
                      Parentheses {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "toList",
                         position: (82, 71),
                        },
                        arguments: [
                         Variable {
                          identifier: "v",
                          position: (82, 78),
                         },
                        ],
                       },
                       position: (82, 70),
                      },
                     ],
                    },
                    position: (82, 50),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\"",
                 position: (82, 82),
                },
               ],
               position: (82, 9),
              },
              position: (81, 24),
             },
             position: (81, 21),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "pamVariables",
               position: (84, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (85, 9),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "\n",
                 position: (85, 27),
                },
               ],
               position: (85, 26),
              },
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "mapAttrsToList",
                 position: (86, 10),
                },
                arguments: [
                 Variable {
                  identifier: "pamVariable",
                  position: (86, 25),
                 },
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "zipAttrsWith",
                    position: (87, 10),
                   },
                   arguments: [
                    Parentheses {
                     expression: Function {
                      argument: Simple {
                       identifier: "n",
                      },
                      definition: Variable {
                       identifier: "concatLists",
                       position: (87, 27),
                      },
                      position: (87, 24),
                     },
                     position: (87, 23),
                    },
                    List {
                     elements: [
                      Map {
                       bindings: [
                        Binding {
                         from: AttributePath {
                          parts: [
                           Raw {
                            content: "PATH",
                            position: (94, 15),
                           },
                          ],
                         },
                         to: List {
                          elements: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "config",
                             position: (94, 24),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "security",
                               position: (94, 31),
                              },
                              Raw {
                               content: "wrapperDir",
                               position: (94, 40),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                          position: (94, 22),
                         },
                        },
                       ],
                       recursive: false,
                       position: (94, 13),
                      },
                      Parentheses {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "mapAttrs",
                         position: (96, 14),
                        },
                        arguments: [
                         Parentheses {
                          expression: Function {
                           argument: Simple {
                            identifier: "n",
                           },
                           definition: Variable {
                            identifier: "toList",
                            position: (96, 27),
                           },
                           position: (96, 24),
                          },
                          position: (96, 23),
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (96, 35),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "sessionVariables",
                             position: (96, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                       position: (96, 13),
                      },
                      Variable {
                       identifier: "suffixedVariables",
                       position: (97, 13),
                      },
                     ],
                     position: (88, 11),
                    },
                   ],
                  },
                  position: (87, 9),
                 },
                ],
               },
               position: (86, 9),
              },
             ],
            },
           },
          ],
          target: String {
           parts: [
            Raw {
             content: "",
             position: (100, 1),
            },
            Interpolation {
             expression: Variable {
              identifier: "pamVariables",
              position: (100, 9),
             },
            },
            Raw {
             content: "\n",
             position: (100, 22),
            },
           ],
           position: (99, 8),
          },
          position: (68, 46),
         },
        },
       ],
       recursive: false,
       position: (67, 12),
      },
     },
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}