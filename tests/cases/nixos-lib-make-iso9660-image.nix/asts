---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "volumeID",
    default: Some(
     String {
      parts: [],
      position: (41, 14),
     },
    ),
   },
   DestructuredArgument {
    identifier: "zstd",
    default: None,
   },
   DestructuredArgument {
    identifier: "compressImage",
    default: Some(
     Variable {
      identifier: "false",
      position: (38, 19),
     },
    ),
   },
   DestructuredArgument {
    identifier: "isohybridMbrImage",
    default: Some(
     String {
      parts: [],
      position: (35, 23),
     },
    ),
   },
   DestructuredArgument {
    identifier: "efiBootImage",
    default: Some(
     String {
      parts: [],
      position: (32, 18),
     },
    ),
   },
   DestructuredArgument {
    identifier: "bootImage",
    default: Some(
     String {
      parts: [],
      position: (29, 15),
     },
    ),
   },
   DestructuredArgument {
    identifier: "usbBootable",
    default: Some(
     Variable {
      identifier: "false",
      position: (26, 17),
     },
    ),
   },
   DestructuredArgument {
    identifier: "efiBootable",
    default: Some(
     Variable {
      identifier: "false",
      position: (23, 17),
     },
    ),
   },
   DestructuredArgument {
    identifier: "bootable",
    default: Some(
     Variable {
      identifier: "false",
      position: (20, 14),
     },
    ),
   },
   DestructuredArgument {
    identifier: "storeContents",
    default: Some(
     List {
      elements: [],
      position: (17, 19),
     },
    ),
   },
   DestructuredArgument {
    identifier: "contents",
    default: None,
   },
   DestructuredArgument {
    identifier: "isoName",
    default: Some(
     String {
      parts: [
       Raw {
        content: "cd.iso",
        position: (4, 14),
       },
      ],
      position: (4, 13),
     },
    ),
   },
   DestructuredArgument {
    identifier: "libossp_uuid",
    default: None,
   },
   DestructuredArgument {
    identifier: "syslinux",
    default: None,
   },
   DestructuredArgument {
    identifier: "xorriso",
    default: None,
   },
   DestructuredArgument {
    identifier: "closureInfo",
    default: None,
   },
   DestructuredArgument {
    identifier: "stdenv",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: Assert {
  expression: BinaryOperation {
   operator: Implication,
   operands: [
    Variable {
     identifier: "bootable",
     position: (44, 8),
    },
    BinaryOperation {
     operator: NotEqualTo,
     operands: [
      Variable {
       identifier: "bootImage",
       position: (44, 20),
      },
      String {
       parts: [],
       position: (44, 33),
      },
     ],
     position: (44, 30),
    },
   ],
   position: (44, 17),
  },
  target: Assert {
   expression: BinaryOperation {
    operator: Implication,
    operands: [
     Variable {
      identifier: "efiBootable",
      position: (45, 8),
     },
     BinaryOperation {
      operator: NotEqualTo,
      operands: [
       Variable {
        identifier: "efiBootImage",
        position: (45, 23),
       },
       String {
        parts: [],
        position: (45, 39),
       },
      ],
      position: (45, 36),
     },
    ],
    position: (45, 20),
   },
   target: Assert {
    expression: BinaryOperation {
     operator: Implication,
     operands: [
      Variable {
       identifier: "usbBootable",
       position: (46, 8),
      },
      BinaryOperation {
       operator: NotEqualTo,
       operands: [
        Variable {
         identifier: "isohybridMbrImage",
         position: (46, 23),
        },
        String {
         parts: [],
         position: (46, 44),
        },
       ],
       position: (46, 41),
      },
     ],
     position: (46, 20),
    },
    target: FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "stdenv",
       position: (48, 1),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "mkDerivation",
         position: (48, 8),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "name",
            position: (49, 3),
           },
          ],
         },
         to: Variable {
          identifier: "isoName",
          position: (49, 10),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "builder",
            position: (50, 3),
           },
          ],
         },
         to: Path {
          parts: [
           Raw {
            content: "./make-iso9660-image.sh",
            position: (50, 13),
           },
          ],
          position: (50, 13),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "nativeBuildInputs",
            position: (51, 3),
           },
          ],
         },
         to: List {
          elements: [
           Variable {
            identifier: "xorriso",
            position: (51, 25),
           },
           Variable {
            identifier: "syslinux",
            position: (51, 33),
           },
           Variable {
            identifier: "zstd",
            position: (51, 42),
           },
           Variable {
            identifier: "libossp_uuid",
            position: (51, 47),
           },
          ],
          position: (51, 23),
         },
        },
        Inherit {
         from: None,
         attributes: [
          Raw {
           content: "isoName",
           position: (53, 11),
          },
          Raw {
           content: "bootable",
           position: (53, 19),
          },
          Raw {
           content: "bootImage",
           position: (53, 28),
          },
          Raw {
           content: "compressImage",
           position: (53, 38),
          },
          Raw {
           content: "volumeID",
           position: (53, 52),
          },
          Raw {
           content: "efiBootImage",
           position: (53, 61),
          },
          Raw {
           content: "efiBootable",
           position: (53, 74),
          },
          Raw {
           content: "isohybridMbrImage",
           position: (53, 86),
          },
          Raw {
           content: "usbBootable",
           position: (53, 104),
          },
         ],
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "sources",
            position: (56, 3),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (56, 13),
          },
          arguments: [
           Parentheses {
            expression: Function {
             argument: Simple {
              identifier: "x",
             },
             definition: PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (56, 21),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (56, 23),
                },
               ],
              },
              default: None,
             },
             position: (56, 18),
            },
            position: (56, 17),
           },
           Variable {
            identifier: "contents",
            position: (56, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "targets",
            position: (57, 3),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (57, 13),
          },
          arguments: [
           Parentheses {
            expression: Function {
             argument: Simple {
              identifier: "x",
             },
             definition: PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (57, 21),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "target",
                 position: (57, 23),
                },
               ],
              },
              default: None,
             },
             position: (57, 18),
            },
            position: (57, 17),
           },
           Variable {
            identifier: "contents",
            position: (57, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "objects",
            position: (60, 3),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (60, 13),
          },
          arguments: [
           Parentheses {
            expression: Function {
             argument: Simple {
              identifier: "x",
             },
             definition: PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (60, 21),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "object",
                 position: (60, 23),
                },
               ],
              },
              default: None,
             },
             position: (60, 18),
            },
            position: (60, 17),
           },
           Variable {
            identifier: "storeContents",
            position: (60, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "symlinks",
            position: (61, 3),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (61, 14),
          },
          arguments: [
           Parentheses {
            expression: Function {
             argument: Simple {
              identifier: "x",
             },
             definition: PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (61, 22),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "symlink",
                 position: (61, 24),
                },
               ],
              },
              default: None,
             },
             position: (61, 19),
            },
            position: (61, 18),
           },
           Variable {
            identifier: "storeContents",
            position: (61, 33),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "closureInfo",
            position: (64, 3),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "closureInfo",
           position: (64, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "rootPaths",
                 position: (64, 31),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "map",
                position: (64, 43),
               },
               arguments: [
                Parentheses {
                 expression: Function {
                  argument: Simple {
                   identifier: "x",
                  },
                  definition: PropertyAccess {
                   expression: Variable {
                    identifier: "x",
                    position: (64, 51),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "object",
                      position: (64, 53),
                     },
                    ],
                   },
                   default: None,
                  },
                  position: (64, 48),
                 },
                 position: (64, 47),
                },
                Variable {
                 identifier: "storeContents",
                 position: (64, 61),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (64, 29),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (48, 21),
      },
     ],
    },
    position: (46, 1),
   },
   position: (45, 1),
  },
  position: (44, 1),
 },
 position: (1, 1),
}