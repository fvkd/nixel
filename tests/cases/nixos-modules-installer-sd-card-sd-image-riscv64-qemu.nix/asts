---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: Map {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "imports",
       position: (6, 3),
      },
     ],
    },
    List {
     elements: [
      Path {
       parts: [
        Raw {
         content: "../../profiles/base.nix",
         position: (7, 5),
        },
       ],
      },
      Path {
       parts: [
        Raw {
         content: "./sd-image.nix",
         position: (8, 5),
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "boot",
       position: (11, 3),
      },
      Raw {
       content: "loader",
       position: (11, 8),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "grub",
          position: (12, 5),
         },
         Raw {
          content: "enable",
          position: (12, 10),
         },
        ],
       },
       Variable {
        identifier: "false",
        position: (12, 19),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "generic-extlinux-compatible",
          position: (13, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (14, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (14, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "useGenerationDeviceTree",
             position: (18, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (18, 33),
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "boot",
       position: (22, 3),
      },
      Raw {
       content: "consoleLogLevel",
       position: (22, 8),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (22, 26),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "mkDefault",
         position: (22, 30),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Int {
       value: 7,
       position: (22, 40),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "boot",
       position: (23, 3),
      },
      Raw {
       content: "kernelParams",
       position: (23, 8),
      },
     ],
    },
    List {
     elements: [
      String {
       parts: [
        Raw {
         content: "console=tty0",
         position: (23, 26),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "console=ttyS0,115200n8",
         position: (23, 41),
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "sdImage",
       position: (25, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "populateFirmwareCommands",
          position: (26, 5),
         },
        ],
       },
       String {
        parts: [],
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "populateRootCommands",
          position: (27, 5),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "mkdir -p ./files/boot\n",
          position: (28, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (29, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "boot",
              position: (29, 16),
             },
             Raw {
              content: "loader",
              position: (29, 21),
             },
             Raw {
              content: "generic-extlinux-compatible",
              position: (29, 28),
             },
             Raw {
              content: "populateCmd",
              position: (29, 56),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: " -c ",
          position: (29, 68),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (29, 74),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "system",
              position: (29, 81),
             },
             Raw {
              content: "build",
              position: (29, 88),
             },
             Raw {
              content: "toplevel",
              position: (29, 94),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: " -d ./files/boot\n",
          position: (29, 103),
         },
        ],
       },
      ),
     ],
     recursive: false,
    },
   ),
  ],
  recursive: false,
 },
 position: (3, 1),
}