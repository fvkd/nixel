---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: Map {
  bindings: [
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "imports",
       position: (8, 3),
      },
     ],
    },
    to: List {
     elements: [
      Path {
       parts: [
        Raw {
         content: "../../profiles/base.nix",
         position: (9, 5),
        },
       ],
       position: (9, 5),
      },
      Path {
       parts: [
        Raw {
         content: "./sd-image.nix",
         position: (10, 5),
        },
       ],
       position: (10, 5),
      },
     ],
     position: (8, 13),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "boot",
       position: (13, 3),
      },
      Raw {
       content: "loader",
       position: (13, 8),
      },
     ],
    },
    to: Map {
     bindings: [
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "grub",
          position: (14, 5),
         },
         Raw {
          content: "enable",
          position: (14, 10),
         },
        ],
       },
       to: Variable {
        identifier: "false",
        position: (14, 19),
       },
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "generic-extlinux-compatible",
          position: (15, 5),
         },
         Raw {
          content: "enable",
          position: (15, 33),
         },
        ],
       },
       to: Variable {
        identifier: "true",
        position: (15, 42),
       },
      },
     ],
     recursive: false,
     position: (13, 17),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "boot",
       position: (18, 3),
      },
      Raw {
       content: "consoleLogLevel",
       position: (18, 8),
      },
     ],
    },
    to: FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (18, 26),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "mkDefault",
         position: (18, 30),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Int {
       value: 7,
       position: (18, 40),
      },
     ],
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "sdImage",
       position: (20, 3),
      },
     ],
    },
    to: Map {
     bindings: [
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "populateFirmwareCommands",
          position: (21, 5),
         },
        ],
       },
       to: String {
        parts: [],
        position: (21, 32),
       },
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "populateRootCommands",
          position: (22, 5),
         },
        ],
       },
       to: String {
        parts: [
         Raw {
          content: "mkdir -p ./files/boot\n",
          position: (23, 1),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (24, 9),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (24, 16),
             },
             Raw {
              content: "loader",
              position: (24, 21),
             },
             Raw {
              content: "generic-extlinux-compatible",
              position: (24, 28),
             },
             Raw {
              content: "populateCmd",
              position: (24, 56),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: " -c ",
          position: (24, 68),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (24, 74),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "system",
              position: (24, 81),
             },
             Raw {
              content: "build",
              position: (24, 88),
             },
             Raw {
              content: "toplevel",
              position: (24, 94),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: " -d ./files/boot\n",
          position: (24, 103),
         },
        ],
        position: (22, 28),
       },
      },
     ],
     recursive: false,
     position: (20, 13),
    },
   },
  ],
  recursive: false,
  position: (7, 1),
 },
 position: (5, 1),
}