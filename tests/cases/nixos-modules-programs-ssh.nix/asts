---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (9, 17),
        },
        Raw {
         content: "ssh",
         position: (9, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "askPassword",
        position: (11, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (11, 17),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "askPassword",
         position: (11, 21),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "askPasswordWrapper",
        position: (13, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (13, 24),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeScript",
          position: (13, 29),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "ssh-askpass-wrapper",
         },
        ],
        position: (13, 41),
       },
       String {
        parts: [
         Raw {
          content: "#! ",
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (15, 12),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "runtimeShell",
              position: (15, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: " -e\nexport DISPLAY=\"$(systemctl --user show-environment | ",
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (16, 63),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "gnused",
              position: (16, 68),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/bin/sed 's/^DISPLAY=\\(.*\\)/\\1/; t; d')\"\nexec ",
         },
         Expression {
          expression: Variable {
           identifier: "askPassword",
           position: (17, 14),
          },
         },
         Raw {
          content: " \"$@\"\n",
         },
        ],
        position: (14, 5),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "knownHosts",
        position: (20, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "attrValues",
       position: (20, 16),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (20, 27),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "knownHosts",
           position: (20, 31),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "knownHostsText",
        position: (22, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Addition,
      operands: [
       FunctionApplication {
        function: Variable {
         identifier: "flip",
         position: (22, 21),
        },
        arguments: [
         FunctionApplication {
          function: Variable {
           identifier: "concatMapStringsSep",
           position: (22, 27),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
             },
            ],
            position: (22, 47),
           },
          ],
         },
         Variable {
          identifier: "knownHosts",
          position: (22, 53),
         },
         Function {
          argument: Some(
           "h",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: Assert {
           expression: BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "h",
               position: (23, 16),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "hostNames",
                 position: (23, 18),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [],
              position: (23, 31),
             },
            ],
            position: (23, 28),
           },
           target: BinaryOperation {
            operator: Addition,
            operands: [
             BinaryOperation {
              operator: Addition,
              operands: [
               BinaryOperation {
                operator: Addition,
                operands: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (24, 7),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "h",
                     position: (24, 22),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "certAuthority",
                       position: (24, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "@cert-authority ",
                     },
                    ],
                    position: (24, 38),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (24, 59),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                     },
                    ],
                    position: (24, 76),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "h",
                     position: (24, 80),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "hostNames",
                       position: (24, 82),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ],
                position: (24, 57),
               },
               String {
                parts: [
                 Raw {
                  content: " ",
                 },
                ],
                position: (24, 94),
               },
              ],
              position: (24, 92),
             },
             IfThenElse {
              predicate: BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "h",
                  position: (25, 13),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "publicKey",
                    position: (25, 15),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (25, 28),
                },
               ],
               position: (25, 25),
              },
              then: PropertyAccess {
               expression: Variable {
                identifier: "h",
                position: (25, 38),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "publicKey",
                  position: (25, 40),
                 },
                ],
               },
               default: None,
              },
              else_: FunctionApplication {
               function: Variable {
                identifier: "readFile",
                position: (25, 55),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "h",
                  position: (25, 64),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "publicKeyFile",
                    position: (25, 66),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
              position: (25, 10),
             },
            ],
            position: (25, 7),
           },
           position: (23, 9),
          },
          position: (23, 6),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "\n",
         },
        ],
        position: (26, 10),
       },
      ],
      position: (26, 8),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "knownHostsFiles",
        position: (28, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Concatenation,
      operands: [
       List {
        elements: [
         String {
          parts: [
           Raw {
            content: "/etc/ssh/ssh_known_hosts",
           },
          ],
          position: (28, 23),
         },
         String {
          parts: [
           Raw {
            content: "/etc/ssh/ssh_known_hosts2",
           },
          ],
          position: (28, 50),
         },
        ],
        position: (28, 21),
       },
       FunctionApplication {
        function: Variable {
         identifier: "map",
         position: (29, 8),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (29, 12),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "copyPathToStore",
             position: (29, 17),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (29, 33),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "knownHostsFiles",
             position: (29, 37),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
      position: (29, 5),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (35, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (37, 5),
           },
           Raw {
            content: "ssh",
            position: (37, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enableAskPassword",
               position: (39, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (39, 27),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (40, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (40, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (40, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (41, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (41, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "services",
                     position: (41, 26),
                    },
                    Raw {
                     content: "xserver",
                     position: (41, 35),
                    },
                    Raw {
                     content: "enable",
                     position: (41, 43),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (42, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (42, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "config.services.xserver.enable",
                     },
                    ],
                    position: (42, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (43, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to configure SSH_ASKPASS in the environment.",
                   },
                  ],
                  position: (43, 23),
                 },
                ),
               ],
               recursive: false,
               position: (39, 36),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "askPassword",
               position: (46, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (46, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (47, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (47, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (47, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (48, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (48, 22),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "x11_ssh_askpass",
                        position: (48, 27),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/libexec/x11-ssh-askpass",
                   },
                  ],
                  position: (48, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (49, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (49, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{pkgs.x11_ssh_askpass}/libexec/x11-ssh-askpass\"",
                     },
                    ],
                    position: (49, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (50, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Program used by SSH to ask for passwords.",
                   },
                  ],
                  position: (50, 23),
                 },
                ),
               ],
               recursive: false,
               position: (46, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "forwardX11",
               position: (53, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (53, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (54, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (54, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (54, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (55, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (55, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (56, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to request X11 forwarding on outgoing connections by default.\nThis is useful for running graphical programs on the remote machine and have them display to your local X11 server.\nHistorically, this value has depended on the value used by the local sshd daemon, but there really isn't a relation between the two.\nNote: there are some security risks to forwarding an X11 connection.\nNixOS's X server is built with the SECURITY extension, which prevents some obvious attacks.\nTo enable or disable forwarding on a per-connection basis, see the -X and -x options to ssh.\nThe -Y option to ssh enables trusted forwarding, which bypasses the SECURITY extension.\n",
                   },
                  ],
                  position: (56, 23),
                 },
                ),
               ],
               recursive: false,
               position: (53, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "setXAuthLocation",
               position: (67, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (67, 26),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (68, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (68, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (68, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (69, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to set the path to <command>xauth</command> for X11-forwarded connections.\nThis causes a dependency on X11 packages.\n",
                   },
                  ],
                  position: (69, 23),
                 },
                ),
               ],
               recursive: false,
               position: (67, 35),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "pubkeyAcceptedKeyTypes",
               position: (75, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (75, 32),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (76, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (76, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (76, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (76, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (77, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (77, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (78, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "ssh-ed25519",
                     },
                    ],
                    position: (78, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "ssh-rsa",
                     },
                    ],
                    position: (78, 35),
                   },
                  ],
                  position: (78, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (79, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies the key types that will be used for public key authentication.\n",
                   },
                  ],
                  position: (79, 23),
                 },
                ),
               ],
               recursive: false,
               position: (75, 41),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "hostKeyAlgorithms",
               position: (84, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (84, 27),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (85, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (85, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (85, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (85, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (85, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (86, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (86, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (87, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "ssh-ed25519",
                     },
                    ],
                    position: (87, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "ssh-rsa",
                     },
                    ],
                    position: (87, 35),
                   },
                  ],
                  position: (87, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (88, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies the host key algorithms that the client wants to use in order of preference.\n",
                   },
                  ],
                  position: (88, 23),
                 },
                ),
               ],
               recursive: false,
               position: (84, 36),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (93, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (94, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (94, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (94, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                  position: (95, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (96, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra configuration text prepended to <filename>ssh_config</filename>. Other generated\noptions will be added after a <code>Host *</code> pattern.\nSee <citerefentry><refentrytitle>ssh_config</refentrytitle><manvolnum>5</manvolnum></citerefentry>\nfor help.\n",
                   },
                  ],
                  position: (96, 23),
                 },
                ),
               ],
               recursive: false,
               position: (93, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "startAgent",
               position: (104, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (104, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (105, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (105, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (105, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (106, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (106, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (107, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to start the OpenSSH agent when you log in.  The OpenSSH agent\nremembers private keys for you so that you don't have to type in\npassphrases every time you make an SSH connection.  Use\n<command>ssh-add</command> to add a key to the agent.\n",
                   },
                  ],
                  position: (107, 23),
                 },
                ),
               ],
               recursive: false,
               position: (104, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "agentTimeout",
               position: (115, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (115, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (116, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (116, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (116, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (116, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (116, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (117, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (117, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (118, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "1h",
                   },
                  ],
                  position: (118, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (119, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "How long to keep the private keys in memory. Use null to keep them forever.\n",
                   },
                  ],
                  position: (119, 23),
                 },
                ),
               ],
               recursive: false,
               position: (115, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "agentPKCS11Whitelist",
               position: (124, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (124, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (125, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (125, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (125, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (125, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (125, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (126, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (126, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (127, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (127, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{pkgs.opensc}/lib/opensc-pkcs11.so\"",
                     },
                    ],
                    position: (127, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (128, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A pattern-list of acceptable paths for PKCS#11 shared libraries\nthat may be used with the -s option to ssh-add.\n",
                   },
                  ],
                  position: (128, 23),
                 },
                ),
               ],
               recursive: false,
               position: (124, 39),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (134, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (134, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (135, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (135, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (135, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (136, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (136, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "openssh",
                     position: (136, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (137, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (137, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.openssh",
                     },
                    ],
                    position: (137, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (138, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The package used for the openssh client and daemon.\n",
                   },
                  ],
                  position: (138, 23),
                 },
                ),
               ],
               recursive: false,
               position: (134, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "knownHosts",
               position: (143, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (143, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (144, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (144, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (145, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (145, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (145, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (145, 31),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "submodule",
                        position: (145, 37),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Function {
                      argument: None,
                      arguments: FunctionArguments {
                       arguments: [
                        FunctionArgument {
                         identifier: "options",
                         default: None,
                        },
                        FunctionArgument {
                         identifier: "config",
                         default: None,
                        },
                        FunctionArgument {
                         identifier: "name",
                         default: None,
                        },
                       ],
                       ellipsis: true,
                      },
                      definition: Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "options",
                            position: (146, 11),
                           },
                          ],
                         },
                         Map {
                          bindings: [
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "certAuthority",
                               position: (147, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (147, 29),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (148, 15),
                                   },
                                  ],
                                 },
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (148, 22),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "bool",
                                     position: (148, 28),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "default",
                                    position: (149, 15),
                                   },
                                  ],
                                 },
                                 Variable {
                                  identifier: "false",
                                  position: (149, 25),
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (150, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "This public key is an SSH certificate authority, rather than an\nindividual host's key.\n",
                                   },
                                  ],
                                  position: (150, 29),
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (147, 38),
                              },
                             ],
                            },
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "hostNames",
                               position: (155, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (155, 25),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (156, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (156, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "listOf",
                                      position: (156, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (156, 35),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "str",
                                       position: (156, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "default",
                                    position: (157, 15),
                                   },
                                  ],
                                 },
                                 BinaryOperation {
                                  operator: Concatenation,
                                  operands: [
                                   List {
                                    elements: [
                                     Variable {
                                      identifier: "name",
                                      position: (157, 27),
                                     },
                                    ],
                                    position: (157, 25),
                                   },
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "config",
                                     position: (157, 37),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "extraHostNames",
                                       position: (157, 44),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                  position: (157, 34),
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "defaultText",
                                    position: (158, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: Variable {
                                   identifier: "literalExpression",
                                   position: (158, 29),
                                  },
                                  arguments: [
                                   String {
                                    parts: [
                                     Raw {
                                      content: "[ ",
                                     },
                                     Expression {
                                      expression: Variable {
                                       identifier: "name",
                                       position: (158, 52),
                                      },
                                     },
                                     Raw {
                                      content: " ] ++ config.",
                                     },
                                     Expression {
                                      expression: PropertyAccess {
                                       expression: Variable {
                                        identifier: "options",
                                        position: (158, 72),
                                       },
                                       attribute_path: AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "extraHostNames",
                                          position: (158, 80),
                                         },
                                        ],
                                       },
                                       default: None,
                                      },
                                     },
                                    ],
                                    position: (158, 47),
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (159, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "A list of host names and/or IP numbers used for accessing\nthe host's ssh service. This list includes the name of the\ncontaining <literal>knownHosts</literal> attribute by default\nfor convenience. If you wish to configure multiple host keys\nfor the same host use multiple <literal>knownHosts</literal>\nentries with different attribute names and the same\n<literal>hostNames</literal> list.\n",
                                   },
                                  ],
                                  position: (159, 29),
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (155, 34),
                              },
                             ],
                            },
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "extraHostNames",
                               position: (169, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (169, 30),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (170, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (170, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "listOf",
                                      position: (170, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (170, 35),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "str",
                                       position: (170, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "default",
                                    position: (171, 15),
                                   },
                                  ],
                                 },
                                 List {
                                  elements: [],
                                  position: (171, 25),
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (172, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "A list of additional host names and/or IP numbers used for\naccessing the host's ssh service. This list is ignored if\n<literal>hostNames</literal> is set explicitly.\n",
                                   },
                                  ],
                                  position: (172, 29),
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (169, 39),
                              },
                             ],
                            },
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "publicKey",
                               position: (178, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (178, 25),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "default",
                                    position: (179, 15),
                                   },
                                  ],
                                 },
                                 Variable {
                                  identifier: "null",
                                  position: (179, 25),
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (180, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (180, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "nullOr",
                                      position: (180, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (180, 35),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "str",
                                       position: (180, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "example",
                                    position: (181, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "ecdsa-sha2-nistp521 AAAAE2VjZHN...UEPg==",
                                   },
                                  ],
                                  position: (181, 25),
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (182, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "The public key data for the host. You can fetch a public key\nfrom a running SSH server with the <command>ssh-keyscan</command>\ncommand. The public key should not include any host names, only\nthe key type and the key itself.\n",
                                   },
                                  ],
                                  position: (182, 29),
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (178, 34),
                              },
                             ],
                            },
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "publicKeyFile",
                               position: (189, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (189, 29),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "default",
                                    position: (190, 15),
                                   },
                                  ],
                                 },
                                 Variable {
                                  identifier: "null",
                                  position: (190, 25),
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (191, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (191, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "nullOr",
                                      position: (191, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (191, 35),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "path",
                                       position: (191, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (192, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "The path to the public key file for the host. The public\nkey file is read at build time and saved in the Nix store.\nYou can fetch a public key file from a running SSH server\nwith the <command>ssh-keyscan</command> command. The content\nof the file should follow the same format as described for\nthe <literal>publicKey</literal> option. Only a single key\nis supported. If a host has multiple keys, use\n<option>programs.ssh.knownHostsFiles</option> instead.\n",
                                   },
                                  ],
                                  position: (192, 29),
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (189, 38),
                              },
                             ],
                            },
                           ),
                          ],
                          recursive: false,
                          position: (146, 21),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (145, 80),
                      },
                      position: (145, 48),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (205, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The set of system-wide known SSH hosts. To make simple setups more\nconvenient the name of an attribute in this set is used as a host name\nfor the entry. This behaviour can be disabled by setting\n<literal>hostNames</literal> explicitly. You can use\n<literal>extraHostNames</literal> to add additional host names without\ndisabling this default.\n",
                   },
                  ],
                  position: (205, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (213, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (213, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  myhost = {\n    extraHostNames = [ \"myhost.mydomain.com\" \"10.10.1.4\" ];\n    publicKeyFile = ./pubkeys/myhost_ssh_host_dsa_key.pub;\n  };\n  \"myhost2.net\".publicKey = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILIRuJ8p1Fi+m6WkHV0KWnRfpM1WxoW8XAS+XvsSKsTK\";\n  \"myhost2.net/dsa\" = {\n    hostNames = [ \"myhost2.net\" ];\n    publicKeyFile = ./pubkeys/myhost2_ssh_host_dsa_key.pub;\n  };\n}\n",
                     },
                    ],
                    position: (213, 37),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (143, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "knownHostsFiles",
               position: (228, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (228, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (229, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (229, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (230, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (230, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (230, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "path",
                     position: (230, 35),
                    },
                   ],
                  },
                  position: (230, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (231, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Files containing SSH host keys to set as global known hosts.\n<literal>/etc/ssh/ssh_known_hosts</literal> (which is\ngenerated by <option>programs.ssh.knownHosts</option>) and\n<literal>/etc/ssh/ssh_known_hosts2</literal> are always\nincluded.\n",
                   },
                  ],
                  position: (231, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (238, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (238, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[\n  ./known_hosts\n  (writeText \"github.keys\" ",
                     },
                     Raw {
                      content: "''",
                     },
                     Raw {
                      content: "\n    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\n    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n  ",
                     },
                     Raw {
                      content: "''",
                     },
                     Raw {
                      content: ")\n]\n",
                     },
                    ],
                    position: (238, 37),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (228, 34),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "kexAlgorithms",
               position: (250, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (250, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (251, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (251, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (251, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (251, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "listOf",
                        position: (251, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (251, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (251, 49),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (252, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (252, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (253, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "curve25519-sha256@libssh.org",
                     },
                    ],
                    position: (253, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "diffie-hellman-group-exchange-sha256",
                     },
                    ],
                    position: (253, 52),
                   },
                  ],
                  position: (253, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (254, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies the available KEX (Key Exchange) algorithms.\n",
                   },
                  ],
                  position: (254, 23),
                 },
                ),
               ],
               recursive: false,
               position: (250, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "ciphers",
               position: (259, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (259, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (260, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (260, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (260, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (260, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "listOf",
                        position: (260, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (260, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (260, 49),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (261, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (261, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (262, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "chacha20-poly1305@openssh.com",
                     },
                    ],
                    position: (262, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "aes256-gcm@openssh.com",
                     },
                    ],
                    position: (262, 53),
                   },
                  ],
                  position: (262, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (263, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies the ciphers allowed and their order of preference.\n",
                   },
                  ],
                  position: (263, 23),
                 },
                ),
               ],
               recursive: false,
               position: (259, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "macs",
               position: (268, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (268, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (269, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (269, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (269, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (269, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "listOf",
                        position: (269, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (269, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (269, 49),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (270, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (270, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (271, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "hmac-sha2-512-etm@openssh.com",
                     },
                    ],
                    position: (271, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "hmac-sha1",
                     },
                    ],
                    position: (271, 53),
                   },
                  ],
                  position: (271, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (272, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies the MAC (message authentication code) algorithms in order of preference. The MAC algorithm is used\nfor data integrity protection.\n",
                   },
                  ],
                  position: (272, 23),
                 },
                ),
               ],
               recursive: false,
               position: (268, 23),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (37, 20),
         },
        ),
       ],
       recursive: false,
       position: (35, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (281, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (283, 5),
           },
           Raw {
            content: "ssh",
            position: (283, 14),
           },
           Raw {
            content: "setXAuthLocation",
            position: (283, 18),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkDefault",
           position: (284, 7),
          },
          arguments: [
           BinaryOperation {
            operator: LogicalOr,
            operands: [
             BinaryOperation {
              operator: LogicalOr,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (284, 18),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "services",
                   position: (284, 25),
                  },
                  Raw {
                   content: "xserver",
                   position: (284, 34),
                  },
                  Raw {
                   content: "enable",
                   position: (284, 42),
                  },
                 ],
                },
                default: None,
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (284, 52),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "programs",
                   position: (284, 59),
                  },
                  Raw {
                   content: "ssh",
                   position: (284, 68),
                  },
                  Raw {
                   content: "forwardX11",
                   position: (284, 72),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (284, 49),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (284, 86),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "services",
                 position: (284, 93),
                },
                Raw {
                 content: "openssh",
                 position: (284, 102),
                },
                Raw {
                 content: "forwardX11",
                 position: (284, 110),
                },
               ],
              },
              default: None,
             },
            ],
            position: (284, 83),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "assertions",
            position: (286, 5),
           },
          ],
         },
         BinaryOperation {
          operator: Concatenation,
          operands: [
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (287, 11),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (287, 23),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "forwardX11",
                      position: (287, 27),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (287, 41),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "setXAuthLocation",
                      position: (287, 45),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (287, 38),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (288, 11),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "cannot enable X11 forwarding without setting XAuth location",
                  },
                 ],
                 position: (288, 21),
                },
               ),
              ],
              recursive: false,
              position: (287, 9),
             },
            ],
            position: (287, 7),
           },
           FunctionApplication {
            function: Variable {
             identifier: "flip",
             position: (290, 12),
            },
            arguments: [
             Variable {
              identifier: "mapAttrsToList",
              position: (290, 17),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (290, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "knownHosts",
                 position: (290, 36),
                },
               ],
              },
              default: None,
             },
             Function {
              argument: Some(
               "name",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "data",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "assertion",
                     position: (291, 9),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: LogicalOr,
                   operands: [
                    BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: EqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "data",
                          position: (291, 22),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "publicKey",
                            position: (291, 27),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (291, 40),
                        },
                       ],
                       position: (291, 37),
                      },
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "data",
                          position: (291, 48),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "publicKeyFile",
                            position: (291, 53),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (291, 70),
                        },
                       ],
                       position: (291, 67),
                      },
                     ],
                     position: (291, 45),
                    },
                    BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "data",
                          position: (292, 22),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "publicKey",
                            position: (292, 27),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (292, 40),
                        },
                       ],
                       position: (292, 37),
                      },
                      BinaryOperation {
                       operator: EqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "data",
                          position: (292, 48),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "publicKeyFile",
                            position: (292, 53),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (292, 70),
                        },
                       ],
                       position: (292, 67),
                      },
                     ],
                     position: (292, 45),
                    },
                   ],
                   position: (291, 76),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "message",
                     position: (293, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "knownHost ",
                    },
                    Expression {
                     expression: Variable {
                      identifier: "name",
                      position: (293, 32),
                     },
                    },
                    Raw {
                     content: " must contain either a publicKey or publicKeyFile",
                    },
                   ],
                   position: (293, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (290, 60),
               },
               position: (290, 54),
              },
              position: (290, 48),
             },
            ],
           },
          ],
          position: (290, 9),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (298, 5),
           },
           Raw {
            content: "etc",
            position: (298, 17),
           },
           Expression {
            expression: __StringParts(
             [
              Raw {
               content: "ssh/ssh_config",
              },
             ],
            ),
           },
           Raw {
            content: "text",
            position: (298, 38),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "# Custom options from `extraConfig`, to override generated options\n",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (301, 11),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "extraConfig",
                position: (301, 15),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "\n\n# Generated options from other settings\nHost *\nAddressFamily ",
           },
           Expression {
            expression: IfThenElse {
             predicate: PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (305, 28),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "networking",
                 position: (305, 35),
                },
                Raw {
                 content: "enableIPv6",
                 position: (305, 46),
                },
               ],
              },
              default: None,
             },
             then: String {
              parts: [
               Raw {
                content: "any",
               },
              ],
              position: (305, 62),
             },
             else_: String {
              parts: [
               Raw {
                content: "inet",
               },
              ],
              position: (305, 73),
             },
             position: (305, 25),
            },
           },
           Raw {
            content: "\nGlobalKnownHostsFile ",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (306, 32),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: " ",
                },
               ],
               position: (306, 49),
              },
              Variable {
               identifier: "knownHostsFiles",
               position: (306, 53),
              },
             ],
            },
           },
           Raw {
            content: "\n\n",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (308, 11),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (308, 26),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "setXAuthLocation",
                  position: (308, 30),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [
                Raw {
                 content: "XAuthLocation ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (309, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "xorg",
                     position: (309, 32),
                    },
                    Raw {
                     content: "xauth",
                     position: (309, 37),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/xauth\n",
                },
               ],
               position: (308, 47),
              },
             ],
            },
           },
           Raw {
            content: "\n\nForwardX11 ",
           },
           Expression {
            expression: IfThenElse {
             predicate: PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (312, 25),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "forwardX11",
                 position: (312, 29),
                },
               ],
              },
              default: None,
             },
             then: String {
              parts: [
               Raw {
                content: "yes",
               },
              ],
              position: (312, 45),
             },
             else_: String {
              parts: [
               Raw {
                content: "no",
               },
              ],
              position: (312, 56),
             },
             position: (312, 22),
            },
           },
           Raw {
            content: "\n\n",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (314, 11),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (314, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "pubkeyAcceptedKeyTypes",
                    position: (314, 31),
                   },
                  ],
                 },
                 default: None,
                },
                List {
                 elements: [],
                 position: (314, 57),
                },
               ],
               position: (314, 54),
              },
              String {
               parts: [
                Raw {
                 content: "PubkeyAcceptedKeyTypes ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (314, 87),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                     },
                    ],
                    position: (314, 104),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (314, 108),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "pubkeyAcceptedKeyTypes",
                       position: (314, 112),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
               ],
               position: (314, 61),
              },
             ],
            },
           },
           Raw {
            content: "\n",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (315, 11),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (315, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "hostKeyAlgorithms",
                    position: (315, 31),
                   },
                  ],
                 },
                 default: None,
                },
                List {
                 elements: [],
                 position: (315, 52),
                },
               ],
               position: (315, 49),
              },
              String {
               parts: [
                Raw {
                 content: "HostKeyAlgorithms ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (315, 77),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                     },
                    ],
                    position: (315, 94),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (315, 98),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "hostKeyAlgorithms",
                       position: (315, 102),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
               ],
               position: (315, 56),
              },
             ],
            },
           },
           Raw {
            content: "\n",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (316, 11),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (316, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "kexAlgorithms",
                    position: (316, 31),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (316, 48),
                },
               ],
               position: (316, 45),
              },
              String {
               parts: [
                Raw {
                 content: "KexAlgorithms ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (316, 71),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                     },
                    ],
                    position: (316, 88),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (316, 92),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "kexAlgorithms",
                       position: (316, 96),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
               ],
               position: (316, 54),
              },
             ],
            },
           },
           Raw {
            content: "\n",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (317, 11),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (317, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "ciphers",
                    position: (317, 31),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (317, 42),
                },
               ],
               position: (317, 39),
              },
              String {
               parts: [
                Raw {
                 content: "Ciphers ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (317, 59),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                     },
                    ],
                    position: (317, 76),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (317, 80),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "ciphers",
                       position: (317, 84),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
               ],
               position: (317, 48),
              },
             ],
            },
           },
           Raw {
            content: "\n",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (318, 11),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (318, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "macs",
                    position: (318, 31),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (318, 39),
                },
               ],
               position: (318, 36),
              },
              String {
               parts: [
                Raw {
                 content: "MACs ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (318, 53),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                     },
                    ],
                    position: (318, 70),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (318, 74),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "macs",
                       position: (318, 78),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
               ],
               position: (318, 45),
              },
             ],
            },
           },
           Raw {
            content: "\n",
           },
          ],
          position: (299, 7),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (321, 5),
           },
           Raw {
            content: "etc",
            position: (321, 17),
           },
           Expression {
            expression: __StringParts(
             [
              Raw {
               content: "ssh/ssh_known_hosts",
              },
             ],
            ),
           },
           Raw {
            content: "text",
            position: (321, 43),
           },
          ],
         },
         Variable {
          identifier: "knownHostsText",
          position: (321, 50),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "systemd",
            position: (324, 5),
           },
           Raw {
            content: "user",
            position: (324, 13),
           },
           Raw {
            content: "services",
            position: (324, 18),
           },
           Raw {
            content: "ssh-agent",
            position: (324, 27),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkIf",
           position: (324, 39),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (324, 44),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "startAgent",
               position: (324, 48),
              },
             ],
            },
            default: None,
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (325, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "SSH Agent",
                },
               ],
               position: (325, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (326, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "default.target",
                  },
                 ],
                 position: (326, 22),
                },
               ],
               position: (326, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "unitConfig",
                 position: (327, 9),
                },
                Raw {
                 content: "ConditionUser",
                 position: (327, 20),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "!@system",
                },
               ],
               position: (327, 36),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (328, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStartPre",
                    position: (329, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (329, 31),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "coreutils",
                        position: (329, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/rm -f %t/ssh-agent",
                   },
                  ],
                  position: (329, 28),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (330, 13),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Addition,
                  operands: [
                   BinaryOperation {
                    operator: Addition,
                    operands: [
                     BinaryOperation {
                      operator: Addition,
                      operands: [
                       String {
                        parts: [
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (331, 20),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "package",
                              position: (331, 24),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/bin/ssh-agent ",
                         },
                        ],
                        position: (331, 17),
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "optionalString",
                         position: (332, 17),
                        },
                        arguments: [
                         BinaryOperation {
                          operator: NotEqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (332, 33),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "agentTimeout",
                               position: (332, 37),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (332, 53),
                           },
                          ],
                          position: (332, 50),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "-t ",
                           },
                           Expression {
                            expression: PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (332, 66),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "agentTimeout",
                                position: (332, 70),
                               },
                              ],
                             },
                             default: None,
                            },
                           },
                           Raw {
                            content: " ",
                           },
                          ],
                          position: (332, 60),
                         },
                        ],
                       },
                      ],
                      position: (331, 49),
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "optionalString",
                       position: (333, 17),
                      },
                      arguments: [
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (333, 33),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "agentPKCS11Whitelist",
                             position: (333, 37),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "null",
                          position: (333, 61),
                         },
                        ],
                        position: (333, 58),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "-P ",
                         },
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (333, 74),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "agentPKCS11Whitelist",
                              position: (333, 78),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: " ",
                         },
                        ],
                        position: (333, 68),
                       },
                      ],
                     },
                    ],
                    position: (332, 87),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "-a %t/ssh-agent",
                     },
                    ],
                    position: (334, 17),
                   },
                  ],
                  position: (333, 103),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StandardOutput",
                    position: (335, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "null",
                   },
                  ],
                  position: (335, 30),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (336, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "forking",
                   },
                  ],
                  position: (336, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (337, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "on-failure",
                   },
                  ],
                  position: (337, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "SuccessExitStatus",
                    position: (338, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0 2",
                   },
                  ],
                  position: (338, 33),
                 },
                ),
               ],
               recursive: false,
               position: (329, 11),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (343, 9),
                },
                Raw {
                 content: "SSH_ASKPASS",
                 position: (343, 21),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (343, 35),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (343, 50),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "enableAskPassword",
                    position: (343, 54),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "askPasswordWrapper",
                 position: (343, 72),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (344, 9),
                },
                Raw {
                 content: "DISPLAY",
                 position: (344, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "fake",
                },
               ],
               position: (344, 31),
              },
             ),
            ],
            recursive: false,
            position: (325, 7),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (347, 5),
           },
           Raw {
            content: "extraInit",
            position: (347, 17),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (347, 29),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (347, 44),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "startAgent",
               position: (347, 48),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "if [ -z \"$SSH_AUTH_SOCK\" -a -n \"$XDG_RUNTIME_DIR\" ]; then\n  export SSH_AUTH_SOCK=\"$XDG_RUNTIME_DIR/ssh-agent\"\nfi\n",
             },
            ],
            position: (348, 7),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (354, 5),
           },
           Raw {
            content: "variables",
            position: (354, 17),
           },
           Raw {
            content: "SSH_ASKPASS",
            position: (354, 27),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (354, 41),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (354, 56),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "enableAskPassword",
               position: (354, 60),
              },
             ],
            },
            default: None,
           },
           Variable {
            identifier: "askPassword",
            position: (354, 78),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (281, 12),
      },
     ),
    ],
    recursive: false,
    position: (32, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}