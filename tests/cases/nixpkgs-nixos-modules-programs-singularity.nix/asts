---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (5, 16),
        },
        Raw {
         content: "singularity",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "singularity",
        position: (6, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (6, 17),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "singularity",
          position: (6, 22),
         },
         Raw {
          content: "overrideAttrs",
          position: (6, 34),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Parentheses {
        expression: Function {
         argument: Simple {
          identifier: "attrs",
         },
         definition: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "installPhase",
               position: (7, 5),
              },
             ],
            },
            to: BinaryOperation {
             operator: Addition,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "attrs",
                position: (7, 20),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "installPhase",
                  position: (7, 26),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [
                Raw {
                 content: "mv $out/libexec/singularity/bin/starter-suid $out/libexec/singularity/bin/starter-suid.orig\nln -s /run/wrappers/bin/singularity-suid $out/libexec/singularity/bin/starter-suid\n",
                 position: (8, 1),
                },
               ],
               position: (7, 41),
              },
             ],
             position: (7, 39),
            },
           },
          ],
          recursive: false,
          position: (6, 57),
         },
         position: (6, 49),
        },
        position: (6, 48),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (13, 3),
        },
        Raw {
         content: "programs",
         position: (13, 11),
        },
        Raw {
         content: "singularity",
         position: (13, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (14, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (14, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Singularity",
              position: (14, 30),
             },
            ],
            position: (14, 29),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (13, 34),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (17, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (17, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (17, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (17, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (18, 7),
             },
             Raw {
              content: "systemPackages",
              position: (18, 19),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "singularity",
              position: (18, 38),
             },
            ],
            position: (18, 36),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "security",
              position: (19, 7),
             },
             Raw {
              content: "wrappers",
              position: (19, 16),
             },
             Raw {
              content: "singularity-suid",
              position: (19, 25),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "setuid",
                 position: (20, 9),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (20, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "owner",
                 position: (21, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "root",
                 position: (21, 18),
                },
               ],
               position: (21, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (22, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "root",
                 position: (22, 18),
                },
               ],
               position: (22, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (23, 9),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "singularity",
                  position: (23, 21),
                 },
                },
                Raw {
                 content: "/libexec/singularity/bin/starter-suid.orig",
                 position: (23, 33),
                },
               ],
               position: (23, 18),
              },
             },
            ],
            recursive: false,
            position: (20, 7),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (25, 7),
             },
             Raw {
              content: "tmpfiles",
              position: (25, 15),
             },
             Raw {
              content: "rules",
              position: (25, 24),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "d /var/singularity/mnt/session 0770 root root -",
                position: (26, 10),
               },
              ],
              position: (26, 9),
             },
             String {
              parts: [
               Raw {
                content: "d /var/singularity/mnt/final 0770 root root -",
                position: (27, 10),
               },
              ],
              position: (27, 9),
             },
             String {
              parts: [
               Raw {
                content: "d /var/singularity/mnt/overlay 0770 root root -",
                position: (28, 10),
               },
              ],
              position: (28, 9),
             },
             String {
              parts: [
               Raw {
                content: "d /var/singularity/mnt/container 0770 root root -",
                position: (29, 10),
               },
              ],
              position: (29, 9),
             },
             String {
              parts: [
               Raw {
                content: "d /var/singularity/mnt/source 0770 root root -",
                position: (30, 10),
               },
              ],
              position: (30, 9),
             },
            ],
            position: (25, 32),
           },
          },
         ],
         recursive: false,
         position: (17, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (12, 4),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}