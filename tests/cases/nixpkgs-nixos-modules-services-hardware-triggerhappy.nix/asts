---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "triggerhappy",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "socket",
        position: (9, 3),
       },
      ],
     },
     to: String {
      parts: [
       Raw {
        content: "/run/thd.socket",
        position: (9, 13),
       },
      ],
      position: (9, 12),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "configFile",
        position: (11, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (11, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (11, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "triggerhappy.conf",
          position: (11, 32),
         },
        ],
        position: (11, 31),
       },
       String {
        parts: [
         Raw {
          content: "",
          position: (12, 1),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatMapStringsSep",
            position: (12, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (12, 28),
              },
             ],
             position: (12, 27),
            },
            Parentheses {
             expression: Function {
              argument: Destructured {
               identifier: None,
               arguments: [
                DestructuredArgument {
                 identifier: "keys",
                 default: None,
                },
                DestructuredArgument {
                 identifier: "event",
                 default: None,
                },
                DestructuredArgument {
                 identifier: "cmd",
                 default: None,
                },
               ],
               ellipsis: true,
              },
              definition: String {
               parts: [
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatMapStringsSep",
                   position: (14, 13),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "+",
                      position: (14, 34),
                     },
                    ],
                    position: (14, 33),
                   },
                   Parentheses {
                    expression: Function {
                     argument: Simple {
                      identifier: "x",
                     },
                     definition: BinaryOperation {
                      operator: Addition,
                      operands: [
                       String {
                        parts: [
                         Raw {
                          content: "KEY_",
                          position: (14, 42),
                         },
                        ],
                        position: (14, 41),
                       },
                       Variable {
                        identifier: "x",
                        position: (14, 50),
                       },
                      ],
                      position: (14, 48),
                     },
                     position: (14, 38),
                    },
                    position: (14, 37),
                   },
                   Variable {
                    identifier: "keys",
                    position: (14, 53),
                   },
                  ],
                 },
                },
                Raw {
                 content: " ",
                 position: (14, 58),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (14, 61),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "press",
                          position: (14, 72),
                         },
                        ],
                       },
                       to: Int {
                        value: 1,
                        position: (14, 80),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "hold",
                          position: (14, 83),
                         },
                        ],
                       },
                       to: Int {
                        value: 2,
                        position: (14, 90),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "release",
                          position: (14, 93),
                         },
                        ],
                       },
                       to: Int {
                        value: 0,
                        position: (14, 103),
                       },
                      },
                     ],
                     recursive: false,
                     position: (14, 70),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Interpolation {
                       expression: Variable {
                        identifier: "event",
                        position: (14, 110),
                       },
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " ",
                 position: (14, 117),
                },
                Interpolation {
                 expression: Variable {
                  identifier: "cmd",
                  position: (14, 120),
                 },
                },
               ],
               position: (14, 9),
              },
              position: (13, 8),
             },
             position: (13, 7),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (16, 7),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "bindings",
                position: (16, 11),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (16, 20),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (17, 7),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "extraConfig",
              position: (17, 11),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (17, 23),
         },
        ],
        position: (11, 51),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "bindingCfg",
        position: (20, 3),
       },
      ],
     },
     to: Function {
      argument: Destructured {
       identifier: None,
       arguments: [],
       ellipsis: true,
      },
      definition: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (21, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "keys",
               position: (23, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (23, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (24, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (24, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (24, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (24, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (25, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of keys to match.  Key names as defined in linux/input-event-codes.h",
                    position: (25, 24),
                   },
                  ],
                  position: (25, 23),
                 },
                },
               ],
               recursive: false,
               position: (23, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "event",
               position: (28, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (28, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (29, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (29, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (29, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "press",
                        position: (29, 29),
                       },
                      ],
                      position: (29, 28),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "hold",
                        position: (29, 37),
                       },
                      ],
                      position: (29, 36),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "release",
                        position: (29, 44),
                       },
                      ],
                      position: (29, 43),
                     },
                    ],
                    position: (29, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (30, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "press",
                    position: (30, 20),
                   },
                  ],
                  position: (30, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (31, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Event to match.",
                    position: (31, 24),
                   },
                  ],
                  position: (31, 23),
                 },
                },
               ],
               recursive: false,
               position: (28, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "cmd",
               position: (34, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (34, 13),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (35, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (35, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (36, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "What to run.",
                    position: (36, 24),
                   },
                  ],
                  position: (36, 23),
                 },
                },
               ],
               recursive: false,
               position: (34, 22),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (21, 15),
         },
        },
       ],
       recursive: false,
       position: (20, 25),
      },
      position: (20, 16),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (48, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (50, 5),
           },
           Raw {
            content: "triggerhappy",
            position: (50, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (52, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (52, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (53, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (53, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (54, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable the <command>triggerhappy</command> hotkey daemon.\n",
                    position: (56, 1),
                   },
                  ],
                  position: (55, 23),
                 },
                },
               ],
               recursive: false,
               position: (52, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "user",
               position: (60, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (60, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (61, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (61, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "nobody",
                    position: (62, 20),
                   },
                  ],
                  position: (62, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "root",
                    position: (63, 20),
                   },
                  ],
                  position: (63, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "User account under which <command>triggerhappy</command> runs.\n",
                    position: (65, 1),
                   },
                  ],
                  position: (64, 23),
                 },
                },
               ],
               recursive: false,
               position: (60, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "bindings",
               position: (69, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (69, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (70, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (70, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (70, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (70, 30),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "submodule",
                         position: (70, 36),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "bindingCfg",
                       position: (70, 46),
                      },
                     ],
                    },
                    position: (70, 29),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (71, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (71, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (72, 19),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "literalExpression",
                      position: (72, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ { keys = [\"PLAYPAUSE\"];  cmd = \"",
                      position: (73, 1),
                     },
                     Raw {
                      content: "$",
                      position: (73, 45),
                     },
                     Raw {
                      content: "{pkgs.mpc-cli}/bin/mpc -q toggle\"; } ]\n",
                      position: (73, 48),
                     },
                    ],
                    position: (72, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Key bindings for <command>triggerhappy</command>.\n",
                    position: (76, 1),
                   },
                  ],
                  position: (75, 23),
                 },
                },
               ],
               recursive: false,
               position: (69, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraConfig",
               position: (80, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (80, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (81, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (81, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (81, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (82, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (82, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (83, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Literal contents to append to the end of <command>triggerhappy</command> configuration file.\n",
                    position: (84, 1),
                   },
                  ],
                  position: (83, 23),
                 },
                },
               ],
               recursive: false,
               position: (80, 30),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (50, 29),
         },
        },
       ],
       recursive: false,
       position: (48, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (95, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (95, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (95, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (95, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (97, 5),
             },
             Raw {
              content: "sockets",
              position: (97, 13),
             },
             Raw {
              content: "triggerhappy",
              position: (97, 21),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (98, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Triggerhappy Socket",
                 position: (98, 22),
                },
               ],
               position: (98, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (99, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "sockets.target",
                   position: (99, 21),
                  },
                 ],
                 position: (99, 20),
                },
               ],
               position: (99, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "socketConfig",
                 position: (100, 7),
                },
                Raw {
                 content: "ListenDatagram",
                 position: (100, 20),
                },
               ],
              },
              to: Variable {
               identifier: "socket",
               position: (100, 37),
              },
             },
            ],
            recursive: false,
            position: (97, 36),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (103, 5),
             },
             Raw {
              content: "services",
              position: (103, 13),
             },
             Raw {
              content: "triggerhappy",
              position: (103, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (104, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (104, 21),
                  },
                 ],
                 position: (104, 20),
                },
               ],
               position: (104, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (105, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Global hotkey daemon",
                 position: (105, 22),
                },
               ],
               position: (105, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (106, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (107, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (107, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "triggerhappy",
                        position: (107, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/thd ",
                    position: (107, 42),
                   },
                   Interpolation {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (107, 53),
                     },
                     arguments: [
                      Parentheses {
                       expression: BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (107, 69),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "user",
                             position: (107, 73),
                            },
                           ],
                          },
                          default: None,
                         },
                         String {
                          parts: [
                           Raw {
                            content: "root",
                            position: (107, 82),
                           },
                          ],
                          position: (107, 81),
                         },
                        ],
                        position: (107, 78),
                       },
                       position: (107, 68),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--user ",
                         position: (107, 90),
                        },
                        Interpolation {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (107, 99),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "user",
                             position: (107, 103),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (107, 89),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " --socket ",
                    position: (107, 110),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "socket",
                     position: (107, 122),
                    },
                   },
                   Raw {
                    content: " --triggers ",
                    position: (107, 129),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "configFile",
                     position: (107, 143),
                    },
                   },
                   Raw {
                    content: " --deviceglob /dev/input/event*",
                    position: (107, 154),
                   },
                  ],
                  position: (107, 21),
                 },
                },
               ],
               recursive: false,
               position: (106, 23),
              },
             },
            ],
            recursive: false,
            position: (103, 37),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (111, 5),
             },
             Raw {
              content: "udev",
              position: (111, 14),
             },
             Raw {
              content: "packages",
              position: (111, 19),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (111, 30),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "singleton",
                position: (111, 34),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Parentheses {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (111, 45),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "writeTextFile",
                   position: (111, 50),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "name",
                      position: (112, 7),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "triggerhappy-udev-rules",
                      position: (112, 15),
                     },
                    ],
                    position: (112, 14),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "destination",
                      position: (113, 7),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "/etc/udev/rules.d/61-triggerhappy.rules",
                      position: (113, 22),
                     },
                    ],
                    position: (113, 21),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "text",
                      position: (114, 7),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "ACTION==\"add\", SUBSYSTEM==\"input\", KERNEL==\"event[0-9]*\", ATTRS{name}!=\"triggerhappy\", \\\n  RUN+=\"",
                      position: (115, 1),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (116, 19),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "triggerhappy",
                          position: (116, 24),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/th-cmd --socket ",
                      position: (116, 37),
                     },
                     Interpolation {
                      expression: Variable {
                       identifier: "socket",
                       position: (116, 60),
                      },
                     },
                     Raw {
                      content: " --passfd --udev\"\n",
                      position: (116, 67),
                     },
                    ],
                    position: (114, 14),
                   },
                  },
                 ],
                 recursive: false,
                 position: (111, 64),
                },
               ],
              },
              position: (111, 44),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (95, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (44, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}