---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "collectd",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "baseDirLine",
        position: (8, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "BaseDir \"",
       },
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (8, 30),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "dataDir",
            position: (8, 34),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "\"",
       },
      ],
      position: (8, 17),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "unvalidated_conf",
        position: (9, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (9, 22),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (9, 27),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "collectd-unvalidated.conf",
         },
        ],
        position: (9, 37),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (9, 65),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "extraConfig",
           position: (9, 69),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "conf",
        position: (11, 3),
       },
      ],
     },
     IfThenElse {
      predicate: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (11, 13),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "validateConfig",
          position: (11, 17),
         },
        ],
       },
       default: None,
      },
      then: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (12, 5),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "runCommand",
           position: (12, 10),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "collectd.conf",
          },
         ],
         position: (12, 21),
        },
        Map {
         bindings: [],
         recursive: false,
         position: (12, 37),
        },
        String {
         parts: [
          Raw {
           content: "echo testing ",
          },
          Expression {
           expression: Variable {
            identifier: "unvalidated_conf",
            position: (13, 22),
           },
          },
          Raw {
           content: "\ncp ",
          },
          Expression {
           expression: Variable {
            identifier: "unvalidated_conf",
            position: (14, 12),
           },
          },
          Raw {
           content: " collectd.conf\n# collectd -t fails if BaseDir does not exist.\nsubstituteInPlace collectd.conf --replace ",
          },
          Expression {
           expression: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (16, 51),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "escapeShellArgs",
                position: (16, 55),
               },
              ],
             },
             default: None,
            },
            arguments: [
             List {
              elements: [
               Variable {
                identifier: "baseDirLine",
                position: (16, 73),
               },
              ],
              position: (16, 71),
             },
            ],
           },
          },
          Raw {
           content: " 'BaseDir \".\"'\n",
          },
          Expression {
           expression: Variable {
            identifier: "package",
            position: (17, 9),
           },
          },
          Raw {
           content: "/bin/collectd -t -C collectd.conf\ncp ",
          },
          Expression {
           expression: Variable {
            identifier: "unvalidated_conf",
            position: (18, 12),
           },
          },
          Raw {
           content: " $out\n",
          },
         ],
         position: (12, 40),
        },
       ],
      },
      else_: Variable {
       identifier: "unvalidated_conf",
       position: (19, 13),
      },
      position: (11, 10),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "package",
        position: (21, 3),
       },
      ],
     },
     IfThenElse {
      predicate: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (22, 8),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "buildMinimalPackage",
          position: (22, 12),
         },
        ],
       },
       default: None,
      },
      then: Variable {
       identifier: "minimalPackage",
       position: (23, 10),
      },
      else_: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (24, 10),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "package",
          position: (24, 14),
         },
        ],
       },
       default: None,
      },
      position: (22, 5),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "minimalPackage",
        position: (26, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (26, 20),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "package",
          position: (26, 24),
         },
         Raw {
          content: "override",
          position: (26, 32),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enabledPlugins",
             position: (27, 5),
            },
           ],
          },
          BinaryOperation {
           operator: Concatenation,
           operands: [
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "syslog",
                },
               ],
               position: (27, 24),
              },
             ],
             position: (27, 22),
            },
            FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "builtins",
               position: (27, 38),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "attrNames",
                 position: (27, 47),
                },
               ],
              },
              default: None,
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (27, 57),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "plugins",
                  position: (27, 61),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ],
           position: (27, 35),
          },
         ),
        ],
        recursive: false,
        position: (26, 41),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (31, 3),
        },
        Raw {
         content: "services",
         position: (31, 11),
        },
        Raw {
         content: "collectd",
         position: (31, 20),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "types",
        position: (31, 36),
       },
       target: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (32, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkEnableOption",
            position: (32, 14),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "collectd agent",
              },
             ],
             position: (32, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "validateConfig",
             position: (34, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (34, 22),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (35, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (35, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (36, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Validate the syntax of collectd configuration file at build time.\nDisable this if you use the Include directive on files unavailable in\nthe build sandbox, or when cross-compiling.\n",
                 },
                ],
                position: (36, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (41, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (41, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "bool",
                   position: (41, 20),
                  },
                 ],
                },
                default: None,
               },
              ),
             ],
             recursive: false,
             position: (34, 31),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "package",
             position: (44, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (44, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (45, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (45, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "collectd",
                   position: (45, 22),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (46, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (46, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "pkgs.collectd",
                   },
                  ],
                  position: (46, 39),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (47, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Which collectd package to use.\n",
                 },
                ],
                position: (47, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (50, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (50, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "package",
                   position: (50, 20),
                  },
                 ],
                },
                default: None,
               },
              ),
             ],
             recursive: false,
             position: (44, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "buildMinimalPackage",
             position: (53, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (53, 27),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (54, 7),
                 },
                ],
               },
               Variable {
                identifier: "false",
                position: (54, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (55, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Build a minimal collectd package with only the configured `services.collectd.plugins`\n",
                 },
                ],
                position: (55, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (58, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (58, 14),
               },
              ),
             ],
             recursive: false,
             position: (53, 36),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "user",
             position: (61, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (61, 12),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (62, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "collectd",
                 },
                ],
                position: (62, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (63, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "User under which to run collectd.\n",
                 },
                ],
                position: (63, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (66, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (66, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (66, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (61, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "dataDir",
             position: (69, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (69, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (70, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/var/lib/collectd",
                 },
                ],
                position: (70, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (71, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Data directory for collectd agent.\n",
                 },
                ],
                position: (71, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (74, 7),
                 },
                ],
               },
               Variable {
                identifier: "path",
                position: (74, 14),
               },
              ),
             ],
             recursive: false,
             position: (69, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoLoadPlugin",
             position: (77, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (77, 22),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (78, 7),
                 },
                ],
               },
               Variable {
                identifier: "false",
                position: (78, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (79, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Enable plugin autoloading.\n",
                 },
                ],
                position: (79, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (82, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (82, 14),
               },
              ),
             ],
             recursive: false,
             position: (77, 31),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "include",
             position: (85, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (85, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (86, 7),
                 },
                ],
               },
               List {
                elements: [],
                position: (86, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (87, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Additional paths to load config from.\n",
                 },
                ],
                position: (87, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (90, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (90, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (90, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (85, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "plugins",
             position: (93, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (93, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (94, 7),
                 },
                ],
               },
               Map {
                bindings: [],
                recursive: false,
                position: (94, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "example",
                  position: (95, 7),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "cpu",
                     position: (95, 19),
                    },
                   ],
                  },
                  String {
                   parts: [],
                   position: (95, 25),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "memory",
                     position: (95, 29),
                    },
                   ],
                  },
                  String {
                   parts: [],
                   position: (95, 38),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "network",
                     position: (95, 42),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Server 192.168.1.1 25826",
                    },
                   ],
                   position: (95, 52),
                  },
                 ),
                ],
                recursive: false,
                position: (95, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (96, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Attribute set of plugin names to plugin config segments\n",
                 },
                ],
                position: (96, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (99, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (99, 14),
                },
                arguments: [
                 Variable {
                  identifier: "lines",
                  position: (99, 22),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (93, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (102, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (102, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (103, 7),
                 },
                ],
               },
               String {
                parts: [],
                position: (103, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (104, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Extra configuration for collectd. Use mkBefore to add lines before the\ndefault config, and mkAfter to add them below.\n",
                 },
                ],
                position: (104, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (108, 7),
                 },
                ],
               },
               Variable {
                identifier: "lines",
                position: (108, 14),
               },
              ),
             ],
             recursive: false,
             position: (102, 28),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (31, 43),
       },
       position: (31, 31),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (113, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (113, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (113, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (113, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (115, 5),
             },
             Raw {
              content: "collectd",
              position: (115, 14),
             },
             Raw {
              content: "extraConfig",
              position: (115, 23),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (115, 37),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkOrder",
                position: (115, 41),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Int {
              value: 1200,
              position: (115, 49),
             },
             String {
              parts: [
               Raw {
                content: "",
               },
               Expression {
                expression: Variable {
                 identifier: "baseDirLine",
                 position: (116, 9),
                },
               },
               Raw {
                content: "\nAutoLoadPlugin ",
               },
               Expression {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "boolToString",
                  position: (117, 24),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (117, 37),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "autoLoadPlugin",
                      position: (117, 41),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Raw {
                content: "\nHostname \"",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (118, 19),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "networking",
                    position: (118, 26),
                   },
                   Raw {
                    content: "hostName",
                    position: (118, 37),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "\"\n\nLoadPlugin syslog\n<Plugin \"syslog\">\n  LogLevel \"info\"\n  NotifyLevel \"OKAY\"\n</Plugin>\n\n",
               },
               Expression {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "concatStrings",
                  position: (126, 9),
                 },
                 arguments: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "mapAttrsToList",
                    position: (126, 24),
                   },
                   arguments: [
                    Function {
                     argument: Simple {
                      identifier: "plugin",
                     },
                     definition: Function {
                      argument: Simple {
                       identifier: "pluginConfig",
                      },
                      definition: String {
                       parts: [
                        Raw {
                         content: "LoadPlugin ",
                        },
                        Expression {
                         expression: Variable {
                          identifier: "plugin",
                          position: (127, 22),
                         },
                        },
                        Raw {
                         content: "\n<Plugin \"",
                        },
                        Expression {
                         expression: Variable {
                          identifier: "plugin",
                          position: (128, 20),
                         },
                        },
                        Raw {
                         content: "\">\n",
                        },
                        Expression {
                         expression: Variable {
                          identifier: "pluginConfig",
                          position: (129, 11),
                         },
                        },
                        Raw {
                         content: "\n</Plugin>\n",
                        },
                       ],
                       position: (126, 62),
                      },
                      position: (126, 48),
                     },
                     position: (126, 40),
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (131, 11),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "plugins",
                        position: (131, 15),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ],
                },
               },
               Raw {
                content: "\n\n",
               },
               Expression {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "concatMapStrings",
                  position: (133, 9),
                 },
                 arguments: [
                  Function {
                   argument: Simple {
                    identifier: "f",
                   },
                   definition: String {
                    parts: [
                     Raw {
                      content: "Include \"",
                     },
                     Expression {
                      expression: Variable {
                       identifier: "f",
                       position: (134, 20),
                      },
                     },
                     Raw {
                      content: "\"\n",
                     },
                    ],
                    position: (133, 30),
                   },
                   position: (133, 27),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (135, 11),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "include",
                      position: (135, 15),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Raw {
                content: "\n",
               },
              ],
              position: (115, 54),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (138, 5),
             },
             Raw {
              content: "tmpfiles",
              position: (138, 13),
             },
             Raw {
              content: "rules",
              position: (138, 22),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "d '",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (139, 13),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "dataDir",
                    position: (139, 17),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' - ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (139, 31),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "user",
                    position: (139, 35),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " - - -",
               },
              ],
              position: (139, 7),
             },
            ],
            position: (138, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (142, 5),
             },
             Raw {
              content: "services",
              position: (142, 13),
             },
             Raw {
              content: "collectd",
              position: (142, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (143, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Collectd Monitoring Agent",
                },
               ],
               position: (143, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (144, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                  },
                 ],
                 position: (144, 17),
                },
               ],
               position: (144, 15),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (145, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (145, 20),
                },
               ],
               position: (145, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (147, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (148, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "package",
                     position: (148, 24),
                    },
                   },
                   Raw {
                    content: "/sbin/collectd -C ",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "conf",
                     position: (148, 52),
                    },
                   },
                   Raw {
                    content: " -f",
                   },
                  ],
                  position: (148, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (149, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (149, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "user",
                     position: (149, 20),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (150, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "on-failure",
                   },
                  ],
                  position: (150, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RestartSec",
                    position: (151, 9),
                   },
                  ],
                 },
                 Int {
                  value: 3,
                  position: (151, 22),
                 },
                ),
               ],
               recursive: false,
               position: (147, 23),
              },
             ),
            ],
            recursive: false,
            position: (142, 33),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (155, 5),
             },
             Raw {
              content: "users",
              position: (155, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (155, 19),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (155, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "user",
                   position: (155, 38),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "collectd",
                 },
                ],
                position: (155, 46),
               },
              ],
              position: (155, 43),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "collectd",
                   position: (156, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "isSystemUser",
                      position: (157, 9),
                     },
                    ],
                   },
                   Variable {
                    identifier: "true",
                    position: (157, 24),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (158, 9),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "collectd",
                     },
                    ],
                    position: (158, 17),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (156, 18),
                },
               ),
              ],
              recursive: false,
              position: (155, 58),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (162, 5),
             },
             Raw {
              content: "groups",
              position: (162, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (162, 20),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (162, 35),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "user",
                   position: (162, 39),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "collectd",
                 },
                ],
                position: (162, 47),
               },
              ],
              position: (162, 44),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "collectd",
                   position: (163, 7),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                 position: (163, 18),
                },
               ),
              ],
              recursive: false,
              position: (162, 59),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (113, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (30, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}