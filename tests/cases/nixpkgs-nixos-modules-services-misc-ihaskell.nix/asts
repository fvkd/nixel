---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "ihaskell",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "ihaskell",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (8, 14),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "ihaskell",
          position: (8, 19),
         },
         Raw {
          content: "override",
          position: (8, 28),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "packages",
             position: (9, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (9, 16),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "extraPackages",
              position: (9, 20),
             },
            ],
           },
           default: None,
          },
         },
        ],
        recursive: false,
        position: (8, 37),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (15, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (16, 5),
           },
           Raw {
            content: "ihaskell",
            position: (16, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (17, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (17, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (18, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (18, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (18, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (19, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (19, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (20, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Autostart an IHaskell notebook service.",
                    position: (20, 24),
                   },
                  ],
                  position: (20, 23),
                 },
                },
               ],
               recursive: false,
               position: (17, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraPackages",
               position: (23, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (23, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (24, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "functionTo",
                      position: (24, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (24, 34),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "listOf",
                         position: (24, 40),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (24, 47),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "package",
                          position: (24, 53),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                    position: (24, 33),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (25, 9),
                   },
                  ],
                 },
                 to: Function {
                  argument: Simple {
                   identifier: "haskellPackages",
                  },
                  definition: List {
                   elements: [],
                   position: (25, 36),
                  },
                  position: (25, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (26, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (26, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "haskellPackages: []",
                      position: (26, 42),
                     },
                    ],
                    position: (26, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (27, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (27, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "haskellPackages: [\n  haskellPackages.wreq\n  haskellPackages.lens\n]\n",
                      position: (28, 1),
                     },
                    ],
                    position: (27, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (33, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra packages available to ghc when running ihaskell. The\nvalue must be a function which receives the attrset defined\nin <varname>haskellPackages</varname> as the sole argument.\n",
                    position: (34, 1),
                   },
                  ],
                  position: (33, 23),
                 },
                },
               ],
               recursive: false,
               position: (23, 32),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (16, 25),
         },
        },
       ],
       recursive: false,
       position: (15, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (42, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (42, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (42, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (42, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (44, 5),
             },
             Raw {
              content: "users",
              position: (44, 11),
             },
             Raw {
              content: "ihaskell",
              position: (44, 17),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (45, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (45, 15),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "users",
                  position: (45, 22),
                 },
                 Raw {
                  content: "groups",
                  position: (45, 28),
                 },
                 Raw {
                  content: "ihaskell",
                  position: (45, 35),
                 },
                 Raw {
                  content: "name",
                  position: (45, 44),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (46, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "IHaskell user",
                 position: (46, 22),
                },
               ],
               position: (46, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "home",
                 position: (47, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/var/lib/ihaskell",
                 position: (47, 15),
                },
               ],
               position: (47, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "createHome",
                 position: (48, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (48, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "uid",
                 position: (49, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (49, 13),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "ids",
                  position: (49, 20),
                 },
                 Raw {
                  content: "uids",
                  position: (49, 24),
                 },
                 Raw {
                  content: "ihaskell",
                  position: (49, 29),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (44, 28),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (52, 5),
             },
             Raw {
              content: "groups",
              position: (52, 11),
             },
             Raw {
              content: "ihaskell",
              position: (52, 18),
             },
             Raw {
              content: "gid",
              position: (52, 27),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "config",
             position: (52, 33),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "ids",
               position: (52, 40),
              },
              Raw {
               content: "gids",
               position: (52, 44),
              },
              Raw {
               content: "ihaskell",
               position: (52, 49),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (54, 5),
             },
             Raw {
              content: "services",
              position: (54, 13),
             },
             Raw {
              content: "ihaskell",
              position: (54, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (55, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "IHaskell notebook instance",
                 position: (55, 22),
                },
               ],
               position: (55, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (56, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (56, 21),
                  },
                 ],
                 position: (56, 20),
                },
               ],
               position: (56, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (57, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (57, 18),
                  },
                 ],
                 position: (57, 17),
                },
               ],
               position: (57, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (58, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (59, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "users",
                     position: (59, 23),
                    },
                    Raw {
                     content: "users",
                     position: (59, 29),
                    },
                    Raw {
                     content: "ihaskell",
                     position: (59, 35),
                    },
                    Raw {
                     content: "name",
                     position: (59, 44),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Group",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (60, 17),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "users",
                     position: (60, 24),
                    },
                    Raw {
                     content: "groups",
                     position: (60, 30),
                    },
                    Raw {
                     content: "ihaskell",
                     position: (60, 37),
                    },
                    Raw {
                     content: "name",
                     position: (60, 46),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (61, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "runtimeShell",
                        position: (61, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " -c \"cd $HOME;",
                    position: (61, 42),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "ihaskell",
                     position: (61, 59),
                    },
                   },
                   Raw {
                    content: "/bin/ihaskell-notebook\"",
                    position: (61, 68),
                   },
                  ],
                  position: (61, 21),
                 },
                },
               ],
               recursive: false,
               position: (58, 23),
              },
             },
            ],
            recursive: false,
            position: (54, 33),
           },
          },
         ],
         recursive: false,
         position: (42, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (14, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}