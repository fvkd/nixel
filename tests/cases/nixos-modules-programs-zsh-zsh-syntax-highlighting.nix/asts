---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "zsh",
         position: (6, 25),
        },
        Raw {
         content: "syntaxHighlighting",
         position: (6, 29),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (9, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (10, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (10, 30),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (10, 41),
            },
            String {
             parts: [
              Raw {
               content: "enableSyntaxHighlighting",
              },
             ],
             position: (10, 47),
            },
           ],
           position: (10, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (10, 78),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (10, 89),
            },
            String {
             parts: [
              Raw {
               content: "syntaxHighlighting",
              },
             ],
             position: (10, 95),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (10, 116),
            },
           ],
           position: (10, 76),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (11, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (11, 30),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (11, 41),
            },
            String {
             parts: [
              Raw {
               content: "syntax-highlighting",
              },
             ],
             position: (11, 47),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (11, 69),
            },
           ],
           position: (11, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (11, 82),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (11, 93),
            },
            String {
             parts: [
              Raw {
               content: "syntaxHighlighting",
              },
             ],
             position: (11, 99),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (11, 120),
            },
           ],
           position: (11, 80),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (12, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (12, 30),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (12, 41),
            },
            String {
             parts: [
              Raw {
               content: "syntax-highlighting",
              },
             ],
             position: (12, 47),
            },
            String {
             parts: [
              Raw {
               content: "highlighters",
              },
             ],
             position: (12, 69),
            },
           ],
           position: (12, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (12, 88),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (12, 99),
            },
            String {
             parts: [
              Raw {
               content: "syntaxHighlighting",
              },
             ],
             position: (12, 105),
            },
            String {
             parts: [
              Raw {
               content: "highlighters",
              },
             ],
             position: (12, 126),
            },
           ],
           position: (12, 86),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (13, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (13, 30),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (13, 41),
            },
            String {
             parts: [
              Raw {
               content: "syntax-highlighting",
              },
             ],
             position: (13, 47),
            },
            String {
             parts: [
              Raw {
               content: "patterns",
              },
             ],
             position: (13, 69),
            },
           ],
           position: (13, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (13, 84),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
              },
             ],
             position: (13, 95),
            },
            String {
             parts: [
              Raw {
               content: "syntaxHighlighting",
              },
             ],
             position: (13, 101),
            },
            String {
             parts: [
              Raw {
               content: "patterns",
              },
             ],
             position: (13, 122),
            },
           ],
           position: (13, 82),
          },
         ],
        },
       ],
       position: (9, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (16, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (17, 5),
           },
           Raw {
            content: "zsh",
            position: (17, 14),
           },
           Raw {
            content: "syntaxHighlighting",
            position: (17, 18),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (18, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (18, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "zsh-syntax-highlighting",
                },
               ],
               position: (18, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "highlighters",
               position: (20, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (20, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (21, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "main",
                     },
                    ],
                    position: (21, 21),
                   },
                  ],
                  position: (21, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (24, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (24, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (24, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "enum",
                        position: (24, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "main",
                         },
                        ],
                        position: (25, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "brackets",
                         },
                        ],
                        position: (26, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "pattern",
                         },
                        ],
                        position: (27, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "cursor",
                         },
                        ],
                        position: (28, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "root",
                         },
                        ],
                        position: (29, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "line",
                         },
                        ],
                        position: (30, 11),
                       },
                      ],
                      position: (24, 40),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (33, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies the highlighters to be used by zsh-syntax-highlighting.\n\nThe following defined options can be found here:\nhttps://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md\n",
                   },
                  ],
                  position: (33, 23),
                 },
                ),
               ],
               recursive: false,
               position: (20, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "patterns",
               position: (41, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (41, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (42, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (42, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (43, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (43, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (43, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (43, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (43, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (45, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (45, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  \"rm -rf *\" = \"fg=white,bold,bg=red\";\n}\n",
                     },
                    ],
                    position: (45, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (51, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies custom patterns to be highlighted by zsh-syntax-highlighting.\n\nPlease refer to the docs for more information about the usage:\nhttps://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/pattern.md\n",
                   },
                  ],
                  position: (51, 23),
                 },
                ),
               ],
               recursive: false,
               position: (41, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "styles",
               position: (58, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (58, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (59, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (59, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (60, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (60, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (60, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (60, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (60, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (62, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (62, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  \"alias\" = \"fg=magenta,bold\";\n}\n",
                     },
                    ],
                    position: (62, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (68, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Specifies custom styles to be highlighted by zsh-syntax-highlighting.\n\nPlease refer to the docs for more information about the usage:\nhttps://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md\n",
                   },
                  ],
                  position: (68, 23),
                 },
                ),
               ],
               recursive: false,
               position: (58, 25),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (17, 39),
         },
        ),
       ],
       recursive: false,
       position: (16, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (78, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (78, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (78, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (78, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (79, 5),
             },
             Raw {
              content: "systemPackages",
              position: (79, 17),
             },
            ],
           },
           With {
            expression: Variable {
             identifier: "pkgs",
             position: (79, 39),
            },
            target: List {
             elements: [
              Variable {
               identifier: "zsh-syntax-highlighting",
               position: (79, 47),
              },
             ],
             position: (79, 45),
            },
            position: (79, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (81, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (83, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: GreaterThan,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "length",
                      position: (83, 21),
                     },
                     arguments: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "attrNames",
                        position: (83, 28),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (83, 38),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "patterns",
                            position: (83, 42),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     ],
                    },
                    Int {
                     value: 0,
                     position: (83, 54),
                    },
                   ],
                   position: (83, 52),
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "elem",
                    position: (83, 59),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "pattern",
                      },
                     ],
                     position: (83, 64),
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (83, 74),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "highlighters",
                        position: (83, 78),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ],
                 position: (83, 56),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (84, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "When highlighting patterns, \"pattern\" needs to be included in the list of highlighters.\n",
                  },
                 ],
                 position: (84, 19),
                },
               ),
              ],
              recursive: false,
              position: (82, 7),
             },
            ],
            position: (81, 18),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "programs",
              position: (90, 5),
             },
             Raw {
              content: "zsh",
              position: (90, 14),
             },
             Raw {
              content: "interactiveShellInit",
              position: (90, 18),
             },
            ],
           },
           With {
            expression: Variable {
             identifier: "pkgs",
             position: (90, 46),
            },
            target: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (91, 7),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "mkAfter",
                 position: (91, 11),
                },
               ],
              },
              default: None,
             },
             arguments: [
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (91, 20),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "concatStringsSep",
                   position: (91, 24),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\n",
                  },
                 ],
                 position: (91, 41),
                },
                BinaryOperation {
                 operator: Concatenation,
                 operands: [
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "source ",
                      },
                      Expression {
                       expression: Variable {
                        identifier: "zsh-syntax-highlighting",
                        position: (92, 19),
                       },
                      },
                      Raw {
                       content: "/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh",
                      },
                     ],
                     position: (92, 9),
                    },
                   ],
                   position: (91, 47),
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "optional",
                      position: (93, 12),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: GreaterThan,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "length",
                          position: (93, 22),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (93, 29),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "highlighters",
                              position: (93, 33),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                        Int {
                         value: 0,
                         position: (93, 49),
                        },
                       ],
                       position: (93, 47),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "ZSH_HIGHLIGHT_HIGHLIGHTERS=(",
                        },
                        Expression {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "concatStringsSep",
                           position: (94, 40),
                          },
                          arguments: [
                           String {
                            parts: [
                             Raw {
                              content: " ",
                             },
                            ],
                            position: (94, 57),
                           },
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (94, 61),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "highlighters",
                               position: (94, 65),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                         },
                        },
                        Raw {
                         content: ")",
                        },
                       ],
                       position: (94, 9),
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionals",
                        position: (95, 12),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: GreaterThan,
                         operands: [
                          FunctionApplication {
                           function: Variable {
                            identifier: "length",
                            position: (95, 23),
                           },
                           arguments: [
                            FunctionApplication {
                             function: Variable {
                              identifier: "attrNames",
                              position: (95, 30),
                             },
                             arguments: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "cfg",
                                position: (95, 40),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "patterns",
                                  position: (95, 44),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                            },
                           ],
                          },
                          Int {
                           value: 0,
                           position: (95, 56),
                          },
                         ],
                         position: (95, 54),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "mapAttrsToList",
                          position: (96, 12),
                         },
                         arguments: [
                          Function {
                           argument: Some(
                            "pattern",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: Function {
                            argument: Some(
                             "design",
                            ),
                            arguments: FunctionArguments {
                             arguments: [],
                             ellipsis: false,
                            },
                            definition: String {
                             parts: [
                              Raw {
                               content: "ZSH_HIGHLIGHT_PATTERNS+=('",
                              },
                              Expression {
                               expression: Variable {
                                identifier: "pattern",
                                position: (98, 42),
                               },
                              },
                              Raw {
                               content: "' '",
                              },
                              Expression {
                               expression: Variable {
                                identifier: "design",
                                position: (98, 55),
                               },
                              },
                              Raw {
                               content: "')",
                              },
                             ],
                             position: (98, 13),
                            },
                            position: (97, 22),
                           },
                           position: (97, 13),
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (99, 13),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "patterns",
                              position: (99, 17),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionals",
                        position: (100, 12),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: GreaterThan,
                         operands: [
                          FunctionApplication {
                           function: Variable {
                            identifier: "length",
                            position: (100, 23),
                           },
                           arguments: [
                            FunctionApplication {
                             function: Variable {
                              identifier: "attrNames",
                              position: (100, 30),
                             },
                             arguments: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "cfg",
                                position: (100, 40),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "styles",
                                  position: (100, 44),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                            },
                           ],
                          },
                          Int {
                           value: 0,
                           position: (100, 54),
                          },
                         ],
                         position: (100, 52),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "mapAttrsToList",
                          position: (101, 12),
                         },
                         arguments: [
                          Function {
                           argument: Some(
                            "styles",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: Function {
                            argument: Some(
                             "design",
                            ),
                            arguments: FunctionArguments {
                             arguments: [],
                             ellipsis: false,
                            },
                            definition: String {
                             parts: [
                              Raw {
                               content: "ZSH_HIGHLIGHT_STYLES[",
                              },
                              Expression {
                               expression: Variable {
                                identifier: "styles",
                                position: (103, 37),
                               },
                              },
                              Raw {
                               content: "]='",
                              },
                              Expression {
                               expression: Variable {
                                identifier: "design",
                                position: (103, 49),
                               },
                              },
                              Raw {
                               content: "'",
                              },
                             ],
                             position: (103, 13),
                            },
                            position: (102, 21),
                           },
                           position: (102, 13),
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (104, 13),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "styles",
                              position: (104, 17),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       ],
                      },
                     ],
                     position: (100, 9),
                    },
                   ],
                   position: (95, 9),
                  },
                 ],
                 position: (93, 9),
                },
               ],
              },
             ],
            },
            position: (90, 41),
           },
          ),
         ],
         recursive: false,
         position: (78, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (8, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}