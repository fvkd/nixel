---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "i18n",
         position: (5, 16),
        },
        Raw {
         content: "inputMethod",
         position: (5, 21),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "gtk2_cache",
        position: (7, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (7, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "runCommand",
          position: (7, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "gtk2-immodule.cache",
          position: (7, 33),
         },
        ],
        position: (7, 32),
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "preferLocalBuild",
             position: (8, 7),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (8, 26),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "allowSubstitutes",
             position: (9, 7),
            },
           ],
          },
          to: Variable {
           identifier: "false",
           position: (9, 26),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "buildInputs",
             position: (10, 7),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (10, 23),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "gtk2",
                position: (10, 28),
               },
              ],
             },
             default: None,
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (10, 33),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "package",
                position: (10, 37),
               },
              ],
             },
             default: None,
            },
           ],
           position: (10, 21),
          },
         },
        ],
        recursive: false,
        position: (8, 5),
       },
       String {
        parts: [
         Raw {
          content: "mkdir -p $out/etc/gtk-2.0/\nGTK_PATH=",
          position: (13, 1),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (14, 18),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "package",
              position: (14, 22),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/lib/gtk-2.0/ gtk-query-immodules-2.0 > $out/etc/gtk-2.0/immodules.cache\n",
          position: (14, 30),
         },
        ],
        position: (12, 5),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "gtk3_cache",
        position: (17, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (17, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "runCommand",
          position: (17, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "gtk3-immodule.cache",
          position: (17, 33),
         },
        ],
        position: (17, 32),
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "preferLocalBuild",
             position: (18, 7),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (18, 26),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "allowSubstitutes",
             position: (19, 7),
            },
           ],
          },
          to: Variable {
           identifier: "false",
           position: (19, 26),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "buildInputs",
             position: (20, 7),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (20, 23),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "gtk3",
                position: (20, 28),
               },
              ],
             },
             default: None,
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (20, 33),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "package",
                position: (20, 37),
               },
              ],
             },
             default: None,
            },
           ],
           position: (20, 21),
          },
         },
        ],
        recursive: false,
        position: (18, 5),
       },
       String {
        parts: [
         Raw {
          content: "mkdir -p $out/etc/gtk-3.0/\nGTK_PATH=",
          position: (23, 1),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (24, 18),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "package",
              position: (24, 22),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/lib/gtk-3.0/ gtk-query-immodules-3.0 > $out/etc/gtk-3.0/immodules.cache\n",
          position: (24, 30),
         },
        ],
        position: (22, 5),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (29, 3),
        },
        Raw {
         content: "i18n",
         position: (29, 11),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "inputMethod",
            position: (30, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enabled",
               position: (31, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (31, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (32, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (32, 19),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (32, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (32, 33),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "enum",
                         position: (32, 39),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "ibus",
                           position: (32, 47),
                          },
                         ],
                         position: (32, 46),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "fcitx",
                           position: (32, 54),
                          },
                         ],
                         position: (32, 53),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "fcitx5",
                           position: (32, 62),
                          },
                         ],
                         position: (32, 61),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "nabi",
                           position: (32, 71),
                          },
                         ],
                         position: (32, 70),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "uim",
                           position: (32, 78),
                          },
                         ],
                         position: (32, 77),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "hime",
                           position: (32, 84),
                          },
                         ],
                         position: (32, 83),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "kime",
                           position: (32, 91),
                          },
                         ],
                         position: (32, 90),
                        },
                       ],
                       position: (32, 44),
                      },
                     ],
                    },
                    position: (32, 32),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (33, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (33, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (34, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "fcitx",
                    position: (34, 20),
                   },
                  ],
                  position: (34, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Select the enabled input method. Input methods is a software to input symbols that are not available on standard input devices.\n\nInput methods are specially used to input Chinese, Japanese and Korean characters.\n\nCurrently the following input methods are available in NixOS:\n\n<itemizedlist>\n<listitem><para>ibus: The intelligent input bus, extra input engines can be added using <literal>i18n.inputMethod.ibus.engines</literal>.</para></listitem>\n<listitem><para>fcitx: A customizable lightweight input method, extra input engines can be added using <literal>i18n.inputMethod.fcitx.engines</literal>.</para></listitem>\n<listitem><para>fcitx5: The next generation of fcitx, addons (including engines, dictionaries, skins) can be added using <literal>i18n.inputMethod.fcitx5.addons</literal>.</para></listitem>\n<listitem><para>nabi: A Korean input method based on XIM. Nabi doesn't support Qt 5.</para></listitem>\n<listitem><para>uim: The universal input method, is a library with a XIM bridge. uim mainly support Chinese, Japanese and Korean.</para></listitem>\n<listitem><para>hime: An extremely easy-to-use input method framework.</para></listitem>\n<listitem><para>kime: Koream IME.</para></listitem>\n</itemizedlist>\n",
                    position: (36, 1),
                   },
                  ],
                  position: (35, 23),
                 },
                },
               ],
               recursive: false,
               position: (31, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (54, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (54, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (55, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (56, 20),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (56, 26),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (56, 33),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (56, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (57, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The input method method package.\n",
                    position: (59, 1),
                   },
                  ],
                  position: (58, 23),
                 },
                },
               ],
               recursive: false,
               position: (54, 26),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (30, 19),
         },
        },
       ],
       recursive: false,
       position: (29, 18),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (65, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (65, 12),
       },
       arguments: [
        Parentheses {
         expression: BinaryOperation {
          operator: NotEqualTo,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (65, 18),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "enabled",
               position: (65, 22),
              },
             ],
            },
            default: None,
           },
           Variable {
            identifier: "null",
            position: (65, 33),
           },
          ],
          position: (65, 30),
         },
         position: (65, 17),
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (66, 5),
             },
             Raw {
              content: "systemPackages",
              position: (66, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (66, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (66, 40),
                },
               ],
              },
              default: None,
             },
             Variable {
              identifier: "gtk2_cache",
              position: (66, 48),
             },
             Variable {
              identifier: "gtk3_cache",
              position: (66, 59),
             },
            ],
            position: (66, 34),
           },
          },
         ],
         recursive: false,
         position: (65, 39),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (69, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (70, 5),
           },
          ],
         },
         to: With {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (70, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "maintainers",
              position: (70, 28),
             },
            ],
           },
           default: None,
          },
          target: List {
           elements: [
            Variable {
             identifier: "ericsagnes",
             position: (70, 43),
            },
           ],
           position: (70, 41),
          },
          position: (70, 19),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "doc",
            position: (71, 5),
           },
          ],
         },
         to: Path {
          parts: [
           Raw {
            content: "./default.xml",
            position: (71, 11),
           },
          ],
          position: (71, 11),
         },
        },
       ],
       recursive: false,
       position: (69, 10),
      },
     },
    ],
    recursive: false,
    position: (28, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}