---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "system",
         position: (6, 16),
        },
        Raw {
         content: "nixos",
         position: (6, 23),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (11, 3),
        },
        Raw {
         content: "system",
         position: (11, 11),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "nixos",
            position: (13, 5),
           },
           Raw {
            content: "label",
            position: (13, 11),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (13, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (14, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (14, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (14, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (15, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "NixOS version name to be used in the names of generated\noutputs and boot labels.\n\nIf you ever wanted to influence the labels in your GRUB menu,\nthis is the option for you.\n\nThe default is <option>system.nixos.tags</option> separated by\n\"-\" + \"-\" + <envar>NIXOS_LABEL_VERSION</envar> environment\nvariable (defaults to the value of\n<option>system.nixos.version</option>).\n\nCan be overriden by setting <envar>NIXOS_LABEL</envar>.\n\nUseful for not loosing track of configurations built from different\nnixos branches/revisions, e.g.:\n\n<screen>\n#!/bin/sh\ntoday=`date +%Y%m%d`\nbranch=`(cd nixpkgs ; git branch 2>/dev/null | sed -n '/^\\* / { s|^\\* ||; p; }')`\nrevision=`(cd nixpkgs ; git rev-parse HEAD)`\nexport NIXOS_LABEL_VERSION=\"$today.$branch-",
                 position: (16, 1),
                },
                Raw {
                 content: "$",
                 position: (37, 52),
                },
                Raw {
                 content: "{revision:0:7}\"\nnixos-rebuild switch</screen>\n",
                 position: (37, 55),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (13, 28),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "nixos",
            position: (42, 5),
           },
           Raw {
            content: "tags",
            position: (42, 11),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (42, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (43, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (43, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (43, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (43, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (43, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (44, 7),
                },
               ],
              },
              List {
               elements: [],
               position: (44, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (45, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "with-xen",
                   position: (45, 20),
                  },
                 ],
                },
               ],
               position: (45, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (46, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Strings to prefix to the default\n<option>system.nixos.label</option>.\n\nUseful for not loosing track of configurations built with\ndifferent options, e.g.:\n\n<screen>\n{\n  system.nixos.tags = [ \"with-xen\" ];\n  virtualisation.xen.enable = true;\n}\n</screen>\n",
                 position: (47, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (42, 27),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (11, 20),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (64, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "system",
            position: (67, 5),
           },
           Raw {
            content: "nixos",
            position: (67, 12),
           },
           Raw {
            content: "label",
            position: (67, 18),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkDefault",
           position: (67, 26),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "maybeEnv",
             position: (67, 37),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "NIXOS_LABEL",
                position: (67, 47),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (68, 47),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "-",
                  position: (68, 65),
                 },
                ],
               },
               BinaryOperation {
                operator: Concatenation,
                operands: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "sort",
                   position: (68, 70),
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "x",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: Function {
                     argument: Some(
                      "y",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: BinaryOperation {
                      operator: LessThan,
                      operands: [
                       Variable {
                        identifier: "x",
                        position: (68, 82),
                       },
                       Variable {
                        identifier: "y",
                        position: (68, 86),
                       },
                      ],
                      position: (68, 84),
                     },
                     position: (68, 79),
                    },
                    position: (68, 76),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (68, 89),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "tags",
                       position: (68, 93),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                 List {
                  elements: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "maybeEnv",
                     position: (69, 53),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "NIXOS_LABEL_VERSION",
                        position: (69, 63),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (69, 84),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "version",
                         position: (69, 88),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                  position: (69, 50),
                 },
                ],
                position: (69, 47),
               },
              ],
             },
            ],
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (64, 12),
      },
     ),
    ],
    recursive: false,
    position: (9, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}