---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "stdenv" (1, 3)
        , := lexemes ","
          , "," (1, 9)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "appleDerivation" (1, 11)
          , := lexemes ","
            , "," (1, 26)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "lib" (1, 28)
            , := lexemes ","
              , "," (2, 1)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "libutil" (2, 3)
              , := lexemes ","
                , "," (2, 10)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "Librpcsvc" (2, 12)
                , := lexemes ","
                  , "," (2, 21)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "apple_sdk" (2, 23)
                  , := lexemes ","
                    , "," (2, 32)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "pam" (2, 34)
                    , := lexemes ","
                      , "," (2, 37)
                    formals := rules "formal" "," "formals"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "CF" (2, 39)
                      , := lexemes ","
                        , "," (2, 41)
                      formals := rules "formal"
                        formal := rules "ID"
                          ID := lexemes "ID"
                            ID "openbsm" (2, 43)
      } := lexemes "}"
        } "}" (2, 51)
      : := lexemes ":"
        : ":" (2, 52)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "appleDerivation" (4, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "{" "binds" "}"
                  { := lexemes "{"
                    { "{" (4, 17)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules 
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "buildInputs" (10, 3)
                              = := lexemes "="
                                = "=" (10, 15)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "[" "expr_list" "]"
                                            [ := lexemes "["
                                              [ "[" (10, 17)
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules "expr_list" "expr_select"
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "libutil" (10, 19)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "Librpcsvc" (10, 27)
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "apple_sdk" (10, 37)
                                                        . := lexemes "."
                                                          . "." (10, 46)
                                                        attrpath := rules "attrpath" "." "attr"
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "frameworks" (10, 47)
                                                          . := lexemes "."
                                                            . "." (10, 57)
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "OpenDirectory" (10, 58)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "pam" (10, 72)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "CF" (10, 76)
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "apple_sdk" (11, 19)
                                                  . := lexemes "."
                                                    . "." (11, 28)
                                                  attrpath := rules "attrpath" "." "attr"
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "frameworks" (11, 29)
                                                    . := lexemes "."
                                                      . "." (11, 39)
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "IOKit" (11, 40)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "openbsm" (11, 46)
                                            ] := lexemes "]"
                                              ] "]" (11, 54)
                              ; := lexemes ";"
                                ; ";" (11, 55)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "NIX_CFLAGS_COMPILE" (15, 3)
                            = := lexemes "="
                              = "=" (15, 22)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_op" "CONCAT" "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "[" "expr_list" "]"
                                            [ := lexemes "["
                                              [ "[" (15, 24)
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules "expr_list" "expr_select"
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules "expr_list" "expr_select"
                                                            expr_list := rules "expr_list" "expr_select"
                                                              expr_list := rules "expr_list" "expr_select"
                                                                expr_list := rules "expr_list" "expr_select"
                                                                  expr_list := rules "expr_list" "expr_select"
                                                                    expr_list := rules "expr_list" "expr_select"
                                                                      expr_list := rules "expr_list" "expr_select"
                                                                        expr_list := rules "expr_list" "expr_select"
                                                                          expr_list := rules "expr_list" "expr_select"
                                                                            expr_list := rules 
                                                                            expr_select := rules "expr_simple"
                                                                              expr_simple := rules "\"" "string_parts" "\""
                                                                                " := lexemes "\""
                                                                                  " "\"" (15, 26)
                                                                                string_parts := rules "STR"
                                                                                  STR := lexemes "STR"
                                                                                    STR "-DDAEMON_UID=1" (15, 27)
                                                                                " := lexemes "\""
                                                                                  " "\"" (15, 41)
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "\"" "string_parts" "\""
                                                                              " := lexemes "\""
                                                                                " "\"" (16, 26)
                                                                              string_parts := rules "STR"
                                                                                STR := lexemes "STR"
                                                                                  STR "-DDAEMON_GID=1" (16, 27)
                                                                              " := lexemes "\""
                                                                                " "\"" (16, 41)
                                                                        expr_select := rules "expr_simple"
                                                                          expr_simple := rules "\"" "string_parts" "\""
                                                                            " := lexemes "\""
                                                                              " "\"" (17, 26)
                                                                            string_parts := rules "STR"
                                                                              STR := lexemes "STR"
                                                                                STR "-DDEFAULT_AT_QUEUE='a'" (17, 27)
                                                                            " := lexemes "\""
                                                                              " "\"" (17, 49)
                                                                      expr_select := rules "expr_simple"
                                                                        expr_simple := rules "\"" "string_parts" "\""
                                                                          " := lexemes "\""
                                                                            " "\"" (18, 26)
                                                                          string_parts := rules "STR"
                                                                            STR := lexemes "STR"
                                                                              STR "-DDEFAULT_BATCH_QUEUE='b'" (18, 27)
                                                                          " := lexemes "\""
                                                                            " "\"" (18, 52)
                                                                    expr_select := rules "expr_simple"
                                                                      expr_simple := rules "\"" "string_parts" "\""
                                                                        " := lexemes "\""
                                                                          " "\"" (19, 26)
                                                                        string_parts := rules "STR"
                                                                          STR := lexemes "STR"
                                                                            STR "-DPERM_PATH=\"/usr/lib/cron/\"" (19, 27)
                                                                        " := lexemes "\""
                                                                          " "\"" (19, 57)
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "\"" "string_parts" "\""
                                                                      " := lexemes "\""
                                                                        " "\"" (20, 26)
                                                                      string_parts := rules "STR"
                                                                        STR := lexemes "STR"
                                                                          STR "-DOPEN_DIRECTORY" (20, 27)
                                                                      " := lexemes "\""
                                                                        " "\"" (20, 43)
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "\"" "string_parts" "\""
                                                                    " := lexemes "\""
                                                                      " "\"" (21, 26)
                                                                    string_parts := rules "STR"
                                                                      STR := lexemes "STR"
                                                                        STR "-DNO_DIRECT_RPC" (21, 27)
                                                                    " := lexemes "\""
                                                                      " "\"" (21, 42)
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (22, 26)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR "-DAPPLE_GETCONF_UNDERSCORE" (22, 27)
                                                                  " := lexemes "\""
                                                                    " "\"" (22, 53)
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "\"" "string_parts" "\""
                                                                " := lexemes "\""
                                                                  " "\"" (23, 26)
                                                                string_parts := rules "STR"
                                                                  STR := lexemes "STR"
                                                                    STR "-DAPPLE_GETCONF_SPEC" (23, 27)
                                                                " := lexemes "\""
                                                                  " "\"" (23, 47)
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (24, 26)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "-DUSE_PAM" (24, 27)
                                                              " := lexemes "\""
                                                                " "\"" (24, 36)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (25, 26)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "-DUSE_BSM_AUDIT" (25, 27)
                                                            " := lexemes "\""
                                                              " "\"" (25, 42)
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (26, 26)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "-D_PW_NAME_LEN=MAXLOGNAME" (26, 27)
                                                          " := lexemes "\""
                                                            " "\"" (26, 52)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (27, 26)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "-D_PW_YPTOKEN=\"__YP!\"" (27, 27)
                                                        " := lexemes "\""
                                                          " "\"" (27, 50)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "\"" "string_parts" "\""
                                                      " := lexemes "\""
                                                        " "\"" (28, 26)
                                                      string_parts := rules "STR"
                                                        STR := lexemes "STR"
                                                          STR "-DAHZV1=64 " (28, 27)
                                                      " := lexemes "\""
                                                        " "\"" (28, 38)
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (29, 26)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "-DAU_SESSION_FLAG_HAS_TTY=0x4000" (29, 27)
                                                    " := lexemes "\""
                                                      " "\"" (29, 59)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (30, 26)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "-DAU_SESSION_FLAG_HAS_AUTHENTICATED=0x4000" (30, 27)
                                                  " := lexemes "\""
                                                    " "\"" (30, 69)
                                            ] := lexemes "]"
                                              ] "]" (31, 24)
                                    CONCAT := lexemes "CONCAT"
                                      CONCAT "++" (31, 26)
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_app" "expr_select"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple" "." "attrpath"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "lib" (31, 29)
                                              . := lexemes "."
                                                . "." (31, 32)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "optional" (31, 33)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "(" "expr" ")"
                                              ( := lexemes "("
                                                ( "(" (31, 42)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "NOT" "expr_op"
                                                      NOT := lexemes "!"
                                                        ! "!" (31, 43)
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "stdenv" (31, 44)
                                                            . := lexemes "."
                                                              . "." (31, 50)
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "isLinux" (31, 51)
                                              ) := lexemes ")"
                                                ) ")" (31, 58)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (31, 60)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR " -D__FreeBSD__ " (31, 61)
                                            " := lexemes "\""
                                              " "\"" (31, 76)
                            ; := lexemes ";"
                              ; ";" (31, 77)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "patchPhase" (33, 3)
                          = := lexemes "="
                            = "=" (33, 14)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_op" "+" "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                          IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                            IND_STRING_OPEN "''\n" (33, 16)
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules 
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "    substituteInPlace login.tproj/login.c \\\n      --replace bsm/audit_session.h bsm/audit.h\n    substituteInPlace login.tproj/login_audit.c \\\n      --replace bsm/audit_session.h bsm/audit.h\n  " (34, 1)
                                          IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                            IND_STRING_CLOSE "''" (38, 3)
                                  + := lexemes "+"
                                    + "+" (38, 6)
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "lib" (38, 8)
                                            . := lexemes "."
                                              . "." (38, 11)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "optionalString" (38, 12)
                                        expr_select := rules "expr_simple" "." "attrpath"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "stdenv" (38, 27)
                                          . := lexemes "."
                                            . "." (38, 33)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "isAarch64" (38, 34)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                          IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                            IND_STRING_OPEN "''\n" (38, 44)
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules 
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "    substituteInPlace sysctl.tproj/sysctl.c \\\n      --replace \"GPROF_STATE\" \"0\"\n    substituteInPlace login.tproj/login.c \\\n      --replace \"defined(__arm__)\" \"defined(__arm__) || defined(__arm64__)\"\n  " (39, 1)
                                          IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                            IND_STRING_CLOSE "''" (43, 3)
                          ; := lexemes ";"
                            ; ";" (43, 5)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "buildPhase" (45, 3)
                        = := lexemes "="
                          = "=" (45, 14)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (45, 16)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                  ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                    ind_string_parts := rules 
                                                    IND_STR := lexemes "IND_STR"
                                                      IND_STR "    for dir in *.tproj; do\n      name=$(basename $dir)\n      name=" (46, 1)
                                                  IND_STR := lexemes "IND_STR"
                                                    IND_STR "$" (48, 12)
                                                IND_STR := lexemes "IND_STR"
                                                  IND_STR "{name%.tproj}\n\n      CFLAGS=\"\"\n      case $name in\n           arch) CFLAGS=\"-framework CoreFoundation\";;\n           atrun) CFLAGS=\"-Iat.tproj\";;\n           chkpasswd)\n             CFLAGS=\"-framework OpenDirectory -framework CoreFoundation -lpam\";;\n           getconf)\n               for f in getconf.tproj/*.gperf; do\n                   cfile=" (48, 15)
                                              IND_STR := lexemes "IND_STR"
                                                IND_STR "$" (58, 26)
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "{f%.gperf}.c\n                   LC_ALL=C awk -f getconf.tproj/fake-gperf.awk $f > $cfile\n               done\n           ;;\n           iostat) CFLAGS=\"-framework IOKit -framework CoreFoundation\";;\n           login) CFLAGS=\"-lbsm -lpam\";;\n           nvram) CFLAGS=\"-framework CoreFoundation -framework IOKit\";;\n           sadc) CFLAGS=\"-framework IOKit -framework CoreFoundation\";;\n           sar) CFLAGS=\"-Isadc.tproj\";;\n      esac\n\n      echo \"Building $name\"\n\n      case $name in\n\n           # These are all broken currently.\n           arch) continue;;\n           chpass) continue;;\n           dirhelper) continue;;\n           dynamic_pager) continue;;\n           fs_usage) continue;;\n           latency) continue;;\n           pagesize) continue;;\n           passwd) continue;;\n           reboot) continue;;\n           sc_usage) continue;;\n           shutdown) continue;;\n           trace) continue;;\n\n           *) cc $dir/*.c -I" (58, 29)
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "$" (87, 29)
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "{dir} $CFLAGS -o $name ;;\n      esac\n    done\n  " (87, 32)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (90, 3)
                        ; := lexemes ";"
                          ; ";" (90, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "installPhase" (92, 3)
                      = := lexemes "="
                        = "=" (92, 16)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (92, 18)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules 
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "    for dir in *.tproj; do\n      name=$(basename $dir)\n      name=" (93, 1)
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "$" (95, 12)
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "{name%.tproj}\n      [ -x $name ] && install -D $name $out/bin/$name\n      for n in 1 2 3 4 5 6 7 8 9; do\n        for f in $dir/*.$n; do\n          install -D $f $out/share/man/man$n/$(basename $f)\n        done\n      done\n    done\n  " (95, 15)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (103, 3)
                      ; := lexemes ";"
                        ; ";" (103, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (105, 3)
                    = := lexemes "="
                      = "=" (105, 8)
                    expr := rules "expr_function"
                      expr_function := rules "expr_if"
                        expr_if := rules "expr_op"
                          expr_op := rules "expr_app"
                            expr_app := rules "expr_select"
                              expr_select := rules "expr_simple"
                                expr_simple := rules "{" "binds" "}"
                                  { := lexemes "{"
                                    { "{" (105, 10)
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules 
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "platforms" (106, 5)
                                      = := lexemes "="
                                        = "=" (106, 15)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "lib" (106, 17)
                                                  . := lexemes "."
                                                    . "." (106, 20)
                                                  attrpath := rules "attrpath" "." "attr"
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "platforms" (106, 21)
                                                    . := lexemes "."
                                                      . "." (106, 30)
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "darwin" (106, 31)
                                      ; := lexemes ";"
                                        ; ";" (106, 37)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "maintainers" (107, 5)
                                    = := lexemes "="
                                      = "=" (107, 17)
                                    expr := rules "expr_function"
                                      expr_function := rules "WITH" "expr" ";" "expr_function"
                                        WITH := lexemes "WITH"
                                          WITH "with" (107, 19)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "lib" (107, 24)
                                                    . := lexemes "."
                                                      . "." (107, 27)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (107, 28)
                                        ; := lexemes ";"
                                          ; ";" (107, 39)
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "[" "expr_list" "]"
                                                    [ := lexemes "["
                                                      [ "[" (107, 41)
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "shlevy" (107, 43)
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "matthewbauer" (107, 50)
                                                    ] := lexemes "]"
                                                      ] "]" (107, 63)
                                    ; := lexemes ";"
                                      ; ";" (107, 64)
                                  } := lexemes "}"
                                    } "}" (108, 3)
                    ; := lexemes ";"
                      ; ";" (108, 4)
                  } := lexemes "}"
                    } "}" (109, 1)