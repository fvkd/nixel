---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (8, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (11, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (11, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (11, 16),
        },
        Raw {
         content: "ssmtp",
         position: (11, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (16, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (17, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (17, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (17, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "directDelivery",
               position: (17, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (17, 85),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (17, 96),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (17, 104),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (18, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (18, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (18, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "hostName",
               position: (18, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (18, 79),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (18, 90),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "hostName",
               position: (18, 98),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (19, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (19, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (19, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "domain",
               position: (19, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (19, 77),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (19, 88),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "domain",
               position: (19, 96),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (20, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (20, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (20, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "root",
               position: (20, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (20, 75),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (20, 86),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "root",
               position: (20, 94),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (21, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (21, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (21, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "useTLS",
               position: (21, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (21, 77),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (21, 88),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "useTLS",
               position: (21, 96),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (22, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (22, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (22, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "useSTARTTLS",
               position: (22, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (22, 82),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (22, 93),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "useSTARTTLS",
               position: (22, 101),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (23, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (23, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (23, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "authUser",
               position: (23, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (23, 79),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (23, 90),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "authUser",
               position: (23, 98),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (24, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (24, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (24, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "authPassFile",
               position: (24, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (24, 83),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (24, 94),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "authPassFile",
               position: (24, 102),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (25, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (25, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (25, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "setSendmail",
               position: (25, 64),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (25, 82),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (25, 93),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "setSendmail",
               position: (25, 101),
              },
             ],
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (27, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "networking",
               position: (27, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "defaultMailServer",
               position: (27, 44),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "authPass",
               position: (27, 64),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "authPass has been removed since it leaks the clear-text password into the world-readable store. Use authPassFile instead and make sure it's not a store path",
             position: (27, 77),
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (28, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (28, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ssmtp",
               position: (28, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "authPass",
               position: (28, 50),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "authPass has been removed since it leaks the clear-text password into the world-readable store. Use authPassFile instead and make sure it's not a store path",
             position: (28, 63),
            },
           ],
          },
         ],
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (31, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (33, 5),
           },
           Raw {
            content: "ssmtp",
            position: (33, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (35, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (35, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (36, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (36, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (36, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (37, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (37, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (38, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Use the trivial Mail Transfer Agent (MTA)\n<command>ssmtp</command> package to allow programs to send\ne-mail.  If you don't want to run a “real” MTA like\n<command>sendmail</command> or <command>postfix</command> on\nyour machine, set this option to <literal>true</literal>, and\nset the option\n<option>services.ssmtp.hostName</option> to the\nhost name of your preferred mail server.\n",
                    position: (39, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "settings",
               position: (50, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (51, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (51, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (51, 28),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "oneOf",
                      position: (51, 37),
                     },
                     arguments: [
                      List {
                       elements: [
                        Variable {
                         identifier: "bool",
                         position: (51, 45),
                        },
                        Variable {
                         identifier: "str",
                         position: (51, 50),
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                  position: (51, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (52, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (53, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "<citerefentry><refentrytitle>ssmtp</refentrytitle><manvolnum>5</manvolnum></citerefentry> configuration. Refer\nto <link xlink:href=\"https://linux.die.net/man/5/ssmtp.conf\"/> for details on supported values.\n",
                    position: (54, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (57, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (57, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  Debug = true;\n  FromLineOverride = false;\n}\n",
                      position: (58, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "hostName",
               position: (65, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (65, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (66, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (66, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (66, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (67, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mail.example.org",
                    position: (67, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (68, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The host name of the default mail server to use to deliver\ne-mail. Can also contain a port number (ex: mail.example.org:587),\ndefaults to port 25 if no port is given.\n",
                    position: (69, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "root",
               position: (75, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (75, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (76, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (76, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (77, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (78, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "root@example.org",
                    position: (78, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (79, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The e-mail to which mail for users with UID &lt; 1000 is forwarded.\n",
                    position: (80, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "domain",
               position: (84, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (84, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (85, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (85, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (85, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (86, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (87, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "example.org",
                    position: (87, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (88, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The domain from which mail will appear to be sent.\n",
                    position: (89, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "useTLS",
               position: (93, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (94, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (94, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (94, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (95, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (96, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether TLS should be used to connect to the default mail\nserver.\n",
                    position: (97, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "useSTARTTLS",
               position: (102, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (102, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (103, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (103, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (103, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (104, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (104, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether the STARTTLS should be used to connect to the default\nmail server.  (This is needed for TLS-capable mail servers\nrunning on the default SMTP port 25.)\n",
                    position: (106, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "authUser",
               position: (112, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (112, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (113, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (113, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (113, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (114, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (115, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "foo@example.org",
                    position: (115, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (116, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Username used for SMTP auth. Leave blank to disable.\n",
                    position: (117, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "authPassFile",
               position: (121, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (121, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (122, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (122, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (122, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (122, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (122, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (123, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (123, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (124, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/keys/ssmtp-authpass",
                    position: (124, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (125, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path to a file that contains the password used for SMTP auth. The file\nshould not contain a trailing newline, if the password does not contain one\n(e.g. use <command>echo -n \"password\" > file</command>).\nThis file should be readable by the users that need to execute ssmtp.\n",
                    position: (126, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "setSendmail",
               position: (133, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (133, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (134, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (134, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (134, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (135, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (135, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (136, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to set the system sendmail to ssmtp's.",
                    position: (136, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (144, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (144, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (144, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (144, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (146, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (148, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (148, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "useSTARTTLS",
                      position: (148, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (148, 40),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "useTLS",
                      position: (148, 44),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (148, 37),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (149, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "services.ssmtp.useSTARTTLS has no effect without services.ssmtp.useTLS",
                   position: (149, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (153, 5),
             },
             Raw {
              content: "ssmtp",
              position: (153, 14),
             },
             Raw {
              content: "settings",
              position: (153, 20),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (153, 31),
            },
            arguments: [
             List {
              elements: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "MailHub",
                     position: (155, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (155, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "hostName",
                      position: (155, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "FromLineOverride",
                     position: (156, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (156, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "true",
                     position: (156, 38),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "UseTLS",
                     position: (157, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (157, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "useTLS",
                      position: (157, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "UseSTARTTLS",
                     position: (158, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (158, 23),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "useSTARTTLS",
                      position: (158, 27),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                ],
                recursive: false,
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (160, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (160, 14),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "root",
                       position: (160, 18),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [],
                   },
                  ],
                  position: (160, 23),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "root",
                       position: (160, 32),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (160, 39),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "root",
                        position: (160, 43),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (161, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (161, 14),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "domain",
                       position: (161, 18),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [],
                   },
                  ],
                  position: (161, 25),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "rewriteDomain",
                       position: (161, 34),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (161, 50),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "domain",
                        position: (161, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (162, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (162, 14),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "authUser",
                       position: (162, 18),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [],
                   },
                  ],
                  position: (162, 27),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "AuthUser",
                       position: (162, 36),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (162, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "authUser",
                        position: (162, 51),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (163, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (163, 14),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "authPassFile",
                       position: (163, 18),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (163, 34),
                   },
                  ],
                  position: (163, 31),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "AuthPassFile",
                       position: (163, 42),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (163, 57),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "authPassFile",
                        position: (163, 61),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (167, 5),
             },
             Raw {
              content: "etc",
              position: (167, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "ssmtp/ssmtp.conf",
                 position: (167, 22),
                },
               ],
              },
             },
             Raw {
              content: "text",
              position: (167, 40),
             },
            ],
           },
           With {
            expression: Variable {
             identifier: "generators",
             position: (167, 52),
            },
            target: FunctionApplication {
             function: Variable {
              identifier: "toKeyValue",
              position: (167, 64),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "mkKeyValue",
                    position: (168, 7),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mkKeyValueDefault",
                   position: (168, 20),
                  },
                  arguments: [
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "mkValueString",
                         position: (169, 9),
                        },
                       ],
                      },
                      Function {
                       argument: Some(
                        "value",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: IfThenElse {
                        predicate: BinaryOperation {
                         operator: EqualTo,
                         operands: [
                          Variable {
                           identifier: "value",
                           position: (170, 14),
                          },
                          Variable {
                           identifier: "true",
                           position: (170, 23),
                          },
                         ],
                         position: (170, 20),
                        },
                        then: String {
                         parts: [
                          Raw {
                           content: "YES",
                           position: (170, 34),
                          },
                         ],
                        },
                        else_: IfThenElse {
                         predicate: BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           Variable {
                            identifier: "value",
                            position: (171, 19),
                           },
                           Variable {
                            identifier: "false",
                            position: (171, 28),
                           },
                          ],
                          position: (171, 25),
                         },
                         then: String {
                          parts: [
                           Raw {
                            content: "NO",
                            position: (171, 40),
                           },
                          ],
                         },
                         else_: FunctionApplication {
                          function: Variable {
                           identifier: "mkValueStringDefault",
                           position: (172, 16),
                          },
                          arguments: [
                           Map {
                            bindings: [],
                            recursive: false,
                           },
                           Variable {
                            identifier: "value",
                            position: (172, 40),
                           },
                          ],
                         },
                         position: (171, 16),
                        },
                        position: (170, 11),
                       },
                       position: (169, 25),
                      },
                     ),
                    ],
                    recursive: false,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "=",
                      position: (174, 10),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (175, 7),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "settings",
                  position: (175, 11),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            position: (167, 47),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (177, 5),
             },
             Raw {
              content: "systemPackages",
              position: (177, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (177, 35),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "ssmtp",
                 position: (177, 40),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (179, 5),
             },
             Raw {
              content: "mail",
              position: (179, 14),
             },
             Raw {
              content: "sendmailSetuidWrapper",
              position: (179, 19),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (179, 43),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (179, 48),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "setSendmail",
                 position: (179, 52),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "program",
                   position: (180, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "sendmail",
                   position: (180, 18),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "source",
                   position: (181, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (181, 19),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "ssmtp",
                       position: (181, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/sendmail",
                   position: (181, 30),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "setuid",
                   position: (182, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (182, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "setgid",
                   position: (183, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (183, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "owner",
                   position: (184, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "root",
                   position: (184, 16),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "group",
                   position: (185, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "root",
                   position: (185, 16),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (10, 1),
  },
  position: (8, 1),
 },
 position: (6, 1),
}