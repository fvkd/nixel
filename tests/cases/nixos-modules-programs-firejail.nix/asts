---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "firejail",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "wrappedBins",
        position: (8, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (8, 17),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "runCommand",
          position: (8, 22),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "firejail-wrapped-binaries",
         },
        ],
        position: (8, 33),
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferLocalBuild",
             position: (9, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (9, 26),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "allowSubstitutes",
             position: (10, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (10, 26),
          },
         ),
        ],
        recursive: false,
        position: (9, 5),
       },
       String {
        parts: [
         Raw {
          content: "mkdir -p $out/bin\n",
         },
         Expression {
          expression: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (14, 9),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "concatStringsSep",
               position: (14, 13),
              },
             ],
            },
            default: None,
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
              },
             ],
             position: (14, 30),
            },
            FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (14, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "mapAttrsToList",
                 position: (14, 40),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Function {
               argument: Some(
                "command",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Function {
                argument: Some(
                 "value",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: LetIn {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "opts",
                      position: (16, 9),
                     },
                    ],
                   },
                   IfThenElse {
                    predicate: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "builtins",
                       position: (16, 19),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "isAttrs",
                         position: (16, 28),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "value",
                       position: (16, 36),
                      },
                     ],
                    },
                    then: Variable {
                     identifier: "value",
                     position: (17, 14),
                    },
                    else_: Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "executable",
                          position: (18, 16),
                         },
                        ],
                       },
                       Variable {
                        identifier: "value",
                        position: (18, 29),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "profile",
                          position: (18, 36),
                         },
                        ],
                       },
                       Variable {
                        identifier: "null",
                        position: (18, 46),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "extraArgs",
                          position: (18, 52),
                         },
                        ],
                       },
                       List {
                        elements: [],
                        position: (18, 64),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (18, 14),
                    },
                    position: (16, 16),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "args",
                      position: (19, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "lib",
                      position: (19, 16),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "escapeShellArgs",
                        position: (19, 20),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     BinaryOperation {
                      operator: Concatenation,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "opts",
                         position: (20, 11),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "extraArgs",
                           position: (20, 16),
                          },
                         ],
                        },
                        default: None,
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "optional",
                         position: (21, 15),
                        },
                        arguments: [
                         BinaryOperation {
                          operator: NotEqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "opts",
                             position: (21, 25),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "profile",
                               position: (21, 30),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (21, 41),
                           },
                          ],
                          position: (21, 38),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "--profile=",
                           },
                           Expression {
                            expression: FunctionApplication {
                             function: Variable {
                              identifier: "toString",
                              position: (21, 60),
                             },
                             arguments: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "opts",
                                position: (21, 69),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "profile",
                                  position: (21, 74),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                            },
                           },
                          ],
                          position: (21, 47),
                         },
                        ],
                       },
                      ],
                      position: (21, 11),
                     },
                    ],
                   },
                  ),
                 ],
                 target: String {
                  parts: [
                   Raw {
                    content: "cat <<_EOF >$out/bin/",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "command",
                     position: (25, 32),
                    },
                   },
                   Raw {
                    content: "\n#! ",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (26, 14),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "runtimeShell",
                        position: (26, 19),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " -e\nexec /run/wrappers/bin/firejail ",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "args",
                     position: (27, 43),
                    },
                   },
                   Raw {
                    content: " -- ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (27, 54),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "opts",
                        position: (27, 63),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "executable",
                          position: (27, 68),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \"\\$@\"\n_EOF\nchmod 0755 $out/bin/",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "command",
                     position: (29, 31),
                    },
                   },
                   Raw {
                    content: "\n",
                   },
                  ],
                  position: (24, 7),
                 },
                 position: (15, 7),
                },
                position: (14, 65),
               },
               position: (14, 56),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (30, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "wrappedBinaries",
                  position: (30, 15),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ],
          },
         },
         Raw {
          content: "\n",
         },
        ],
        position: (12, 5),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (34, 3),
        },
        Raw {
         content: "programs",
         position: (34, 11),
        },
        Raw {
         content: "firejail",
         position: (34, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (35, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (35, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "firejail",
             },
            ],
            position: (35, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "wrappedBinaries",
            position: (37, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (37, 23),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (38, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (38, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (38, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (38, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "either",
                     position: (38, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (38, 42),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "path",
                      position: (38, 48),
                     },
                    ],
                   },
                   default: None,
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (38, 54),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "submodule",
                       position: (38, 60),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "options",
                          position: (39, 9),
                         },
                        ],
                       },
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "executable",
                             position: (40, 11),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (40, 24),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (41, 13),
                                 },
                                ],
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "types",
                                 position: (41, 20),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "path",
                                   position: (41, 26),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (42, 13),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Executable to run sandboxed",
                                 },
                                ],
                                position: (42, 27),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "example",
                                  position: (43, 13),
                                 },
                                ],
                               },
                               FunctionApplication {
                                function: Variable {
                                 identifier: "literalExpression",
                                 position: (43, 23),
                                },
                                arguments: [
                                 String {
                                  parts: [
                                   Raw {
                                    content: "\"",
                                   },
                                   Raw {
                                    content: "$",
                                   },
                                   Raw {
                                    content: "{lib.getBin pkgs.firefox}/bin/firefox\"",
                                   },
                                  ],
                                  position: (43, 41),
                                 },
                                ],
                               },
                              ),
                             ],
                             recursive: false,
                             position: (40, 33),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "profile",
                             position: (45, 11),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (45, 21),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (46, 13),
                                 },
                                ],
                               },
                               FunctionApplication {
                                function: PropertyAccess {
                                 expression: Variable {
                                  identifier: "types",
                                  position: (46, 20),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "nullOr",
                                    position: (46, 26),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (46, 33),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "path",
                                     position: (46, 39),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ],
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "default",
                                  position: (47, 13),
                                 },
                                ],
                               },
                               Variable {
                                identifier: "null",
                                position: (47, 23),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (48, 13),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Profile to use",
                                 },
                                ],
                                position: (48, 27),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "example",
                                  position: (49, 13),
                                 },
                                ],
                               },
                               FunctionApplication {
                                function: Variable {
                                 identifier: "literalExpression",
                                 position: (49, 23),
                                },
                                arguments: [
                                 String {
                                  parts: [
                                   Raw {
                                    content: "\"",
                                   },
                                   Raw {
                                    content: "$",
                                   },
                                   Raw {
                                    content: "{pkgs.firejail}/etc/firejail/firefox.profile\"",
                                   },
                                  ],
                                  position: (49, 41),
                                 },
                                ],
                               },
                              ),
                             ],
                             recursive: false,
                             position: (45, 30),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "extraArgs",
                             position: (51, 11),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (51, 23),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (52, 13),
                                 },
                                ],
                               },
                               FunctionApplication {
                                function: PropertyAccess {
                                 expression: Variable {
                                  identifier: "types",
                                  position: (52, 20),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "listOf",
                                    position: (52, 26),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (52, 33),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "str",
                                     position: (52, 39),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ],
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "default",
                                  position: (53, 13),
                                 },
                                ],
                               },
                               List {
                                elements: [],
                                position: (53, 23),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (54, 13),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Extra arguments to pass to firejail",
                                 },
                                ],
                                position: (54, 27),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "example",
                                  position: (55, 13),
                                 },
                                ],
                               },
                               List {
                                elements: [
                                 String {
                                  parts: [
                                   Raw {
                                    content: "--private=~/.firejail_home",
                                   },
                                  ],
                                  position: (55, 25),
                                 },
                                ],
                                position: (55, 23),
                               },
                              ),
                             ],
                             recursive: false,
                             position: (51, 32),
                            },
                           ],
                          },
                         ),
                        ],
                        recursive: false,
                        position: (39, 19),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (38, 70),
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (59, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (59, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (60, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (60, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  firefox = {\n    executable = \"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{lib.getBin pkgs.firefox}/bin/firefox\";\n    profile = \"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{pkgs.firejail}/etc/firejail/firefox.profile\";\n  };\n  mpv = {\n    executable = \"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{lib.getBin pkgs.mpv}/bin/mpv\";\n    profile = \"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{pkgs.firejail}/etc/firejail/mpv.profile\";\n  };\n}\n",
                  },
                 ],
                 position: (60, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (72, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Wrap the binaries in firejail and place them in the global path.\n</para>\n<para>\nYou will get file collisions if you put the actual application binary in\nthe global environment (such as by adding the application package to\n<code>environment.systemPackages</code>), and applications started via\n.desktop files are not wrapped if they specify the absolute path to the\nbinary.\n",
                },
               ],
               position: (72, 21),
              },
             ),
            ],
            recursive: false,
            position: (37, 32),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (34, 31),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (85, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (85, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (85, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (85, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (86, 5),
             },
             Raw {
              content: "wrappers",
              position: (86, 14),
             },
             Raw {
              content: "firejail",
              position: (86, 23),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "setuid",
                 position: (87, 9),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (87, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "owner",
                 position: (88, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "root",
                },
               ],
               position: (88, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (89, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "root",
                },
               ],
               position: (89, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "source",
                 position: (90, 9),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (90, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "getBin",
                      position: (90, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (90, 32),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "firejail",
                       position: (90, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "/bin/firejail",
                },
               ],
               position: (90, 18),
              },
             ),
            ],
            recursive: false,
            position: (87, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (93, 5),
             },
             Raw {
              content: "systemPackages",
              position: (93, 17),
             },
            ],
           },
           BinaryOperation {
            operator: Concatenation,
            operands: [
             List {
              elements: [
               PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (93, 36),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "firejail",
                   position: (93, 41),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (93, 34),
             },
             List {
              elements: [
               Variable {
                identifier: "wrappedBins",
                position: (93, 57),
               },
              ],
              position: (93, 55),
             },
            ],
            position: (93, 52),
           },
          ),
         ],
         recursive: false,
         position: (85, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (96, 3),
        },
        Raw {
         content: "maintainers",
         position: (96, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (96, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "peterhoeg",
          position: (96, 42),
         },
        ],
        position: (96, 40),
       },
       position: (96, 22),
      },
     ),
    ],
    recursive: false,
    position: (33, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}