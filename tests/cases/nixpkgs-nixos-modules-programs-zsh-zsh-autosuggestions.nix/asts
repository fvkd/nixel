---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "zsh",
         position: (6, 25),
        },
        Raw {
         content: "autosuggestions",
         position: (6, 29),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (9, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (10, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "programs",
                position: (10, 31),
               },
              ],
              position: (10, 30),
             },
             String {
              parts: [
               Raw {
                content: "zsh",
                position: (10, 42),
               },
              ],
              position: (10, 41),
             },
             String {
              parts: [
               Raw {
                content: "enableAutosuggestions",
                position: (10, 48),
               },
              ],
              position: (10, 47),
             },
            ],
            position: (10, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "programs",
                position: (10, 76),
               },
              ],
              position: (10, 75),
             },
             String {
              parts: [
               Raw {
                content: "zsh",
                position: (10, 87),
               },
              ],
              position: (10, 86),
             },
             String {
              parts: [
               Raw {
                content: "autosuggestions",
                position: (10, 93),
               },
              ],
              position: (10, 92),
             },
             String {
              parts: [
               Raw {
                content: "enable",
                position: (10, 111),
               },
              ],
              position: (10, 110),
             },
            ],
            position: (10, 73),
           },
          ],
         },
         position: (10, 5),
        },
       ],
       position: (9, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (13, 3),
        },
        Raw {
         content: "programs",
         position: (13, 11),
        },
        Raw {
         content: "zsh",
         position: (13, 20),
        },
        Raw {
         content: "autosuggestions",
         position: (13, 24),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (15, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (15, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "zsh-autosuggestions",
              position: (15, 30),
             },
            ],
            position: (15, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "highlightStyle",
            position: (17, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 22),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (18, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (18, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (18, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (19, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "fg=8",
                 position: (19, 18),
                },
               ],
               position: (19, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (20, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Highlight style for suggestions ({fore,back}ground color)",
                 position: (20, 22),
                },
               ],
               position: (20, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (21, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "fg=cyan",
                 position: (21, 18),
                },
               ],
               position: (21, 17),
              },
             },
            ],
            recursive: false,
            position: (17, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "strategy",
            position: (24, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (24, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (25, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (25, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (25, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Parentheses {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (25, 28),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (25, 34),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "history",
                        position: (25, 42),
                       },
                      ],
                      position: (25, 41),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "completion",
                        position: (25, 52),
                       },
                      ],
                      position: (25, 51),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "match_prev_cmd",
                        position: (25, 65),
                       },
                      ],
                      position: (25, 64),
                     },
                    ],
                    position: (25, 39),
                   },
                  ],
                 },
                 position: (25, 27),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (26, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "history",
                   position: (26, 20),
                  },
                 ],
                 position: (26, 19),
                },
               ],
               position: (26, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (27, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "`ZSH_AUTOSUGGEST_STRATEGY` is an array that specifies how suggestions should be generated.\nThe strategies in the array are tried successively until a suggestion is found.\nThere are currently three built-in strategies to choose from:\n\n- `history`: Chooses the most recent match from history.\n- `completion`: Chooses a suggestion based on what tab-completion would suggest. (requires `zpty` module)\n- `match_prev_cmd`: Like `history`, but chooses the most recent match whose preceding history item matches\n    the most recently executed command. Note that this strategy won't work as expected with ZSH options that\n    don't preserve the history order such as `HIST_IGNORE_ALL_DUPS` or `HIST_EXPIRE_DUPS_FIRST`.\n",
                 position: (28, 1),
                },
               ],
               position: (27, 21),
              },
             },
            ],
            recursive: false,
            position: (24, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "async",
            position: (40, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (40, 13),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (41, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (41, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (41, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (42, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (42, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (43, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to fetch suggestions asynchronously",
                 position: (43, 22),
                },
               ],
               position: (43, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (44, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (44, 17),
              },
             },
            ],
            recursive: false,
            position: (40, 22),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraConfig",
            position: (47, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (47, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (48, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (48, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (48, 26),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (48, 34),
                 },
                ],
               },
               position: (48, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (49, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (49, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (50, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Attribute set with additional configuration values",
                 position: (50, 22),
                },
               ],
               position: (50, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (51, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (51, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE\" = \"20\";\n}\n",
                   position: (52, 1),
                  },
                 ],
                 position: (51, 35),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (47, 28),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (13, 42),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (60, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (60, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (60, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (60, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (62, 5),
             },
             Raw {
              content: "zsh",
              position: (62, 14),
             },
             Raw {
              content: "interactiveShellInit",
              position: (62, 18),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "source ",
              position: (63, 1),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (63, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "zsh-autosuggestions",
                  position: (63, 21),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "/share/zsh-autosuggestions/zsh-autosuggestions.zsh\n\nexport ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=\"",
              position: (63, 41),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (65, 49),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "highlightStyle",
                  position: (65, 53),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\"\nexport ZSH_AUTOSUGGEST_STRATEGY=(",
              position: (65, 68),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatStringsSep",
                position: (66, 42),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: " ",
                   position: (66, 60),
                  },
                 ],
                 position: (66, 59),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (66, 63),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "strategy",
                    position: (66, 67),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: ")\n",
              position: (66, 76),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (67, 9),
               },
               arguments: [
                Parentheses {
                 expression: UnaryOperation {
                  operator: Not,
                  operand: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (67, 26),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "async",
                      position: (67, 30),
                     },
                    ],
                   },
                   default: None,
                  },
                  position: (67, 25),
                 },
                 position: (67, 24),
                },
                String {
                 parts: [
                  Raw {
                   content: "unset ZSH_AUTOSUGGEST_USE_ASYNC",
                   position: (67, 38),
                  },
                 ],
                 position: (67, 37),
                },
               ],
              },
             },
             Raw {
              content: "\n\n",
              position: (67, 71),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatStringsSep",
                position: (69, 9),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\n",
                   position: (69, 27),
                  },
                 ],
                 position: (69, 26),
                },
                Parentheses {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "mapAttrsToList",
                   position: (69, 32),
                  },
                  arguments: [
                   Parentheses {
                    expression: Function {
                     argument: Simple {
                      identifier: "key",
                     },
                     definition: Function {
                      argument: Simple {
                       identifier: "value",
                      },
                      definition: String {
                       parts: [
                        Raw {
                         content: "export ",
                         position: (69, 62),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "key",
                          position: (69, 71),
                         },
                        },
                        Raw {
                         content: "=\"",
                         position: (69, 75),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "value",
                          position: (69, 79),
                         },
                        },
                        Raw {
                         content: "\"",
                         position: (69, 85),
                        },
                       ],
                       position: (69, 60),
                      },
                      position: (69, 53),
                     },
                     position: (69, 48),
                    },
                    position: (69, 47),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (69, 90),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "extraConfig",
                       position: (69, 94),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                 position: (69, 31),
                },
               ],
              },
             },
             Raw {
              content: "\n",
              position: (69, 107),
             },
            ],
            position: (62, 41),
           },
          },
         ],
         recursive: false,
         position: (60, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (8, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}