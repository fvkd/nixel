---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "hardware",
         position: (7, 16),
        },
        Raw {
         content: "opengl",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "kernelPackages",
        position: (9, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 20),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "boot",
         position: (9, 27),
        },
        Raw {
         content: "kernelPackages",
         position: (9, 32),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "videoDrivers",
        position: (11, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (11, 18),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (11, 25),
        },
        Raw {
         content: "xserver",
         position: (11, 34),
        },
        Raw {
         content: "videoDrivers",
         position: (11, 42),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "package",
        position: (13, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (13, 13),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "buildEnv",
          position: (13, 18),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (14, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "opengl-drivers",
             position: (14, 13),
            },
           ],
           position: (14, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "paths",
             position: (15, 5),
            },
           ],
          },
          to: BinaryOperation {
           operator: Concatenation,
           operands: [
            List {
             elements: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (15, 15),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (15, 19),
                 },
                ],
               },
               default: None,
              },
             ],
             position: (15, 13),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (15, 32),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "extraPackages",
                position: (15, 36),
               },
              ],
             },
             default: None,
            },
           ],
           position: (15, 29),
          },
         },
        ],
        recursive: false,
        position: (13, 27),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "package32",
        position: (18, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (18, 15),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "buildEnv",
          position: (18, 20),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (19, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "opengl-drivers-32bit",
             position: (19, 13),
            },
           ],
           position: (19, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "paths",
             position: (20, 5),
            },
           ],
          },
          to: BinaryOperation {
           operator: Concatenation,
           operands: [
            List {
             elements: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (20, 15),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package32",
                  position: (20, 19),
                 },
                ],
               },
               default: None,
              },
             ],
             position: (20, 13),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (20, 34),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "extraPackages32",
                position: (20, 38),
               },
              ],
             },
             default: None,
            },
           ],
           position: (20, 31),
          },
         },
        ],
        recursive: false,
        position: (18, 29),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (27, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (28, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (28, 31),
               },
              ],
              position: (28, 30),
             },
             String {
              parts: [
               Raw {
                content: "xserver",
                position: (28, 42),
               },
              ],
              position: (28, 41),
             },
             String {
              parts: [
               Raw {
                content: "vaapiDrivers",
                position: (28, 52),
               },
              ],
              position: (28, 51),
             },
            ],
            position: (28, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "hardware",
                position: (28, 71),
               },
              ],
              position: (28, 70),
             },
             String {
              parts: [
               Raw {
                content: "opengl",
                position: (28, 82),
               },
              ],
              position: (28, 81),
             },
             String {
              parts: [
               Raw {
                content: "extraPackages",
                position: (28, 91),
               },
              ],
              position: (28, 90),
             },
            ],
            position: (28, 68),
           },
          ],
         },
         position: (28, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (29, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "hardware",
                position: (29, 31),
               },
              ],
              position: (29, 30),
             },
             String {
              parts: [
               Raw {
                content: "opengl",
                position: (29, 42),
               },
              ],
              position: (29, 41),
             },
             String {
              parts: [
               Raw {
                content: "s3tcSupport",
                position: (29, 51),
               },
              ],
              position: (29, 50),
             },
            ],
            position: (29, 28),
           },
           String {
            parts: [
             Raw {
              content: "S3TC support is now always enabled in Mesa.\n",
              position: (30, 1),
             },
            ],
            position: (29, 66),
           },
          ],
         },
         position: (29, 5),
        },
       ],
       position: (27, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (34, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "hardware",
            position: (36, 5),
           },
           Raw {
            content: "opengl",
            position: (36, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (37, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (37, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable OpenGL drivers. This is needed to enable\nOpenGL support in X11 systems, as well as for Wayland compositors\nlike sway and Weston. It is enabled by default\nby the corresponding modules, so you do not usually have to\nset it yourself, only if there is no module for your wayland\ncompositor of choice. See services.xserver.enable and\nprograms.sway.enable.\n",
                    position: (39, 1),
                   },
                  ],
                  position: (38, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (47, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (47, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (47, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (48, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (48, 19),
                 },
                },
               ],
               recursive: false,
               position: (37, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "driSupport",
               position: (51, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (51, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (52, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (52, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (52, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (53, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable accelerated OpenGL rendering through the\nDirect Rendering Interface (DRI).\n",
                    position: (55, 1),
                   },
                  ],
                  position: (54, 23),
                 },
                },
               ],
               recursive: false,
               position: (51, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "driSupport32Bit",
               position: (60, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (60, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (61, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (61, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (62, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "On 64-bit systems, whether to support Direct Rendering for\n32-bit applications (such as Wine).  This is currently only\nsupported for the <literal>nvidia</literal> as well as\n<literal>Mesa</literal>.\n",
                    position: (64, 1),
                   },
                  ],
                  position: (63, 23),
                 },
                },
               ],
               recursive: false,
               position: (60, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (71, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (71, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (72, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (72, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (73, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (73, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The package that provides the OpenGL implementation.\n",
                    position: (75, 1),
                   },
                  ],
                  position: (74, 23),
                 },
                },
               ],
               recursive: false,
               position: (71, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package32",
               position: (79, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (79, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (80, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (80, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (80, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (81, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (81, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (82, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The package that provides the 32-bit OpenGL implementation on\n64-bit systems. Used when <option>driSupport32Bit</option> is\nset.\n",
                    position: (83, 1),
                   },
                  ],
                  position: (82, 23),
                 },
                },
               ],
               recursive: false,
               position: (79, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraPackages",
               position: (89, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (89, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (90, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (90, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (90, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (90, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (91, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (92, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (92, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "with pkgs; [ vaapiIntel libvdpau-va-gl vaapiVdpau intel-ocl ]",
                      position: (92, 38),
                     },
                    ],
                    position: (92, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (93, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Additional packages to add to OpenGL drivers. This can be used\nto add OpenCL drivers, VA-API/VDPAU drivers etc.\n",
                    position: (94, 1),
                   },
                  ],
                  position: (93, 23),
                 },
                },
               ],
               recursive: false,
               position: (89, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraPackages32",
               position: (99, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (99, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (100, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (100, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (100, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (100, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (101, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (102, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (102, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "with pkgs.pkgsi686Linux; [ vaapiIntel libvdpau-va-gl vaapiVdpau ]",
                      position: (102, 38),
                     },
                    ],
                    position: (102, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (103, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Additional packages to add to 32-bit OpenGL drivers on\n64-bit systems. Used when <option>driSupport32Bit</option> is\nset. This can be used to add OpenCL drivers, VA-API/VDPAU drivers etc.\n",
                    position: (104, 1),
                   },
                  ],
                  position: (103, 23),
                 },
                },
               ],
               recursive: false,
               position: (99, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "setLdLibraryPath",
               position: (110, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (110, 26),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (111, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (111, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (111, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (112, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (112, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (113, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (113, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (114, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether the <literal>LD_LIBRARY_PATH</literal> environment variable\nshould be set to the locations of driver libraries. Drivers which\nrely on overriding libraries should set this to true. Drivers which\nsupport <literal>libglvnd</literal> and other dispatch libraries\ninstead of overriding libraries should not set this.\n",
                    position: (115, 1),
                   },
                  ],
                  position: (114, 23),
                 },
                },
               ],
               recursive: false,
               position: (110, 35),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (36, 23),
         },
        },
       ],
       recursive: false,
       position: (34, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (126, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (126, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (126, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (126, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (128, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (129, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (129, 21),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "driSupport32Bit",
                      position: (129, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (129, 44),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "stdenv",
                      position: (129, 49),
                     },
                     Raw {
                      content: "isx86_64",
                      position: (129, 56),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (129, 41),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (130, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Option driSupport32Bit only makes sense on a 64-bit system.",
                   position: (130, 20),
                  },
                 ],
                 position: (130, 19),
                },
               },
              ],
              recursive: false,
              position: (129, 7),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (132, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (132, 21),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "driSupport32Bit",
                      position: (132, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  Parentheses {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (132, 45),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "boot",
                       position: (132, 52),
                      },
                      Raw {
                       content: "kernelPackages",
                       position: (132, 57),
                      },
                      Raw {
                       content: "kernel",
                       position: (132, 72),
                      },
                      Raw {
                       content: "features",
                       position: (132, 79),
                      },
                      Raw {
                       content: "ia32Emulation",
                       position: (132, 88),
                      },
                     ],
                    },
                    default: Some(
                     Variable {
                      identifier: "false",
                      position: (132, 105),
                     },
                    ),
                   },
                   position: (132, 44),
                  },
                 ],
                 position: (132, 41),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (133, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Option driSupport32Bit requires a kernel that supports 32bit emulation",
                   position: (133, 20),
                  },
                 ],
                 position: (133, 19),
                },
               },
              ],
              recursive: false,
              position: (132, 7),
             },
            ],
            position: (128, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (137, 5),
             },
             Raw {
              content: "tmpfiles",
              position: (137, 13),
             },
             Raw {
              content: "rules",
              position: (137, 22),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "L+ /run/opengl-driver - - - - ",
                position: (138, 8),
               },
               Expression {
                expression: Variable {
                 identifier: "package",
                 position: (138, 40),
                },
               },
              ],
              position: (138, 7),
             },
             Parentheses {
              expression: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (140, 12),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "stdenv",
                   position: (140, 17),
                  },
                  Raw {
                   content: "isi686",
                   position: (140, 24),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "L+ /run/opengl-driver-32 - - - - opengl-driver",
                  position: (141, 12),
                 },
                ],
                position: (141, 11),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (142, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "driSupport32Bit",
                    position: (142, 21),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "L+ /run/opengl-driver-32 - - - - ",
                   position: (143, 12),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "package32",
                    position: (143, 47),
                   },
                  },
                 ],
                 position: (143, 11),
                },
                else_: String {
                 parts: [
                  Raw {
                   content: "r /run/opengl-driver-32",
                   position: (145, 12),
                  },
                 ],
                 position: (145, 11),
                },
                position: (142, 14),
               },
               position: (140, 9),
              },
              position: (139, 7),
             },
            ],
            position: (137, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (149, 5),
             },
             Raw {
              content: "sessionVariables",
              position: (149, 17),
             },
             Raw {
              content: "LD_LIBRARY_PATH",
              position: (149, 34),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (149, 52),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (149, 57),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "setLdLibraryPath",
                 position: (149, 61),
                },
               ],
              },
              default: None,
             },
             Parentheses {
              expression: BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "/run/opengl-driver/lib",
                     position: (150, 11),
                    },
                   ],
                   position: (150, 10),
                  },
                 ],
                 position: (150, 8),
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optional",
                  position: (150, 40),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (150, 49),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "driSupport32Bit",
                      position: (150, 53),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/run/opengl-driver-32/lib",
                     position: (150, 70),
                    },
                   ],
                   position: (150, 69),
                  },
                 ],
                },
               ],
               position: (150, 37),
              },
              position: (150, 7),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "hardware",
              position: (152, 5),
             },
             Raw {
              content: "opengl",
              position: (152, 14),
             },
             Raw {
              content: "package",
              position: (152, 21),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (152, 31),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (152, 41),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "mesa",
                 position: (152, 46),
                },
                Raw {
                 content: "drivers",
                 position: (152, 51),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "hardware",
              position: (153, 5),
             },
             Raw {
              content: "opengl",
              position: (153, 14),
             },
             Raw {
              content: "package32",
              position: (153, 21),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (153, 33),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (153, 43),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "pkgsi686Linux",
                 position: (153, 48),
                },
                Raw {
                 content: "mesa",
                 position: (153, 62),
                },
                Raw {
                 content: "drivers",
                 position: (153, 67),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (155, 5),
             },
             Raw {
              content: "extraModulePackages",
              position: (155, 10),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "optional",
             position: (155, 32),
            },
            arguments: [
             Parentheses {
              expression: FunctionApplication {
               function: Variable {
                identifier: "elem",
                position: (155, 42),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "virtualbox",
                   position: (155, 48),
                  },
                 ],
                 position: (155, 47),
                },
                Variable {
                 identifier: "videoDrivers",
                 position: (155, 60),
                },
               ],
              },
              position: (155, 41),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "kernelPackages",
               position: (155, 74),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "virtualboxGuestAdditions",
                 position: (155, 89),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (126, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (25, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}