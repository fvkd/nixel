---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "fetchFromGitHub" (1, 8)
          , := lexemes ","
            , "," (1, 23)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "buildDunePackage" (1, 25)
            , := lexemes ","
              , "," (1, 41)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "ocaml" (1, 43)
              , := lexemes ","
                , "," (1, 48)
              formals := rules "formal"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "cppo" (1, 50)
      } := lexemes "}"
        } "}" (1, 55)
      : := lexemes ":"
        : ":" (1, 56)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildDunePackage" (3, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 18)
                  { := lexemes "{"
                    { "{" (3, 22)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules 
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "pname" (4, 3)
                                    = := lexemes "="
                                      = "=" (4, 9)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (4, 11)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "camomile" (4, 12)
                                                  " := lexemes "\""
                                                    " "\"" (4, 20)
                                    ; := lexemes ";"
                                      ; ";" (4, 21)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "version" (5, 3)
                                  = := lexemes "="
                                    = "=" (5, 11)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (5, 13)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "1.0.2" (5, 14)
                                                " := lexemes "\""
                                                  " "\"" (5, 19)
                                  ; := lexemes ";"
                                    ; ";" (5, 20)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "useDune2" (7, 3)
                                = := lexemes "="
                                  = "=" (7, 12)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "true" (7, 14)
                                ; := lexemes ";"
                                  ; ";" (7, 18)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "src" (9, 3)
                              = := lexemes "="
                                = "=" (9, 7)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "fetchFromGitHub" (9, 9)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "{" "binds" "}"
                                            { := lexemes "{"
                                              { "{" (9, 25)
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                                    binds := rules 
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "owner" (10, 5)
                                                    = := lexemes "="
                                                      = "=" (10, 11)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (10, 13)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR "yoriyuki" (10, 14)
                                                                  " := lexemes "\""
                                                                    " "\"" (10, 22)
                                                    ; := lexemes ";"
                                                      ; ";" (10, 23)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "repo" (11, 5)
                                                  = := lexemes "="
                                                    = "=" (11, 10)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "pname" (11, 12)
                                                  ; := lexemes ";"
                                                    ; ";" (11, 17)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "rev" (12, 5)
                                                = := lexemes "="
                                                  = "=" (12, 9)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "version" (12, 11)
                                                ; := lexemes ";"
                                                  ; ";" (12, 18)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "sha256" (13, 5)
                                              = := lexemes "="
                                                = "=" (13, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (13, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "00i910qjv6bpk0nkafp5fg97isqas0bwjf7m6rz11rsxilpalzad" (13, 15)
                                                            " := lexemes "\""
                                                              " "\"" (13, 67)
                                              ; := lexemes ";"
                                                ; ";" (13, 68)
                                            } := lexemes "}"
                                              } "}" (14, 3)
                              ; := lexemes ";"
                                ; ";" (14, 4)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "nativeBuildInputs" (16, 3)
                            = := lexemes "="
                              = "=" (16, 21)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (16, 23)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules 
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "cppo" (16, 25)
                                          ] := lexemes "]"
                                            ] "]" (16, 30)
                            ; := lexemes ";"
                              ; ";" (16, 31)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "strictDeps" (18, 3)
                          = := lexemes "="
                            = "=" (18, 14)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "true" (18, 16)
                          ; := lexemes ";"
                            ; ";" (18, 20)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "configurePhase" (20, 3)
                        = := lexemes "="
                          = "=" (20, 18)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (20, 20)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    runHook preConfigure\n    ocaml configure.ml --share $out/share/camomile\n    runHook postConfigure\n  " (21, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (24, 3)
                        ; := lexemes ";"
                          ; ";" (24, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "postInstall" (26, 3)
                      = := lexemes "="
                        = "=" (26, 15)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (26, 17)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                              ind_string_parts := rules 
                                              IND_STR := lexemes "IND_STR"
                                                IND_STR "    echo \"version = \\\"" (27, 1)
                                            DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                              DOLLAR_CURLY "${" (27, 23)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "version" (27, 25)
                                            } := lexemes "}"
                                              } "}" (27, 32)
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "\\\"\" >> $out/lib/ocaml/" (27, 33)
                                        DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                          DOLLAR_CURLY "${" (27, 55)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "ocaml" (27, 57)
                                                    . := lexemes "."
                                                      . "." (27, 62)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "version" (27, 63)
                                        } := lexemes "}"
                                          } "}" (27, 70)
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "/site-lib/camomile/META\n  " (27, 71)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (28, 3)
                      ; := lexemes ";"
                        ; ";" (28, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (30, 3)
                    = := lexemes "="
                      = "=" (30, 8)
                    expr := rules "expr_function"
                      expr_function := rules "expr_if"
                        expr_if := rules "expr_op"
                          expr_op := rules "expr_app"
                            expr_app := rules "expr_select"
                              expr_select := rules "expr_simple"
                                expr_simple := rules "{" "binds" "}"
                                  { := lexemes "{"
                                    { "{" (30, 10)
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "INHERIT" "(" "expr" ")" "attrs" ";"
                                          binds := rules 
                                          INHERIT := lexemes "INHERIT"
                                            INHERIT "inherit" (31, 5)
                                          ( := lexemes "("
                                            ( "(" (31, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "src" (31, 14)
                                                      . := lexemes "."
                                                        . "." (31, 17)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "meta" (31, 18)
                                          ) := lexemes ")"
                                            ) ")" (31, 22)
                                          attrs := rules "attrs" "attr"
                                            attrs := rules 
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (31, 24)
                                          ; := lexemes ";"
                                            ; ";" (31, 32)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "maintainers" (32, 5)
                                        = := lexemes "="
                                          = "=" (32, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (32, 19)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple" "." "attrpath"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "lib" (32, 21)
                                                          . := lexemes "."
                                                            . "." (32, 24)
                                                          attrpath := rules "attrpath" "." "attr"
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "maintainers" (32, 25)
                                                            . := lexemes "."
                                                              . "." (32, 36)
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "vbgl" (32, 37)
                                                      ] := lexemes "]"
                                                        ] "]" (32, 42)
                                        ; := lexemes ";"
                                          ; ";" (32, 43)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "license" (33, 5)
                                      = := lexemes "="
                                        = "=" (33, 13)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "lib" (33, 15)
                                                  . := lexemes "."
                                                    . "." (33, 18)
                                                  attrpath := rules "attrpath" "." "attr"
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "licenses" (33, 19)
                                                    . := lexemes "."
                                                      . "." (33, 27)
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "lgpl21" (33, 28)
                                      ; := lexemes ";"
                                        ; ";" (33, 34)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "description" (34, 5)
                                    = := lexemes "="
                                      = "=" (34, 17)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (34, 19)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "A Unicode library for OCaml" (34, 20)
                                                  " := lexemes "\""
                                                    " "\"" (34, 47)
                                    ; := lexemes ";"
                                      ; ";" (34, 48)
                                  } := lexemes "}"
                                    } "}" (35, 3)
                    ; := lexemes ";"
                      ; ";" (35, 4)
                  } := lexemes "}"
                    } "}" (36, 1)