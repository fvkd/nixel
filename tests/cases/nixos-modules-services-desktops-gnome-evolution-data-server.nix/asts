---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "meta",
        position: (9, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (10, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "teams",
          position: (10, 19),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "gnome",
            position: (10, 25),
           },
           Raw {
            content: "members",
            position: (10, 31),
           },
          ],
         },
         default: None,
        },
       ),
      ],
      recursive: false,
      position: (9, 10),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (14, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: Variable {
         identifier: "mkRenamedOptionModule",
         position: (15, 6),
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (16, 9),
           },
           String {
            parts: [
             Raw {
              content: "gnome3",
             },
            ],
            position: (16, 20),
           },
           String {
            parts: [
             Raw {
              content: "evolution-data-server",
             },
            ],
            position: (16, 29),
           },
           String {
            parts: [
             Raw {
              content: "enable",
             },
            ],
            position: (16, 53),
           },
          ],
          position: (16, 7),
         },
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (17, 9),
           },
           String {
            parts: [
             Raw {
              content: "gnome",
             },
            ],
            position: (17, 20),
           },
           String {
            parts: [
             Raw {
              content: "evolution-data-server",
             },
            ],
            position: (17, 28),
           },
           String {
            parts: [
             Raw {
              content: "enable",
             },
            ],
            position: (17, 52),
           },
          ],
          position: (17, 7),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "mkRenamedOptionModule",
         position: (19, 6),
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (20, 9),
           },
           String {
            parts: [
             Raw {
              content: "gnome3",
             },
            ],
            position: (20, 20),
           },
           String {
            parts: [
             Raw {
              content: "evolution-data-server",
             },
            ],
            position: (20, 29),
           },
           String {
            parts: [
             Raw {
              content: "plugins",
             },
            ],
            position: (20, 53),
           },
          ],
          position: (20, 7),
         },
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (21, 9),
           },
           String {
            parts: [
             Raw {
              content: "gnome",
             },
            ],
            position: (21, 20),
           },
           String {
            parts: [
             Raw {
              content: "evolution-data-server",
             },
            ],
            position: (21, 28),
           },
           String {
            parts: [
             Raw {
              content: "plugins",
             },
            ],
            position: (21, 52),
           },
          ],
          position: (21, 7),
         },
        ],
       },
      ],
      position: (14, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (27, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (29, 5),
          },
          Raw {
           content: "gnome",
           position: (29, 14),
          },
          Raw {
           content: "evolution-data-server",
           position: (29, 20),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (30, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (30, 16),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "Evolution Data Server, a collection of services for storing addressbooks and calendars.",
               },
              ],
              position: (30, 31),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "plugins",
              position: (31, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (31, 17),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (32, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (32, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listOf",
                     position: (32, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (32, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (32, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (33, 9),
                  },
                 ],
                },
                List {
                 elements: [],
                 position: (33, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (34, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Plugins for Evolution Data Server.",
                  },
                 ],
                 position: (34, 23),
                },
               ),
              ],
              recursive: false,
              position: (31, 26),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (29, 44),
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "programs",
           position: (37, 5),
          },
          Raw {
           content: "evolution",
           position: (37, 14),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (38, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (38, 16),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "Evolution, a Personal information management application that provides integrated mail, calendaring and address book functionality.",
               },
              ],
              position: (38, 31),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "plugins",
              position: (39, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (39, 17),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (40, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (40, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listOf",
                     position: (40, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (40, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (40, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (41, 9),
                  },
                 ],
                },
                List {
                 elements: [],
                 position: (41, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (42, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (42, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "[ pkgs.evolution-ews ]",
                    },
                   ],
                   position: (42, 37),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (43, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Plugins for Evolution.",
                  },
                 ],
                 position: (43, 23),
                },
               ),
              ],
              recursive: false,
              position: (39, 26),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (37, 26),
        },
       ),
      ],
      recursive: false,
      position: (27, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (51, 3),
       },
      ],
     },
     LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "bundle",
           position: (53, 7),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (53, 16),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "evolutionWithPlugins",
             position: (53, 21),
            },
            Raw {
             content: "override",
             position: (53, 42),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            Inherit {
             from: Some(
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (53, 62),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (53, 69),
                 },
                 Raw {
                  content: "gnome",
                  position: (53, 78),
                 },
                 Raw {
                  content: "evolution-data-server",
                  position: (53, 84),
                 },
                ],
               },
               default: None,
              },
             ),
             attributes: [
              Raw {
               content: "plugins",
               position: (53, 107),
              },
             ],
            },
           ],
           recursive: false,
           position: (53, 51),
          },
         ],
        },
       ),
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (55, 5),
       },
       arguments: [
        List {
         elements: [
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (56, 8),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "config",
              position: (56, 13),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "services",
                position: (56, 20),
               },
               Raw {
                content: "gnome",
                position: (56, 29),
               },
               Raw {
                content: "evolution-data-server",
                position: (56, 35),
               },
               Raw {
                content: "enable",
                position: (56, 57),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (57, 9),
                 },
                 Raw {
                  content: "systemPackages",
                  position: (57, 21),
                 },
                ],
               },
               List {
                elements: [
                 Variable {
                  identifier: "bundle",
                  position: (57, 40),
                 },
                ],
                position: (57, 38),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (59, 9),
                 },
                 Raw {
                  content: "dbus",
                  position: (59, 18),
                 },
                 Raw {
                  content: "packages",
                  position: (59, 23),
                 },
                ],
               },
               List {
                elements: [
                 Variable {
                  identifier: "bundle",
                  position: (59, 36),
                 },
                ],
                position: (59, 34),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (61, 9),
                 },
                 Raw {
                  content: "packages",
                  position: (61, 17),
                 },
                ],
               },
               List {
                elements: [
                 Variable {
                  identifier: "bundle",
                  position: (61, 30),
                 },
                ],
                position: (61, 28),
               },
              ),
             ],
             recursive: false,
             position: (56, 64),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (63, 8),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "config",
              position: (63, 13),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "programs",
                position: (63, 20),
               },
               Raw {
                content: "evolution",
                position: (63, 29),
               },
               Raw {
                content: "enable",
                position: (63, 39),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (64, 9),
                 },
                 Raw {
                  content: "gnome",
                  position: (64, 18),
                 },
                 Raw {
                  content: "evolution-data-server",
                  position: (64, 24),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "enable",
                     position: (65, 11),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (65, 20),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "plugins",
                     position: (66, 11),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    List {
                     elements: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (66, 23),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "evolution",
                          position: (66, 28),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (66, 21),
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (66, 43),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "programs",
                        position: (66, 50),
                       },
                       Raw {
                        content: "evolution",
                        position: (66, 59),
                       },
                       Raw {
                        content: "plugins",
                        position: (66, 69),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                   position: (66, 40),
                  },
                 ),
                ],
                recursive: false,
                position: (64, 48),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (68, 9),
                 },
                 Raw {
                  content: "gnome",
                  position: (68, 18),
                 },
                 Raw {
                  content: "gnome-keyring",
                  position: (68, 24),
                 },
                 Raw {
                  content: "enable",
                  position: (68, 38),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (68, 47),
               },
              ),
             ],
             recursive: false,
             position: (63, 46),
            },
           ],
          },
         ],
         position: (55, 13),
        },
       ],
      },
      position: (52, 5),
     },
    ),
   ],
   recursive: false,
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}