---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "jupyterhub",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "kernels",
        position: (9, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (9, 14),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "jupyter-kernel",
          position: (9, 19),
         },
         Raw {
          content: "create",
          position: (9, 34),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "definitions",
             position: (10, 5),
            },
           ],
          },
          to: IfThenElse {
           predicate: BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (10, 22),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "kernels",
                 position: (10, 26),
                },
               ],
              },
              default: None,
             },
             Variable {
              identifier: "null",
              position: (10, 37),
             },
            ],
            position: (10, 34),
           },
           then: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (11, 12),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "kernels",
               position: (11, 16),
              },
             ],
            },
            default: None,
           },
           else_: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (12, 13),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "jupyter-kernel",
               position: (12, 18),
              },
              Raw {
               content: "default",
               position: (12, 33),
              },
             ],
            },
            default: None,
           },
           position: (10, 19),
          },
         },
        ],
        recursive: false,
        position: (9, 42),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "jupyterhubConfig",
        position: (15, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (15, 22),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (15, 27),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "jupyterhub_config.py",
          position: (15, 38),
         },
        ],
        position: (15, 37),
       },
       String {
        parts: [
         Raw {
          content: "c.JupyterHub.bind_url = \"http://",
          position: (16, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (16, 39),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "host",
              position: (16, 43),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: ":",
          position: (16, 48),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "toString",
            position: (16, 51),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (16, 60),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "port",
                position: (16, 64),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\"\n\nc.JupyterHub.authenticator_class = \"",
          position: (16, 69),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (18, 43),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "authentication",
              position: (18, 47),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\"\nc.JupyterHub.spawner_class = \"",
          position: (18, 62),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (19, 37),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "spawner",
              position: (19, 41),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\"\n\nc.SystemdSpawner.default_url = '/lab'\nc.SystemdSpawner.cmd = \"",
          position: (19, 49),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (22, 31),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "jupyterlabEnv",
              position: (22, 35),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/bin/jupyterhub-singleuser\"\nc.SystemdSpawner.environment = {\n  'JUPYTER_PATH': ",
          position: (22, 49),
         },
         Raw {
          content: "'",
          position: (24, 23),
         },
         Expression {
          expression: Variable {
           identifier: "kernels",
           position: (24, 26),
          },
         },
         Raw {
          content: "'\n}\n\n",
          position: (24, 34),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (27, 7),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "extraConfig",
              position: (27, 11),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (27, 23),
         },
        ],
        position: (15, 60),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (30, 3),
        },
        Raw {
         content: "maintainers",
         position: (30, 8),
        },
       ],
      },
      to: With {
       expression: Variable {
        identifier: "maintainers",
        position: (30, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "costrouc",
          position: (30, 42),
         },
        ],
        position: (30, 40),
       },
       position: (30, 22),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (32, 3),
        },
        Raw {
         content: "services",
         position: (32, 11),
        },
        Raw {
         content: "jupyterhub",
         position: (32, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (33, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (33, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Jupyterhub development server",
              position: (33, 30),
             },
            ],
            position: (33, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "authentication",
            position: (35, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (35, 22),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (36, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (36, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (36, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (37, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "jupyterhub.auth.PAMAuthenticator",
                 position: (37, 18),
                },
               ],
               position: (37, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (38, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Jupyterhub authentication to use\n\nThere are many authenticators available including: oauth, pam,\nldap, kerberos, etc.\n",
                 position: (39, 1),
                },
               ],
               position: (38, 21),
              },
             },
            ],
            recursive: false,
            position: (35, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "spawner",
            position: (46, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (46, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (47, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (47, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (47, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (48, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "systemdspawner.SystemdSpawner",
                 position: (48, 18),
                },
               ],
               position: (48, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (49, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Jupyterhub spawner to use\n\nThere are many spawners available including: local process,\nsystemd, docker, kubernetes, yarn, batch, etc.\n",
                 position: (50, 1),
                },
               ],
               position: (49, 21),
              },
             },
            ],
            recursive: false,
            position: (46, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraConfig",
            position: (57, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (57, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (58, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (58, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (58, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (59, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (59, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (60, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Extra contents appended to the jupyterhub configuration\n\nJupyterhub configuration is a normal python file using\nTraitlets. https://jupyterhub.readthedocs.io/en/stable/getting-started/config-basics.html. The\nbase configuration of this module was designed to have sane\ndefaults for configuration but you can override anything since\nthis is a python file.\n",
                 position: (61, 1),
                },
               ],
               position: (60, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (69, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "c.SystemdSpawner.mem_limit = '8G'\nc.SystemdSpawner.cpu_limit = 2.0\n",
                 position: (70, 1),
                },
               ],
               position: (69, 17),
              },
             },
            ],
            recursive: false,
            position: (57, 28),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "jupyterhubEnv",
            position: (75, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (75, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (76, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (76, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (76, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (77, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (77, 17),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "python3",
                   position: (77, 22),
                  },
                  Raw {
                   content: "withPackages",
                   position: (77, 30),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Function {
                 argument: Simple {
                  identifier: "p",
                 },
                 definition: With {
                  expression: Variable {
                   identifier: "p",
                   position: (77, 52),
                  },
                  target: List {
                   elements: [
                    Variable {
                     identifier: "jupyterhub",
                     position: (78, 9),
                    },
                    Variable {
                     identifier: "jupyterhub-systemdspawner",
                     position: (79, 9),
                    },
                   ],
                   position: (77, 55),
                  },
                  position: (77, 47),
                 },
                 position: (77, 44),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (81, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (81, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.python3.withPackages (p: with p; [\n  jupyterhub\n  jupyterhub-systemdspawner\n])\n",
                   position: (82, 1),
                  },
                 ],
                 position: (81, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (87, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Python environment to run jupyterhub\n\nCustomizing will affect the packages available in the hub and\nproxy. This will allow packages to be available for the\nextraConfig that you may need. This will not normally need to\nbe changed.\n",
                 position: (88, 1),
                },
               ],
               position: (87, 21),
              },
             },
            ],
            recursive: false,
            position: (75, 30),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "jupyterlabEnv",
            position: (97, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (97, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (98, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (98, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (98, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (99, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (99, 17),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "python3",
                   position: (99, 22),
                  },
                  Raw {
                   content: "withPackages",
                   position: (99, 30),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Function {
                 argument: Simple {
                  identifier: "p",
                 },
                 definition: With {
                  expression: Variable {
                   identifier: "p",
                   position: (99, 52),
                  },
                  target: List {
                   elements: [
                    Variable {
                     identifier: "jupyterhub",
                     position: (100, 9),
                    },
                    Variable {
                     identifier: "jupyterlab",
                     position: (101, 9),
                    },
                   ],
                   position: (99, 55),
                  },
                  position: (99, 47),
                 },
                 position: (99, 44),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (103, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (103, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.python3.withPackages (p: with p; [\n  jupyterhub\n  jupyterlab\n])\n",
                   position: (104, 1),
                  },
                 ],
                 position: (103, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (109, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Python environment to run jupyterlab\n\nCustomizing will affect the packages available in the\njupyterlab server and the default kernel provided. This is the\nway to customize the jupyterlab extensions and jupyter\nnotebook extensions. This will not normally need to\nbe changed.\n",
                 position: (110, 1),
                },
               ],
               position: (109, 21),
              },
             },
            ],
            recursive: false,
            position: (97, 30),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "kernels",
            position: (120, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (120, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (121, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (121, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (121, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (121, 28),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "attrsOf",
                     position: (121, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (121, 42),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "submodule",
                       position: (121, 48),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "import",
                      position: (121, 59),
                     },
                     arguments: [
                      Path {
                       parts: [
                        Raw {
                         content: "../jupyter/kernel-options.nix",
                         position: (121, 66),
                        },
                       ],
                       position: (121, 66),
                      },
                      Map {
                       bindings: [
                        Inherit {
                         from: None,
                         attributes: [
                          Raw {
                           content: "lib",
                           position: (122, 17),
                          },
                         ],
                        },
                       ],
                       recursive: false,
                       position: (121, 96),
                      },
                     ],
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (125, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (125, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (126, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (126, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  python3 = let\n    env = (pkgs.python3.withPackages (pythonPackages: with pythonPackages; [\n            ipykernel\n            pandas\n            scikit-learn\n          ]));\n  in {\n    displayName = \"Python 3 for machine learning\";\n    argv = [\n      \"",
                   position: (127, 1),
                  },
                  Raw {
                   content: "$",
                   position: (137, 16),
                  },
                  Raw {
                   content: "{env.interpreter}\"\n      \"-m\"\n      \"ipykernel_launcher\"\n      \"-f\"\n      \"{connection_file}\"\n    ];\n    language = \"python\";\n    logo32 = \"",
                   position: (137, 19),
                  },
                  Raw {
                   content: "$",
                   position: (144, 23),
                  },
                  Raw {
                   content: "{env}/",
                   position: (144, 26),
                  },
                  Raw {
                   content: "$",
                   position: (144, 32),
                  },
                  Raw {
                   content: "{env.sitePackages}/ipykernel/resources/logo-32x32.png\";\n    logo64 = \"",
                   position: (144, 35),
                  },
                  Raw {
                   content: "$",
                   position: (145, 23),
                  },
                  Raw {
                   content: "{env}/",
                   position: (145, 26),
                  },
                  Raw {
                   content: "$",
                   position: (145, 32),
                  },
                  Raw {
                   content: "{env.sitePackages}/ipykernel/resources/logo-64x64.png\";\n  };\n}\n",
                   position: (145, 35),
                  },
                 ],
                 position: (126, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (149, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Declarative kernel config\n\nKernels can be declared in any language that supports and has\nthe required dependencies to communicate with a jupyter server.\nIn python's case, it means that ipykernel package must always be\nincluded in the list of packages of the targeted environment.\n",
                 position: (150, 1),
                },
               ],
               position: (149, 21),
              },
             },
            ],
            recursive: false,
            position: (120, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "port",
            position: (159, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (159, 12),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (160, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (160, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "port",
                  position: (160, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (161, 7),
                },
               ],
              },
              to: Int {
               value: 8000,
               position: (161, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (162, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Port number Jupyterhub will be listening on\n",
                 position: (163, 1),
                },
               ],
               position: (162, 21),
              },
             },
            ],
            recursive: false,
            position: (159, 21),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "host",
            position: (167, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (167, 12),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (168, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (168, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (168, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (169, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "0.0.0.0",
                 position: (169, 18),
                },
               ],
               position: (169, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (170, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Bind IP JupyterHub will be listening on\n",
                 position: (171, 1),
                },
               ],
               position: (170, 21),
              },
             },
            ],
            recursive: false,
            position: (167, 21),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "stateDirectory",
            position: (175, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (175, 22),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (176, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (176, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (176, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (177, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "jupyterhub",
                 position: (177, 18),
                },
               ],
               position: (177, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (178, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Directory for jupyterhub state (token + database)\n",
                 position: (179, 1),
                },
               ],
               position: (178, 21),
              },
             },
            ],
            recursive: false,
            position: (175, 31),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (32, 33),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (184, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (184, 12),
       },
       arguments: [
        List {
         elements: [
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (185, 6),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (185, 11),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "enable",
                position: (185, 15),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "systemd",
                  position: (186, 7),
                 },
                 Raw {
                  content: "services",
                  position: (186, 15),
                 },
                 Raw {
                  content: "jupyterhub",
                  position: (186, 24),
                 },
                ],
               },
               to: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "description",
                     position: (187, 9),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "Jupyterhub development server",
                     position: (187, 24),
                    },
                   ],
                   position: (187, 23),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "after",
                     position: (189, 9),
                    },
                   ],
                  },
                  to: List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "network.target",
                       position: (189, 20),
                      },
                     ],
                     position: (189, 19),
                    },
                   ],
                   position: (189, 17),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "wantedBy",
                     position: (190, 9),
                    },
                   ],
                  },
                  to: List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "multi-user.target",
                       position: (190, 23),
                      },
                     ],
                     position: (190, 22),
                    },
                   ],
                   position: (190, 20),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "serviceConfig",
                     position: (192, 9),
                    },
                   ],
                  },
                  to: Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "Restart",
                        position: (193, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "always",
                        position: (193, 22),
                       },
                      ],
                      position: (193, 21),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "ExecStart",
                        position: (194, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (194, 26),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "jupyterhubEnv",
                            position: (194, 30),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/jupyterhub --config ",
                        position: (194, 44),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "jupyterhubConfig",
                         position: (194, 71),
                        },
                       },
                      ],
                      position: (194, 23),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "User",
                        position: (195, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "root",
                        position: (195, 19),
                       },
                      ],
                      position: (195, 18),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "StateDirectory",
                        position: (196, 11),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (196, 28),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "stateDirectory",
                         position: (196, 32),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "WorkingDirectory",
                        position: (197, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "/var/lib/",
                        position: (197, 31),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (197, 42),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "stateDirectory",
                            position: (197, 46),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                      ],
                      position: (197, 30),
                     },
                    },
                   ],
                   recursive: false,
                   position: (192, 25),
                  },
                 },
                ],
                recursive: false,
                position: (186, 37),
               },
              },
             ],
             recursive: false,
             position: (185, 23),
            },
           ],
          },
         ],
         position: (184, 20),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (29, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}