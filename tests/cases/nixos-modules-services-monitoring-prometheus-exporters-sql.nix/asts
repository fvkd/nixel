---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "options",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (2, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (4, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (4, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (4, 16),
        },
        Raw {
         content: "prometheus",
         position: (4, 25),
        },
        Raw {
         content: "exporters",
         position: (4, 36),
        },
        Raw {
         content: "sql",
         position: (4, 46),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfgOptions",
        position: (5, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "options",
           position: (6, 5),
          },
         ],
        },
        With {
         expression: Variable {
          identifier: "types",
          position: (6, 20),
         },
         target: Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "jobs",
               position: (7, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (7, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (8, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (8, 16),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "submodule",
                     position: (8, 25),
                    },
                    arguments: [
                     Variable {
                      identifier: "jobOptions",
                      position: (8, 35),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (9, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (9, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (10, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "An attrset of metrics scraping jobs to run.",
                   },
                  ],
                  position: (10, 23),
                 },
                ),
               ],
               recursive: false,
               position: (7, 23),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (6, 27),
         },
         position: (6, 15),
        },
       ),
      ],
      recursive: false,
      position: (5, 16),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "jobOptions",
        position: (14, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "options",
           position: (15, 5),
          },
         ],
        },
        With {
         expression: Variable {
          identifier: "types",
          position: (15, 20),
         },
         target: Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "interval",
               position: (16, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (16, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (17, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "str",
                  position: (17, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (18, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "How often to run this job, specified in\n<link xlink:href=\"https://golang.org/pkg/time/#ParseDuration\">Go duration</link> format.\n",
                   },
                  ],
                  position: (18, 23),
                 },
                ),
               ],
               recursive: false,
               position: (16, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "connections",
               position: (23, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (23, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (24, 16),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (24, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (25, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of connection strings of the SQL servers to scrape metrics from",
                   },
                  ],
                  position: (25, 23),
                 },
                ),
               ],
               recursive: false,
               position: (23, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "startupSql",
               position: (27, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (27, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (28, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (28, 16),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (28, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (29, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (29, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (30, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of SQL statements to execute once after making a connection.",
                   },
                  ],
                  position: (30, 23),
                 },
                ),
               ],
               recursive: false,
               position: (27, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "queries",
               position: (32, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (32, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (33, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (33, 16),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "submodule",
                     position: (33, 25),
                    },
                    arguments: [
                     Variable {
                      identifier: "queryOptions",
                      position: (33, 35),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (34, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "SQL queries to run.",
                   },
                  ],
                  position: (34, 23),
                 },
                ),
               ],
               recursive: false,
               position: (32, 26),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (15, 27),
         },
         position: (15, 15),
        },
       ),
      ],
      recursive: false,
      position: (14, 16),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "queryOptions",
        position: (38, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "options",
           position: (39, 5),
          },
         ],
        },
        With {
         expression: Variable {
          identifier: "types",
          position: (39, 20),
         },
         target: Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "help",
               position: (40, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (40, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (41, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "nullOr",
                   position: (41, 16),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (41, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (42, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (42, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (43, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A human-readable description of this metric.",
                   },
                  ],
                  position: (43, 23),
                 },
                ),
               ],
               recursive: false,
               position: (40, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "labels",
               position: (45, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (45, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (46, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (46, 16),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (46, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (47, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (47, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (48, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A set of columns that will be used as Prometheus labels.",
                   },
                  ],
                  position: (48, 23),
                 },
                ),
               ],
               recursive: false,
               position: (45, 25),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "query",
               position: (50, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (51, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "str",
                  position: (51, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (52, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The SQL query to run.",
                   },
                  ],
                  position: (52, 23),
                 },
                ),
               ],
               recursive: false,
               position: (50, 24),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "values",
               position: (54, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (54, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (55, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (55, 16),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (55, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (56, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A set of columns that will be used as values of this metric.",
                   },
                  ],
                  position: (56, 23),
                 },
                ),
               ],
               recursive: false,
               position: (54, 25),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (39, 27),
         },
         position: (39, 15),
        },
       ),
      ],
      recursive: false,
      position: (38, 18),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configFile",
        position: (61, 3),
       },
      ],
     },
     IfThenElse {
      predicate: BinaryOperation {
       operator: NotEqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (62, 8),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "configFile",
            position: (62, 12),
           },
          ],
         },
         default: None,
        },
        Variable {
         identifier: "null",
         position: (62, 26),
        },
       ],
       position: (62, 23),
      },
      then: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (63, 10),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "configFile",
          position: (63, 14),
         },
        ],
       },
       default: None,
      },
      else_: LetIn {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "nameInline",
            position: (66, 9),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mapAttrsToList",
           position: (66, 22),
          },
          arguments: [
           Function {
            argument: Simple {
             identifier: "k",
            },
            definition: Function {
             argument: Simple {
              identifier: "v",
             },
             definition: BinaryOperation {
              operator: Update,
              operands: [
               Variable {
                identifier: "v",
                position: (66, 44),
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "name",
                     position: (66, 51),
                    },
                   ],
                  },
                  Variable {
                   identifier: "k",
                   position: (66, 58),
                  },
                 ),
                ],
                recursive: false,
                position: (66, 49),
               },
              ],
              position: (66, 46),
             },
             position: (66, 41),
            },
            position: (66, 38),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "renameStartupSql",
            position: (67, 9),
           },
          ],
         },
         Function {
          argument: Simple {
           identifier: "j",
          },
          definition: FunctionApplication {
           function: Variable {
            identifier: "removeAttrs",
            position: (67, 31),
           },
           arguments: [
            BinaryOperation {
             operator: Update,
             operands: [
              Variable {
               identifier: "j",
               position: (67, 44),
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "startup_sql",
                    position: (67, 51),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "j",
                   position: (67, 65),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "startupSql",
                     position: (67, 67),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
               position: (67, 49),
              },
             ],
             position: (67, 46),
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "startupSql",
                },
               ],
               position: (67, 84),
              },
             ],
             position: (67, 82),
            },
           ],
          },
          position: (67, 28),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configuration",
            position: (68, 9),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "jobs",
               position: (69, 11),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "map",
              position: (69, 18),
             },
             arguments: [
              Variable {
               identifier: "renameStartupSql",
               position: (69, 22),
              },
              FunctionApplication {
               function: Variable {
                identifier: "nameInline",
                position: (70, 14),
               },
               arguments: [
                FunctionApplication {
                 function: Variable {
                  identifier: "mapAttrs",
                  position: (70, 26),
                 },
                 arguments: [
                  Function {
                   argument: Simple {
                    identifier: "k",
                   },
                   definition: Function {
                    argument: Simple {
                     identifier: "v",
                    },
                    definition: BinaryOperation {
                     operator: Update,
                     operands: [
                      Variable {
                       identifier: "v",
                       position: (70, 43),
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "queries",
                            position: (70, 50),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "nameInline",
                           position: (70, 60),
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "v",
                             position: (70, 71),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "queries",
                               position: (70, 73),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                         },
                        ),
                       ],
                       recursive: false,
                       position: (70, 48),
                      },
                     ],
                     position: (70, 45),
                    },
                    position: (70, 39),
                   },
                   position: (70, 36),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (70, 86),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "configuration",
                      position: (70, 90),
                     },
                     Raw {
                      content: "jobs",
                      position: (70, 104),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ],
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (68, 25),
         },
        ),
       ],
       target: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "builtins",
          position: (73, 7),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "toFile",
            position: (73, 16),
           },
          ],
         },
         default: None,
        },
        arguments: [
         String {
          parts: [
           Raw {
            content: "config.yaml",
           },
          ],
          position: (73, 23),
         },
         FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "builtins",
            position: (73, 38),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "toJSON",
              position: (73, 47),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Variable {
            identifier: "configuration",
            position: (73, 54),
           },
          ],
         },
        ],
       },
       position: (65, 7),
      },
      position: (62, 5),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "extraOpts",
         position: (76, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configFile",
            position: (77, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (77, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (78, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (78, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (78, 26),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (78, 33),
                 },
                ],
               },
               position: (78, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (79, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (79, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (80, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Path to configuration file.\n",
                },
               ],
               position: (80, 21),
              },
             ),
            ],
            recursive: false,
            position: (77, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configuration",
            position: (84, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (84, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (85, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (85, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (85, 26),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "submodule",
                   position: (85, 34),
                  },
                  arguments: [
                   Variable {
                    identifier: "cfgOptions",
                    position: (85, 44),
                   },
                  ],
                 },
                ],
               },
               position: (85, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (86, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (86, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (87, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Exporter configuration as nix attribute set. Mutually exclusive with 'configFile' option.\n",
                },
               ],
               position: (87, 21),
              },
             ),
            ],
            recursive: false,
            position: (84, 30),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (76, 15),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "port",
         position: (93, 3),
        },
       ],
      },
      Int {
       value: 9237,
       position: (93, 10),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "serviceOpts",
         position: (94, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "serviceConfig",
            position: (95, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "ExecStart",
               position: (96, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (97, 11),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "prometheus-sql-exporter",
                   position: (97, 16),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/sql_exporter \\\n  -web.listen-address ",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (98, 33),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listenAddress",
                   position: (98, 37),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: ":",
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (98, 54),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (98, 63),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "port",
                     position: (98, 67),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  -config.file ",
              },
              Expression {
               expression: Variable {
                identifier: "configFile",
                position: (99, 26),
               },
              },
              Raw {
               content: " \\\n  ",
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (100, 13),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: " \\\n  ",
                   },
                  ],
                  position: (100, 30),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (100, 40),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "extraFlags",
                     position: (100, 44),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: "\n",
              },
             ],
             position: (96, 19),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "RestrictAddressFamilies",
               position: (102, 7),
              },
             ],
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "AF_UNIX",
                },
               ],
               position: (104, 9),
              },
             ],
             position: (102, 33),
            },
           ),
          ],
          recursive: false,
          position: (95, 21),
         },
        ),
       ],
       recursive: false,
       position: (94, 17),
      },
     ),
    ],
    recursive: false,
    position: (75, 1),
   },
   position: (3, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}