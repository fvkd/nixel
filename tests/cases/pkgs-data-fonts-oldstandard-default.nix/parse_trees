---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "fetchzip" (1, 8)
      } := lexemes "}"
        } "}" (1, 17)
      : := lexemes ":"
        : ":" (1, 18)
      expr_function := rules "LET" "binds" "IN" "expr_function"
        LET := lexemes "LET"
          LET "let" (3, 1)
        binds := rules "binds" "attrpath" "=" "expr" ";"
          binds := rules 
          attrpath := rules "attr"
            attr := rules "ID"
              ID := lexemes "ID"
                ID "version" (4, 3)
          = := lexemes "="
            = "=" (4, 11)
          expr := rules "expr_function"
            expr_function := rules "expr_if"
              expr_if := rules "expr_op"
                expr_op := rules "expr_app"
                  expr_app := rules "expr_select"
                    expr_select := rules "expr_simple"
                      expr_simple := rules "\"" "string_parts" "\""
                        " := lexemes "\""
                          " "\"" (4, 13)
                        string_parts := rules "STR"
                          STR := lexemes "STR"
                            STR "2.2" (4, 14)
                        " := lexemes "\""
                          " "\"" (4, 17)
          ; := lexemes ";"
            ; ";" (4, 18)
        IN := lexemes "IN"
          IN "in" (5, 1)
        expr_function := rules "expr_if"
          expr_if := rules "expr_op"
            expr_op := rules "expr_app"
              expr_app := rules "expr_app" "expr_select"
                expr_app := rules "expr_select"
                  expr_select := rules "expr_simple"
                    expr_simple := rules "ID"
                      ID := lexemes "ID"
                        ID "fetchzip" (5, 4)
                expr_select := rules "expr_simple"
                  expr_simple := rules "REC" "{" "binds" "}"
                    REC := lexemes "REC"
                      REC "rec" (5, 13)
                    { := lexemes "{"
                      { "{" (5, 17)
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules 
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "name" (6, 3)
                              = := lexemes "="
                                = "=" (6, 8)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (6, 10)
                                            string_parts := rules "string_parts_interpolated"
                                              string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                STR := lexemes "STR"
                                                  STR "oldstandard-" (6, 11)
                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                  DOLLAR_CURLY "${" (6, 23)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "version" (6, 25)
                                                } := lexemes "}"
                                                  } "}" (6, 32)
                                            " := lexemes "\""
                                              " "\"" (6, 33)
                              ; := lexemes ";"
                                ; ";" (6, 34)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "url" (8, 3)
                            = := lexemes "="
                              = "=" (8, 7)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (8, 9)
                                          string_parts := rules "string_parts_interpolated"
                                            string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                              string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                  string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                    STR := lexemes "STR"
                                                      STR "https://github.com/akryukov/oldstand/releases/download/v" (8, 10)
                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                      DOLLAR_CURLY "${" (8, 66)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "version" (8, 68)
                                                    } := lexemes "}"
                                                      } "}" (8, 75)
                                                  STR := lexemes "STR"
                                                    STR "/" (8, 76)
                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                  DOLLAR_CURLY "${" (8, 77)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "name" (8, 79)
                                                } := lexemes "}"
                                                  } "}" (8, 83)
                                              STR := lexemes "STR"
                                                STR ".otf.zip" (8, 84)
                                          " := lexemes "\""
                                            " "\"" (8, 92)
                            ; := lexemes ";"
                              ; ";" (8, 93)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "postFetch" (10, 3)
                          = := lexemes "="
                            = "=" (10, 13)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                        IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                          IND_STRING_OPEN "''\n" (10, 15)
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                              ind_string_parts := rules 
                                              IND_STR := lexemes "IND_STR"
                                                IND_STR "    unzip $downloadedFile\n    install -m444 -Dt $out/share/fonts/opentype *.otf\n    install -m444 -Dt $out/share/doc/" (11, 1)
                                            DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                              DOLLAR_CURLY "${" (13, 38)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "name" (13, 40)
                                            } := lexemes "}"
                                              } "}" (13, 44)
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "    FONTLOG.txt\n  " (13, 45)
                                        IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                          IND_STRING_CLOSE "''" (14, 3)
                          ; := lexemes ";"
                            ; ";" (14, 5)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "sha256" (16, 3)
                        = := lexemes "="
                          = "=" (16, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "\"" "string_parts" "\""
                                      " := lexemes "\""
                                        " "\"" (16, 12)
                                      string_parts := rules "STR"
                                        STR := lexemes "STR"
                                          STR "1qwfsyp51grr56jcnkkmnrnl3r20pmhp9zh9g88kp64m026cah6n" (16, 13)
                                      " := lexemes "\""
                                        " "\"" (16, 65)
                        ; := lexemes ";"
                          ; ";" (16, 66)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "meta" (18, 3)
                      = := lexemes "="
                        = "=" (18, 8)
                      expr := rules "expr_function"
                        expr_function := rules "WITH" "expr" ";" "expr_function"
                          WITH := lexemes "WITH"
                            WITH "with" (18, 10)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "lib" (18, 15)
                          ; := lexemes ";"
                            ; ";" (18, 18)
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "{" "binds" "}"
                                      { := lexemes "{"
                                        { "{" (18, 20)
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "homepage" (19, 5)
                                                = := lexemes "="
                                                  = "=" (19, 14)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (19, 16)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "https://github.com/akryukov/oldstand" (19, 17)
                                                              " := lexemes "\""
                                                                " "\"" (19, 53)
                                                ; := lexemes ";"
                                                  ; ";" (19, 54)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "description" (20, 5)
                                              = := lexemes "="
                                                = "=" (20, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (20, 19)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "An attempt to revive a specific type of Modern style of serif typefaces" (20, 20)
                                                            " := lexemes "\""
                                                              " "\"" (20, 91)
                                              ; := lexemes ";"
                                                ; ";" (20, 92)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "maintainers" (21, 5)
                                            = := lexemes "="
                                              = "=" (21, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "WITH" "expr" ";" "expr_function"
                                                WITH := lexemes "WITH"
                                                  WITH "with" (21, 19)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "maintainers" (21, 24)
                                                ; := lexemes ";"
                                                  ; ";" (21, 35)
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "[" "expr_list" "]"
                                                            [ := lexemes "["
                                                              [ "[" (21, 37)
                                                            expr_list := rules "expr_list" "expr_select"
                                                              expr_list := rules 
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "raskin" (21, 39)
                                                            ] := lexemes "]"
                                                              ] "]" (21, 46)
                                            ; := lexemes ";"
                                              ; ";" (21, 47)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "license" (22, 5)
                                          = := lexemes "="
                                            = "=" (22, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "licenses" (22, 15)
                                                      . := lexemes "."
                                                        . "." (22, 23)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "ofl" (22, 24)
                                          ; := lexemes ";"
                                            ; ";" (22, 27)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "platforms" (23, 5)
                                        = := lexemes "="
                                          = "=" (23, 15)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "platforms" (23, 17)
                                                    . := lexemes "."
                                                      . "." (23, 26)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "all" (23, 27)
                                        ; := lexemes ";"
                                          ; ";" (23, 30)
                                      } := lexemes "}"
                                        } "}" (24, 3)
                      ; := lexemes ";"
                        ; ";" (24, 4)
                    } := lexemes "}"
                      } "}" (25, 1)