---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (5, 12),
     },
    ),
    [
     Raw {
      content: "concatMapStringsSep",
      position: (5, 17),
     },
     Raw {
      content: "concatStringsSep",
      position: (5, 37),
     },
     Raw {
      content: "isInt",
      position: (5, 54),
     },
     Raw {
      content: "isList",
      position: (5, 60),
     },
     Raw {
      content: "literalExpression",
      position: (5, 67),
     },
    ],
   ),
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (6, 12),
     },
    ),
    [
     Raw {
      content: "mapAttrs",
      position: (6, 17),
     },
     Raw {
      content: "mapAttrsToList",
      position: (6, 26),
     },
     Raw {
      content: "mkDefault",
      position: (6, 41),
     },
     Raw {
      content: "mkEnableOption",
      position: (6, 51),
     },
     Raw {
      content: "mkIf",
      position: (6, 66),
     },
     Raw {
      content: "mkOption",
      position: (6, 71),
     },
     Raw {
      content: "optional",
      position: (6, 80),
     },
     Raw {
      content: "types",
      position: (6, 89),
     },
    ],
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (8, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (8, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (8, 16),
       },
       Raw {
        content: "automysqlbackup",
        position: (8, 25),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pkg",
       position: (9, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "pkgs",
      position: (9, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "automysqlbackup",
        position: (9, 14),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "user",
       position: (10, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "automysqlbackup",
      },
     ],
     position: (10, 10),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "group",
       position: (11, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "automysqlbackup",
      },
     ],
     position: (11, 11),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "toStr",
       position: (13, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "val",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: IfThenElse {
      predicate: FunctionApplication {
       function: Variable {
        identifier: "isList",
        position: (14, 8),
       },
       arguments: [
        Variable {
         identifier: "val",
         position: (14, 15),
        },
       ],
      },
      then: String {
       parts: [
        Raw {
         content: "( ",
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "concatMapStringsSep",
           position: (14, 29),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: " ",
             },
            ],
            position: (14, 49),
           },
           Function {
            argument: Some(
             "val",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: String {
             parts: [
              Raw {
               content: "'",
              },
              Expression {
               expression: Variable {
                identifier: "val",
                position: (14, 63),
               },
              },
              Raw {
               content: "'",
              },
             ],
             position: (14, 59),
            },
            position: (14, 54),
           },
           Variable {
            identifier: "val",
            position: (14, 71),
           },
          ],
         },
        },
        Raw {
         content: " )",
        },
       ],
       position: (14, 24),
      },
      else_: IfThenElse {
       predicate: FunctionApplication {
        function: Variable {
         identifier: "isInt",
         position: (15, 13),
        },
        arguments: [
         Variable {
          identifier: "val",
          position: (15, 19),
         },
        ],
       },
       then: FunctionApplication {
        function: Variable {
         identifier: "toString",
         position: (15, 28),
        },
        arguments: [
         Variable {
          identifier: "val",
          position: (15, 37),
         },
        ],
       },
       else_: IfThenElse {
        predicate: BinaryOperation {
         operator: EqualTo,
         operands: [
          Variable {
           identifier: "true",
           position: (16, 13),
          },
          Variable {
           identifier: "val",
           position: (16, 21),
          },
         ],
         position: (16, 18),
        },
        then: String {
         parts: [
          Raw {
           content: "'yes'",
          },
         ],
         position: (16, 30),
        },
        else_: IfThenElse {
         predicate: BinaryOperation {
          operator: EqualTo,
          operands: [
           Variable {
            identifier: "false",
            position: (17, 13),
           },
           Variable {
            identifier: "val",
            position: (17, 22),
           },
          ],
          position: (17, 19),
         },
         then: String {
          parts: [
           Raw {
            content: "'no'",
           },
          ],
          position: (17, 31),
         },
         else_: String {
          parts: [
           Raw {
            content: "'",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (18, 14),
             },
             arguments: [
              Variable {
               identifier: "val",
               position: (18, 23),
              },
             ],
            },
           },
           Raw {
            content: "'",
           },
          ],
          position: (18, 10),
         },
         position: (17, 10),
        },
        position: (16, 10),
       },
       position: (15, 10),
      },
      position: (14, 5),
     },
     position: (13, 11),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "configFile",
       position: (20, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (20, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "writeText",
         position: (20, 21),
        },
       ],
      },
      default: None,
     },
     arguments: [
      String {
       parts: [
        Raw {
         content: "automysqlbackup.conf",
        },
       ],
       position: (20, 31),
      },
      String {
       parts: [
        Raw {
         content: "#version=",
        },
        Expression {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "pkg",
           position: (21, 16),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "version",
             position: (21, 20),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "\n# DONT'T REMOVE THE PREVIOUS VERSION LINE!\n#\n",
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "concatStringsSep",
           position: (24, 7),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
             },
            ],
            position: (24, 24),
           },
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrsToList",
             position: (24, 30),
            },
            arguments: [
             Function {
              argument: Some(
               "name",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "value",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: String {
                parts: [
                 Raw {
                  content: "CONFIG_",
                 },
                 Expression {
                  expression: Variable {
                   identifier: "name",
                   position: (24, 69),
                  },
                 },
                 Raw {
                  content: "=",
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toStr",
                    position: (24, 77),
                   },
                   arguments: [
                    Variable {
                     identifier: "value",
                     position: (24, 83),
                    },
                   ],
                  },
                 },
                ],
                position: (24, 59),
               },
               position: (24, 52),
              },
              position: (24, 46),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (24, 92),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "config",
                 position: (24, 96),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ],
         },
        },
        Raw {
         content: "\n",
        },
       ],
       position: (20, 54),
      },
     ],
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (30, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (31, 5),
          },
          Raw {
           content: "automysqlbackup",
           position: (31, 14),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (33, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (33, 16),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "AutoMySQLBackup",
               },
              ],
              position: (33, 31),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "calendar",
              position: (35, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (35, 18),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (36, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (36, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (36, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (37, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "01:15:00",
                  },
                 ],
                 position: (37, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (38, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Configured when to run the backup service systemd unit (DayOfWeek Year-Month-Day Hour:Minute:Second).\n",
                  },
                 ],
                 position: (38, 23),
                },
               ),
              ],
              recursive: false,
              position: (35, 27),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "config",
              position: (43, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (43, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (44, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "types",
                  position: (44, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (44, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "oneOf",
                     position: (44, 37),
                    },
                    arguments: [
                     List {
                      elements: [
                       Variable {
                        identifier: "str",
                        position: (44, 45),
                       },
                       Variable {
                        identifier: "int",
                        position: (44, 49),
                       },
                       Variable {
                        identifier: "bool",
                        position: (44, 53),
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "listOf",
                         position: (44, 59),
                        },
                        arguments: [
                         Variable {
                          identifier: "str",
                          position: (44, 66),
                         },
                        ],
                       },
                      ],
                      position: (44, 43),
                     },
                    ],
                   },
                  ],
                 },
                 position: (44, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (45, 9),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                 position: (45, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (46, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "automysqlbackup configuration. Refer to\n<filename>",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{pkgs.automysqlbackup}/etc/automysqlbackup.conf</filename>\nfor details on supported values.\n",
                  },
                 ],
                 position: (46, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (51, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (51, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "{\n  db_names = [ \"nextcloud\" \"matomo\" ];\n  table_exclude = [ \"nextcloud.oc_users\" \"nextcloud.oc_whats_new\" ];\n  mailcontent = \"log\";\n  mail_address = \"admin@example.org\";\n}\n",
                    },
                   ],
                   position: (51, 37),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (43, 25),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (31, 32),
        },
       ),
      ],
      recursive: false,
      position: (30, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (65, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (65, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (65, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (65, 21),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "assertions",
             position: (67, 5),
            },
           ],
          },
          List {
           elements: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "assertion",
                  position: (68, 9),
                 },
                ],
               },
               UnaryOperation {
                operator: Not,
                operand: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (68, 22),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "services",
                    position: (68, 29),
                   },
                   Raw {
                    content: "mysqlBackup",
                    position: (68, 38),
                   },
                   Raw {
                    content: "enable",
                    position: (68, 50),
                   },
                  ],
                 },
                 default: None,
                },
                position: (68, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "message",
                  position: (69, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Please choose one of services.mysqlBackup or services.automysqlbackup.",
                 },
                ],
                position: (69, 19),
               },
              ),
             ],
             recursive: false,
             position: (68, 7),
            },
           ],
           position: (67, 18),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (73, 5),
            },
            Raw {
             content: "automysqlbackup",
             position: (73, 14),
            },
            Raw {
             content: "config",
             position: (73, 30),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mapAttrs",
            position: (73, 39),
           },
           arguments: [
            Function {
             argument: Some(
              "name",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Variable {
              identifier: "mkDefault",
              position: (73, 55),
             },
             position: (73, 49),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mysql_dump_username",
                  position: (74, 7),
                 },
                ],
               },
               Variable {
                identifier: "user",
                position: (74, 29),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mysql_dump_host",
                  position: (75, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "localhost",
                 },
                ],
                position: (75, 25),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mysql_dump_socket",
                  position: (76, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/run/mysqld/mysqld.sock",
                 },
                ],
                position: (76, 27),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "backup_dir",
                  position: (77, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/var/backup/mysql",
                 },
                ],
                position: (77, 20),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "db_exclude",
                  position: (78, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "information_schema",
                   },
                  ],
                  position: (78, 22),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "performance_schema",
                   },
                  ],
                  position: (78, 43),
                 },
                ],
                position: (78, 20),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mailcontent",
                  position: (79, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "stdout",
                 },
                ],
                position: (79, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mysql_dump_single_transaction",
                  position: (80, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (80, 39),
               },
              ),
             ],
             recursive: false,
             position: (73, 66),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (83, 5),
            },
            Raw {
             content: "timers",
             position: (83, 13),
            },
            Raw {
             content: "automysqlbackup",
             position: (83, 20),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (84, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "automysqlbackup timer",
               },
              ],
              position: (84, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wantedBy",
                position: (85, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "timers.target",
                 },
                ],
                position: (85, 20),
               },
              ],
              position: (85, 18),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "timerConfig",
                position: (86, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "OnCalendar",
                   position: (87, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (87, 22),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "calendar",
                    position: (87, 26),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "AccuracySec",
                   position: (88, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "5m",
                  },
                 ],
                 position: (88, 23),
                },
               ),
              ],
              recursive: false,
              position: (86, 21),
             },
            ),
           ],
           recursive: false,
           position: (83, 38),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (92, 5),
            },
            Raw {
             content: "services",
             position: (92, 13),
            },
            Raw {
             content: "automysqlbackup",
             position: (92, 22),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (93, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "automysqlbackup service",
               },
              ],
              position: (93, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (94, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "User",
                   position: (95, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "user",
                 position: (95, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "Group",
                   position: (96, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "group",
                 position: (96, 17),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ExecStart",
                   position: (97, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Expression {
                   expression: Variable {
                    identifier: "pkg",
                    position: (97, 24),
                   },
                  },
                  Raw {
                   content: "/bin/automysqlbackup ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "configFile",
                    position: (97, 51),
                   },
                  },
                 ],
                 position: (97, 21),
                },
               ),
              ],
              recursive: false,
              position: (94, 23),
             },
            ),
           ],
           recursive: false,
           position: (92, 40),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (101, 5),
            },
            Raw {
             content: "systemPackages",
             position: (101, 17),
            },
           ],
          },
          List {
           elements: [
            Variable {
             identifier: "pkg",
             position: (101, 36),
            },
           ],
           position: (101, 34),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (103, 5),
            },
            Raw {
             content: "users",
             position: (103, 11),
            },
            Expression {
             expression: Variable {
              identifier: "user",
              position: (103, 19),
             },
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "group",
                position: (104, 7),
               },
              ],
             },
             Variable {
              identifier: "group",
              position: (104, 15),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "isSystemUser",
                position: (105, 7),
               },
              ],
             },
             Variable {
              identifier: "true",
              position: (105, 22),
             },
            ),
           ],
           recursive: false,
           position: (103, 27),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (107, 5),
            },
            Raw {
             content: "groups",
             position: (107, 11),
            },
            Expression {
             expression: Variable {
              identifier: "group",
              position: (107, 20),
             },
            },
           ],
          },
          Map {
           bindings: [],
           recursive: false,
           position: (107, 29),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (109, 5),
            },
            Raw {
             content: "tmpfiles",
             position: (109, 13),
            },
            Raw {
             content: "rules",
             position: (109, 22),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "d '",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (110, 13),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "config",
                   position: (110, 17),
                  },
                  Raw {
                   content: "backup_dir",
                   position: (110, 24),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "' 0750 ",
              },
              Expression {
               expression: Variable {
                identifier: "user",
                position: (110, 44),
               },
              },
              Raw {
               content: " ",
              },
              Expression {
               expression: Variable {
                identifier: "group",
                position: (110, 52),
               },
              },
              Raw {
               content: " - -",
              },
             ],
             position: (110, 7),
            },
           ],
           position: (109, 30),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (113, 5),
            },
            Raw {
             content: "mysql",
             position: (113, 14),
            },
            Raw {
             content: "ensureUsers",
             position: (113, 20),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "optional",
            position: (113, 34),
           },
           arguments: [
            BinaryOperation {
             operator: LogicalAnd,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (113, 44),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (113, 51),
                 },
                 Raw {
                  content: "mysql",
                  position: (113, 60),
                 },
                 Raw {
                  content: "enable",
                  position: (113, 66),
                 },
                ],
               },
               default: None,
              },
              BinaryOperation {
               operator: EqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (113, 76),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "config",
                    position: (113, 80),
                   },
                   Raw {
                    content: "mysql_dump_host",
                    position: (113, 87),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "localhost",
                  },
                 ],
                 position: (113, 106),
                },
               ],
               position: (113, 103),
              },
             ],
             position: (113, 73),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (114, 7),
                 },
                ],
               },
               Variable {
                identifier: "user",
                position: (114, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "ensurePermissions",
                  position: (115, 7),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Expression {
                     expression: __StringParts(
                      [
                       Raw {
                        content: "*.*",
                       },
                      ],
                     ),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "SELECT, SHOW VIEW, TRIGGER, LOCK TABLES",
                    },
                   ],
                   position: (115, 37),
                  },
                 ),
                ],
                recursive: false,
                position: (115, 27),
               },
              ),
             ],
             recursive: false,
             position: (113, 119),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (65, 28),
       },
      ],
     },
    ),
   ],
   recursive: false,
   position: (28, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}