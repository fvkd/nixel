---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "duckling",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (8, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (9, 5),
           },
           Raw {
            content: "duckling",
            position: (9, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (10, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (10, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "duckling",
                 position: (10, 32),
                },
               ],
               position: (10, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "port",
               position: (12, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (12, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (13, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (13, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "port",
                     position: (13, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (14, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 8080,
                  position: (14, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (15, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Port on which duckling will run.\n",
                    position: (16, 1),
                   },
                  ],
                  position: (15, 23),
                 },
                },
               ],
               recursive: false,
               position: (12, 23),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (9, 25),
         },
        },
       ],
       recursive: false,
       position: (8, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (22, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (22, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (22, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (22, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (23, 5),
             },
             Raw {
              content: "services",
              position: (23, 13),
             },
             Raw {
              content: "duckling",
              position: (23, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (24, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Duckling server service",
                 position: (24, 22),
                },
               ],
               position: (24, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (25, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (25, 24),
                  },
                 ],
                 position: (25, 23),
                },
               ],
               position: (25, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (26, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (26, 24),
                  },
                 ],
                 position: (26, 23),
                },
               ],
               position: (26, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "environment",
                 position: (28, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "PORT",
                    position: (29, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "builtins",
                    position: (29, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "toString",
                      position: (29, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (29, 34),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "port",
                       position: (29, 38),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (28, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (32, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (33, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (33, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "haskellPackages",
                        position: (33, 29),
                       },
                       Raw {
                        content: "duckling",
                        position: (33, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/duckling-example-exe --no-access-log --no-error-log",
                    position: (33, 54),
                   },
                  ],
                  position: (33, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (34, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (34, 20),
                   },
                  ],
                  position: (34, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "DynamicUser",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (35, 23),
                 },
                },
               ],
               recursive: false,
               position: (32, 23),
              },
             },
            ],
            recursive: false,
            position: (23, 33),
           },
          },
         ],
         recursive: false,
         position: (22, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (7, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}