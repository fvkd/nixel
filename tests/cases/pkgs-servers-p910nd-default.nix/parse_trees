---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (1, 16)
      } := lexemes "}"
        } "}" (1, 25)
      : := lexemes ":"
        : ":" (1, 26)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (3, 1)
                  . := lexemes "."
                    . "." (3, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (3, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 21)
                  { := lexemes "{"
                    { "{" (3, 25)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules 
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "pname" (4, 3)
                                = := lexemes "="
                                  = "=" (4, 9)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (4, 11)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "p910nd" (4, 12)
                                              " := lexemes "\""
                                                " "\"" (4, 18)
                                ; := lexemes ";"
                                  ; ";" (4, 19)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "version" (5, 3)
                              = := lexemes "="
                                = "=" (5, 11)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (5, 13)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "0.97" (5, 14)
                                            " := lexemes "\""
                                              " "\"" (5, 18)
                              ; := lexemes ";"
                                ; ";" (5, 19)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "src" (7, 3)
                            = := lexemes "="
                              = "=" (7, 7)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "fetchurl" (7, 9)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "{" "binds" "}"
                                          { := lexemes "{"
                                            { "{" (7, 18)
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules 
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "sha256" (8, 5)
                                              = := lexemes "="
                                                = "=" (8, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (8, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "0vy2qf386dif1nqznmy3j953mq7c4lk6j2hgyzkbmfi4msiq1jaa" (8, 15)
                                                            " := lexemes "\""
                                                              " "\"" (8, 67)
                                              ; := lexemes ";"
                                                ; ";" (8, 68)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "url" (9, 5)
                                            = := lexemes "="
                                              = "=" (9, 9)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (9, 11)
                                                          string_parts := rules "string_parts_interpolated"
                                                            string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                              string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                                string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                  string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                    STR := lexemes "STR"
                                                                      STR "mirror://sourceforge/p910nd/" (9, 12)
                                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                      DOLLAR_CURLY "${" (9, 40)
                                                                    expr := rules "expr_function"
                                                                      expr_function := rules "expr_if"
                                                                        expr_if := rules "expr_op"
                                                                          expr_op := rules "expr_app"
                                                                            expr_app := rules "expr_select"
                                                                              expr_select := rules "expr_simple"
                                                                                expr_simple := rules "ID"
                                                                                  ID := lexemes "ID"
                                                                                    ID "pname" (9, 42)
                                                                    } := lexemes "}"
                                                                      } "}" (9, 47)
                                                                  STR := lexemes "STR"
                                                                    STR "-" (9, 48)
                                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                  DOLLAR_CURLY "${" (9, 49)
                                                                expr := rules "expr_function"
                                                                  expr_function := rules "expr_if"
                                                                    expr_if := rules "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "version" (9, 51)
                                                                } := lexemes "}"
                                                                  } "}" (9, 58)
                                                              STR := lexemes "STR"
                                                                STR ".tar.bz2" (9, 59)
                                                          " := lexemes "\""
                                                            " "\"" (9, 67)
                                            ; := lexemes ";"
                                              ; ";" (9, 68)
                                          } := lexemes "}"
                                            } "}" (10, 3)
                            ; := lexemes ";"
                              ; ";" (10, 4)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "postPatch" (12, 3)
                          = := lexemes "="
                            = "=" (12, 13)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                        IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                          IND_STRING_OPEN "''\n" (12, 15)
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                              ind_string_parts := rules 
                                              IND_STR := lexemes "IND_STR"
                                                IND_STR "    substituteInPlace Makefile --replace \"/usr\" \"\"\n    substituteInPlace Makefile --replace \"gcc\" \"" (13, 1)
                                            DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                              DOLLAR_CURLY "${" (14, 49)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "stdenv" (14, 51)
                                                        . := lexemes "."
                                                          . "." (14, 57)
                                                        attrpath := rules "attrpath" "." "attr"
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "cc" (14, 58)
                                                          . := lexemes "."
                                                            . "." (14, 60)
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "targetPrefix" (14, 61)
                                            } := lexemes "}"
                                              } "}" (14, 73)
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "cc\"\n  " (14, 74)
                                        IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                          IND_STRING_CLOSE "''" (15, 3)
                          ; := lexemes ";"
                            ; ";" (15, 5)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "makeFlags" (17, 3)
                        = := lexemes "="
                          = "=" (17, 13)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "[" "expr_list" "]"
                                      [ := lexemes "["
                                        [ "[" (17, 15)
                                      expr_list := rules "expr_list" "expr_select"
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules 
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (17, 17)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "DESTDIR=$(out)" (17, 18)
                                              " := lexemes "\""
                                                " "\"" (17, 32)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (17, 34)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "BINDIR=/bin" (17, 35)
                                            " := lexemes "\""
                                              " "\"" (17, 46)
                                      ] := lexemes "]"
                                        ] "]" (17, 48)
                        ; := lexemes ";"
                          ; ";" (17, 49)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "postInstall" (19, 3)
                      = := lexemes "="
                        = "=" (19, 15)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (19, 17)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules 
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "    # Match the man page:\n    mv $out/etc/init.d/p910nd{,.sh}\n\n    # The legacy init script is useful only (and even then...) as an example:\n    mkdir -p $out/share/doc/examples\n    mv $out/etc $out/share/doc/examples\n  " (20, 1)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (26, 3)
                      ; := lexemes ";"
                        ; ";" (26, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (28, 3)
                    = := lexemes "="
                      = "=" (28, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (28, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (28, 15)
                        ; := lexemes ";"
                          ; ";" (28, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (28, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "description" (29, 5)
                                                = := lexemes "="
                                                  = "=" (29, 17)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (29, 19)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "Small printer daemon passing jobs directly to the printer" (29, 20)
                                                              " := lexemes "\""
                                                                " "\"" (29, 77)
                                                ; := lexemes ";"
                                                  ; ";" (29, 78)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "longDescription" (30, 5)
                                              = := lexemes "="
                                                = "=" (30, 21)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                            IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                              IND_STRING_OPEN "''\n" (30, 23)
                                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                              ind_string_parts := rules 
                                                              IND_STR := lexemes "IND_STR"
                                                                IND_STR "      p910nd is a small printer daemon intended for diskless platforms that\n      does not spool to disk but passes the job directly to the printer.\n      Normally a lpr daemon on a spooling host connects to it with a TCP\n      connection on port 910n (where n=0, 1, or 2 for lp0, 1 and 2\n      respectively). p910nd is particularly useful for diskless platforms.\n      Common Unix Printing System (CUPS) supports this protocol, it's called\n      the AppSocket protocol and has the scheme socket://. LPRng also supports\n      this protocol and the syntax is lp=remotehost%9100 in /etc/printcap.\n    " (31, 1)
                                                            IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                              IND_STRING_CLOSE "''" (39, 5)
                                              ; := lexemes ";"
                                                ; ";" (39, 7)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (40, 5)
                                            = := lexemes "="
                                              = "=" (40, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (40, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "http://p910nd.sourceforge.net/" (40, 17)
                                                          " := lexemes "\""
                                                            " "\"" (40, 47)
                                            ; := lexemes ";"
                                              ; ";" (40, 48)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "downloadPage" (41, 5)
                                          = := lexemes "="
                                            = "=" (41, 18)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (41, 20)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "https://sourceforge.net/projects/p910nd/" (41, 21)
                                                        " := lexemes "\""
                                                          " "\"" (41, 61)
                                          ; := lexemes ";"
                                            ; ";" (41, 62)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (42, 5)
                                        = := lexemes "="
                                          = "=" (42, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "licenses" (42, 15)
                                                    . := lexemes "."
                                                      . "." (42, 23)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "gpl2" (42, 24)
                                        ; := lexemes ";"
                                          ; ";" (42, 28)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "platforms" (43, 5)
                                      = := lexemes "="
                                        = "=" (43, 15)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "platforms" (43, 17)
                                                  . := lexemes "."
                                                    . "." (43, 26)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "unix" (43, 27)
                                      ; := lexemes ";"
                                        ; ";" (43, 31)
                                    } := lexemes "}"
                                      } "}" (44, 3)
                    ; := lexemes ";"
                      ; ";" (44, 4)
                  } := lexemes "}"
                    } "}" (45, 1)