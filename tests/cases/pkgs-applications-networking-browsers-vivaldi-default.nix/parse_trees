---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (1, 16)
            , := lexemes ","
              , "," (1, 24)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "zlib" (1, 26)
              , := lexemes ","
                , "," (1, 30)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "libX11" (1, 32)
                , := lexemes ","
                  , "," (1, 38)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "libXext" (1, 40)
                  , := lexemes ","
                    , "," (1, 47)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "libSM" (1, 49)
                    , := lexemes ","
                      , "," (1, 54)
                    formals := rules "formal" "," "formals"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "libICE" (1, 56)
                      , := lexemes ","
                        , "," (1, 62)
                      formals := rules "formal" "," "formals"
                        formal := rules "ID"
                          ID := lexemes "ID"
                            ID "libxkbcommon" (1, 64)
                        , := lexemes ","
                          , "," (1, 76)
                        formals := rules "formal" "," "formals"
                          formal := rules "ID"
                            ID := lexemes "ID"
                              ID "libxshmfence" (1, 78)
                          , := lexemes ","
                            , "," (2, 1)
                          formals := rules "formal" "," "formals"
                            formal := rules "ID"
                              ID := lexemes "ID"
                                ID "libXfixes" (2, 3)
                            , := lexemes ","
                              , "," (2, 12)
                            formals := rules "formal" "," "formals"
                              formal := rules "ID"
                                ID := lexemes "ID"
                                  ID "libXt" (2, 14)
                              , := lexemes ","
                                , "," (2, 19)
                              formals := rules "formal" "," "formals"
                                formal := rules "ID"
                                  ID := lexemes "ID"
                                    ID "libXi" (2, 21)
                                , := lexemes ","
                                  , "," (2, 26)
                                formals := rules "formal" "," "formals"
                                  formal := rules "ID"
                                    ID := lexemes "ID"
                                      ID "libXcursor" (2, 28)
                                  , := lexemes ","
                                    , "," (2, 38)
                                  formals := rules "formal" "," "formals"
                                    formal := rules "ID"
                                      ID := lexemes "ID"
                                        ID "libXScrnSaver" (2, 40)
                                    , := lexemes ","
                                      , "," (2, 53)
                                    formals := rules "formal" "," "formals"
                                      formal := rules "ID"
                                        ID := lexemes "ID"
                                          ID "libXcomposite" (2, 55)
                                      , := lexemes ","
                                        , "," (2, 68)
                                      formals := rules "formal" "," "formals"
                                        formal := rules "ID"
                                          ID := lexemes "ID"
                                            ID "libXdamage" (2, 70)
                                        , := lexemes ","
                                          , "," (2, 80)
                                        formals := rules "formal" "," "formals"
                                          formal := rules "ID"
                                            ID := lexemes "ID"
                                              ID "libXtst" (2, 82)
                                          , := lexemes ","
                                            , "," (2, 89)
                                          formals := rules "formal" "," "formals"
                                            formal := rules "ID"
                                              ID := lexemes "ID"
                                                ID "libXrandr" (2, 91)
                                            , := lexemes ","
                                              , "," (3, 1)
                                            formals := rules "formal" "," "formals"
                                              formal := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "alsa-lib" (3, 3)
                                              , := lexemes ","
                                                , "," (3, 11)
                                              formals := rules "formal" "," "formals"
                                                formal := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "dbus" (3, 13)
                                                , := lexemes ","
                                                  , "," (3, 17)
                                                formals := rules "formal" "," "formals"
                                                  formal := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "cups" (3, 19)
                                                  , := lexemes ","
                                                    , "," (3, 23)
                                                  formals := rules "formal" "," "formals"
                                                    formal := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "libexif" (3, 25)
                                                    , := lexemes ","
                                                      , "," (3, 32)
                                                    formals := rules "formal" "," "formals"
                                                      formal := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "ffmpeg" (3, 34)
                                                      , := lexemes ","
                                                        , "," (3, 40)
                                                      formals := rules "formal" "," "formals"
                                                        formal := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "systemd" (3, 42)
                                                        , := lexemes ","
                                                          , "," (3, 49)
                                                        formals := rules "formal" "," "formals"
                                                          formal := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "libva" (3, 51)
                                                          , := lexemes ","
                                                            , "," (4, 1)
                                                          formals := rules "formal" "," "formals"
                                                            formal := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "freetype" (4, 3)
                                                            , := lexemes ","
                                                              , "," (4, 11)
                                                            formals := rules "formal" "," "formals"
                                                              formal := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "fontconfig" (4, 13)
                                                              , := lexemes ","
                                                                , "," (4, 23)
                                                              formals := rules "formal" "," "formals"
                                                                formal := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "libXft" (4, 25)
                                                                , := lexemes ","
                                                                  , "," (4, 31)
                                                                formals := rules "formal" "," "formals"
                                                                  formal := rules "ID"
                                                                    ID := lexemes "ID"
                                                                      ID "libXrender" (4, 33)
                                                                  , := lexemes ","
                                                                    , "," (4, 43)
                                                                  formals := rules "formal" "," "formals"
                                                                    formal := rules "ID"
                                                                      ID := lexemes "ID"
                                                                        ID "libxcb" (4, 45)
                                                                    , := lexemes ","
                                                                      , "," (4, 51)
                                                                    formals := rules "formal" "," "formals"
                                                                      formal := rules "ID"
                                                                        ID := lexemes "ID"
                                                                          ID "expat" (4, 53)
                                                                      , := lexemes ","
                                                                        , "," (5, 1)
                                                                      formals := rules "formal" "," "formals"
                                                                        formal := rules "ID"
                                                                          ID := lexemes "ID"
                                                                            ID "libuuid" (5, 3)
                                                                        , := lexemes ","
                                                                          , "," (6, 1)
                                                                        formals := rules "formal" "," "formals"
                                                                          formal := rules "ID"
                                                                            ID := lexemes "ID"
                                                                              ID "libxml2" (6, 3)
                                                                          , := lexemes ","
                                                                            , "," (7, 1)
                                                                          formals := rules "formal" "," "formals"
                                                                            formal := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "glib" (7, 3)
                                                                            , := lexemes ","
                                                                              , "," (7, 7)
                                                                            formals := rules "formal" "," "formals"
                                                                              formal := rules "ID"
                                                                                ID := lexemes "ID"
                                                                                  ID "gtk3" (7, 9)
                                                                              , := lexemes ","
                                                                                , "," (7, 13)
                                                                              formals := rules "formal" "," "formals"
                                                                                formal := rules "ID"
                                                                                  ID := lexemes "ID"
                                                                                    ID "pango" (7, 15)
                                                                                , := lexemes ","
                                                                                  , "," (7, 20)
                                                                                formals := rules "formal" "," "formals"
                                                                                  formal := rules "ID"
                                                                                    ID := lexemes "ID"
                                                                                      ID "gdk-pixbuf" (7, 22)
                                                                                  , := lexemes ","
                                                                                    , "," (7, 32)
                                                                                  formals := rules "formal" "," "formals"
                                                                                    formal := rules "ID"
                                                                                      ID := lexemes "ID"
                                                                                        ID "cairo" (7, 34)
                                                                                    , := lexemes ","
                                                                                      , "," (7, 39)
                                                                                    formals := rules "formal" "," "formals"
                                                                                      formal := rules "ID"
                                                                                        ID := lexemes "ID"
                                                                                          ID "atk" (7, 41)
                                                                                      , := lexemes ","
                                                                                        , "," (7, 44)
                                                                                      formals := rules "formal" "," "formals"
                                                                                        formal := rules "ID"
                                                                                          ID := lexemes "ID"
                                                                                            ID "at-spi2-atk" (7, 46)
                                                                                        , := lexemes ","
                                                                                          , "," (7, 57)
                                                                                        formals := rules "formal" "," "formals"
                                                                                          formal := rules "ID"
                                                                                            ID := lexemes "ID"
                                                                                              ID "at-spi2-core" (7, 59)
                                                                                          , := lexemes ","
                                                                                            , "," (8, 1)
                                                                                          formals := rules "formal" "," "formals"
                                                                                            formal := rules "ID"
                                                                                              ID := lexemes "ID"
                                                                                                ID "libdrm" (8, 3)
                                                                                            , := lexemes ","
                                                                                              , "," (8, 9)
                                                                                            formals := rules "formal" "," "formals"
                                                                                              formal := rules "ID"
                                                                                                ID := lexemes "ID"
                                                                                                  ID "mesa" (8, 11)
                                                                                              , := lexemes ","
                                                                                                , "," (9, 1)
                                                                                              formals := rules "formal" "," "formals"
                                                                                                formal := rules "ID"
                                                                                                  ID := lexemes "ID"
                                                                                                    ID "nss" (9, 3)
                                                                                                , := lexemes ","
                                                                                                  , "," (9, 6)
                                                                                                formals := rules "formal" "," "formals"
                                                                                                  formal := rules "ID"
                                                                                                    ID := lexemes "ID"
                                                                                                      ID "nspr" (9, 8)
                                                                                                  , := lexemes ","
                                                                                                    , "," (10, 1)
                                                                                                  formals := rules "formal" "," "formals"
                                                                                                    formal := rules "ID"
                                                                                                      ID := lexemes "ID"
                                                                                                        ID "patchelf" (10, 3)
                                                                                                    , := lexemes ","
                                                                                                      , "," (10, 11)
                                                                                                    formals := rules "formal" "," "formals"
                                                                                                      formal := rules "ID"
                                                                                                        ID := lexemes "ID"
                                                                                                          ID "makeWrapper" (10, 13)
                                                                                                      , := lexemes ","
                                                                                                        , "," (11, 1)
                                                                                                      formals := rules "formal" "," "formals"
                                                                                                        formal := rules "ID" "?" "expr"
                                                                                                          ID := lexemes "ID"
                                                                                                            ID "isSnapshot" (11, 3)
                                                                                                          ? := lexemes "?"
                                                                                                            ? "?" (11, 14)
                                                                                                          expr := rules "expr_function"
                                                                                                            expr_function := rules "expr_if"
                                                                                                              expr_if := rules "expr_op"
                                                                                                                expr_op := rules "expr_app"
                                                                                                                  expr_app := rules "expr_select"
                                                                                                                    expr_select := rules "expr_simple"
                                                                                                                      expr_simple := rules "ID"
                                                                                                                        ID := lexemes "ID"
                                                                                                                          ID "false" (11, 16)
                                                                                                        , := lexemes ","
                                                                                                          , "," (12, 1)
                                                                                                        formals := rules "formal" "," "formals"
                                                                                                          formal := rules "ID" "?" "expr"
                                                                                                            ID := lexemes "ID"
                                                                                                              ID "proprietaryCodecs" (12, 3)
                                                                                                            ? := lexemes "?"
                                                                                                              ? "?" (12, 21)
                                                                                                            expr := rules "expr_function"
                                                                                                              expr_function := rules "expr_if"
                                                                                                                expr_if := rules "expr_op"
                                                                                                                  expr_op := rules "expr_app"
                                                                                                                    expr_app := rules "expr_select"
                                                                                                                      expr_select := rules "expr_simple"
                                                                                                                        expr_simple := rules "ID"
                                                                                                                          ID := lexemes "ID"
                                                                                                                            ID "false" (12, 23)
                                                                                                          , := lexemes ","
                                                                                                            , "," (12, 28)
                                                                                                          formals := rules "formal" "," "formals"
                                                                                                            formal := rules "ID" "?" "expr"
                                                                                                              ID := lexemes "ID"
                                                                                                                ID "vivaldi-ffmpeg-codecs" (12, 30)
                                                                                                              ? := lexemes "?"
                                                                                                                ? "?" (12, 52)
                                                                                                              expr := rules "expr_function"
                                                                                                                expr_function := rules "expr_if"
                                                                                                                  expr_if := rules "expr_op"
                                                                                                                    expr_op := rules "expr_app"
                                                                                                                      expr_app := rules "expr_select"
                                                                                                                        expr_select := rules "expr_simple"
                                                                                                                          expr_simple := rules "ID"
                                                                                                                            ID := lexemes "ID"
                                                                                                                              ID "null" (12, 54)
                                                                                                            , := lexemes ","
                                                                                                              , "," (13, 1)
                                                                                                            formals := rules "formal" "," "formals"
                                                                                                              formal := rules "ID" "?" "expr"
                                                                                                                ID := lexemes "ID"
                                                                                                                  ID "enableWidevine" (13, 3)
                                                                                                                ? := lexemes "?"
                                                                                                                  ? "?" (13, 18)
                                                                                                                expr := rules "expr_function"
                                                                                                                  expr_function := rules "expr_if"
                                                                                                                    expr_if := rules "expr_op"
                                                                                                                      expr_op := rules "expr_app"
                                                                                                                        expr_app := rules "expr_select"
                                                                                                                          expr_select := rules "expr_simple"
                                                                                                                            expr_simple := rules "ID"
                                                                                                                              ID := lexemes "ID"
                                                                                                                                ID "false" (13, 20)
                                                                                                              , := lexemes ","
                                                                                                                , "," (13, 25)
                                                                                                              formals := rules "formal" "," "formals"
                                                                                                                formal := rules "ID" "?" "expr"
                                                                                                                  ID := lexemes "ID"
                                                                                                                    ID "vivaldi-widevine" (13, 27)
                                                                                                                  ? := lexemes "?"
                                                                                                                    ? "?" (13, 44)
                                                                                                                  expr := rules "expr_function"
                                                                                                                    expr_function := rules "expr_if"
                                                                                                                      expr_if := rules "expr_op"
                                                                                                                        expr_op := rules "expr_app"
                                                                                                                          expr_app := rules "expr_select"
                                                                                                                            expr_select := rules "expr_simple"
                                                                                                                              expr_simple := rules "ID"
                                                                                                                                ID := lexemes "ID"
                                                                                                                                  ID "null" (13, 46)
                                                                                                                , := lexemes ","
                                                                                                                  , "," (14, 1)
                                                                                                                formals := rules "formal" "," "formals"
                                                                                                                  formal := rules "ID" "?" "expr"
                                                                                                                    ID := lexemes "ID"
                                                                                                                      ID "commandLineArgs" (14, 3)
                                                                                                                    ? := lexemes "?"
                                                                                                                      ? "?" (14, 19)
                                                                                                                    expr := rules "expr_function"
                                                                                                                      expr_function := rules "expr_if"
                                                                                                                        expr_if := rules "expr_op"
                                                                                                                          expr_op := rules "expr_app"
                                                                                                                            expr_app := rules "expr_select"
                                                                                                                              expr_select := rules "expr_simple"
                                                                                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                                                                                  " := lexemes "\""
                                                                                                                                    " "\"" (14, 21)
                                                                                                                                  string_parts := rules 
                                                                                                                                  " := lexemes "\""
                                                                                                                                    " "\"" (14, 22)
                                                                                                                  , := lexemes ","
                                                                                                                    , "," (15, 1)
                                                                                                                  formals := rules "formal" "," "formals"
                                                                                                                    formal := rules "ID" "?" "expr"
                                                                                                                      ID := lexemes "ID"
                                                                                                                        ID "pulseSupport" (15, 3)
                                                                                                                      ? := lexemes "?"
                                                                                                                        ? "?" (15, 16)
                                                                                                                      expr := rules "expr_function"
                                                                                                                        expr_function := rules "expr_if"
                                                                                                                          expr_if := rules "expr_op"
                                                                                                                            expr_op := rules "expr_app"
                                                                                                                              expr_app := rules "expr_select"
                                                                                                                                expr_select := rules "expr_simple" "." "attrpath"
                                                                                                                                  expr_simple := rules "ID"
                                                                                                                                    ID := lexemes "ID"
                                                                                                                                      ID "stdenv" (15, 18)
                                                                                                                                  . := lexemes "."
                                                                                                                                    . "." (15, 24)
                                                                                                                                  attrpath := rules "attr"
                                                                                                                                    attr := rules "ID"
                                                                                                                                      ID := lexemes "ID"
                                                                                                                                        ID "isLinux" (15, 25)
                                                                                                                    , := lexemes ","
                                                                                                                      , "," (15, 32)
                                                                                                                    formals := rules "formal"
                                                                                                                      formal := rules "ID"
                                                                                                                        ID := lexemes "ID"
                                                                                                                          ID "libpulseaudio" (15, 34)
      } := lexemes "}"
        } "}" (16, 1)
      : := lexemes ":"
        : ":" (16, 2)
      expr_function := rules "LET" "binds" "IN" "expr_function"
        LET := lexemes "LET"
          LET "let" (18, 1)
        binds := rules "binds" "attrpath" "=" "expr" ";"
          binds := rules "binds" "attrpath" "=" "expr" ";"
            binds := rules 
            attrpath := rules "attr"
              attr := rules "ID"
                ID := lexemes "ID"
                  ID "branch" (19, 3)
            = := lexemes "="
              = "=" (19, 10)
            expr := rules "expr_function"
              expr_function := rules "expr_if"
                expr_if := rules "IF" "expr" "THEN" "expr" "ELSE" "expr"
                  IF := lexemes "IF"
                    IF "if" (19, 12)
                  expr := rules "expr_function"
                    expr_function := rules "expr_if"
                      expr_if := rules "expr_op"
                        expr_op := rules "expr_app"
                          expr_app := rules "expr_select"
                            expr_select := rules "expr_simple"
                              expr_simple := rules "ID"
                                ID := lexemes "ID"
                                  ID "isSnapshot" (19, 15)
                  THEN := lexemes "THEN"
                    THEN "then" (19, 26)
                  expr := rules "expr_function"
                    expr_function := rules "expr_if"
                      expr_if := rules "expr_op"
                        expr_op := rules "expr_app"
                          expr_app := rules "expr_select"
                            expr_select := rules "expr_simple"
                              expr_simple := rules "\"" "string_parts" "\""
                                " := lexemes "\""
                                  " "\"" (19, 31)
                                string_parts := rules "STR"
                                  STR := lexemes "STR"
                                    STR "snapshot" (19, 32)
                                " := lexemes "\""
                                  " "\"" (19, 40)
                  ELSE := lexemes "ELSE"
                    ELSE "else" (19, 42)
                  expr := rules "expr_function"
                    expr_function := rules "expr_if"
                      expr_if := rules "expr_op"
                        expr_op := rules "expr_app"
                          expr_app := rules "expr_select"
                            expr_select := rules "expr_simple"
                              expr_simple := rules "\"" "string_parts" "\""
                                " := lexemes "\""
                                  " "\"" (19, 47)
                                string_parts := rules "STR"
                                  STR := lexemes "STR"
                                    STR "stable" (19, 48)
                                " := lexemes "\""
                                  " "\"" (19, 54)
            ; := lexemes ";"
              ; ";" (19, 55)
          attrpath := rules "attr"
            attr := rules "ID"
              ID := lexemes "ID"
                ID "vivaldiName" (20, 3)
          = := lexemes "="
            = "=" (20, 15)
          expr := rules "expr_function"
            expr_function := rules "expr_if"
              expr_if := rules "IF" "expr" "THEN" "expr" "ELSE" "expr"
                IF := lexemes "IF"
                  IF "if" (20, 17)
                expr := rules "expr_function"
                  expr_function := rules "expr_if"
                    expr_if := rules "expr_op"
                      expr_op := rules "expr_app"
                        expr_app := rules "expr_select"
                          expr_select := rules "expr_simple"
                            expr_simple := rules "ID"
                              ID := lexemes "ID"
                                ID "isSnapshot" (20, 20)
                THEN := lexemes "THEN"
                  THEN "then" (20, 31)
                expr := rules "expr_function"
                  expr_function := rules "expr_if"
                    expr_if := rules "expr_op"
                      expr_op := rules "expr_app"
                        expr_app := rules "expr_select"
                          expr_select := rules "expr_simple"
                            expr_simple := rules "\"" "string_parts" "\""
                              " := lexemes "\""
                                " "\"" (20, 36)
                              string_parts := rules "STR"
                                STR := lexemes "STR"
                                  STR "vivaldi-snapshot" (20, 37)
                              " := lexemes "\""
                                " "\"" (20, 53)
                ELSE := lexemes "ELSE"
                  ELSE "else" (20, 55)
                expr := rules "expr_function"
                  expr_function := rules "expr_if"
                    expr_if := rules "expr_op"
                      expr_op := rules "expr_app"
                        expr_app := rules "expr_select"
                          expr_select := rules "expr_simple"
                            expr_simple := rules "\"" "string_parts" "\""
                              " := lexemes "\""
                                " "\"" (20, 60)
                              string_parts := rules "STR"
                                STR := lexemes "STR"
                                  STR "vivaldi" (20, 61)
                              " := lexemes "\""
                                " "\"" (20, 68)
          ; := lexemes ";"
            ; ";" (20, 69)
        IN := lexemes "IN"
          IN "in" (21, 1)
        expr_function := rules "expr_if"
          expr_if := rules "expr_op"
            expr_op := rules "expr_app"
              expr_app := rules "expr_app" "expr_select"
                expr_app := rules "expr_select"
                  expr_select := rules "expr_simple" "." "attrpath"
                    expr_simple := rules "ID"
                      ID := lexemes "ID"
                        ID "stdenv" (21, 4)
                    . := lexemes "."
                      . "." (21, 10)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "mkDerivation" (21, 11)
                expr_select := rules "expr_simple"
                  expr_simple := rules "REC" "{" "binds" "}"
                    REC := lexemes "REC"
                      REC "rec" (21, 24)
                    { := lexemes "{"
                      { "{" (21, 28)
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "pname" (22, 3)
                                            = := lexemes "="
                                              = "=" (22, 9)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (22, 11)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "vivaldi" (22, 12)
                                                          " := lexemes "\""
                                                            " "\"" (22, 19)
                                            ; := lexemes ";"
                                              ; ";" (22, 20)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "version" (23, 3)
                                          = := lexemes "="
                                            = "=" (23, 11)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (23, 13)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "5.1.2567.73-1" (23, 14)
                                                        " := lexemes "\""
                                                          " "\"" (23, 27)
                                          ; := lexemes ";"
                                            ; ";" (23, 28)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "src" (25, 3)
                                        = := lexemes "="
                                          = "=" (25, 7)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_app" "expr_select"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "fetchurl" (25, 9)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "{" "binds" "}"
                                                      { := lexemes "{"
                                                        { "{" (25, 18)
                                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                                          binds := rules 
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "url" (26, 5)
                                                          = := lexemes "="
                                                            = "=" (26, 9)
                                                          expr := rules "expr_function"
                                                            expr_function := rules "expr_if"
                                                              expr_if := rules "expr_op"
                                                                expr_op := rules "expr_app"
                                                                  expr_app := rules "expr_select"
                                                                    expr_select := rules "expr_simple"
                                                                      expr_simple := rules "\"" "string_parts" "\""
                                                                        " := lexemes "\""
                                                                          " "\"" (26, 11)
                                                                        string_parts := rules "string_parts_interpolated"
                                                                          string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                            string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                                              string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                                string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                                                  string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                                    string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                                      STR := lexemes "STR"
                                                                                        STR "https://downloads.vivaldi.com/" (26, 12)
                                                                                      DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                        DOLLAR_CURLY "${" (26, 42)
                                                                                      expr := rules "expr_function"
                                                                                        expr_function := rules "expr_if"
                                                                                          expr_if := rules "expr_op"
                                                                                            expr_op := rules "expr_app"
                                                                                              expr_app := rules "expr_select"
                                                                                                expr_select := rules "expr_simple"
                                                                                                  expr_simple := rules "ID"
                                                                                                    ID := lexemes "ID"
                                                                                                      ID "branch" (26, 44)
                                                                                      } := lexemes "}"
                                                                                        } "}" (26, 50)
                                                                                    STR := lexemes "STR"
                                                                                      STR "/vivaldi-" (26, 51)
                                                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                    DOLLAR_CURLY "${" (26, 60)
                                                                                  expr := rules "expr_function"
                                                                                    expr_function := rules "expr_if"
                                                                                      expr_if := rules "expr_op"
                                                                                        expr_op := rules "expr_app"
                                                                                          expr_app := rules "expr_select"
                                                                                            expr_select := rules "expr_simple"
                                                                                              expr_simple := rules "ID"
                                                                                                ID := lexemes "ID"
                                                                                                  ID "branch" (26, 62)
                                                                                  } := lexemes "}"
                                                                                    } "}" (26, 68)
                                                                                STR := lexemes "STR"
                                                                                  STR "_" (26, 69)
                                                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                DOLLAR_CURLY "${" (26, 70)
                                                                              expr := rules "expr_function"
                                                                                expr_function := rules "expr_if"
                                                                                  expr_if := rules "expr_op"
                                                                                    expr_op := rules "expr_app"
                                                                                      expr_app := rules "expr_select"
                                                                                        expr_select := rules "expr_simple"
                                                                                          expr_simple := rules "ID"
                                                                                            ID := lexemes "ID"
                                                                                              ID "version" (26, 72)
                                                                              } := lexemes "}"
                                                                                } "}" (26, 79)
                                                                            STR := lexemes "STR"
                                                                              STR "_amd64.deb" (26, 80)
                                                                        " := lexemes "\""
                                                                          " "\"" (26, 90)
                                                          ; := lexemes ";"
                                                            ; ";" (26, 91)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "sha256" (27, 5)
                                                        = := lexemes "="
                                                          = "=" (27, 12)
                                                        expr := rules "expr_function"
                                                          expr_function := rules "expr_if"
                                                            expr_if := rules "expr_op"
                                                              expr_op := rules "expr_app"
                                                                expr_app := rules "expr_select"
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "\"" "string_parts" "\""
                                                                      " := lexemes "\""
                                                                        " "\"" (27, 14)
                                                                      string_parts := rules "STR"
                                                                        STR := lexemes "STR"
                                                                          STR "04jzhipn4ip7x3zdwmfnp6w0qc2y1qdfy5w3qyy0r114jz9s9i7g" (27, 15)
                                                                      " := lexemes "\""
                                                                        " "\"" (27, 67)
                                                        ; := lexemes ";"
                                                          ; ";" (27, 68)
                                                      } := lexemes "}"
                                                        } "}" (28, 3)
                                        ; := lexemes ";"
                                          ; ";" (28, 4)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "unpackPhase" (30, 3)
                                      = := lexemes "="
                                        = "=" (30, 15)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                      IND_STRING_OPEN "''\n" (30, 17)
                                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                      ind_string_parts := rules 
                                                      IND_STR := lexemes "IND_STR"
                                                        IND_STR "    ar vx $src\n    tar -xvf data.tar.xz\n  " (31, 1)
                                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                      IND_STRING_CLOSE "''" (33, 3)
                                      ; := lexemes ";"
                                        ; ";" (33, 5)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "nativeBuildInputs" (35, 3)
                                    = := lexemes "="
                                      = "=" (35, 21)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "[" "expr_list" "]"
                                                  [ := lexemes "["
                                                    [ "[" (35, 23)
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules 
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "patchelf" (35, 25)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "makeWrapper" (35, 34)
                                                  ] := lexemes "]"
                                                    ] "]" (35, 46)
                                    ; := lexemes ";"
                                      ; ";" (35, 47)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "buildInputs" (37, 3)
                                  = := lexemes "="
                                    = "=" (37, 15)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_op" "CONCAT" "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "[" "expr_list" "]"
                                                  [ := lexemes "["
                                                    [ "[" (37, 17)
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules "expr_list" "expr_select"
                                                            expr_list := rules "expr_list" "expr_select"
                                                              expr_list := rules "expr_list" "expr_select"
                                                                expr_list := rules "expr_list" "expr_select"
                                                                  expr_list := rules "expr_list" "expr_select"
                                                                    expr_list := rules "expr_list" "expr_select"
                                                                      expr_list := rules "expr_list" "expr_select"
                                                                        expr_list := rules "expr_list" "expr_select"
                                                                          expr_list := rules "expr_list" "expr_select"
                                                                            expr_list := rules "expr_list" "expr_select"
                                                                              expr_list := rules "expr_list" "expr_select"
                                                                                expr_list := rules "expr_list" "expr_select"
                                                                                  expr_list := rules "expr_list" "expr_select"
                                                                                    expr_list := rules "expr_list" "expr_select"
                                                                                      expr_list := rules "expr_list" "expr_select"
                                                                                        expr_list := rules "expr_list" "expr_select"
                                                                                          expr_list := rules "expr_list" "expr_select"
                                                                                            expr_list := rules "expr_list" "expr_select"
                                                                                              expr_list := rules "expr_list" "expr_select"
                                                                                                expr_list := rules "expr_list" "expr_select"
                                                                                                  expr_list := rules "expr_list" "expr_select"
                                                                                                    expr_list := rules "expr_list" "expr_select"
                                                                                                      expr_list := rules "expr_list" "expr_select"
                                                                                                        expr_list := rules "expr_list" "expr_select"
                                                                                                          expr_list := rules "expr_list" "expr_select"
                                                                                                            expr_list := rules "expr_list" "expr_select"
                                                                                                              expr_list := rules "expr_list" "expr_select"
                                                                                                                expr_list := rules "expr_list" "expr_select"
                                                                                                                  expr_list := rules "expr_list" "expr_select"
                                                                                                                    expr_list := rules "expr_list" "expr_select"
                                                                                                                      expr_list := rules "expr_list" "expr_select"
                                                                                                                        expr_list := rules "expr_list" "expr_select"
                                                                                                                          expr_list := rules "expr_list" "expr_select"
                                                                                                                            expr_list := rules "expr_list" "expr_select"
                                                                                                                              expr_list := rules "expr_list" "expr_select"
                                                                                                                                expr_list := rules "expr_list" "expr_select"
                                                                                                                                  expr_list := rules "expr_list" "expr_select"
                                                                                                                                    expr_list := rules "expr_list" "expr_select"
                                                                                                                                      expr_list := rules "expr_list" "expr_select"
                                                                                                                                        expr_list := rules "expr_list" "expr_select"
                                                                                                                                          expr_list := rules "expr_list" "expr_select"
                                                                                                                                            expr_list := rules 
                                                                                                                                            expr_select := rules "expr_simple" "." "attrpath"
                                                                                                                                              expr_simple := rules "ID"
                                                                                                                                                ID := lexemes "ID"
                                                                                                                                                  ID "stdenv" (38, 5)
                                                                                                                                              . := lexemes "."
                                                                                                                                                . "." (38, 11)
                                                                                                                                              attrpath := rules "attrpath" "." "attr"
                                                                                                                                                attrpath := rules "attr"
                                                                                                                                                  attr := rules "ID"
                                                                                                                                                    ID := lexemes "ID"
                                                                                                                                                      ID "cc" (38, 12)
                                                                                                                                                . := lexemes "."
                                                                                                                                                  . "." (38, 14)
                                                                                                                                                attr := rules "ID"
                                                                                                                                                  ID := lexemes "ID"
                                                                                                                                                    ID "cc" (38, 15)
                                                                                                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                                                                                                            expr_simple := rules "ID"
                                                                                                                                              ID := lexemes "ID"
                                                                                                                                                ID "stdenv" (38, 18)
                                                                                                                                            . := lexemes "."
                                                                                                                                              . "." (38, 24)
                                                                                                                                            attrpath := rules "attrpath" "." "attr"
                                                                                                                                              attrpath := rules "attr"
                                                                                                                                                attr := rules "ID"
                                                                                                                                                  ID := lexemes "ID"
                                                                                                                                                    ID "cc" (38, 25)
                                                                                                                                              . := lexemes "."
                                                                                                                                                . "." (38, 27)
                                                                                                                                              attr := rules "ID"
                                                                                                                                                ID := lexemes "ID"
                                                                                                                                                  ID "libc" (38, 28)
                                                                                                                                        expr_select := rules "expr_simple"
                                                                                                                                          expr_simple := rules "ID"
                                                                                                                                            ID := lexemes "ID"
                                                                                                                                              ID "zlib" (38, 33)
                                                                                                                                      expr_select := rules "expr_simple"
                                                                                                                                        expr_simple := rules "ID"
                                                                                                                                          ID := lexemes "ID"
                                                                                                                                            ID "libX11" (38, 38)
                                                                                                                                    expr_select := rules "expr_simple"
                                                                                                                                      expr_simple := rules "ID"
                                                                                                                                        ID := lexemes "ID"
                                                                                                                                          ID "libXt" (38, 45)
                                                                                                                                  expr_select := rules "expr_simple"
                                                                                                                                    expr_simple := rules "ID"
                                                                                                                                      ID := lexemes "ID"
                                                                                                                                        ID "libXext" (38, 51)
                                                                                                                                expr_select := rules "expr_simple"
                                                                                                                                  expr_simple := rules "ID"
                                                                                                                                    ID := lexemes "ID"
                                                                                                                                      ID "libSM" (38, 59)
                                                                                                                              expr_select := rules "expr_simple"
                                                                                                                                expr_simple := rules "ID"
                                                                                                                                  ID := lexemes "ID"
                                                                                                                                    ID "libICE" (38, 65)
                                                                                                                            expr_select := rules "expr_simple"
                                                                                                                              expr_simple := rules "ID"
                                                                                                                                ID := lexemes "ID"
                                                                                                                                  ID "libxcb" (38, 72)
                                                                                                                          expr_select := rules "expr_simple"
                                                                                                                            expr_simple := rules "ID"
                                                                                                                              ID := lexemes "ID"
                                                                                                                                ID "libxkbcommon" (38, 79)
                                                                                                                        expr_select := rules "expr_simple"
                                                                                                                          expr_simple := rules "ID"
                                                                                                                            ID := lexemes "ID"
                                                                                                                              ID "libxshmfence" (38, 92)
                                                                                                                      expr_select := rules "expr_simple"
                                                                                                                        expr_simple := rules "ID"
                                                                                                                          ID := lexemes "ID"
                                                                                                                            ID "libXi" (39, 5)
                                                                                                                    expr_select := rules "expr_simple"
                                                                                                                      expr_simple := rules "ID"
                                                                                                                        ID := lexemes "ID"
                                                                                                                          ID "libXft" (39, 11)
                                                                                                                  expr_select := rules "expr_simple"
                                                                                                                    expr_simple := rules "ID"
                                                                                                                      ID := lexemes "ID"
                                                                                                                        ID "libXcursor" (39, 18)
                                                                                                                expr_select := rules "expr_simple"
                                                                                                                  expr_simple := rules "ID"
                                                                                                                    ID := lexemes "ID"
                                                                                                                      ID "libXfixes" (39, 29)
                                                                                                              expr_select := rules "expr_simple"
                                                                                                                expr_simple := rules "ID"
                                                                                                                  ID := lexemes "ID"
                                                                                                                    ID "libXScrnSaver" (39, 39)
                                                                                                            expr_select := rules "expr_simple"
                                                                                                              expr_simple := rules "ID"
                                                                                                                ID := lexemes "ID"
                                                                                                                  ID "libXcomposite" (39, 53)
                                                                                                          expr_select := rules "expr_simple"
                                                                                                            expr_simple := rules "ID"
                                                                                                              ID := lexemes "ID"
                                                                                                                ID "libXdamage" (39, 67)
                                                                                                        expr_select := rules "expr_simple"
                                                                                                          expr_simple := rules "ID"
                                                                                                            ID := lexemes "ID"
                                                                                                              ID "libXtst" (39, 78)
                                                                                                      expr_select := rules "expr_simple"
                                                                                                        expr_simple := rules "ID"
                                                                                                          ID := lexemes "ID"
                                                                                                            ID "libXrandr" (39, 86)
                                                                                                    expr_select := rules "expr_simple"
                                                                                                      expr_simple := rules "ID"
                                                                                                        ID := lexemes "ID"
                                                                                                          ID "atk" (40, 5)
                                                                                                  expr_select := rules "expr_simple"
                                                                                                    expr_simple := rules "ID"
                                                                                                      ID := lexemes "ID"
                                                                                                        ID "at-spi2-atk" (40, 9)
                                                                                                expr_select := rules "expr_simple"
                                                                                                  expr_simple := rules "ID"
                                                                                                    ID := lexemes "ID"
                                                                                                      ID "at-spi2-core" (40, 21)
                                                                                              expr_select := rules "expr_simple"
                                                                                                expr_simple := rules "ID"
                                                                                                  ID := lexemes "ID"
                                                                                                    ID "alsa-lib" (40, 34)
                                                                                            expr_select := rules "expr_simple"
                                                                                              expr_simple := rules "ID"
                                                                                                ID := lexemes "ID"
                                                                                                  ID "dbus" (40, 43)
                                                                                          expr_select := rules "expr_simple"
                                                                                            expr_simple := rules "ID"
                                                                                              ID := lexemes "ID"
                                                                                                ID "cups" (40, 48)
                                                                                        expr_select := rules "expr_simple"
                                                                                          expr_simple := rules "ID"
                                                                                            ID := lexemes "ID"
                                                                                              ID "gtk3" (40, 53)
                                                                                      expr_select := rules "expr_simple"
                                                                                        expr_simple := rules "ID"
                                                                                          ID := lexemes "ID"
                                                                                            ID "gdk-pixbuf" (40, 58)
                                                                                    expr_select := rules "expr_simple"
                                                                                      expr_simple := rules "ID"
                                                                                        ID := lexemes "ID"
                                                                                          ID "libexif" (40, 69)
                                                                                  expr_select := rules "expr_simple"
                                                                                    expr_simple := rules "ID"
                                                                                      ID := lexemes "ID"
                                                                                        ID "ffmpeg" (40, 77)
                                                                                expr_select := rules "expr_simple"
                                                                                  expr_simple := rules "ID"
                                                                                    ID := lexemes "ID"
                                                                                      ID "systemd" (40, 84)
                                                                              expr_select := rules "expr_simple"
                                                                                expr_simple := rules "ID"
                                                                                  ID := lexemes "ID"
                                                                                    ID "libva" (40, 92)
                                                                            expr_select := rules "expr_simple"
                                                                              expr_simple := rules "ID"
                                                                                ID := lexemes "ID"
                                                                                  ID "freetype" (41, 5)
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "fontconfig" (41, 14)
                                                                        expr_select := rules "expr_simple"
                                                                          expr_simple := rules "ID"
                                                                            ID := lexemes "ID"
                                                                              ID "libXrender" (41, 25)
                                                                      expr_select := rules "expr_simple"
                                                                        expr_simple := rules "ID"
                                                                          ID := lexemes "ID"
                                                                            ID "libuuid" (41, 36)
                                                                    expr_select := rules "expr_simple"
                                                                      expr_simple := rules "ID"
                                                                        ID := lexemes "ID"
                                                                          ID "expat" (41, 44)
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "ID"
                                                                      ID := lexemes "ID"
                                                                        ID "glib" (41, 50)
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "ID"
                                                                    ID := lexemes "ID"
                                                                      ID "nss" (41, 55)
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "nspr" (41, 59)
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "libxml2" (42, 5)
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "pango" (42, 13)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "cairo" (42, 19)
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "libdrm" (43, 5)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "mesa" (43, 12)
                                                  ] := lexemes "]"
                                                    ] "]" (44, 3)
                                          CONCAT := lexemes "CONCAT"
                                            CONCAT "++" (44, 5)
                                          expr_op := rules "expr_op" "CONCAT" "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_app" "expr_select"
                                                expr_app := rules "expr_app" "expr_select"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "lib" (44, 8)
                                                      . := lexemes "."
                                                        . "." (44, 11)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "optional" (44, 12)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "proprietaryCodecs" (44, 21)
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "vivaldi-ffmpeg-codecs" (44, 39)
                                            CONCAT := lexemes "CONCAT"
                                              CONCAT "++" (45, 5)
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_app" "expr_select"
                                                expr_app := rules "expr_app" "expr_select"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "lib" (45, 8)
                                                      . := lexemes "."
                                                        . "." (45, 11)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "optional" (45, 12)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "pulseSupport" (45, 21)
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "libpulseaudio" (45, 34)
                                  ; := lexemes ";"
                                    ; ";" (45, 47)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "libPath" (47, 3)
                                = := lexemes "="
                                  = "=" (47, 11)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_op" "+" "expr_op"
                                        expr_op := rules "expr_op" "+" "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_app" "expr_select"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "lib" (47, 13)
                                                  . := lexemes "."
                                                    . "." (47, 16)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "makeLibraryPath" (47, 17)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "buildInputs" (47, 33)
                                          + := lexemes "+"
                                            + "+" (48, 5)
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_app" "expr_select"
                                              expr_app := rules "expr_app" "expr_select"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "lib" (48, 7)
                                                    . := lexemes "."
                                                      . "." (48, 10)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "optionalString" (48, 11)
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "(" "expr" ")"
                                                    ( := lexemes "("
                                                      ( "(" (48, 26)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple" "." "attrpath"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "stdenv" (48, 27)
                                                                . := lexemes "."
                                                                  . "." (48, 33)
                                                                attrpath := rules "attr"
                                                                  attr := rules "ID"
                                                                    ID := lexemes "ID"
                                                                      ID "is64bit" (48, 34)
                                                    ) := lexemes ")"
                                                      ) ")" (48, 41)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "(" "expr" ")"
                                                  ( := lexemes "("
                                                    ( "(" (49, 7)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_op" "+" "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (49, 8)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR ":" (49, 9)
                                                                  " := lexemes "\""
                                                                    " "\"" (49, 10)
                                                          + := lexemes "+"
                                                            + "+" (49, 12)
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_app" "expr_select"
                                                              expr_app := rules "expr_app" "expr_select"
                                                                expr_app := rules "expr_app" "expr_select"
                                                                  expr_app := rules "expr_select"
                                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                                      expr_simple := rules "ID"
                                                                        ID := lexemes "ID"
                                                                          ID "lib" (49, 14)
                                                                      . := lexemes "."
                                                                        . "." (49, 17)
                                                                      attrpath := rules "attr"
                                                                        attr := rules "ID"
                                                                          ID := lexemes "ID"
                                                                            ID "makeSearchPathOutput" (49, 18)
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "\"" "string_parts" "\""
                                                                      " := lexemes "\""
                                                                        " "\"" (49, 39)
                                                                      string_parts := rules "STR"
                                                                        STR := lexemes "STR"
                                                                          STR "lib" (49, 40)
                                                                      " := lexemes "\""
                                                                        " "\"" (49, 43)
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "\"" "string_parts" "\""
                                                                    " := lexemes "\""
                                                                      " "\"" (49, 45)
                                                                    string_parts := rules "STR"
                                                                      STR := lexemes "STR"
                                                                        STR "lib64" (49, 46)
                                                                    " := lexemes "\""
                                                                      " "\"" (49, 51)
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "buildInputs" (49, 53)
                                                  ) := lexemes ")"
                                                    ) ")" (49, 64)
                                        + := lexemes "+"
                                          + "+" (50, 5)
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (50, 7)
                                                string_parts := rules "string_parts_interpolated"
                                                  string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                    string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                      STR := lexemes "STR"
                                                        STR ":$out/opt/" (50, 8)
                                                      DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                        DOLLAR_CURLY "${" (50, 18)
                                                      expr := rules "expr_function"
                                                        expr_function := rules "expr_if"
                                                          expr_if := rules "expr_op"
                                                            expr_op := rules "expr_app"
                                                              expr_app := rules "expr_select"
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "ID"
                                                                    ID := lexemes "ID"
                                                                      ID "vivaldiName" (50, 20)
                                                      } := lexemes "}"
                                                        } "}" (50, 31)
                                                    STR := lexemes "STR"
                                                      STR "/lib" (50, 32)
                                                " := lexemes "\""
                                                  " "\"" (50, 36)
                                ; := lexemes ";"
                                  ; ";" (50, 37)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "buildPhase" (52, 3)
                              = := lexemes "="
                                = "=" (52, 14)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_op" "+" "expr_op"
                                      expr_op := rules "expr_op" "+" "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                  IND_STRING_OPEN "''\n" (52, 16)
                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                  ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                      ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                          ind_string_parts := rules 
                                                          IND_STR := lexemes "IND_STR"
                                                            IND_STR "    runHook preBuild\n    echo \"Patching Vivaldi binaries\"\n    for f in chrome_crashpad_handler vivaldi-bin vivaldi-sandbox ; do\n      patchelf \\\n        --set-interpreter \"$(cat $NIX_CC/nix-support/dynamic-linker)\" \\\n        --set-rpath \"" (53, 1)
                                                        DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                          DOLLAR_CURLY "${" (58, 22)
                                                        expr := rules "expr_function"
                                                          expr_function := rules "expr_if"
                                                            expr_if := rules "expr_op"
                                                              expr_op := rules "expr_app"
                                                                expr_app := rules "expr_select"
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "ID"
                                                                      ID := lexemes "ID"
                                                                        ID "libPath" (58, 24)
                                                        } := lexemes "}"
                                                          } "}" (58, 31)
                                                      IND_STR := lexemes "IND_STR"
                                                        IND_STR "\" \\\n        opt/" (58, 32)
                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                      DOLLAR_CURLY "${" (59, 13)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "vivaldiName" (59, 15)
                                                    } := lexemes "}"
                                                      } "}" (59, 26)
                                                  IND_STR := lexemes "IND_STR"
                                                    IND_STR "/$f\n    done\n  " (59, 27)
                                                IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                  IND_STRING_CLOSE "''" (61, 3)
                                        + := lexemes "+"
                                          + "+" (61, 6)
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_app" "expr_select"
                                            expr_app := rules "expr_app" "expr_select"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "lib" (61, 8)
                                                  . := lexemes "."
                                                    . "." (61, 11)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "optionalString" (61, 12)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "proprietaryCodecs" (61, 27)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                  IND_STRING_OPEN "''\n" (61, 45)
                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                  ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                      ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                          ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                              ind_string_parts := rules 
                                                              IND_STR := lexemes "IND_STR"
                                                                IND_STR "    ln -s " (62, 1)
                                                            DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                              DOLLAR_CURLY "${" (62, 11)
                                                            expr := rules "expr_function"
                                                              expr_function := rules "expr_if"
                                                                expr_if := rules "expr_op"
                                                                  expr_op := rules "expr_app"
                                                                    expr_app := rules "expr_select"
                                                                      expr_select := rules "expr_simple"
                                                                        expr_simple := rules "ID"
                                                                          ID := lexemes "ID"
                                                                            ID "vivaldi-ffmpeg-codecs" (62, 13)
                                                            } := lexemes "}"
                                                              } "}" (62, 34)
                                                          IND_STR := lexemes "IND_STR"
                                                            IND_STR "/lib/libffmpeg.so opt/" (62, 35)
                                                        DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                          DOLLAR_CURLY "${" (62, 57)
                                                        expr := rules "expr_function"
                                                          expr_function := rules "expr_if"
                                                            expr_if := rules "expr_op"
                                                              expr_op := rules "expr_app"
                                                                expr_app := rules "expr_select"
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "ID"
                                                                      ID := lexemes "ID"
                                                                        ID "vivaldiName" (62, 59)
                                                        } := lexemes "}"
                                                          } "}" (62, 70)
                                                      IND_STR := lexemes "IND_STR"
                                                        IND_STR "/libffmpeg.so." (62, 71)
                                                    IND_STR := lexemes "IND_STR"
                                                      IND_STR "$" (62, 85)
                                                  IND_STR := lexemes "IND_STR"
                                                    IND_STR "{version%\\.*\\.*}\n  " (62, 88)
                                                IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                  IND_STRING_CLOSE "''" (63, 3)
                                      + := lexemes "+"
                                        + "+" (63, 6)
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                              IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                IND_STRING_OPEN "''\n" (63, 8)
                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                ind_string_parts := rules 
                                                IND_STR := lexemes "IND_STR"
                                                  IND_STR "    echo \"Finished patching Vivaldi binaries\"\n    runHook postBuild\n  " (64, 1)
                                              IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                IND_STRING_CLOSE "''" (66, 3)
                              ; := lexemes ";"
                                ; ";" (66, 5)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "dontPatchELF" (68, 3)
                            = := lexemes "="
                              = "=" (68, 16)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "true" (68, 18)
                            ; := lexemes ";"
                              ; ";" (68, 22)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "dontStrip" (69, 3)
                          = := lexemes "="
                            = "=" (69, 16)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "true" (69, 18)
                          ; := lexemes ";"
                            ; ";" (69, 22)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "installPhase" (71, 3)
                        = := lexemes "="
                          = "=" (71, 16)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_op" "+" "expr_op"
                                expr_op := rules "expr_op" "+" "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                          IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                            IND_STRING_OPEN "''\n" (71, 18)
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                  ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                    ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                        ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                  ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                        ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                                  ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                                    ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                                        ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                                            ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                                                ind_string_parts := rules 
                                                                                                IND_STR := lexemes "IND_STR"
                                                                                                  IND_STR "    runHook preInstall\n    mkdir -p \"$out\"\n    cp -r opt \"$out\"\n    mkdir \"$out/bin\"\n    ln -s \"$out/opt/" (72, 1)
                                                                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                                DOLLAR_CURLY "${" (76, 21)
                                                                                              expr := rules "expr_function"
                                                                                                expr_function := rules "expr_if"
                                                                                                  expr_if := rules "expr_op"
                                                                                                    expr_op := rules "expr_app"
                                                                                                      expr_app := rules "expr_select"
                                                                                                        expr_select := rules "expr_simple"
                                                                                                          expr_simple := rules "ID"
                                                                                                            ID := lexemes "ID"
                                                                                                              ID "vivaldiName" (76, 23)
                                                                                              } := lexemes "}"
                                                                                                } "}" (76, 34)
                                                                                            IND_STR := lexemes "IND_STR"
                                                                                              IND_STR "/" (76, 35)
                                                                                          DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                            DOLLAR_CURLY "${" (76, 36)
                                                                                          expr := rules "expr_function"
                                                                                            expr_function := rules "expr_if"
                                                                                              expr_if := rules "expr_op"
                                                                                                expr_op := rules "expr_app"
                                                                                                  expr_app := rules "expr_select"
                                                                                                    expr_select := rules "expr_simple"
                                                                                                      expr_simple := rules "ID"
                                                                                                        ID := lexemes "ID"
                                                                                                          ID "vivaldiName" (76, 38)
                                                                                          } := lexemes "}"
                                                                                            } "}" (76, 49)
                                                                                        IND_STR := lexemes "IND_STR"
                                                                                          IND_STR "\" \"$out/bin/vivaldi\"\n    mkdir -p \"$out/share\"\n    cp -r usr/share/{applications,xfce4} \"$out\"/share\n    substituteInPlace \"$out\"/share/applications/*.desktop \\\n      --replace /usr/bin/" (76, 50)
                                                                                      DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                        DOLLAR_CURLY "${" (80, 26)
                                                                                      expr := rules "expr_function"
                                                                                        expr_function := rules "expr_if"
                                                                                          expr_if := rules "expr_op"
                                                                                            expr_op := rules "expr_app"
                                                                                              expr_app := rules "expr_select"
                                                                                                expr_select := rules "expr_simple"
                                                                                                  expr_simple := rules "ID"
                                                                                                    ID := lexemes "ID"
                                                                                                      ID "vivaldiName" (80, 28)
                                                                                      } := lexemes "}"
                                                                                        } "}" (80, 39)
                                                                                    IND_STR := lexemes "IND_STR"
                                                                                      IND_STR " \"$out\"/bin/vivaldi\n    substituteInPlace \"$out\"/share/applications/*.desktop \\\n      --replace vivaldi-stable vivaldi\n    local d\n    for d in 16 22 24 32 48 64 128 256; do\n      mkdir -p \"$out\"/share/icons/hicolor/" (80, 40)
                                                                                  IND_STR := lexemes "IND_STR"
                                                                                    IND_STR "$" (85, 43)
                                                                                IND_STR := lexemes "IND_STR"
                                                                                  IND_STR "{d}x" (85, 46)
                                                                              IND_STR := lexemes "IND_STR"
                                                                                IND_STR "$" (85, 50)
                                                                            IND_STR := lexemes "IND_STR"
                                                                              IND_STR "{d}/apps\n      ln -s \\\n        \"$out\"/opt/" (85, 53)
                                                                          DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                            DOLLAR_CURLY "${" (87, 20)
                                                                          expr := rules "expr_function"
                                                                            expr_function := rules "expr_if"
                                                                              expr_if := rules "expr_op"
                                                                                expr_op := rules "expr_app"
                                                                                  expr_app := rules "expr_select"
                                                                                    expr_select := rules "expr_simple"
                                                                                      expr_simple := rules "ID"
                                                                                        ID := lexemes "ID"
                                                                                          ID "vivaldiName" (87, 22)
                                                                          } := lexemes "}"
                                                                            } "}" (87, 33)
                                                                        IND_STR := lexemes "IND_STR"
                                                                          IND_STR "/product_logo_" (87, 34)
                                                                      IND_STR := lexemes "IND_STR"
                                                                        IND_STR "$" (87, 48)
                                                                    IND_STR := lexemes "IND_STR"
                                                                      IND_STR "{d}.png \\\n        \"$out\"/share/icons/hicolor/" (87, 51)
                                                                  IND_STR := lexemes "IND_STR"
                                                                    IND_STR "$" (88, 36)
                                                                IND_STR := lexemes "IND_STR"
                                                                  IND_STR "{d}x" (88, 39)
                                                              IND_STR := lexemes "IND_STR"
                                                                IND_STR "$" (88, 43)
                                                            IND_STR := lexemes "IND_STR"
                                                              IND_STR "{d}/apps/vivaldi.png\n    done\n    wrapProgram \"$out/bin/vivaldi\" \\\n      --add-flags " (88, 46)
                                                          DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                            DOLLAR_CURLY "${" (91, 19)
                                                          expr := rules "expr_function"
                                                            expr_function := rules "expr_if"
                                                              expr_if := rules "expr_op"
                                                                expr_op := rules "expr_app"
                                                                  expr_app := rules "expr_app" "expr_select"
                                                                    expr_app := rules "expr_select"
                                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                                        expr_simple := rules "ID"
                                                                          ID := lexemes "ID"
                                                                            ID "lib" (91, 21)
                                                                        . := lexemes "."
                                                                          . "." (91, 24)
                                                                        attrpath := rules "attr"
                                                                          attr := rules "ID"
                                                                            ID := lexemes "ID"
                                                                              ID "escapeShellArg" (91, 25)
                                                                    expr_select := rules "expr_simple"
                                                                      expr_simple := rules "ID"
                                                                        ID := lexemes "ID"
                                                                          ID "commandLineArgs" (91, 40)
                                                          } := lexemes "}"
                                                            } "}" (91, 55)
                                                        IND_STR := lexemes "IND_STR"
                                                          IND_STR " \\\n      --suffix XDG_DATA_DIRS : " (91, 56)
                                                      DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                        DOLLAR_CURLY "${" (92, 32)
                                                      expr := rules "expr_function"
                                                        expr_function := rules "expr_if"
                                                          expr_if := rules "expr_op"
                                                            expr_op := rules "expr_app"
                                                              expr_app := rules "expr_select"
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "ID"
                                                                    ID := lexemes "ID"
                                                                      ID "gtk3" (92, 34)
                                                      } := lexemes "}"
                                                        } "}" (92, 38)
                                                    IND_STR := lexemes "IND_STR"
                                                      IND_STR "/share/gsettings-schemas/" (92, 39)
                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                    DOLLAR_CURLY "${" (92, 64)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple" "." "attrpath"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "gtk3" (92, 66)
                                                              . := lexemes "."
                                                                . "." (92, 70)
                                                              attrpath := rules "attr"
                                                                attr := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "name" (92, 71)
                                                  } := lexemes "}"
                                                    } "}" (92, 75)
                                                IND_STR := lexemes "IND_STR"
                                                  IND_STR "/ \\\n      " (92, 76)
                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                DOLLAR_CURLY "${" (93, 7)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_app" "expr_select"
                                                        expr_app := rules "expr_app" "expr_select"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple" "." "attrpath"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "lib" (93, 9)
                                                              . := lexemes "."
                                                                . "." (93, 12)
                                                              attrpath := rules "attr"
                                                                attr := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "optionalString" (93, 13)
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "enableWidevine" (93, 28)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (93, 43)
                                                            string_parts := rules "string_parts_interpolated"
                                                              string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                STR := lexemes "STR"
                                                                  STR "--suffix LD_LIBRARY_PATH : " (93, 44)
                                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                  DOLLAR_CURLY "${" (93, 71)
                                                                expr := rules "expr_function"
                                                                  expr_function := rules "expr_if"
                                                                    expr_if := rules "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "libPath" (93, 73)
                                                                } := lexemes "}"
                                                                  } "}" (93, 80)
                                                            " := lexemes "\""
                                                              " "\"" (93, 81)
                                              } := lexemes "}"
                                                } "}" (93, 82)
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "\n  " (93, 83)
                                          IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                            IND_STRING_CLOSE "''" (94, 3)
                                  + := lexemes "+"
                                    + "+" (94, 6)
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "lib" (94, 8)
                                            . := lexemes "."
                                              . "." (94, 11)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "optionalString" (94, 12)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "enableWidevine" (94, 27)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                          IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                            IND_STRING_OPEN "''\n" (94, 42)
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                  ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                    ind_string_parts := rules 
                                                    IND_STR := lexemes "IND_STR"
                                                      IND_STR "    ln -sf " (95, 1)
                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                    DOLLAR_CURLY "${" (95, 12)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "vivaldi-widevine" (95, 14)
                                                  } := lexemes "}"
                                                    } "}" (95, 30)
                                                IND_STR := lexemes "IND_STR"
                                                  IND_STR "/share/google/chrome/WidevineCdm $out/opt/" (95, 31)
                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                DOLLAR_CURLY "${" (95, 73)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "vivaldiName" (95, 75)
                                              } := lexemes "}"
                                                } "}" (95, 86)
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "/WidevineCdm\n  " (95, 87)
                                          IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                            IND_STRING_CLOSE "''" (96, 3)
                                + := lexemes "+"
                                  + "+" (96, 6)
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                        IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                          IND_STRING_OPEN "''\n" (96, 8)
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules 
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "    runHook postInstall\n  " (97, 1)
                                        IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                          IND_STRING_CLOSE "''" (98, 3)
                        ; := lexemes ";"
                          ; ";" (98, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "meta" (100, 3)
                      = := lexemes "="
                        = "=" (100, 8)
                      expr := rules "expr_function"
                        expr_function := rules "WITH" "expr" ";" "expr_function"
                          WITH := lexemes "WITH"
                            WITH "with" (100, 10)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "lib" (100, 15)
                          ; := lexemes ";"
                            ; ";" (100, 18)
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "{" "binds" "}"
                                      { := lexemes "{"
                                        { "{" (100, 20)
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "description" (101, 5)
                                                = := lexemes "="
                                                  = "=" (101, 17)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (101, 19)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "A Browser for our Friends, powerful and personal" (101, 20)
                                                              " := lexemes "\""
                                                                " "\"" (101, 68)
                                                ; := lexemes ";"
                                                  ; ";" (101, 69)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "homepage" (102, 5)
                                              = := lexemes "="
                                                = "=" (102, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (102, 19)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "https://vivaldi.com" (102, 20)
                                                            " := lexemes "\""
                                                              " "\"" (102, 39)
                                              ; := lexemes ";"
                                                ; ";" (102, 40)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "license" (103, 5)
                                            = := lexemes "="
                                              = "=" (103, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "licenses" (103, 19)
                                                        . := lexemes "."
                                                          . "." (103, 27)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "unfree" (103, 28)
                                            ; := lexemes ";"
                                              ; ";" (103, 34)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "maintainers" (104, 5)
                                          = := lexemes "="
                                            = "=" (104, 17)
                                          expr := rules "expr_function"
                                            expr_function := rules "WITH" "expr" ";" "expr_function"
                                              WITH := lexemes "WITH"
                                                WITH "with" (104, 19)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "maintainers" (104, 24)
                                              ; := lexemes ";"
                                                ; ";" (104, 35)
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "[" "expr_list" "]"
                                                          [ := lexemes "["
                                                            [ "[" (104, 37)
                                                          expr_list := rules "expr_list" "expr_select"
                                                            expr_list := rules "expr_list" "expr_select"
                                                              expr_list := rules 
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "otwieracz" (104, 39)
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "badmutex" (104, 49)
                                                          ] := lexemes "]"
                                                            ] "]" (104, 58)
                                          ; := lexemes ";"
                                            ; ";" (104, 59)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "platforms" (105, 5)
                                        = := lexemes "="
                                          = "=" (105, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (105, 19)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (105, 21)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "x86_64-linux" (105, 22)
                                                            " := lexemes "\""
                                                              " "\"" (105, 34)
                                                      ] := lexemes "]"
                                                        ] "]" (105, 36)
                                        ; := lexemes ";"
                                          ; ";" (105, 37)
                                      } := lexemes "}"
                                        } "}" (106, 3)
                      ; := lexemes ";"
                        ; ";" (106, 4)
                    } := lexemes "}"
                      } "}" (107, 1)