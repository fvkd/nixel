---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Inherit {
    from: Some(
     Variable {
      identifier: "lib",
      position: (4, 12),
     },
    ),
    attributes: [
     Raw {
      content: "mkOption",
      position: (4, 17),
     },
     Raw {
      content: "mkIf",
      position: (4, 26),
     },
     Raw {
      content: "types",
      position: (4, 31),
     },
    ],
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "cfg",
       position: (6, 3),
      },
     ],
    },
    to: PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (6, 9),
     },
     attribute_path: AttributePath {
      parts: [
       Raw {
        content: "programs",
        position: (6, 16),
       },
       Raw {
        content: "tmux",
        position: (6, 25),
       },
      ],
     },
     default: None,
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "defaultKeyMode",
       position: (8, 3),
      },
     ],
    },
    to: String {
     parts: [
      Raw {
       content: "emacs",
       position: (8, 22),
      },
     ],
     position: (8, 21),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "defaultResize",
       position: (9, 3),
      },
     ],
    },
    to: Int {
     value: 5,
     position: (9, 21),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "defaultShortcut",
       position: (10, 3),
      },
     ],
    },
    to: String {
     parts: [
      Raw {
       content: "b",
       position: (10, 22),
      },
     ],
     position: (10, 21),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "defaultTerminal",
       position: (11, 3),
      },
     ],
    },
    to: String {
     parts: [
      Raw {
       content: "screen",
       position: (11, 22),
      },
     ],
     position: (11, 21),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "boolToStr",
       position: (13, 3),
      },
     ],
    },
    to: Function {
     argument: Simple {
      identifier: "value",
     },
     definition: IfThenElse {
      predicate: Variable {
       identifier: "value",
       position: (13, 25),
      },
      then: String {
       parts: [
        Raw {
         content: "on",
         position: (13, 37),
        },
       ],
       position: (13, 36),
      },
      else_: String {
       parts: [
        Raw {
         content: "off",
         position: (13, 47),
        },
       ],
       position: (13, 46),
      },
      position: (13, 22),
     },
     position: (13, 15),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "tmuxConf",
       position: (15, 3),
      },
     ],
    },
    to: String {
     parts: [
      Raw {
       content: "set  -g default-terminal \"",
       position: (16, 1),
      },
      Interpolation {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (16, 33),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "terminal",
           position: (16, 37),
          },
         ],
        },
        default: None,
       },
      },
      Raw {
       content: "\"\nset  -g base-index      ",
       position: (16, 46),
      },
      Interpolation {
       expression: FunctionApplication {
        function: Variable {
         identifier: "toString",
         position: (17, 31),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (17, 40),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "baseIndex",
             position: (17, 44),
            },
           ],
          },
          default: None,
         },
        ],
       },
      },
      Raw {
       content: "\nsetw -g pane-base-index ",
       position: (17, 54),
      },
      Interpolation {
       expression: FunctionApplication {
        function: Variable {
         identifier: "toString",
         position: (18, 31),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (18, 40),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "baseIndex",
             position: (18, 44),
            },
           ],
          },
          default: None,
         },
        ],
       },
      },
      Raw {
       content: "\n\n",
       position: (18, 54),
      },
      Interpolation {
       expression: IfThenElse {
        predicate: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (20, 10),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "newSession",
            position: (20, 14),
           },
          ],
         },
         default: None,
        },
        then: String {
         parts: [
          Raw {
           content: "new-session",
           position: (20, 31),
          },
         ],
         position: (20, 30),
        },
        else_: String {
         parts: [],
         position: (20, 49),
        },
        position: (20, 7),
       },
      },
      Raw {
       content: "\n\n",
       position: (20, 52),
      },
      Interpolation {
       expression: IfThenElse {
        predicate: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (22, 10),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "reverseSplit",
            position: (22, 14),
           },
          ],
         },
         default: None,
        },
        then: String {
         parts: [
          Raw {
           content: "bind v split-window -h\nbind s split-window -v\n",
           position: (23, 1),
          },
         ],
         position: (22, 32),
        },
        else_: String {
         parts: [],
         position: (25, 13),
        },
        position: (22, 7),
       },
      },
      Raw {
       content: "\n\nset -g status-keys ",
       position: (25, 16),
      },
      Interpolation {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (27, 26),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "keyMode",
           position: (27, 30),
          },
         ],
        },
        default: None,
       },
      },
      Raw {
       content: "\nset -g mode-keys   ",
       position: (27, 38),
      },
      Interpolation {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (28, 26),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "keyMode",
           position: (28, 30),
          },
         ],
        },
        default: None,
       },
      },
      Raw {
       content: "\n\n",
       position: (28, 38),
      },
      Interpolation {
       expression: IfThenElse {
        predicate: BinaryOperation {
         operator: LogicalAnd,
         operands: [
          BinaryOperation {
           operator: EqualTo,
           operands: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (30, 10),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "keyMode",
                position: (30, 14),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "vi",
               position: (30, 26),
              },
             ],
             position: (30, 25),
            },
           ],
           position: (30, 22),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (30, 33),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "customPaneNavigationAndResize",
              position: (30, 37),
             },
            ],
           },
           default: None,
          },
         ],
         position: (30, 30),
        },
        then: String {
         parts: [
          Raw {
           content: "bind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\n\nbind -r H resize-pane -L ",
           position: (31, 1),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "toString",
             position: (36, 32),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (36, 41),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "resizeAmount",
                 position: (36, 45),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\nbind -r J resize-pane -D ",
           position: (36, 58),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "toString",
             position: (37, 32),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (37, 41),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "resizeAmount",
                 position: (37, 45),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\nbind -r K resize-pane -U ",
           position: (37, 58),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "toString",
             position: (38, 32),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (38, 41),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "resizeAmount",
                 position: (38, 45),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\nbind -r L resize-pane -R ",
           position: (38, 58),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "toString",
             position: (39, 32),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (39, 41),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "resizeAmount",
                 position: (39, 45),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\n",
           position: (39, 58),
          },
         ],
         position: (30, 72),
        },
        else_: String {
         parts: [],
         position: (40, 13),
        },
        position: (30, 7),
       },
      },
      Raw {
       content: "\n\n",
       position: (40, 16),
      },
      Interpolation {
       expression: IfThenElse {
        predicate: Parentheses {
         expression: BinaryOperation {
          operator: NotEqualTo,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (42, 11),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "shortcut",
               position: (42, 15),
              },
             ],
            },
            default: None,
           },
           Variable {
            identifier: "defaultShortcut",
            position: (42, 27),
           },
          ],
          position: (42, 24),
         },
         position: (42, 10),
        },
        then: String {
         parts: [
          Raw {
           content: "# rebind main key: C-",
           position: (43, 1),
          },
          Interpolation {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (43, 28),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "shortcut",
               position: (43, 32),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "\nunbind C-",
           position: (43, 41),
          },
          Interpolation {
           expression: Variable {
            identifier: "defaultShortcut",
            position: (44, 16),
           },
          },
          Raw {
           content: "\nset -g prefix C-",
           position: (44, 32),
          },
          Interpolation {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (45, 23),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "shortcut",
               position: (45, 27),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "\nbind ",
           position: (45, 36),
          },
          Interpolation {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (46, 12),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "shortcut",
               position: (46, 16),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: " send-prefix\nbind C-",
           position: (46, 25),
          },
          Interpolation {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (47, 14),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "shortcut",
               position: (47, 18),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: " last-window\n",
           position: (47, 27),
          },
         ],
         position: (42, 49),
        },
        else_: String {
         parts: [],
         position: (48, 13),
        },
        position: (42, 7),
       },
      },
      Raw {
       content: "\n\nsetw -g aggressive-resize ",
       position: (48, 16),
      },
      Interpolation {
       expression: FunctionApplication {
        function: Variable {
         identifier: "boolToStr",
         position: (50, 33),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (50, 43),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "aggressiveResize",
             position: (50, 47),
            },
           ],
          },
          default: None,
         },
        ],
       },
      },
      Raw {
       content: "\nsetw -g clock-mode-style  ",
       position: (50, 64),
      },
      Interpolation {
       expression: IfThenElse {
        predicate: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (51, 36),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "clock24",
            position: (51, 40),
           },
          ],
         },
         default: None,
        },
        then: String {
         parts: [
          Raw {
           content: "24",
           position: (51, 54),
          },
         ],
         position: (51, 53),
        },
        else_: String {
         parts: [
          Raw {
           content: "12",
           position: (51, 64),
          },
         ],
         position: (51, 63),
        },
        position: (51, 33),
       },
      },
      Raw {
       content: "\nset  -s escape-time       ",
       position: (51, 68),
      },
      Interpolation {
       expression: FunctionApplication {
        function: Variable {
         identifier: "toString",
         position: (52, 33),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (52, 42),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "escapeTime",
             position: (52, 46),
            },
           ],
          },
          default: None,
         },
        ],
       },
      },
      Raw {
       content: "\nset  -g history-limit     ",
       position: (52, 57),
      },
      Interpolation {
       expression: FunctionApplication {
        function: Variable {
         identifier: "toString",
         position: (53, 33),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (53, 42),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "historyLimit",
             position: (53, 46),
            },
           ],
          },
          default: None,
         },
        ],
       },
      },
      Raw {
       content: "\n\n",
       position: (53, 59),
      },
      Interpolation {
       expression: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (55, 7),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "optionalString",
            position: (55, 11),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Parentheses {
          expression: BinaryOperation {
           operator: NotEqualTo,
           operands: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (55, 27),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "plugins",
                position: (55, 31),
               },
              ],
             },
             default: None,
            },
            List {
             elements: [],
             position: (55, 42),
            },
           ],
           position: (55, 39),
          },
          position: (55, 26),
         },
         String {
          parts: [
           Raw {
            content: "# Run plugins\n",
            position: (56, 1),
           },
           Interpolation {
            expression: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (57, 7),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "concatMapStringsSep",
                 position: (57, 11),
                },
               ],
              },
              default: None,
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "\n",
                 position: (57, 32),
                },
               ],
               position: (57, 31),
              },
              Parentheses {
               expression: Function {
                argument: Simple {
                 identifier: "x",
                },
                definition: String {
                 parts: [
                  Raw {
                   content: "run-shell ",
                   position: (57, 41),
                  },
                  Interpolation {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "x",
                     position: (57, 53),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "rtp",
                       position: (57, 55),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 position: (57, 40),
                },
                position: (57, 37),
               },
               position: (57, 36),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (57, 62),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "plugins",
                  position: (57, 66),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "\n\n",
            position: (57, 74),
           },
          ],
          position: (55, 46),
         },
        ],
       },
      },
      Raw {
       content: "\n\n",
       position: (59, 8),
      },
      Interpolation {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (61, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "extraConfig",
           position: (61, 11),
          },
         ],
        },
        default: None,
       },
      },
      Raw {
       content: "\n",
       position: (61, 23),
      },
     ],
     position: (15, 14),
    },
   },
  ],
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "options",
        position: (67, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "programs",
           position: (68, 5),
          },
          Raw {
           content: "tmux",
           position: (68, 14),
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "enable",
              position: (70, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (70, 16),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (71, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (71, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (71, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (72, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (72, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (73, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Whenever to configure <command>tmux</command> system-wide.",
                   position: (73, 24),
                  },
                 ],
                 position: (73, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "relatedPackages",
                   position: (74, 9),
                  },
                 ],
                },
                to: List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "tmux",
                     position: (74, 30),
                    },
                   ],
                   position: (74, 29),
                  },
                 ],
                 position: (74, 27),
                },
               },
              ],
              recursive: false,
              position: (70, 25),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "aggressiveResize",
              position: (77, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (77, 26),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (78, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (78, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (79, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (79, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (79, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (80, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Resize the window to the size of the smallest session for which it is the current window.\n",
                   position: (81, 1),
                  },
                 ],
                 position: (80, 23),
                },
               },
              ],
              recursive: false,
              position: (77, 35),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "baseIndex",
              position: (85, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (85, 19),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (86, 9),
                  },
                 ],
                },
                to: Int {
                 value: 0,
                 position: (86, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (87, 9),
                  },
                 ],
                },
                to: Int {
                 value: 1,
                 position: (87, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (88, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (88, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (88, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (89, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Base index for windows and panes.",
                   position: (89, 24),
                  },
                 ],
                 position: (89, 23),
                },
               },
              ],
              recursive: false,
              position: (85, 28),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "clock24",
              position: (92, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (92, 17),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (93, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (93, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (94, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (94, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (94, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (95, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Use 24 hour clock.",
                   position: (95, 24),
                  },
                 ],
                 position: (95, 23),
                },
               },
              ],
              recursive: false,
              position: (92, 26),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "customPaneNavigationAndResize",
              position: (98, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (98, 39),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (99, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (99, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (100, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (100, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (100, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (101, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Override the hjkl and HJKL bindings for pane navigation and resizing in VI mode.",
                   position: (101, 24),
                  },
                 ],
                 position: (101, 23),
                },
               },
              ],
              recursive: false,
              position: (98, 48),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "escapeTime",
              position: (104, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (104, 20),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (105, 9),
                  },
                 ],
                },
                to: Int {
                 value: 500,
                 position: (105, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (106, 9),
                  },
                 ],
                },
                to: Int {
                 value: 0,
                 position: (106, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (107, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (107, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (107, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (108, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Time in milliseconds for which tmux waits after an escape is input.",
                   position: (108, 24),
                  },
                 ],
                 position: (108, 23),
                },
               },
              ],
              recursive: false,
              position: (104, 29),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "extraConfig",
              position: (111, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (111, 21),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (112, 9),
                  },
                 ],
                },
                to: String {
                 parts: [],
                 position: (112, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (113, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Additional contents of /etc/tmux.conf\n",
                   position: (114, 1),
                  },
                 ],
                 position: (113, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (116, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (116, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "lines",
                    position: (116, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              recursive: false,
              position: (111, 30),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "historyLimit",
              position: (119, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (119, 22),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (120, 9),
                  },
                 ],
                },
                to: Int {
                 value: 2000,
                 position: (120, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (121, 9),
                  },
                 ],
                },
                to: Int {
                 value: 5000,
                 position: (121, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (122, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (122, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (122, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (123, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Maximum number of lines held in window history.",
                   position: (123, 24),
                  },
                 ],
                 position: (123, 23),
                },
               },
              ],
              recursive: false,
              position: (119, 31),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "keyMode",
              position: (126, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (126, 17),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (127, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "defaultKeyMode",
                 position: (127, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (128, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "vi",
                   position: (128, 20),
                  },
                 ],
                 position: (128, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (129, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (129, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "enum",
                     position: (129, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "emacs",
                       position: (129, 30),
                      },
                     ],
                     position: (129, 29),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "vi",
                       position: (129, 38),
                      },
                     ],
                     position: (129, 37),
                    },
                   ],
                   position: (129, 27),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (130, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "VI or Emacs style shortcuts.",
                   position: (130, 24),
                  },
                 ],
                 position: (130, 23),
                },
               },
              ],
              recursive: false,
              position: (126, 26),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "newSession",
              position: (133, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (133, 20),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (134, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (134, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (135, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (135, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (135, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (136, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Automatically spawn a session if trying to attach and none are running.",
                   position: (136, 24),
                  },
                 ],
                 position: (136, 23),
                },
               },
              ],
              recursive: false,
              position: (133, 29),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "reverseSplit",
              position: (139, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (139, 22),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (140, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (140, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (141, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (141, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (141, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (142, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Reverse the window split shortcuts.",
                   position: (142, 24),
                  },
                 ],
                 position: (142, 23),
                },
               },
              ],
              recursive: false,
              position: (139, 31),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "resizeAmount",
              position: (145, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (145, 22),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (146, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "defaultResize",
                 position: (146, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (147, 9),
                  },
                 ],
                },
                to: Int {
                 value: 10,
                 position: (147, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (148, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (148, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (148, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (149, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Number of lines/columns when resizing.",
                   position: (149, 24),
                  },
                 ],
                 position: (149, 23),
                },
               },
              ],
              recursive: false,
              position: (145, 31),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "shortcut",
              position: (152, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (152, 18),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (153, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "defaultShortcut",
                 position: (153, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (154, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "a",
                   position: (154, 20),
                  },
                 ],
                 position: (154, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (155, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (155, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (155, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (156, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Ctrl following by this key is used as the main shortcut.",
                   position: (156, 24),
                  },
                 ],
                 position: (156, 23),
                },
               },
              ],
              recursive: false,
              position: (152, 27),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "terminal",
              position: (159, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (159, 18),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (160, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "defaultTerminal",
                 position: (160, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (161, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "screen-256color",
                   position: (161, 20),
                  },
                 ],
                 position: (161, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (162, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (162, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (162, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (163, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Set the $TERM variable.",
                   position: (163, 24),
                  },
                 ],
                 position: (163, 23),
                },
               },
              ],
              recursive: false,
              position: (159, 27),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "secureSocket",
              position: (166, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (166, 22),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (167, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "true",
                 position: (167, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (168, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (168, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (168, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (169, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Store tmux socket under /run, which is more secure than /tmp, but as a\ndownside it doesn't survive user logout.\n",
                   position: (170, 1),
                  },
                 ],
                 position: (169, 23),
                },
               },
              ],
              recursive: false,
              position: (166, 31),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "plugins",
              position: (175, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (175, 17),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (176, 9),
                  },
                 ],
                },
                to: List {
                 elements: [],
                 position: (176, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (177, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (177, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "listOf",
                     position: (177, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (177, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "package",
                      position: (177, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (178, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "List of plugins to install.",
                   position: (178, 24),
                  },
                 ],
                 position: (178, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (179, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (179, 19),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "literalExpression",
                     position: (179, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "[ pkgs.tmuxPlugins.nord ]",
                     position: (179, 42),
                    },
                   ],
                   position: (179, 41),
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (175, 26),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (68, 21),
        },
       },
      ],
      recursive: false,
      position: (67, 13),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "config",
        position: (186, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (186, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (186, 17),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "enable",
           position: (186, 21),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "environment",
             position: (187, 5),
            },
           ],
          },
          to: Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "etc",
                position: (188, 7),
               },
               Expression {
                ast: String {
                 parts: [
                  Raw {
                   content: "tmux.conf",
                   position: (188, 12),
                  },
                 ],
                 position: (188, 11),
                },
               },
               Raw {
                content: "text",
                position: (188, 23),
               },
              ],
             },
             to: Variable {
              identifier: "tmuxConf",
              position: (188, 30),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "systemPackages",
                position: (190, 7),
               },
              ],
             },
             to: BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (190, 26),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "tmux",
                     position: (190, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
                position: (190, 24),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (190, 41),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "plugins",
                   position: (190, 45),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (190, 38),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "variables",
                position: (192, 7),
               },
              ],
             },
             to: Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "TMUX_TMPDIR",
                   position: (193, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (193, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "optional",
                     position: (193, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (193, 36),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "secureSocket",
                      position: (193, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [
                    Raw {
                     content: "$",
                     position: (193, 55),
                    },
                    Raw {
                     content: "{XDG_RUNTIME_DIR:-\"/run/user/$(id -u)\"}",
                     position: (193, 58),
                    },
                   ],
                   position: (193, 53),
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (192, 19),
             },
            },
           ],
           recursive: false,
           position: (187, 19),
          },
         },
        ],
        recursive: false,
        position: (186, 28),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "imports",
        position: (198, 3),
       },
      ],
     },
     to: List {
      elements: [
       Parentheses {
        expression: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (199, 6),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "mkRenamedOptionModule",
             position: (199, 10),
            },
           ],
          },
          default: None,
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (199, 35),
              },
             ],
             position: (199, 34),
            },
            String {
             parts: [
              Raw {
               content: "tmux",
               position: (199, 46),
              },
             ],
             position: (199, 45),
            },
            String {
             parts: [
              Raw {
               content: "extraTmuxConf",
               position: (199, 53),
              },
             ],
             position: (199, 52),
            },
           ],
           position: (199, 32),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (199, 73),
              },
             ],
             position: (199, 72),
            },
            String {
             parts: [
              Raw {
               content: "tmux",
               position: (199, 84),
              },
             ],
             position: (199, 83),
            },
            String {
             parts: [
              Raw {
               content: "extraConfig",
               position: (199, 91),
              },
             ],
             position: (199, 90),
            },
           ],
           position: (199, 70),
          },
         ],
        },
        position: (199, 5),
       },
      ],
      position: (198, 13),
     },
    },
   ],
   recursive: false,
   position: (64, 4),
  },
  position: (3, 1),
 },
 position: (1, 1),
}