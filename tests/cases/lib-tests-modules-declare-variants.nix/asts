---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "moduleType",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (2, 14),
     },
    ),
    [
     Raw {
      content: "mkOption",
      position: (2, 19),
     },
     Raw {
      content: "types",
      position: (2, 28),
     },
    ],
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (5, 3),
       },
       Raw {
        content: "variants",
        position: (5, 11),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkOption",
       position: (5, 22),
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "type",
             position: (6, 5),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (6, 12),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "lazyAttrsOf",
               position: (6, 18),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Variable {
             identifier: "moduleType",
             position: (6, 30),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "default",
             position: (7, 5),
            },
           ],
          },
          Map {
           bindings: [],
           recursive: false,
           position: (7, 15),
          },
         ),
        ],
        recursive: false,
        position: (5, 31),
       },
      ],
     },
    ),
   ],
   recursive: false,
   position: (4, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}