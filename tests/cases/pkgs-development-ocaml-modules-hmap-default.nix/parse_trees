---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "stdenv" (1, 3)
        , := lexemes ","
          , "," (2, 1)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "lib" (2, 3)
          , := lexemes ","
            , "," (3, 1)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (3, 3)
            , := lexemes ","
              , "," (4, 1)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "findlib" (4, 3)
              , := lexemes ","
                , "," (5, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "ocaml" (5, 3)
                , := lexemes ","
                  , "," (6, 1)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "ocamlbuild" (6, 3)
                  , := lexemes ","
                    , "," (7, 1)
                  formals := rules "formal"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "topkg" (7, 3)
      } := lexemes "}"
        } "}" (8, 1)
      : := lexemes ":"
        : ":" (8, 2)
      expr_function := rules "LET" "binds" "IN" "expr_function"
        LET := lexemes "LET"
          LET "let" (10, 1)
        binds := rules "binds" "attrpath" "=" "expr" ";"
          binds := rules 
          attrpath := rules "attr"
            attr := rules "ID"
              ID := lexemes "ID"
                ID "minimumSupportedOcamlVersion" (11, 3)
          = := lexemes "="
            = "=" (11, 32)
          expr := rules "expr_function"
            expr_function := rules "expr_if"
              expr_if := rules "expr_op"
                expr_op := rules "expr_app"
                  expr_app := rules "expr_select"
                    expr_select := rules "expr_simple"
                      expr_simple := rules "\"" "string_parts" "\""
                        " := lexemes "\""
                          " "\"" (11, 34)
                        string_parts := rules "STR"
                          STR := lexemes "STR"
                            STR "4.02.0" (11, 35)
                        " := lexemes "\""
                          " "\"" (11, 41)
          ; := lexemes ";"
            ; ";" (11, 42)
        IN := lexemes "IN"
          IN "in" (12, 1)
        expr_function := rules "ASSERT" "expr" ";" "expr_function"
          ASSERT := lexemes "ASSERT"
            ASSERT "assert" (13, 1)
          expr := rules "expr_function"
            expr_function := rules "expr_if"
              expr_if := rules "expr_op"
                expr_op := rules "expr_app"
                  expr_app := rules "expr_app" "expr_select"
                    expr_app := rules "expr_app" "expr_select"
                      expr_app := rules "expr_select"
                        expr_select := rules "expr_simple" "." "attrpath"
                          expr_simple := rules "ID"
                            ID := lexemes "ID"
                              ID "lib" (13, 8)
                          . := lexemes "."
                            . "." (13, 11)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "versionOlder" (13, 12)
                      expr_select := rules "expr_simple"
                        expr_simple := rules "ID"
                          ID := lexemes "ID"
                            ID "minimumSupportedOcamlVersion" (13, 25)
                    expr_select := rules "expr_simple" "." "attrpath"
                      expr_simple := rules "ID"
                        ID := lexemes "ID"
                          ID "ocaml" (13, 54)
                      . := lexemes "."
                        . "." (13, 59)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "version" (13, 60)
          ; := lexemes ";"
            ; ";" (13, 67)
          expr_function := rules "expr_if"
            expr_if := rules "expr_op"
              expr_op := rules "expr_app"
                expr_app := rules "expr_app" "expr_select"
                  expr_app := rules "expr_select"
                    expr_select := rules "expr_simple" "." "attrpath"
                      expr_simple := rules "ID"
                        ID := lexemes "ID"
                          ID "stdenv" (15, 1)
                      . := lexemes "."
                        . "." (15, 7)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "mkDerivation" (15, 8)
                  expr_select := rules "expr_simple"
                    expr_simple := rules "REC" "{" "binds" "}"
                      REC := lexemes "REC"
                        REC "rec" (15, 21)
                      { := lexemes "{"
                        { "{" (15, 25)
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "INHERIT" "(" "expr" ")" "attrs" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules 
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "pname" (16, 3)
                                              = := lexemes "="
                                                = "=" (16, 9)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (16, 11)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "hmap" (16, 12)
                                                            " := lexemes "\""
                                                              " "\"" (16, 16)
                                              ; := lexemes ";"
                                                ; ";" (16, 17)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "version" (17, 3)
                                            = := lexemes "="
                                              = "=" (17, 11)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (17, 13)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "0.8.1" (17, 14)
                                                          " := lexemes "\""
                                                            " "\"" (17, 19)
                                            ; := lexemes ";"
                                              ; ";" (17, 20)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "name" (18, 3)
                                          = := lexemes "="
                                            = "=" (18, 8)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (18, 10)
                                                        string_parts := rules "string_parts_interpolated"
                                                          string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                            string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                              string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                                string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                  string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                    STR := lexemes "STR"
                                                                      STR "ocaml" (18, 11)
                                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                      DOLLAR_CURLY "${" (18, 16)
                                                                    expr := rules "expr_function"
                                                                      expr_function := rules "expr_if"
                                                                        expr_if := rules "expr_op"
                                                                          expr_op := rules "expr_app"
                                                                            expr_app := rules "expr_select"
                                                                              expr_select := rules "expr_simple" "." "attrpath"
                                                                                expr_simple := rules "ID"
                                                                                  ID := lexemes "ID"
                                                                                    ID "ocaml" (18, 18)
                                                                                . := lexemes "."
                                                                                  . "." (18, 23)
                                                                                attrpath := rules "attr"
                                                                                  attr := rules "ID"
                                                                                    ID := lexemes "ID"
                                                                                      ID "version" (18, 24)
                                                                    } := lexemes "}"
                                                                      } "}" (18, 31)
                                                                  STR := lexemes "STR"
                                                                    STR "-" (18, 32)
                                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                  DOLLAR_CURLY "${" (18, 33)
                                                                expr := rules "expr_function"
                                                                  expr_function := rules "expr_if"
                                                                    expr_if := rules "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "pname" (18, 35)
                                                                } := lexemes "}"
                                                                  } "}" (18, 40)
                                                              STR := lexemes "STR"
                                                                STR "-" (18, 41)
                                                            DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                              DOLLAR_CURLY "${" (18, 42)
                                                            expr := rules "expr_function"
                                                              expr_function := rules "expr_if"
                                                                expr_if := rules "expr_op"
                                                                  expr_op := rules "expr_app"
                                                                    expr_app := rules "expr_select"
                                                                      expr_select := rules "expr_simple"
                                                                        expr_simple := rules "ID"
                                                                          ID := lexemes "ID"
                                                                            ID "version" (18, 44)
                                                            } := lexemes "}"
                                                              } "}" (18, 51)
                                                        " := lexemes "\""
                                                          " "\"" (18, 52)
                                          ; := lexemes ";"
                                            ; ";" (18, 53)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "src" (20, 3)
                                        = := lexemes "="
                                          = "=" (20, 7)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_app" "expr_select"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "fetchurl" (20, 9)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "{" "binds" "}"
                                                      { := lexemes "{"
                                                        { "{" (20, 18)
                                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                                          binds := rules 
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "url" (21, 5)
                                                          = := lexemes "="
                                                            = "=" (21, 9)
                                                          expr := rules "expr_function"
                                                            expr_function := rules "expr_if"
                                                              expr_if := rules "expr_op"
                                                                expr_op := rules "expr_app"
                                                                  expr_app := rules "expr_select"
                                                                    expr_select := rules "expr_simple"
                                                                      expr_simple := rules "\"" "string_parts" "\""
                                                                        " := lexemes "\""
                                                                          " "\"" (21, 11)
                                                                        string_parts := rules "string_parts_interpolated"
                                                                          string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                            string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                                              string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                                string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                                  STR := lexemes "STR"
                                                                                    STR "http://erratique.ch/software/hmap/releases/" (21, 12)
                                                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                    DOLLAR_CURLY "${" (21, 55)
                                                                                  expr := rules "expr_function"
                                                                                    expr_function := rules "expr_if"
                                                                                      expr_if := rules "expr_op"
                                                                                        expr_op := rules "expr_app"
                                                                                          expr_app := rules "expr_select"
                                                                                            expr_select := rules "expr_simple"
                                                                                              expr_simple := rules "ID"
                                                                                                ID := lexemes "ID"
                                                                                                  ID "pname" (21, 57)
                                                                                  } := lexemes "}"
                                                                                    } "}" (21, 62)
                                                                                STR := lexemes "STR"
                                                                                  STR "-" (21, 63)
                                                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                                DOLLAR_CURLY "${" (21, 64)
                                                                              expr := rules "expr_function"
                                                                                expr_function := rules "expr_if"
                                                                                  expr_if := rules "expr_op"
                                                                                    expr_op := rules "expr_app"
                                                                                      expr_app := rules "expr_select"
                                                                                        expr_select := rules "expr_simple"
                                                                                          expr_simple := rules "ID"
                                                                                            ID := lexemes "ID"
                                                                                              ID "version" (21, 66)
                                                                              } := lexemes "}"
                                                                                } "}" (21, 73)
                                                                            STR := lexemes "STR"
                                                                              STR ".tbz" (21, 74)
                                                                        " := lexemes "\""
                                                                          " "\"" (21, 78)
                                                          ; := lexemes ";"
                                                            ; ";" (21, 79)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "sha256" (22, 5)
                                                        = := lexemes "="
                                                          = "=" (22, 12)
                                                        expr := rules "expr_function"
                                                          expr_function := rules "expr_if"
                                                            expr_if := rules "expr_op"
                                                              expr_op := rules "expr_app"
                                                                expr_app := rules "expr_select"
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "\"" "string_parts" "\""
                                                                      " := lexemes "\""
                                                                        " "\"" (22, 14)
                                                                      string_parts := rules "STR"
                                                                        STR := lexemes "STR"
                                                                          STR "10xyjy4ab87z7jnghy0wnla9wrmazgyhdwhr4hdmxxdn28dxn03a" (22, 15)
                                                                      " := lexemes "\""
                                                                        " "\"" (22, 67)
                                                        ; := lexemes ";"
                                                          ; ";" (22, 68)
                                                      } := lexemes "}"
                                                        } "}" (23, 3)
                                        ; := lexemes ";"
                                          ; ";" (23, 4)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "nativeBuildInputs" (25, 3)
                                      = := lexemes "="
                                        = "=" (25, 21)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "[" "expr_list" "]"
                                                    [ := lexemes "["
                                                      [ "[" (25, 23)
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules "expr_list" "expr_select"
                                                            expr_list := rules 
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "ocaml" (25, 25)
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "ocamlbuild" (25, 31)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "findlib" (25, 42)
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "topkg" (25, 50)
                                                    ] := lexemes "]"
                                                      ] "]" (25, 56)
                                      ; := lexemes ";"
                                        ; ";" (25, 57)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "buildInputs" (26, 3)
                                    = := lexemes "="
                                      = "=" (26, 15)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "[" "expr_list" "]"
                                                  [ := lexemes "["
                                                    [ "[" (26, 17)
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules 
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "topkg" (26, 19)
                                                  ] := lexemes "]"
                                                    ] "]" (26, 25)
                                    ; := lexemes ";"
                                      ; ";" (26, 26)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "strictDeps" (28, 3)
                                  = := lexemes "="
                                    = "=" (28, 14)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "true" (28, 16)
                                  ; := lexemes ";"
                                    ; ";" (28, 20)
                                INHERIT := lexemes "INHERIT"
                                  INHERIT "inherit" (30, 3)
                                ( := lexemes "("
                                  ( "(" (30, 11)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "topkg" (30, 12)
                                ) := lexemes ")"
                                  ) ")" (30, 17)
                                attrs := rules "attrs" "attr"
                                  attrs := rules 
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "installPhase" (30, 19)
                                ; := lexemes ";"
                                  ; ";" (30, 31)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "buildPhase" (32, 3)
                              = := lexemes "="
                                = "=" (32, 14)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (32, 16)
                                            string_parts := rules "string_parts_interpolated"
                                              string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                string_parts_interpolated := rules "DOLLAR_CURLY" "expr" "}"
                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                    DOLLAR_CURLY "${" (32, 17)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple" "." "attrpath"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "topkg" (32, 19)
                                                              . := lexemes "."
                                                                . "." (32, 24)
                                                              attrpath := rules "attr"
                                                                attr := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "run" (32, 25)
                                                  } := lexemes "}"
                                                    } "}" (32, 28)
                                                STR := lexemes "STR"
                                                  STR " build --tests true" (32, 29)
                                            " := lexemes "\""
                                              " "\"" (32, 48)
                              ; := lexemes ";"
                                ; ";" (32, 49)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "doCheck" (34, 3)
                            = := lexemes "="
                              = "=" (34, 11)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "true" (34, 13)
                            ; := lexemes ";"
                              ; ";" (34, 17)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "checkPhase" (36, 3)
                          = := lexemes "="
                            = "=" (36, 14)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "\"" "string_parts" "\""
                                        " := lexemes "\""
                                          " "\"" (36, 16)
                                        string_parts := rules "string_parts_interpolated"
                                          string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                            string_parts_interpolated := rules "DOLLAR_CURLY" "expr" "}"
                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                DOLLAR_CURLY "${" (36, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple" "." "attrpath"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "topkg" (36, 19)
                                                          . := lexemes "."
                                                            . "." (36, 24)
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "run" (36, 25)
                                              } := lexemes "}"
                                                } "}" (36, 28)
                                            STR := lexemes "STR"
                                              STR " test" (36, 29)
                                        " := lexemes "\""
                                          " "\"" (36, 34)
                          ; := lexemes ";"
                            ; ";" (36, 35)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "meta" (38, 3)
                        = := lexemes "="
                          = "=" (38, 8)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "{" "binds" "}"
                                      { := lexemes "{"
                                        { "{" (38, 10)
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules 
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "description" (39, 5)
                                              = := lexemes "="
                                                = "=" (39, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (39, 19)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "Heterogeneous value maps for OCaml" (39, 20)
                                                            " := lexemes "\""
                                                              " "\"" (39, 54)
                                              ; := lexemes ";"
                                                ; ";" (39, 55)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (40, 5)
                                            = := lexemes "="
                                              = "=" (40, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (40, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "https://erratique.ch/software/hmap" (40, 17)
                                                          " := lexemes "\""
                                                            " "\"" (40, 51)
                                            ; := lexemes ";"
                                              ; ";" (40, 52)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "license" (41, 5)
                                          = := lexemes "="
                                            = "=" (41, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "lib" (41, 15)
                                                      . := lexemes "."
                                                        . "." (41, 18)
                                                      attrpath := rules "attrpath" "." "attr"
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "licenses" (41, 19)
                                                        . := lexemes "."
                                                          . "." (41, 27)
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "isc" (41, 28)
                                          ; := lexemes ";"
                                            ; ";" (41, 31)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "maintainers" (42, 5)
                                        = := lexemes "="
                                          = "=" (42, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (42, 19)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple" "." "attrpath"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "lib" (42, 21)
                                                          . := lexemes "."
                                                            . "." (42, 24)
                                                          attrpath := rules "attrpath" "." "attr"
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "maintainers" (42, 25)
                                                            . := lexemes "."
                                                              . "." (42, 36)
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "pmahoney" (42, 37)
                                                      ] := lexemes "]"
                                                        ] "]" (42, 46)
                                        ; := lexemes ";"
                                          ; ";" (42, 47)
                                      } := lexemes "}"
                                        } "}" (43, 3)
                        ; := lexemes ";"
                          ; ";" (43, 4)
                      } := lexemes "}"
                        } "}" (44, 1)