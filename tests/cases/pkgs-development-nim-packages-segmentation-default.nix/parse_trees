---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "fetchFromGitHub" (1, 3)
      } := lexemes "}"
        } "}" (1, 19)
      : := lexemes ":"
        : ":" (1, 20)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "fetchFromGitHub" (3, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "{" "binds" "}"
                  { := lexemes "{"
                    { "{" (3, 17)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules 
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "owner" (4, 3)
                          = := lexemes "="
                            = "=" (4, 9)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "\"" "string_parts" "\""
                                        " := lexemes "\""
                                          " "\"" (4, 11)
                                        string_parts := rules "STR"
                                          STR := lexemes "STR"
                                            STR "nitely" (4, 12)
                                        " := lexemes "\""
                                          " "\"" (4, 18)
                          ; := lexemes ";"
                            ; ";" (4, 19)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "repo" (5, 3)
                        = := lexemes "="
                          = "=" (5, 8)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "\"" "string_parts" "\""
                                      " := lexemes "\""
                                        " "\"" (5, 10)
                                      string_parts := rules "STR"
                                        STR := lexemes "STR"
                                          STR "nim-segmentation" (5, 11)
                                      " := lexemes "\""
                                        " "\"" (5, 27)
                        ; := lexemes ";"
                          ; ";" (5, 28)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "rev" (6, 3)
                      = := lexemes "="
                        = "=" (6, 7)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "\"" "string_parts" "\""
                                    " := lexemes "\""
                                      " "\"" (6, 9)
                                    string_parts := rules "STR"
                                      STR := lexemes "STR"
                                        STR "v0.1.0" (6, 10)
                                    " := lexemes "\""
                                      " "\"" (6, 16)
                      ; := lexemes ";"
                        ; ";" (6, 17)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "sha256" (7, 3)
                    = := lexemes "="
                      = "=" (7, 10)
                    expr := rules "expr_function"
                      expr_function := rules "expr_if"
                        expr_if := rules "expr_op"
                          expr_op := rules "expr_app"
                            expr_app := rules "expr_select"
                              expr_select := rules "expr_simple"
                                expr_simple := rules "\"" "string_parts" "\""
                                  " := lexemes "\""
                                    " "\"" (7, 12)
                                  string_parts := rules "STR"
                                    STR := lexemes "STR"
                                      STR "007bkx8dwy8n340zbp6wyqfsq9bh6q5ykav1ywdlwykyp1n909bh" (7, 13)
                                  " := lexemes "\""
                                    " "\"" (7, 65)
                    ; := lexemes ";"
                      ; ";" (7, 66)
                  } := lexemes "}"
                    } "}" (8, 1)