---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "autorandr",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hookType",
        position: (8, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "types",
       position: (8, 14),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "lines",
         position: (8, 20),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "matrixOf",
        position: (10, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "n",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "m",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Function {
        argument: Some(
         "elemType",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: FunctionApplication {
         function: Variable {
          identifier: "mkOptionType",
          position: (11, 3),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "name",
                position: (12, 5),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "matrixOf",
                position: (12, 13),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (13, 5),
               },
              ],
             },
             String {
              parts: [
               Expression {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "toString",
                  position: (14, 10),
                 },
                 arguments: [
                  Variable {
                   identifier: "n",
                   position: (14, 19),
                  },
                 ],
                },
               },
               Raw {
                content: "Ã—",
                position: (14, 21),
               },
               Expression {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "toString",
                  position: (14, 24),
                 },
                 arguments: [
                  Variable {
                   identifier: "m",
                   position: (14, 33),
                  },
                 ],
                },
               },
               Raw {
                content: " matrix of ",
                position: (14, 35),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (14, 48),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (14, 57),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "s",
                position: (14, 69),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "check",
                position: (15, 5),
               },
              ],
             },
             Function {
              argument: Some(
               "xss",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: LetIn {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "listOfSize",
                    position: (16, 11),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "l",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "xs",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: BinaryOperation {
                    operator: LogicalAnd,
                    operands: [
                     FunctionApplication {
                      function: Variable {
                       identifier: "isList",
                       position: (16, 31),
                      },
                      arguments: [
                       Variable {
                        identifier: "xs",
                        position: (16, 38),
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: EqualTo,
                      operands: [
                       FunctionApplication {
                        function: Variable {
                         identifier: "length",
                         position: (16, 44),
                        },
                        arguments: [
                         Variable {
                          identifier: "xs",
                          position: (16, 51),
                         },
                        ],
                       },
                       Variable {
                        identifier: "l",
                        position: (16, 57),
                       },
                      ],
                      position: (16, 54),
                     },
                    ],
                    position: (16, 41),
                   },
                   position: (16, 27),
                  },
                  position: (16, 24),
                 },
                ),
               ],
               target: BinaryOperation {
                operator: LogicalAnd,
                operands: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "listOfSize",
                   position: (17, 10),
                  },
                  arguments: [
                   Variable {
                    identifier: "n",
                    position: (17, 21),
                   },
                   Variable {
                    identifier: "xss",
                    position: (17, 23),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "all",
                   position: (18, 10),
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "xs",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "listOfSize",
                        position: (18, 19),
                       },
                       arguments: [
                        Variable {
                         identifier: "m",
                         position: (18, 30),
                        },
                        Variable {
                         identifier: "xs",
                         position: (18, 32),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "all",
                        position: (18, 38),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "elemType",
                          position: (18, 42),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "check",
                            position: (18, 51),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "xs",
                         position: (18, 57),
                        },
                       ],
                      },
                     ],
                     position: (18, 35),
                    },
                    position: (18, 15),
                   },
                   Variable {
                    identifier: "xss",
                    position: (18, 61),
                   },
                  ],
                 },
                ],
                position: (18, 7),
               },
               position: (16, 7),
              },
              position: (15, 13),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "merge",
                position: (19, 5),
               },
              ],
             },
             Variable {
              identifier: "mergeOneOption",
              position: (19, 13),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "getSubOptions",
                position: (20, 5),
               },
              ],
             },
             Function {
              argument: Some(
               "prefix",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "elemType",
                 position: (20, 29),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (20, 38),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                BinaryOperation {
                 operator: Concatenation,
                 operands: [
                  Variable {
                   identifier: "prefix",
                   position: (20, 53),
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "*",
                       position: (20, 66),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "*",
                       position: (20, 70),
                      },
                     ],
                    },
                   ],
                   position: (20, 63),
                  },
                 ],
                 position: (20, 60),
                },
               ],
              },
              position: (20, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "getSubModules",
                position: (21, 5),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "elemType",
               position: (21, 21),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "getSubModules",
                 position: (21, 30),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "substSubModules",
                position: (22, 5),
               },
              ],
             },
             Function {
              argument: Some(
               "mod",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: FunctionApplication {
               function: Variable {
                identifier: "matrixOf",
                position: (22, 28),
               },
               arguments: [
                Variable {
                 identifier: "n",
                 position: (22, 37),
                },
                Variable {
                 identifier: "m",
                 position: (22, 39),
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "elemType",
                   position: (22, 42),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "substSubModules",
                     position: (22, 51),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "mod",
                   position: (22, 67),
                  },
                 ],
                },
               ],
              },
              position: (22, 23),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "functor",
                position: (23, 5),
               },
              ],
             },
             BinaryOperation {
              operator: Update,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "defaultFunctor",
                 position: (23, 16),
                },
                arguments: [
                 Variable {
                  identifier: "name",
                  position: (23, 31),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "wrapped",
                     position: (23, 42),
                    },
                   ],
                  },
                  Variable {
                   identifier: "elemType",
                   position: (23, 52),
                  },
                 ),
                ],
                recursive: false,
                position: (23, 40),
               },
              ],
              position: (23, 37),
             },
            ),
           ],
           recursive: true,
           position: (11, 16),
          },
         ],
        },
        position: (10, 20),
       },
       position: (10, 17),
      },
      position: (10, 14),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "profileModule",
        position: (26, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "types",
        position: (26, 19),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "submodule",
          position: (26, 25),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (27, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "fingerprint",
                position: (28, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (28, 21),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (29, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (29, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrsOf",
                       position: (29, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (29, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (29, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (30, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output name to EDID mapping.\nUse <code>autorandr --fingerprint</code> to get current setup values.\n",
                     position: (31, 1),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (34, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (34, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (28, 30),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "config",
                position: (37, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (37, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (38, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (38, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrsOf",
                       position: (38, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "configModule",
                     position: (38, 30),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (39, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Per output profile configuration.",
                     position: (39, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (40, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (40, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (37, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "hooks",
                position: (43, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (43, 15),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (44, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "hooksModule",
                   position: (44, 16),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (45, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Profile hook scripts.",
                     position: (45, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (46, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (46, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (43, 24),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (27, 15),
          },
         ),
        ],
        recursive: false,
        position: (26, 35),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configModule",
        position: (51, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "types",
        position: (51, 18),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "submodule",
          position: (51, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (52, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (53, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (53, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (54, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (54, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (54, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (55, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Whether to enable the output.",
                     position: (55, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (56, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (56, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (53, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "crtc",
                position: (59, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (59, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (60, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (60, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (60, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (60, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ints",
                        position: (60, 35),
                       },
                       Raw {
                        content: "unsigned",
                        position: (60, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (61, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output video display controller.",
                     position: (61, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (62, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (62, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (63, 9),
                    },
                   ],
                  },
                  Int {
                   value: 0,
                   position: (63, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (59, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "primary",
                position: (66, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (66, 17),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (67, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (67, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (67, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (68, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Whether output should be marked as primary",
                     position: (68, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (69, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "false",
                   position: (69, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (66, 26),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "position",
                position: (72, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (72, 18),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (73, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (73, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (73, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (74, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output position",
                     position: (74, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (75, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (76, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "5760x0",
                     position: (76, 20),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (72, 27),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "mode",
                position: (79, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (79, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (80, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (80, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (80, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (81, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output resolution.",
                     position: (81, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (82, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (83, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "3840x2160",
                     position: (83, 20),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (79, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "rate",
                position: (86, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (86, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (87, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (87, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (87, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (88, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output framerate.",
                     position: (88, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (89, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (90, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "60.00",
                     position: (90, 20),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (86, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "gamma",
                position: (93, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (93, 15),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (94, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (94, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (94, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (95, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output gamma configuration.",
                     position: (95, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (96, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (97, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "1.0:0.909:0.833",
                     position: (97, 20),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (93, 24),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "rotate",
                position: (100, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (100, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (101, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (101, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (101, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (101, 30),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "enum",
                         position: (101, 36),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "normal",
                           position: (101, 44),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "left",
                           position: (101, 53),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "right",
                           position: (101, 60),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "inverted",
                           position: (101, 68),
                          },
                         ],
                        },
                       ],
                       position: (101, 41),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (102, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output rotate configuration.",
                     position: (102, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (103, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (103, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (104, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "left",
                     position: (104, 20),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (100, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "transform",
                position: (107, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (107, 19),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (108, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (108, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (108, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "matrixOf",
                      position: (108, 30),
                     },
                     arguments: [
                      Int {
                       value: 3,
                       position: (108, 39),
                      },
                      Int {
                       value: 3,
                       position: (108, 41),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (108, 43),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "float",
                          position: (108, 49),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (109, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (109, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (110, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "literalExpression",
                    position: (110, 19),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "[\n  [ 0.6 0.0 0.0 ]\n  [ 0.0 0.6 0.0 ]\n  [ 0.0 0.0 1.0 ]\n]\n",
                       position: (111, 1),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (117, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Refer to\n<citerefentry>\n  <refentrytitle>xrandr</refentrytitle>\n  <manvolnum>1</manvolnum>\n</citerefentry>\nfor the documentation of the transform matrix.\n",
                     position: (118, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (107, 28),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "dpi",
                position: (127, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (127, 13),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (128, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (128, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (128, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (128, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ints",
                        position: (128, 35),
                       },
                       Raw {
                        content: "positive",
                        position: (128, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (129, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output DPI configuration.",
                     position: (129, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (130, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (130, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (131, 9),
                    },
                   ],
                  },
                  Int {
                   value: 96,
                   position: (131, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (127, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "scale",
                position: (134, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (134, 15),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (135, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (135, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (135, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (135, 30),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "submodule",
                         position: (135, 36),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "options",
                            position: (136, 11),
                           },
                          ],
                         },
                         Map {
                          bindings: [
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "method",
                               position: (137, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (137, 22),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (138, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (138, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "enum",
                                      position: (138, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   List {
                                    elements: [
                                     String {
                                      parts: [
                                       Raw {
                                        content: "factor",
                                        position: (138, 36),
                                       },
                                      ],
                                     },
                                     String {
                                      parts: [
                                       Raw {
                                        content: "pixel",
                                        position: (138, 45),
                                       },
                                      ],
                                     },
                                    ],
                                    position: (138, 33),
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (139, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "Output scaling method.",
                                    position: (139, 30),
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "default",
                                    position: (140, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "factor",
                                    position: (140, 26),
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "example",
                                    position: (141, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "pixel",
                                    position: (141, 26),
                                   },
                                  ],
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (137, 31),
                              },
                             ],
                            },
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "x",
                               position: (144, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (144, 17),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (145, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (145, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "either",
                                      position: (145, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (145, 35),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "float",
                                       position: (145, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (145, 47),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "ints",
                                       position: (145, 53),
                                      },
                                      Raw {
                                       content: "positive",
                                       position: (145, 58),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (146, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "Horizontal scaling factor/pixels.",
                                    position: (146, 30),
                                   },
                                  ],
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (144, 26),
                              },
                             ],
                            },
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "y",
                               position: (149, 13),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (149, 17),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "type",
                                    position: (150, 15),
                                   },
                                  ],
                                 },
                                 FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (150, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "either",
                                      position: (150, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (150, 35),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "float",
                                       position: (150, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (150, 47),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "ints",
                                       position: (150, 53),
                                      },
                                      Raw {
                                       content: "positive",
                                       position: (150, 58),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "description",
                                    position: (151, 15),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "Vertical scaling factor/pixels.",
                                    position: (151, 30),
                                   },
                                  ],
                                 },
                                ),
                               ],
                               recursive: false,
                               position: (149, 26),
                              },
                             ],
                            },
                           ),
                          ],
                          recursive: false,
                          position: (136, 21),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (135, 46),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (155, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Output scale configuration.\n</para><para>\nEither configure by pixels or a scaling factor. When using pixel method the\n<citerefentry>\n  <refentrytitle>xrandr</refentrytitle>\n  <manvolnum>1</manvolnum>\n</citerefentry>\noption\n<parameter class=\"command\">--scale-from</parameter>\nwill be used; when using factor method the option\n<parameter class=\"command\">--scale</parameter>\nwill be used.\n</para><para>\nThis option is a shortcut version of the transform option and they are mutually\nexclusive.\n",
                     position: (156, 1),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (172, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (172, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (173, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "literalExpression",
                    position: (173, 19),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "{\n  x = 1.25;\n  y = 1.25;\n}\n",
                       position: (174, 1),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (134, 24),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (52, 15),
          },
         ),
        ],
        recursive: false,
        position: (51, 34),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hooksModule",
        position: (183, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "types",
        position: (183, 17),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "submodule",
          position: (183, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (184, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "postswitch",
                position: (185, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (185, 20),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (186, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (186, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrsOf",
                       position: (186, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "hookType",
                     position: (186, 30),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (187, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Postswitch hook executed after mode switch.",
                     position: (187, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (188, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (188, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (185, 29),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "preswitch",
                position: (191, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (191, 19),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (192, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (192, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrsOf",
                       position: (192, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "hookType",
                     position: (192, 30),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (193, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Preswitch hook executed before mode switch.",
                     position: (193, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (194, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (194, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (191, 28),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "predetect",
                position: (197, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (197, 19),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (198, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (198, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrsOf",
                       position: (198, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "hookType",
                     position: (198, 30),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (199, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Predetect hook executed before autorandr attempts to run xrandr.\n",
                     position: (200, 1),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (202, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (202, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (197, 28),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (184, 15),
          },
         ),
        ],
        recursive: false,
        position: (183, 33),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hookToFile",
        position: (207, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "folder",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "name",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Function {
        argument: Some(
         "hook",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: FunctionApplication {
         function: Variable {
          identifier: "nameValuePair",
          position: (208, 5),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "xdg/autorandr/",
             position: (208, 20),
            },
            Expression {
             expression: Variable {
              identifier: "folder",
              position: (208, 36),
             },
            },
            Raw {
             content: "/",
             position: (208, 43),
            },
            Expression {
             expression: Variable {
              identifier: "name",
              position: (208, 46),
             },
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "source",
                position: (209, 7),
               },
              ],
             },
             String {
              parts: [
               Expression {
                expression: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (209, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "writeShellScriptBin",
                     position: (209, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "hook",
                     position: (209, 45),
                    },
                   ],
                  },
                  Variable {
                   identifier: "hook",
                   position: (209, 51),
                  },
                 ],
                },
               },
               Raw {
                content: "/bin/hook",
                position: (209, 56),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (208, 53),
          },
         ],
        },
        position: (207, 30),
       },
       position: (207, 24),
      },
      position: (207, 16),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "profileToFiles",
        position: (211, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "profile",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: With {
        expression: Variable {
         identifier: "profile",
         position: (212, 10),
        },
        target: FunctionApplication {
         function: Variable {
          identifier: "mkMerge",
          position: (213, 5),
         },
         arguments: [
          List {
           elements: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "xdg/autorandr/",
                     position: (215, 10),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "name",
                      position: (215, 26),
                     },
                    },
                    Raw {
                     content: "/setup",
                     position: (215, 31),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "text",
                  position: (215, 39),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (215, 46),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "\n",
                    position: (215, 64),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mapAttrsToList",
                   position: (216, 12),
                  },
                  arguments: [
                   Variable {
                    identifier: "fingerprintToString",
                    position: (216, 27),
                   },
                   Variable {
                    identifier: "fingerprint",
                    position: (216, 47),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "xdg/autorandr/",
                     position: (217, 10),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "name",
                      position: (217, 26),
                     },
                    },
                    Raw {
                     content: "/config",
                     position: (217, 31),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "text",
                  position: (217, 40),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (218, 11),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "\n",
                    position: (218, 29),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mapAttrsToList",
                   position: (218, 34),
                  },
                  arguments: [
                   Variable {
                    identifier: "configToString",
                    position: (218, 49),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "profile",
                     position: (218, 64),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "config",
                       position: (218, 72),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (214, 7),
            },
            FunctionApplication {
             function: Variable {
              identifier: "mapAttrs'",
              position: (220, 8),
             },
             arguments: [
              FunctionApplication {
               function: Variable {
                identifier: "hookToFile",
                position: (220, 19),
               },
               arguments: [
                String {
                 parts: [
                  Expression {
                   expression: Variable {
                    identifier: "name",
                    position: (220, 33),
                   },
                  },
                  Raw {
                   content: "/postswitch.d",
                   position: (220, 38),
                  },
                 ],
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "hooks",
                position: (220, 54),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "postswitch",
                  position: (220, 60),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mapAttrs'",
              position: (221, 8),
             },
             arguments: [
              FunctionApplication {
               function: Variable {
                identifier: "hookToFile",
                position: (221, 19),
               },
               arguments: [
                String {
                 parts: [
                  Expression {
                   expression: Variable {
                    identifier: "name",
                    position: (221, 33),
                   },
                  },
                  Raw {
                   content: "/preswitch.d",
                   position: (221, 38),
                  },
                 ],
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "hooks",
                position: (221, 53),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "preswitch",
                  position: (221, 59),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mapAttrs'",
              position: (222, 8),
             },
             arguments: [
              FunctionApplication {
               function: Variable {
                identifier: "hookToFile",
                position: (222, 19),
               },
               arguments: [
                String {
                 parts: [
                  Expression {
                   expression: Variable {
                    identifier: "name",
                    position: (222, 33),
                   },
                  },
                  Raw {
                   content: "/predetect.d",
                   position: (222, 38),
                  },
                 ],
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "hooks",
                position: (222, 53),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "predetect",
                  position: (222, 59),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ],
           position: (213, 14),
          },
         ],
        },
        position: (212, 5),
       },
       position: (211, 26),
      },
      position: (211, 20),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "fingerprintToString",
        position: (224, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "edid",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: String {
        parts: [
         Expression {
          expression: Variable {
           identifier: "name",
           position: (224, 40),
          },
         },
         Raw {
          content: " ",
          position: (224, 45),
         },
         Expression {
          expression: Variable {
           identifier: "edid",
           position: (224, 48),
          },
         },
        ],
       },
       position: (224, 31),
      },
      position: (224, 25),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configToString",
        position: (225, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "config",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: IfThenElse {
        predicate: PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (226, 8),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (226, 15),
           },
          ],
         },
         default: None,
        },
        then: FunctionApplication {
         function: Variable {
          identifier: "concatStringsSep",
          position: (227, 7),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "\n",
             position: (227, 25),
            },
           ],
          },
          BinaryOperation {
           operator: Concatenation,
           operands: [
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "output ",
                 position: (227, 33),
                },
                Expression {
                 expression: Variable {
                  identifier: "name",
                  position: (227, 42),
                 },
                },
               ],
              },
             ],
             position: (227, 30),
            },
            BinaryOperation {
             operator: Concatenation,
             operands: [
              FunctionApplication {
               function: Variable {
                identifier: "optional",
                position: (228, 12),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (228, 22),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "position",
                      position: (228, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [],
                  },
                 ],
                 position: (228, 38),
                },
                String {
                 parts: [
                  Raw {
                   content: "pos ",
                   position: (228, 46),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (228, 52),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "position",
                       position: (228, 59),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                FunctionApplication {
                 function: Variable {
                  identifier: "optional",
                  position: (229, 12),
                 },
                 arguments: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (229, 22),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "crtc",
                        position: (229, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (229, 37),
                    },
                   ],
                   position: (229, 34),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "crtc ",
                     position: (229, 44),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "toString",
                       position: (229, 51),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "config",
                         position: (229, 60),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "crtc",
                           position: (229, 67),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                   ],
                  },
                 ],
                },
                BinaryOperation {
                 operator: Concatenation,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "optional",
                    position: (230, 12),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (230, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "primary",
                        position: (230, 28),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "primary",
                       position: (230, 37),
                      },
                     ],
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "optional",
                      position: (231, 12),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "config",
                          position: (231, 22),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "dpi",
                            position: (231, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (231, 36),
                        },
                       ],
                       position: (231, 33),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "dpi ",
                         position: (231, 43),
                        },
                        Expression {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "toString",
                           position: (231, 49),
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "config",
                             position: (231, 58),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "dpi",
                               position: (231, 65),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                         },
                        },
                       ],
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optional",
                        position: (232, 12),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "config",
                            position: (232, 22),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "gamma",
                              position: (232, 29),
                             },
                            ],
                           },
                           default: None,
                          },
                          String {
                           parts: [],
                          },
                         ],
                         position: (232, 35),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "gamma ",
                           position: (232, 43),
                          },
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "config",
                             position: (232, 51),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "gamma",
                               position: (232, 58),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                         ],
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Concatenation,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (233, 12),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (233, 22),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "mode",
                                position: (233, 29),
                               },
                              ],
                             },
                             default: None,
                            },
                            String {
                             parts: [],
                            },
                           ],
                           position: (233, 34),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "mode ",
                             position: (233, 42),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (233, 49),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "mode",
                                 position: (233, 56),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                        BinaryOperation {
                         operator: Concatenation,
                         operands: [
                          FunctionApplication {
                           function: Variable {
                            identifier: "optional",
                            position: (234, 12),
                           },
                           arguments: [
                            BinaryOperation {
                             operator: NotEqualTo,
                             operands: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "config",
                                position: (234, 22),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "rate",
                                  position: (234, 29),
                                 },
                                ],
                               },
                               default: None,
                              },
                              String {
                               parts: [],
                              },
                             ],
                             position: (234, 34),
                            },
                            String {
                             parts: [
                              Raw {
                               content: "rate ",
                               position: (234, 42),
                              },
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "config",
                                 position: (234, 49),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "rate",
                                   position: (234, 56),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                             ],
                            },
                           ],
                          },
                          BinaryOperation {
                           operator: Concatenation,
                           operands: [
                            FunctionApplication {
                             function: Variable {
                              identifier: "optional",
                              position: (235, 12),
                             },
                             arguments: [
                              BinaryOperation {
                               operator: NotEqualTo,
                               operands: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "config",
                                  position: (235, 22),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "rotate",
                                    position: (235, 29),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                Variable {
                                 identifier: "null",
                                 position: (235, 39),
                                },
                               ],
                               position: (235, 36),
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "rotate ",
                                 position: (235, 46),
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (235, 55),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "rotate",
                                     position: (235, 62),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                               ],
                              },
                             ],
                            },
                            BinaryOperation {
                             operator: Concatenation,
                             operands: [
                              FunctionApplication {
                               function: Variable {
                                identifier: "optional",
                                position: (236, 12),
                               },
                               arguments: [
                                BinaryOperation {
                                 operator: NotEqualTo,
                                 operands: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "config",
                                    position: (236, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "transform",
                                      position: (236, 29),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  Variable {
                                   identifier: "null",
                                   position: (236, 42),
                                  },
                                 ],
                                 position: (236, 39),
                                },
                                BinaryOperation {
                                 operator: Addition,
                                 operands: [
                                  String {
                                   parts: [
                                    Raw {
                                     content: "transform ",
                                     position: (236, 50),
                                    },
                                   ],
                                  },
                                  FunctionApplication {
                                   function: Variable {
                                    identifier: "concatMapStringsSep",
                                    position: (237, 13),
                                   },
                                   arguments: [
                                    String {
                                     parts: [
                                      Raw {
                                       content: ",",
                                       position: (237, 34),
                                      },
                                     ],
                                    },
                                    Variable {
                                     identifier: "toString",
                                     position: (237, 37),
                                    },
                                    FunctionApplication {
                                     function: Variable {
                                      identifier: "flatten",
                                      position: (237, 47),
                                     },
                                     arguments: [
                                      PropertyAccess {
                                       expression: Variable {
                                        identifier: "config",
                                        position: (237, 55),
                                       },
                                       attribute_path: AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "transform",
                                          position: (237, 62),
                                         },
                                        ],
                                       },
                                       default: None,
                                      },
                                     ],
                                    },
                                   ],
                                  },
                                 ],
                                 position: (237, 11),
                                },
                               ],
                              },
                              FunctionApplication {
                               function: Variable {
                                identifier: "optional",
                                position: (238, 12),
                               },
                               arguments: [
                                BinaryOperation {
                                 operator: NotEqualTo,
                                 operands: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "config",
                                    position: (238, 22),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "scale",
                                      position: (238, 29),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  Variable {
                                   identifier: "null",
                                   position: (238, 38),
                                  },
                                 ],
                                 position: (238, 35),
                                },
                                BinaryOperation {
                                 operator: Addition,
                                 operands: [
                                  IfThenElse {
                                   predicate: BinaryOperation {
                                    operator: EqualTo,
                                    operands: [
                                     PropertyAccess {
                                      expression: Variable {
                                       identifier: "config",
                                       position: (239, 14),
                                      },
                                      attribute_path: AttributePath {
                                       attributes: [
                                        Raw {
                                         content: "scale",
                                         position: (239, 21),
                                        },
                                        Raw {
                                         content: "method",
                                         position: (239, 27),
                                        },
                                       ],
                                      },
                                      default: None,
                                     },
                                     String {
                                      parts: [
                                       Raw {
                                        content: "factor",
                                        position: (239, 38),
                                       },
                                      ],
                                     },
                                    ],
                                    position: (239, 34),
                                   },
                                   then: String {
                                    parts: [
                                     Raw {
                                      content: "scale",
                                      position: (239, 52),
                                     },
                                    ],
                                   },
                                   else_: String {
                                    parts: [
                                     Raw {
                                      content: "scale-from",
                                      position: (239, 65),
                                     },
                                    ],
                                   },
                                   position: (239, 11),
                                  },
                                  String {
                                   parts: [
                                    Raw {
                                     content: " ",
                                     position: (240, 14),
                                    },
                                    Expression {
                                     expression: FunctionApplication {
                                      function: Variable {
                                       identifier: "toString",
                                       position: (240, 17),
                                      },
                                      arguments: [
                                       PropertyAccess {
                                        expression: Variable {
                                         identifier: "config",
                                         position: (240, 26),
                                        },
                                        attribute_path: AttributePath {
                                         attributes: [
                                          Raw {
                                           content: "scale",
                                           position: (240, 33),
                                          },
                                          Raw {
                                           content: "x",
                                           position: (240, 39),
                                          },
                                         ],
                                        },
                                        default: None,
                                       },
                                      ],
                                     },
                                    },
                                    Raw {
                                     content: "x",
                                     position: (240, 41),
                                    },
                                    Expression {
                                     expression: FunctionApplication {
                                      function: Variable {
                                       identifier: "toString",
                                       position: (240, 44),
                                      },
                                      arguments: [
                                       PropertyAccess {
                                        expression: Variable {
                                         identifier: "config",
                                         position: (240, 53),
                                        },
                                        attribute_path: AttributePath {
                                         attributes: [
                                          Raw {
                                           content: "scale",
                                           position: (240, 60),
                                          },
                                          Raw {
                                           content: "y",
                                           position: (240, 66),
                                          },
                                         ],
                                        },
                                        default: None,
                                       },
                                      ],
                                     },
                                    },
                                   ],
                                  },
                                 ],
                                 position: (240, 11),
                                },
                               ],
                              },
                             ],
                             position: (238, 9),
                            },
                           ],
                           position: (236, 9),
                          },
                         ],
                         position: (235, 9),
                        },
                       ],
                       position: (234, 9),
                      },
                     ],
                     position: (233, 9),
                    },
                   ],
                   position: (232, 9),
                  },
                 ],
                 position: (231, 9),
                },
               ],
               position: (230, 9),
              },
             ],
             position: (229, 9),
            },
           ],
           position: (228, 9),
          },
         ],
        },
        else_: String {
         parts: [
          Raw {
           content: "output ",
           position: (242, 1),
          },
          Expression {
           expression: Variable {
            identifier: "name",
            position: (242, 16),
           },
          },
          Raw {
           content: "\noff\n",
           position: (242, 21),
          },
         ],
        },
        position: (226, 5),
       },
       position: (225, 26),
      },
      position: (225, 20),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (248, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (250, 5),
           },
           Raw {
            content: "autorandr",
            position: (250, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (251, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (251, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "handling of hotplug and sleep events by autorandr",
                 position: (251, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "defaultTarget",
               position: (253, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (253, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (254, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "default",
                    position: (254, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (255, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (255, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (255, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (256, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Fallback if no monitor layout can be detected. See the docs\n(https://github.com/phillipberndt/autorandr/blob/v1.0/README.md#how-to-use)\nfor further reference.\n",
                    position: (257, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (253, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "hooks",
               position: (263, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (263, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (264, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "hooksModule",
                  position: (264, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (265, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Global hook scripts",
                    position: (265, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (266, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (266, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (267, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "{\n  postswitch = {\n    \"notify-i3\" = \"",
                    position: (268, 1),
                   },
                   Raw {
                    content: "$",
                    position: (270, 30),
                   },
                   Raw {
                    content: "{pkgs.i3}/bin/i3-msg restart\";\n    \"change-background\" = readFile ./change-background.sh;\n    \"change-dpi\" = ",
                    position: (270, 33),
                   },
                   Raw {
                    content: "''",
                    position: (272, 30),
                   },
                   Raw {
                    content: "\n      case \"$AUTORANDR_CURRENT_PROFILE\" in\n        default)\n          DPI=120\n          ;;\n        home)\n          DPI=192\n          ;;\n        work)\n          DPI=144\n          ;;\n        *)\n          echo \"Unknown profle: $AUTORANDR_CURRENT_PROFILE\"\n          exit 1\n      esac\n      echo \"Xft.dpi: $DPI\" | ",
                    position: (272, 33),
                   },
                   Raw {
                    content: "$",
                    position: (287, 40),
                   },
                   Raw {
                    content: "{pkgs.xorg.xrdb}/bin/xrdb -merge\n    ",
                    position: (287, 43),
                   },
                   Raw {
                    content: "''",
                    position: (288, 15),
                   },
                   Raw {
                    content: "\n  };\n}\n",
                    position: (288, 18),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (263, 24),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "profiles",
               position: (293, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (293, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (294, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (294, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (294, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Variable {
                    identifier: "profileModule",
                    position: (294, 30),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (295, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Autorandr profiles specification.",
                    position: (295, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (296, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (296, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (297, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (297, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  \"work\" = {\n    fingerprint = {\n      eDP1 = \"<EDID>\";\n      DP1 = \"<EDID>\";\n    };\n    config = {\n      eDP1.enable = false;\n      DP1 = {\n        enable = true;\n        crtc = 0;\n        primary = true;\n        position = \"0x0\";\n        mode = \"3840x2160\";\n        gamma = \"1.0:0.909:0.833\";\n        rate = \"60.00\";\n        rotate = \"left\";\n      };\n    };\n    hooks.postswitch = readFile ./work-postswitch.sh;\n  };\n}\n",
                      position: (298, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (293, 27),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (250, 26),
         },
        ),
       ],
       recursive: false,
       position: (248, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (327, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (327, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (327, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (327, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (329, 5),
             },
             Raw {
              content: "udev",
              position: (329, 14),
             },
             Raw {
              content: "packages",
              position: (329, 19),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (329, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "autorandr",
                 position: (329, 37),
                },
               ],
              },
              default: None,
             },
            ],
            position: (329, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (331, 5),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "systemPackages",
                 position: (332, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (332, 26),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "autorandr",
                    position: (332, 31),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (332, 24),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "etc",
                 position: (333, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkMerge",
                position: (333, 13),
               },
               arguments: [
                List {
                 elements: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "mapAttrs'",
                    position: (334, 10),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "hookToFile",
                      position: (334, 21),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "postswitch.d",
                         position: (334, 33),
                        },
                       ],
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (334, 48),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "hooks",
                        position: (334, 52),
                       },
                       Raw {
                        content: "postswitch",
                        position: (334, 58),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mapAttrs'",
                    position: (335, 10),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "hookToFile",
                      position: (335, 21),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "preswitch.d",
                         position: (335, 33),
                        },
                       ],
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (335, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "hooks",
                        position: (335, 51),
                       },
                       Raw {
                        content: "preswitch",
                        position: (335, 57),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mapAttrs'",
                    position: (336, 10),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "hookToFile",
                      position: (336, 21),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "predetect.d",
                         position: (336, 33),
                        },
                       ],
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (336, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "hooks",
                        position: (336, 51),
                       },
                       Raw {
                        content: "predetect",
                        position: (336, 57),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkMerge",
                    position: (337, 10),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "mapAttrsToList",
                      position: (337, 19),
                     },
                     arguments: [
                      Variable {
                       identifier: "profileToFiles",
                       position: (337, 34),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (337, 49),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "profiles",
                          position: (337, 53),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   ],
                  },
                 ],
                 position: (333, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (331, 19),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (341, 5),
             },
             Raw {
              content: "services",
              position: (341, 13),
             },
             Raw {
              content: "autorandr",
              position: (341, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (342, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "sleep.target",
                   position: (342, 21),
                  },
                 ],
                },
               ],
               position: (342, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (343, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Autorandr execution hook",
                 position: (343, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (344, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "sleep.target",
                   position: (344, 18),
                  },
                 ],
                },
               ],
               position: (344, 15),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startLimitIntervalSec",
                 position: (346, 7),
                },
               ],
              },
              Int {
               value: 5,
               position: (346, 31),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startLimitBurst",
                 position: (347, 7),
                },
               ],
              },
              Int {
               value: 1,
               position: (347, 25),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (348, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (349, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (349, 24),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "autorandr",
                        position: (349, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/autorandr --batch --change --default ",
                    position: (349, 39),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (349, 83),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "defaultTarget",
                        position: (349, 87),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (350, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "oneshot",
                    position: (350, 17),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RemainAfterExit",
                    position: (351, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (351, 27),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "KillMode",
                    position: (352, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "process",
                    position: (352, 21),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (348, 23),
              },
             ),
            ],
            recursive: false,
            position: (341, 34),
           },
          ),
         ],
         recursive: false,
         position: (327, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (358, 3),
        },
        Raw {
         content: "maintainers",
         position: (358, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (358, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "alexnortung",
          position: (358, 42),
         },
        ],
        position: (358, 40),
       },
       position: (358, 22),
      },
     ),
    ],
    recursive: false,
    position: (246, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}