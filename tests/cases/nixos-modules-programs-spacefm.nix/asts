---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 5),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 11),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (7, 18),
        },
        Raw {
         content: "spacefm",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (13, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (15, 5),
           },
           Raw {
            content: "spacefm",
            position: (15, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (17, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (17, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (18, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (18, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (18, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (19, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (19, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (20, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install SpaceFM and create <filename>/etc/spacefm/spacefm.conf</filename>.\n",
                    position: (21, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "settings",
               position: (25, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (25, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (26, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (26, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrs",
                     position: (26, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (27, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "tmp_dir",
                       position: (28, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "/tmp",
                       position: (28, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "terminal_su",
                       position: (29, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (29, 28),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "sudo",
                           position: (29, 33),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/sudo",
                       position: (29, 38),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (31, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (31, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  tmp_dir = \"/tmp\";\n  terminal_su = \"",
                      position: (32, 1),
                     },
                     Raw {
                      content: "$",
                      position: (34, 28),
                     },
                     Raw {
                      content: "{pkgs.sudo}/bin/sudo\";\n}\n",
                      position: (34, 31),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (37, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The system-wide spacefm configuration.\nParameters to be written to <filename>/etc/spacefm/spacefm.conf</filename>.\nRefer to the <link xlink:href=\"https://ignorantguru.github.io/spacefm/spacefm-manual-en.html#programfiles-etc\">relevant entry</link> in the SpaceFM manual.\n",
                    position: (38, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (49, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (49, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (49, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (49, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (50, 5),
             },
             Raw {
              content: "systemPackages",
              position: (50, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (50, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "spaceFM",
                 position: (50, 41),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (52, 5),
             },
             Raw {
              content: "etc",
              position: (52, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "spacefm/spacefm.conf",
                 position: (52, 22),
                },
               ],
              },
             },
             Raw {
              content: "text",
              position: (52, 44),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "concatStrings",
             position: (53, 7),
            },
            arguments: [
             FunctionApplication {
              function: Variable {
               identifier: "mapAttrsToList",
               position: (53, 22),
              },
              arguments: [
               Function {
                argument: Some(
                 "n",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "v",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "n",
                     position: (53, 47),
                    },
                   },
                   Raw {
                    content: "=",
                    position: (53, 49),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (53, 52),
                     },
                     arguments: [
                      Variable {
                       identifier: "v",
                       position: (53, 61),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\n",
                    position: (53, 63),
                   },
                  ],
                 },
                },
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (53, 68),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "settings",
                   position: (53, 72),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}