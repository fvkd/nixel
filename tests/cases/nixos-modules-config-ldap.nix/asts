---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "pkgs",
   position: (3, 6),
  },
  target: With {
   expression: Variable {
    identifier: "lib",
    position: (4, 6),
   },
   target: LetIn {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "cfg",
         position: (8, 3),
        },
       ],
      },
      PropertyAccess {
       expression: Variable {
        identifier: "config",
        position: (8, 9),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "users",
          position: (8, 16),
         },
         Raw {
          content: "ldap",
          position: (8, 22),
         },
        ],
       },
       default: None,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "ldapConfig",
         position: (12, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "target",
            position: (13, 5),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "ldap.conf",
           },
          ],
          position: (13, 14),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "source",
            position: (14, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "writeText",
           position: (14, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "ldap.conf",
             },
            ],
            position: (14, 24),
           },
           String {
            parts: [
             Raw {
              content: "uri ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (15, 13),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "users",
                  position: (15, 20),
                 },
                 Raw {
                  content: "ldap",
                  position: (15, 26),
                 },
                 Raw {
                  content: "server",
                  position: (15, 31),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\nbase ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (16, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "users",
                  position: (16, 21),
                 },
                 Raw {
                  content: "ldap",
                  position: (16, 27),
                 },
                 Raw {
                  content: "base",
                  position: (16, 32),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\ntimelimit ",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (17, 19),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (17, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "users",
                    position: (17, 35),
                   },
                   Raw {
                    content: "ldap",
                    position: (17, 41),
                   },
                   Raw {
                    content: "timeLimit",
                    position: (17, 46),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: "\nbind_timelimit ",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (18, 24),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (18, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "users",
                    position: (18, 40),
                   },
                   Raw {
                    content: "ldap",
                    position: (18, 46),
                   },
                   Raw {
                    content: "bind",
                    position: (18, 51),
                   },
                   Raw {
                    content: "timeLimit",
                    position: (18, 56),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: "\nbind_policy ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (19, 21),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "users",
                  position: (19, 28),
                 },
                 Raw {
                  content: "ldap",
                  position: (19, 34),
                 },
                 Raw {
                  content: "bind",
                  position: (19, 39),
                 },
                 Raw {
                  content: "policy",
                  position: (19, 44),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\n",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (20, 9),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (20, 24),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "users",
                    position: (20, 31),
                   },
                   Raw {
                    content: "ldap",
                    position: (20, 37),
                   },
                   Raw {
                    content: "useTLS",
                    position: (20, 42),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "ssl start_tls\n",
                  },
                 ],
                 position: (20, 49),
                },
               ],
              },
             },
             Raw {
              content: "\n",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (23, 9),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (23, 25),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "users",
                      position: (23, 32),
                     },
                     Raw {
                      content: "ldap",
                      position: (23, 38),
                     },
                     Raw {
                      content: "bind",
                      position: (23, 43),
                     },
                     Raw {
                      content: "distinguishedName",
                      position: (23, 48),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [],
                   position: (23, 69),
                  },
                 ],
                 position: (23, 66),
                },
                String {
                 parts: [
                  Raw {
                   content: "binddn ",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (24, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "users",
                       position: (24, 25),
                      },
                      Raw {
                       content: "ldap",
                       position: (24, 31),
                      },
                      Raw {
                       content: "bind",
                       position: (24, 36),
                      },
                      Raw {
                       content: "distinguishedName",
                       position: (24, 41),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\n",
                  },
                 ],
                 position: (23, 73),
                },
               ],
              },
             },
             Raw {
              content: "\n",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (26, 9),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (26, 25),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "extraConfig",
                      position: (26, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [],
                   position: (26, 44),
                  },
                 ],
                 position: (26, 41),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (26, 48),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "extraConfig",
                    position: (26, 52),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: "\n",
             },
            ],
            position: (14, 36),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (12, 16),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "nslcdConfig",
         position: (30, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "writeText",
        position: (30, 17),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "nslcd.conf",
          },
         ],
         position: (30, 27),
        },
        String {
         parts: [
          Raw {
           content: "uri ",
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (31, 11),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "server",
               position: (31, 15),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "\nbase ",
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (32, 12),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "base",
               position: (32, 16),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "\ntimelimit ",
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "toString",
             position: (33, 17),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (33, 26),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "timeLimit",
                 position: (33, 30),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\nbind_timelimit ",
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "toString",
             position: (34, 22),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (34, 31),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "bind",
                 position: (34, 35),
                },
                Raw {
                 content: "timeLimit",
                 position: (34, 40),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\n",
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (35, 7),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (35, 23),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "bind",
                   position: (35, 27),
                  },
                  Raw {
                   content: "distinguishedName",
                   position: (35, 32),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [],
                position: (35, 53),
               },
              ],
              position: (35, 50),
             },
             String {
              parts: [
               Raw {
                content: "binddn ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (36, 17),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bind",
                    position: (36, 21),
                   },
                   Raw {
                    content: "distinguishedName",
                    position: (36, 26),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              position: (36, 7),
             },
            ],
           },
          },
          Raw {
           content: "\n",
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (37, 7),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (37, 23),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "daemon",
                   position: (37, 27),
                  },
                  Raw {
                   content: "rootpwmoddn",
                   position: (37, 34),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [],
                position: (37, 49),
               },
              ],
              position: (37, 46),
             },
             String {
              parts: [
               Raw {
                content: "rootpwmoddn ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (38, 22),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "daemon",
                    position: (38, 26),
                   },
                   Raw {
                    content: "rootpwmoddn",
                    position: (38, 33),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              position: (38, 7),
             },
            ],
           },
          },
          Raw {
           content: "\n",
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (39, 7),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (39, 23),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "daemon",
                   position: (39, 27),
                  },
                  Raw {
                   content: "extraConfig",
                   position: (39, 34),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [],
                position: (39, 49),
               },
              ],
              position: (39, 46),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (39, 53),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "daemon",
                 position: (39, 57),
                },
                Raw {
                 content: "extraConfig",
                 position: (39, 64),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
          Raw {
           content: "\n",
          },
         ],
         position: (30, 40),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "nslcdWrapped",
         position: (45, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "runCommand",
        position: (45, 18),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "nslcd-wrapped",
          },
         ],
         position: (45, 29),
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "nativeBuildInputs",
              position: (45, 47),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "makeWrapper",
              position: (45, 69),
             },
            ],
            position: (45, 67),
           },
          ),
         ],
         recursive: false,
         position: (45, 45),
        },
        String {
         parts: [
          Raw {
           content: "mkdir -p $out/bin\nmakeWrapper ",
          },
          Expression {
           expression: Variable {
            identifier: "nss_pam_ldapd",
            position: (47, 19),
           },
          },
          Raw {
           content: "/sbin/nslcd $out/bin/nslcd \\\n  --set LD_PRELOAD    \"",
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (48, 30),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "libredirect",
               position: (48, 35),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "/lib/libredirect.so\" \\\n  --set NIX_REDIRECTS \"/etc/nslcd.conf=/run/nslcd/nslcd.conf\"\n",
          },
         ],
         position: (45, 86),
        },
       ],
      },
     ),
    ],
    target: Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "options",
          position: (58, 3),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (60, 5),
            },
            Raw {
             content: "ldap",
             position: (60, 11),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (62, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkEnableOption",
               position: (62, 16),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "authentication against an LDAP server",
                 },
                ],
                position: (62, 31),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "loginPam",
                position: (64, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (64, 18),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (65, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (65, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (65, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (66, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (66, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (67, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Whether to include authentication against LDAP in login PAM.",
                    },
                   ],
                   position: (67, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (64, 27),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "nsswitch",
                position: (70, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (70, 18),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (71, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (71, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (71, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (72, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (72, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (73, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Whether to include lookup against LDAP in NSS.",
                    },
                   ],
                   position: (73, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (70, 27),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "server",
                position: (76, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (76, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (77, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (77, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (77, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (78, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "ldap://ldap.example.org/",
                    },
                   ],
                   position: (78, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (79, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "The URL of the LDAP server.",
                    },
                   ],
                   position: (79, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (76, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "base",
                position: (82, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (82, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (83, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (83, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (83, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (84, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "dc=example,dc=org",
                    },
                   ],
                   position: (84, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (85, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "The distinguished name of the search base.",
                    },
                   ],
                   position: (85, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (82, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "useTLS",
                position: (88, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (88, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (89, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (89, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (89, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (90, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "false",
                   position: (90, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (91, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "If enabled, use TLS (encryption) over an LDAP (port 389)\nconnection.  The alternative is to specify an LDAPS server (port\n636) in <option>users.ldap.server</option> or to forego\nsecurity.\n",
                    },
                   ],
                   position: (91, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (88, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "timeLimit",
                position: (99, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (99, 19),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (100, 9),
                    },
                   ],
                  },
                  Int {
                   value: 0,
                   position: (100, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (101, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (101, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "int",
                      position: (101, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (102, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Specifies the time limit (in seconds) to use when performing\nsearches. A value of zero (0), which is the default, is to\nwait indefinitely for searches to be completed.\n",
                    },
                   ],
                   position: (102, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (99, 28),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "daemon",
                position: (109, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "enable",
                   position: (110, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (110, 18),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (111, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (111, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "bool",
                         position: (111, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (112, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "false",
                      position: (112, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (113, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Whether to let the nslcd daemon (nss-pam-ldapd) handle the\nLDAP lookups for NSS and PAM. This can improve performance,\nand if you need to bind to the LDAP server with a password,\nit increases security, since only the nslcd user needs to\nhave access to the bindpw file, not everyone that uses NSS\nand/or PAM. If this option is enabled, a local nscd user is\ncreated automatically, and the nslcd service is started\nautomatically when the network get up.\n",
                       },
                      ],
                      position: (113, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (110, 27),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "extraConfig",
                   position: (125, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (125, 23),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (126, 11),
                       },
                      ],
                     },
                     String {
                      parts: [],
                      position: (126, 22),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (127, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (127, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "lines",
                         position: (127, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (128, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Extra configuration options that will be added verbatim at\nthe end of the nslcd configuration file (<literal>nslcd.conf(5)</literal>).\n",
                       },
                      ],
                      position: (128, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (125, 32),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "rootpwmoddn",
                   position: (134, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (134, 23),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (135, 11),
                       },
                      ],
                     },
                     String {
                      parts: [],
                      position: (135, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "example",
                        position: (136, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "cn=admin,dc=example,dc=com",
                       },
                      ],
                      position: (136, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (137, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (137, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (137, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (138, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "The distinguished name to use to bind to the LDAP server\nwhen the root user tries to modify a user's password.\n",
                       },
                      ],
                      position: (138, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (134, 32),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "rootpwmodpwFile",
                   position: (144, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (144, 27),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (145, 11),
                       },
                      ],
                     },
                     String {
                      parts: [],
                      position: (145, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "example",
                        position: (146, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "/run/keys/nslcd.rootpwmodpw",
                       },
                      ],
                      position: (146, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (147, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (147, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (147, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (148, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "The path to a file containing the credentials with which to bind to\nthe LDAP server if the root user tries to change a user's password.\n",
                       },
                      ],
                      position: (148, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (144, 36),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (109, 16),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "bind",
                position: (155, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "distinguishedName",
                   position: (156, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (156, 29),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (157, 11),
                       },
                      ],
                     },
                     String {
                      parts: [],
                      position: (157, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "example",
                        position: (158, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "cn=admin,dc=example,dc=com",
                       },
                      ],
                      position: (158, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (159, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (159, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (159, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (160, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "The distinguished name to bind to the LDAP server with. If this\nis not specified, an anonymous bind will be done.\n",
                       },
                      ],
                      position: (160, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (156, 38),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "passwordFile",
                   position: (166, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (166, 24),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (167, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "/etc/ldap/bind.password",
                       },
                      ],
                      position: (167, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (168, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (168, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (168, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (169, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "The path to a file containing the credentials to use when binding\nto the LDAP server (if not binding anonymously).\n",
                       },
                      ],
                      position: (169, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (166, 33),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "timeLimit",
                   position: (175, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (175, 21),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (176, 11),
                       },
                      ],
                     },
                     Int {
                      value: 30,
                      position: (176, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (177, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (177, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "int",
                         position: (177, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (178, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Specifies the time limit (in seconds) to use when connecting\nto the directory server. This is distinct from the time limit\nspecified in <option>users.ldap.timeLimit</option> and affects\nthe initial server connection only.\n",
                       },
                      ],
                      position: (178, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (175, 30),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "policy",
                   position: (186, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkOption",
                  position: (186, 18),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "default",
                        position: (187, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "hard_open",
                       },
                      ],
                      position: (187, 21),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "type",
                        position: (188, 11),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (188, 18),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "enum",
                          position: (188, 24),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "hard_open",
                           },
                          ],
                          position: (188, 31),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "hard_init",
                           },
                          ],
                          position: (188, 43),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "soft",
                           },
                          ],
                          position: (188, 55),
                         },
                        ],
                        position: (188, 29),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (189, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Specifies the policy to use for reconnecting to an unavailable\nLDAP server. The default is <literal>hard_open</literal>, which\nreconnects if opening the connection to the directory server\nfailed. By contrast, <literal>hard_init</literal> reconnects if\ninitializing the connection failed. Initializing may not\nactually contact the directory server, and it is possible that\na malformed configuration file will trigger reconnection. If\n<literal>soft</literal> is specified, then\n<package>nss_ldap</package> will return immediately on server\nfailure. All hard reconnect policies block with exponential\nbackoff before retrying.\n",
                       },
                      ],
                      position: (189, 25),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (186, 27),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (155, 14),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "extraConfig",
                position: (205, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (205, 21),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (206, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                   position: (206, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (207, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (207, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "lines",
                      position: (207, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (208, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Extra configuration options that will be added verbatim at\nthe end of the ldap configuration file (<literal>ldap.conf(5)</literal>).\nIf <option>users.ldap.daemon</option> is enabled, this\nconfiguration will not be used. In that case, use\n<option>users.ldap.daemon.extraConfig</option> instead.\n",
                    },
                   ],
                   position: (208, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (205, 30),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (60, 18),
          },
         ),
        ],
        recursive: false,
        position: (58, 13),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "config",
          position: (223, 3),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "mkIf",
         position: (223, 12),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (223, 17),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (223, 21),
            },
           ],
          },
          default: None,
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "environment",
               position: (225, 5),
              },
              Raw {
               content: "etc",
               position: (225, 17),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "optionalAttrs",
              position: (225, 23),
             },
             arguments: [
              UnaryOperation {
               operator: Not,
               operand: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (225, 39),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "daemon",
                   position: (225, 43),
                  },
                  Raw {
                   content: "enable",
                   position: (225, 50),
                  },
                 ],
                },
                default: None,
               },
               position: (225, 38),
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: String {
                     parts: [
                      Raw {
                       content: "ldap.conf",
                      },
                     ],
                     position: (226, 7),
                    },
                   },
                  ],
                 },
                 Variable {
                  identifier: "ldapConfig",
                  position: (226, 21),
                 },
                ),
               ],
               recursive: false,
               position: (225, 58),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (229, 5),
              },
              Raw {
               content: "activationScripts",
               position: (229, 12),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (229, 32),
             },
             arguments: [
              UnaryOperation {
               operator: Not,
               operand: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (229, 39),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "daemon",
                   position: (229, 43),
                  },
                  Raw {
                   content: "enable",
                   position: (229, 50),
                  },
                 ],
                },
                default: None,
               },
               position: (229, 38),
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ldap",
                    position: (230, 7),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "stringAfter",
                   position: (230, 14),
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "etc",
                       },
                      ],
                      position: (230, 28),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "groups",
                       },
                      ],
                      position: (230, 34),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "users",
                       },
                      ],
                      position: (230, 43),
                     },
                    ],
                    position: (230, 26),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "if test -f \"",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (231, 23),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "bind",
                          position: (231, 27),
                         },
                         Raw {
                          content: "passwordFile",
                          position: (231, 32),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "\" ; then\n  umask 0077\n  conf=\"$(mktemp)\"\n  printf 'bindpw %s\\n' \"$(cat ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (234, 41),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "bind",
                          position: (234, 45),
                         },
                         Raw {
                          content: "passwordFile",
                          position: (234, 50),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ")\" |\n  cat ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "ldapConfig",
                        position: (235, 17),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "source",
                          position: (235, 28),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: " - >\"$conf\"\n  mv -fT \"$conf\" /etc/ldap.conf\nfi\n",
                     },
                    ],
                    position: (230, 53),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (229, 58),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (241, 5),
              },
              Raw {
               content: "nssModules",
               position: (241, 12),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (241, 25),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (241, 30),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nsswitch",
                  position: (241, 34),
                 },
                ],
               },
               default: None,
              },
              FunctionApplication {
               function: Variable {
                identifier: "singleton",
                position: (241, 44),
               },
               arguments: [
                IfThenElse {
                 predicate: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (242, 10),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "daemon",
                     position: (242, 14),
                    },
                    Raw {
                     content: "enable",
                     position: (242, 21),
                    },
                   ],
                  },
                  default: None,
                 },
                 then: Variable {
                  identifier: "nss_pam_ldapd",
                  position: (242, 33),
                 },
                 else_: Variable {
                  identifier: "nss_ldap",
                  position: (242, 52),
                 },
                 position: (242, 7),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (245, 5),
              },
              Raw {
               content: "nssDatabases",
               position: (245, 12),
              },
              Raw {
               content: "group",
               position: (245, 25),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "optional",
              position: (245, 33),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (245, 42),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nsswitch",
                  position: (245, 46),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [
                Raw {
                 content: "ldap",
                },
               ],
               position: (245, 55),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (246, 5),
              },
              Raw {
               content: "nssDatabases",
               position: (246, 12),
              },
              Raw {
               content: "passwd",
               position: (246, 25),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "optional",
              position: (246, 34),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (246, 43),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nsswitch",
                  position: (246, 47),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [
                Raw {
                 content: "ldap",
                },
               ],
               position: (246, 56),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (247, 5),
              },
              Raw {
               content: "nssDatabases",
               position: (247, 12),
              },
              Raw {
               content: "shadow",
               position: (247, 25),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "optional",
              position: (247, 34),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (247, 43),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nsswitch",
                  position: (247, 47),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [
                Raw {
                 content: "ldap",
                },
               ],
               position: (247, 56),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "users",
               position: (249, 5),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (249, 13),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (249, 18),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "daemon",
                  position: (249, 22),
                 },
                 Raw {
                  content: "enable",
                  position: (249, 29),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "groups",
                    position: (250, 7),
                   },
                   Raw {
                    content: "nslcd",
                    position: (250, 14),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "gid",
                       position: (251, 9),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (251, 15),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ids",
                        position: (251, 22),
                       },
                       Raw {
                        content: "gids",
                        position: (251, 26),
                       },
                       Raw {
                        content: "nslcd",
                        position: (251, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                  position: (250, 22),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "users",
                    position: (254, 7),
                   },
                   Raw {
                    content: "nslcd",
                    position: (254, 13),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "uid",
                       position: (255, 9),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (255, 15),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ids",
                        position: (255, 22),
                       },
                       Raw {
                        content: "uids",
                        position: (255, 26),
                       },
                       Raw {
                        content: "nslcd",
                        position: (255, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (256, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "nslcd user.",
                      },
                     ],
                     position: (256, 23),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "group",
                       position: (257, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "nslcd",
                      },
                     ],
                     position: (257, 17),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (254, 21),
                 },
                ),
               ],
               recursive: false,
               position: (249, 36),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (261, 5),
              },
              Raw {
               content: "services",
               position: (261, 13),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (261, 24),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (261, 29),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "daemon",
                  position: (261, 33),
                 },
                 Raw {
                  content: "enable",
                  position: (261, 40),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "nslcd",
                    position: (262, 7),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "wantedBy",
                       position: (263, 9),
                      },
                     ],
                    },
                    List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "multi-user.target",
                        },
                       ],
                       position: (263, 22),
                      },
                     ],
                     position: (263, 20),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "preStart",
                       position: (265, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "umask 0077\nconf=\"$(mktemp)\"\n{\n  cat ",
                      },
                      Expression {
                       expression: Variable {
                        identifier: "nslcdConfig",
                        position: (269, 19),
                       },
                      },
                      Raw {
                       content: "\n  test -z ",
                      },
                      Raw {
                       content: "'",
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (270, 24),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "bind",
                           position: (270, 28),
                          },
                          Raw {
                           content: "distinguishedName",
                           position: (270, 33),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "' -o ! -f ",
                      },
                      Raw {
                       content: "'",
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (270, 64),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "bind",
                           position: (270, 68),
                          },
                          Raw {
                           content: "passwordFile",
                           position: (270, 73),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "' ||\n  printf 'bindpw %s\\n' \"$(cat ",
                      },
                      Raw {
                       content: "'",
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (271, 44),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "bind",
                           position: (271, 48),
                          },
                          Raw {
                           content: "passwordFile",
                           position: (271, 53),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "')\"\n  test -z ",
                      },
                      Raw {
                       content: "'",
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (272, 24),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "daemon",
                           position: (272, 28),
                          },
                          Raw {
                           content: "rootpwmoddn",
                           position: (272, 35),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "' -o ! -f ",
                      },
                      Raw {
                       content: "'",
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (272, 60),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "daemon",
                           position: (272, 64),
                          },
                          Raw {
                           content: "rootpwmodpwFile",
                           position: (272, 71),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "' ||\n  printf 'rootpwmodpw %s\\n' \"$(cat ",
                      },
                      Raw {
                       content: "'",
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (273, 49),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "daemon",
                           position: (273, 53),
                          },
                          Raw {
                           content: "rootpwmodpwFile",
                           position: (273, 60),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "')\"\n} >\"$conf\"\nmv -fT \"$conf\" /run/nslcd/nslcd.conf\n",
                      },
                     ],
                     position: (265, 20),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "restartTriggers",
                       position: (278, 9),
                      },
                     ],
                    },
                    List {
                     elements: [
                      Variable {
                       identifier: "nslcdConfig",
                       position: (279, 11),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (280, 11),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "bind",
                          position: (280, 15),
                         },
                         Raw {
                          content: "passwordFile",
                          position: (280, 20),
                         },
                        ],
                       },
                       default: None,
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (281, 11),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "daemon",
                          position: (281, 15),
                         },
                         Raw {
                          content: "rootpwmodpwFile",
                          position: (281, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (278, 27),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "serviceConfig",
                       position: (284, 9),
                      },
                     ],
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "ExecStart",
                          position: (285, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Expression {
                          expression: Variable {
                           identifier: "nslcdWrapped",
                           position: (285, 26),
                          },
                         },
                         Raw {
                          content: "/bin/nslcd",
                         },
                        ],
                        position: (285, 23),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "Type",
                          position: (286, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "forking",
                         },
                        ],
                        position: (286, 18),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "Restart",
                          position: (287, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "always",
                         },
                        ],
                        position: (287, 21),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "User",
                          position: (288, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "nslcd",
                         },
                        ],
                        position: (288, 18),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "Group",
                          position: (289, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "nslcd",
                         },
                        ],
                        position: (289, 19),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "RuntimeDirectory",
                          position: (290, 11),
                         },
                        ],
                       },
                       List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "nslcd",
                           },
                          ],
                          position: (290, 32),
                         },
                        ],
                        position: (290, 30),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "PIDFile",
                          position: (291, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "/run/nslcd/nslcd.pid",
                         },
                        ],
                        position: (291, 21),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "AmbientCapabilities",
                          position: (292, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "CAP_SYS_RESOURCE",
                         },
                        ],
                        position: (292, 33),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (284, 25),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (262, 15),
                 },
                ),
               ],
               recursive: false,
               position: (261, 47),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (223, 28),
         },
        ],
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "imports",
          position: (300, 3),
         },
        ],
       },
       List {
        elements: [
         FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (301, 8),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "users",
               },
              ],
              position: (301, 32),
             },
             String {
              parts: [
               Raw {
                content: "ldap",
               },
              ],
              position: (301, 40),
             },
             String {
              parts: [
               Raw {
                content: "bind",
               },
              ],
              position: (301, 47),
             },
             String {
              parts: [
               Raw {
                content: "password",
               },
              ],
              position: (301, 54),
             },
            ],
            position: (301, 30),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "users",
               },
              ],
              position: (301, 68),
             },
             String {
              parts: [
               Raw {
                content: "ldap",
               },
              ],
              position: (301, 76),
             },
             String {
              parts: [
               Raw {
                content: "bind",
               },
              ],
              position: (301, 83),
             },
             String {
              parts: [
               Raw {
                content: "passwordFile",
               },
              ],
              position: (301, 90),
             },
            ],
            position: (301, 66),
           },
          ],
         },
        ],
        position: (301, 5),
       },
      ),
     ],
     recursive: false,
     position: (54, 1),
    },
    position: (6, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}