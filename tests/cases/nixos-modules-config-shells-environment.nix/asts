---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "utils",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (6, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (10, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (10, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "environment",
         position: (10, 16),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "exportedEnvVars",
        position: (12, 3),
       },
      ],
     },
     to: LetIn {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "absoluteVariables",
           position: (14, 7),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mapAttrs",
          position: (15, 9),
         },
         arguments: [
          Function {
           argument: Simple {
            identifier: "n",
           },
           definition: Variable {
            identifier: "toList",
            position: (15, 22),
           },
           position: (15, 19),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (15, 30),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "variables",
              position: (15, 34),
             },
            ],
           },
           default: None,
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "suffixedVariables",
           position: (17, 7),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "flip",
          position: (18, 9),
         },
         arguments: [
          Variable {
           identifier: "mapAttrs",
           position: (18, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (18, 23),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "profileRelativeEnvVars",
              position: (18, 27),
             },
            ],
           },
           default: None,
          },
          Function {
           argument: Simple {
            identifier: "envVar",
           },
           definition: Function {
            argument: Simple {
             identifier: "listSuffixes",
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "concatMap",
              position: (19, 11),
             },
             arguments: [
              Function {
               argument: Simple {
                identifier: "profile",
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "map",
                 position: (19, 31),
                },
                arguments: [
                 Function {
                  argument: Simple {
                   identifier: "suffix",
                  },
                  definition: String {
                   parts: [
                    Expression {
                     expression: Variable {
                      identifier: "profile",
                      position: (19, 47),
                     },
                    },
                    Expression {
                     expression: Variable {
                      identifier: "suffix",
                      position: (19, 57),
                     },
                    },
                   ],
                   position: (19, 44),
                  },
                  position: (19, 36),
                 },
                 Variable {
                  identifier: "listSuffixes",
                  position: (19, 67),
                 },
                ],
               },
               position: (19, 22),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (19, 81),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "profiles",
                  position: (19, 85),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            position: (18, 59),
           },
           position: (18, 51),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "allVariables",
           position: (22, 7),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "zipAttrsWith",
          position: (23, 9),
         },
         arguments: [
          Function {
           argument: Simple {
            identifier: "n",
           },
           definition: Variable {
            identifier: "concatLists",
            position: (23, 26),
           },
           position: (23, 23),
          },
          List {
           elements: [
            Variable {
             identifier: "absoluteVariables",
             position: (23, 41),
            },
            Variable {
             identifier: "suffixedVariables",
             position: (23, 59),
            },
           ],
           position: (23, 39),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "exportVariables",
           position: (25, 7),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mapAttrsToList",
          position: (26, 9),
         },
         arguments: [
          Function {
           argument: Simple {
            identifier: "n",
           },
           definition: Function {
            argument: Simple {
             identifier: "v",
            },
            definition: String {
             parts: [
              Raw {
               content: "export ",
               position: (26, 33),
              },
              Expression {
               expression: Variable {
                identifier: "n",
                position: (26, 42),
               },
              },
              Raw {
               content: "=\"",
               position: (26, 44),
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (26, 48),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: ":",
                    position: (26, 66),
                   },
                  ],
                  position: (26, 65),
                 },
                 Variable {
                  identifier: "v",
                  position: (26, 69),
                 },
                ],
               },
              },
              Raw {
               content: "\"",
               position: (26, 71),
              },
             ],
             position: (26, 31),
            },
            position: (26, 28),
           },
           position: (26, 25),
          },
          Variable {
           identifier: "allVariables",
           position: (26, 76),
          },
         ],
        },
       },
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "concatStringsSep",
        position: (28, 7),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "\n",
           position: (28, 25),
          },
         ],
         position: (28, 24),
        },
        Variable {
         identifier: "exportVariables",
         position: (28, 29),
        },
       ],
      },
      position: (13, 5),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (33, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (35, 5),
           },
           Raw {
            content: "variables",
            position: (35, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (35, 29),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (36, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (36, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (37, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "EDITOR",
                    position: (37, 19),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "nvim",
                    position: (37, 29),
                   },
                  ],
                  position: (37, 28),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "VISUAL",
                    position: (37, 36),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "nvim",
                    position: (37, 46),
                   },
                  ],
                  position: (37, 45),
                 },
                },
               ],
               recursive: false,
               position: (37, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (38, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "A set of environment variables used in the global environment.\nThese variables will be set on shell initialisation (e.g. in /etc/profile).\nThe value of each variable can be either a string or a list of\nstrings.  The latter is concatenated, interspersed with colon\ncharacters.\n",
                 position: (39, 1),
                },
               ],
               position: (38, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (45, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (45, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (45, 26),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "either",
                   position: (45, 35),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (45, 42),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "listOf",
                     position: (45, 47),
                    },
                    arguments: [
                     Variable {
                      identifier: "str",
                      position: (45, 54),
                     },
                    ],
                   },
                  ],
                 },
                ],
               },
               position: (45, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "apply",
                 position: (46, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mapAttrs",
                position: (46, 15),
               },
               arguments: [
                Function {
                 argument: Simple {
                  identifier: "n",
                 },
                 definition: Function {
                  argument: Simple {
                   identifier: "v",
                  },
                  definition: IfThenElse {
                   predicate: FunctionApplication {
                    function: Variable {
                     identifier: "isList",
                     position: (46, 34),
                    },
                    arguments: [
                     Variable {
                      identifier: "v",
                      position: (46, 41),
                     },
                    ],
                   },
                   then: FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (46, 48),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: ":",
                        position: (46, 66),
                       },
                      ],
                      position: (46, 65),
                     },
                     Variable {
                      identifier: "v",
                      position: (46, 69),
                     },
                    ],
                   },
                   else_: Variable {
                    identifier: "v",
                    position: (46, 76),
                   },
                   position: (46, 31),
                  },
                  position: (46, 28),
                 },
                 position: (46, 25),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (35, 38),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (49, 5),
           },
           Raw {
            content: "profiles",
            position: (49, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (49, 28),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (50, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (50, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (51, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "A list of profiles used to setup the global environment.\n",
                 position: (52, 1),
                },
               ],
               position: (51, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (54, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (54, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (54, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (54, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (54, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (49, 37),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (57, 5),
           },
           Raw {
            content: "profileRelativeEnvVars",
            position: (57, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (57, 42),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (58, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (58, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (58, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (58, 29),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "listOf",
                     position: (58, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (58, 42),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "str",
                      position: (58, 48),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (59, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "PATH",
                    position: (59, 19),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/bin",
                      position: (59, 29),
                     },
                    ],
                    position: (59, 28),
                   },
                  ],
                  position: (59, 26),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "MANPATH",
                    position: (59, 38),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/man",
                      position: (59, 51),
                     },
                    ],
                    position: (59, 50),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/share/man",
                      position: (59, 58),
                     },
                    ],
                    position: (59, 57),
                   },
                  ],
                  position: (59, 48),
                 },
                },
               ],
               recursive: false,
               position: (59, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (60, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Attribute set of environment variable.  Each attribute maps to a list\nof relative paths.  Each relative path is appended to the each profile\nof <option>environment.profiles</option> to form the content of the\ncorresponding environment variable.\n",
                 position: (61, 1),
                },
               ],
               position: (60, 21),
              },
             },
            ],
            recursive: false,
            position: (57, 51),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (69, 5),
           },
           Raw {
            content: "extraInit",
            position: (69, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (69, 29),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (70, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (70, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (71, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Shell script code called during global environment initialisation\nafter all variables and profileVariables have been set.\nThis code is assumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n",
                 position: (72, 1),
                },
               ],
               position: (71, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (77, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (77, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (77, 20),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (69, 38),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (80, 5),
           },
           Raw {
            content: "shellInit",
            position: (80, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (80, 29),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (81, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (81, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (82, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Shell script code called during shell initialisation.\nThis code is assumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n",
                 position: (83, 1),
                },
               ],
               position: (82, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (87, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (87, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (87, 20),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (80, 38),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (90, 5),
           },
           Raw {
            content: "loginShellInit",
            position: (90, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (90, 34),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (91, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (91, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (92, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Shell script code called during login shell initialisation.\nThis code is assumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n",
                 position: (93, 1),
                },
               ],
               position: (92, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (97, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (97, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (97, 20),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (90, 43),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (100, 5),
           },
           Raw {
            content: "interactiveShellInit",
            position: (100, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (100, 40),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (101, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (101, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (102, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Shell script code called during interactive shell initialisation.\nThis code is assumed to be shell-independent, which means you should\nstick to pure sh without sh word split.\n",
                 position: (103, 1),
                },
               ],
               position: (102, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (107, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (107, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (107, 20),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (100, 49),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (110, 5),
           },
           Raw {
            content: "shellAliases",
            position: (110, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (110, 32),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (111, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "l",
                    position: (111, 19),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (111, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ll",
                    position: (111, 29),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "ls -l",
                    position: (111, 35),
                   },
                  ],
                  position: (111, 34),
                 },
                },
               ],
               recursive: false,
               position: (111, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (112, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "An attribute set that maps aliases (the top level attribute names in\nthis option) to command strings or directly to build outputs. The\naliases are added to all users' shells.\nAliases mapped to <code>null</code> are ignored.\n",
                 position: (113, 1),
                },
               ],
               position: (112, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (118, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (118, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (118, 26),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "nullOr",
                   position: (118, 35),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "either",
                     position: (118, 43),
                    },
                    arguments: [
                     Variable {
                      identifier: "str",
                      position: (118, 50),
                     },
                     Variable {
                      identifier: "path",
                      position: (118, 54),
                     },
                    ],
                   },
                  ],
                 },
                ],
               },
               position: (118, 14),
              },
             },
            ],
            recursive: false,
            position: (110, 41),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (121, 5),
           },
           Raw {
            content: "homeBinInPath",
            position: (121, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (121, 33),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (122, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Include ~/bin/ in $PATH.\n",
                 position: (123, 1),
                },
               ],
               position: (122, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (125, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (125, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (126, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (126, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (126, 20),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (121, 42),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (129, 5),
           },
           Raw {
            content: "localBinInPath",
            position: (129, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (129, 34),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (130, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Add ~/.local/bin/ to $PATH\n",
                 position: (131, 1),
                },
               ],
               position: (130, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (133, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (133, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (134, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (134, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (134, 20),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (129, 43),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (137, 5),
           },
           Raw {
            content: "binsh",
            position: (137, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (137, 25),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (138, 7),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (138, 20),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "system",
                     position: (138, 27),
                    },
                    Raw {
                     content: "build",
                     position: (138, 34),
                    },
                    Raw {
                     content: "binsh",
                     position: (138, 40),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/sh",
                 position: (138, 46),
                },
               ],
               position: (138, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (139, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (139, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (139, 41),
                  },
                  Raw {
                   content: "$",
                   position: (139, 42),
                  },
                  Raw {
                   content: "{config.system.build.binsh}/bin/sh\"",
                   position: (139, 45),
                  },
                 ],
                 position: (139, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (140, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (140, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (140, 37),
                  },
                  Raw {
                   content: "$",
                   position: (140, 38),
                  },
                  Raw {
                   content: "{pkgs.dash}/bin/dash\"",
                   position: (140, 41),
                  },
                 ],
                 position: (140, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (141, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (141, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (141, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "visible",
                 position: (142, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (142, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (143, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The shell executable that is linked system-wide to\n<literal>/bin/sh</literal>. Please note that NixOS assumes all\nover the place that shell to be Bash, so override the default\nsetting only if you know exactly what you're doing.\n",
                 position: (144, 1),
                },
               ],
               position: (143, 21),
              },
             },
            ],
            recursive: false,
            position: (137, 34),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (151, 5),
           },
           Raw {
            content: "shells",
            position: (151, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (151, 26),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (152, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (152, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (153, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (153, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[ pkgs.bashInteractive pkgs.zsh ]",
                   position: (153, 36),
                  },
                 ],
                 position: (153, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (154, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "A list of permissible login shells for user accounts.\nNo need to mention <literal>/bin/sh</literal>\nhere, it is placed into this list implicitly.\n",
                 position: (155, 1),
                },
               ],
               position: (154, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (159, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (159, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (159, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (159, 28),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "either",
                     position: (159, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (159, 41),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "shellPackage",
                      position: (159, 47),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (159, 60),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "path",
                      position: (159, 66),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (151, 35),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (33, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (164, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "system",
            position: (166, 5),
           },
           Raw {
            content: "build",
            position: (166, 12),
           },
           Raw {
            content: "binsh",
            position: (166, 18),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (166, 26),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "bashInteractive",
             position: (166, 31),
            },
           ],
          },
          default: None,
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (172, 5),
           },
           Raw {
            content: "variables",
            position: (172, 17),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (172, 29),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "environment",
             position: (172, 36),
            },
            Raw {
             content: "sessionVariables",
             position: (172, 48),
            },
           ],
          },
          default: None,
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (174, 5),
           },
           Raw {
            content: "profileRelativeEnvVars",
            position: (174, 17),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (174, 42),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "environment",
             position: (174, 49),
            },
            Raw {
             content: "profileRelativeSessionVariables",
             position: (174, 61),
            },
           ],
          },
          default: None,
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (176, 5),
           },
           Raw {
            content: "shellAliases",
            position: (176, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mapAttrs",
           position: (176, 32),
          },
          arguments: [
           Function {
            argument: Simple {
             identifier: "name",
            },
            definition: Variable {
             identifier: "mkDefault",
             position: (176, 48),
            },
            position: (176, 42),
           },
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "ls",
                 position: (177, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "ls --color=tty",
                 position: (177, 13),
                },
               ],
               position: (177, 12),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "ll",
                 position: (178, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "ls -l",
                 position: (178, 13),
                },
               ],
               position: (178, 12),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "l",
                 position: (179, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "ls -alh",
                 position: (179, 13),
                },
               ],
               position: (179, 12),
              },
             },
            ],
            recursive: false,
            position: (176, 59),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (182, 5),
           },
           Raw {
            content: "etc",
            position: (182, 17),
           },
           Raw {
            content: "shells",
            position: (182, 21),
           },
           Raw {
            content: "text",
            position: (182, 28),
           },
          ],
         },
         to: String {
          parts: [
           Raw {
            content: "",
            position: (184, 1),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (184, 11),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "\n",
                 position: (184, 29),
                },
               ],
               position: (184, 28),
              },
              FunctionApplication {
               function: Variable {
                identifier: "map",
                position: (184, 34),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "utils",
                  position: (184, 38),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "toShellPath",
                    position: (184, 44),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (184, 56),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "shells",
                    position: (184, 60),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ],
            },
           },
           Raw {
            content: "\n/bin/sh\n",
            position: (184, 68),
           },
          ],
          position: (183, 7),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (190, 5),
           },
           Raw {
            content: "etc",
            position: (190, 17),
           },
           Raw {
            content: "set-environment",
            position: (190, 21),
           },
           Raw {
            content: "source",
            position: (190, 37),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (190, 46),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "system",
             position: (190, 53),
            },
            Raw {
             content: "build",
             position: (190, 60),
            },
            Raw {
             content: "setEnvironment",
             position: (190, 66),
            },
           ],
          },
          default: None,
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "system",
            position: (192, 5),
           },
           Raw {
            content: "build",
            position: (192, 12),
           },
           Raw {
            content: "setEnvironment",
            position: (192, 18),
           },
          ],
         },
         to: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (192, 35),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "writeText",
              position: (192, 40),
             },
            ],
           },
           default: None,
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "set-environment",
              position: (192, 51),
             },
            ],
            position: (192, 50),
           },
           String {
            parts: [
             Raw {
              content: "# DO NOT EDIT -- this file has been generated automatically.\n\n# Prevent this file from being sourced by child shells.\nexport __NIXOS_SET_ENVIRONMENT_DONE=1\n\n",
              position: (194, 1),
             },
             Expression {
              expression: Variable {
               identifier: "exportedEnvVars",
               position: (199, 11),
              },
             },
             Raw {
              content: "\n\n",
              position: (199, 27),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (201, 11),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "extraInit",
                  position: (201, 15),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\n\n",
              position: (201, 25),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (203, 11),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (203, 26),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "homeBinInPath",
                    position: (203, 30),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "# ~/bin if it exists overrides other bin directories.\nexport PATH=\"$HOME/bin:$PATH\"\n",
                   position: (204, 1),
                  },
                 ],
                 position: (203, 44),
                },
               ],
              },
             },
             Raw {
              content: "\n\n",
              position: (206, 12),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (208, 11),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (208, 26),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "localBinInPath",
                    position: (208, 30),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "export PATH=\"$HOME/.local/bin:$PATH\"\n",
                   position: (209, 1),
                  },
                 ],
                 position: (208, 45),
                },
               ],
              },
             },
             Raw {
              content: "\n",
              position: (210, 12),
             },
            ],
            position: (193, 7),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "system",
            position: (213, 5),
           },
           Raw {
            content: "activationScripts",
            position: (213, 12),
           },
           Raw {
            content: "binsh",
            position: (213, 30),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "stringAfter",
           position: (213, 38),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "stdio",
                position: (213, 53),
               },
              ],
              position: (213, 52),
             },
            ],
            position: (213, 50),
           },
           String {
            parts: [
             Raw {
              content: "# Create the required /bin/sh symlink; otherwise lots of things\n# (notably the system() function) won't work.\nmkdir -m 0755 -p /bin\nln -sfn \"",
              position: (215, 1),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (218, 20),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "binsh",
                  position: (218, 24),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\" /bin/.sh.tmp\nmv /bin/.sh.tmp /bin/sh # atomically replace /bin/sh\n",
              position: (218, 30),
             },
            ],
            position: (214, 7),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (164, 12),
      },
     },
    ],
    recursive: false,
    position: (31, 1),
   },
   position: (8, 1),
  },
  position: (6, 1),
 },
 position: (4, 1),
}