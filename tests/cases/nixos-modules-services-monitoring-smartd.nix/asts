---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "host",
        position: (7, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Addition,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (7, 10),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "networking",
           position: (7, 17),
          },
          Raw {
           content: "hostName",
           position: (7, 28),
          },
         ],
        },
        default: Some(
         String {
          parts: [
           Raw {
            content: "unknown",
            position: (7, 41),
           },
          ],
         },
        ),
       },
       FunctionApplication {
        function: Variable {
         identifier: "optionalString",
         position: (8, 10),
        },
        arguments: [
         BinaryOperation {
          operator: NotEqualTo,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "config",
             position: (8, 26),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "networking",
               position: (8, 33),
              },
              Raw {
               content: "domain",
               position: (8, 44),
              },
             ],
            },
            default: None,
           },
           Variable {
            identifier: "null",
            position: (8, 54),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: ".",
            position: (8, 61),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "config",
              position: (8, 64),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "networking",
                position: (8, 71),
               },
               Raw {
                content: "domain",
                position: (8, 82),
               },
              ],
             },
             default: None,
            },
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (10, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (10, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (10, 16),
        },
        Raw {
         content: "smartd",
         position: (10, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "opt",
        position: (11, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "options",
       position: (11, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (11, 17),
        },
        Raw {
         content: "smartd",
         position: (11, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nm",
        position: (13, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (13, 8),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "notifications",
         position: (13, 12),
        },
        Raw {
         content: "mail",
         position: (13, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nw",
        position: (14, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (14, 8),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "notifications",
         position: (14, 12),
        },
        Raw {
         content: "wall",
         position: (14, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nx",
        position: (15, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (15, 8),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "notifications",
         position: (15, 12),
        },
        Raw {
         content: "x11",
         position: (15, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "smartdNotify",
        position: (17, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (17, 18),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeScript",
          position: (17, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "smartd-notify.sh",
          position: (17, 36),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "#! ",
          position: (18, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (18, 10),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "runtimeShell",
              position: (18, 15),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (18, 28),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (19, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "nm",
              position: (19, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (19, 25),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "{\n",
               position: (20, 1),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (21, 9),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "coreutils",
                   position: (21, 14),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/cat << EOF\nFrom: smartd on ",
               position: (21, 24),
              },
              Expression {
               expression: Variable {
                identifier: "host",
                position: (22, 25),
               },
              },
              Raw {
               content: " <",
               position: (22, 30),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "nm",
                 position: (22, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "sender",
                   position: (22, 37),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: ">\nTo: undisclosed-recipients:;\nSubject: $SMARTD_SUBJECT\n\n$SMARTD_FULLMESSAGE\nEOF\n\n",
               position: (22, 44),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (29, 9),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "smartmontools",
                   position: (29, 14),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/sbin/smartctl -a -d \"$SMARTD_DEVICETYPE\" \"$SMARTD_DEVICE\"\n} | ",
               position: (29, 28),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "nm",
                 position: (30, 13),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "mailer",
                   position: (30, 16),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " -i \"",
               position: (30, 23),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "nm",
                 position: (30, 30),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "recipient",
                   position: (30, 33),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\"\n",
               position: (30, 43),
              },
             ],
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (31, 8),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (32, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "nw",
              position: (32, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (32, 25),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "{\n",
               position: (33, 1),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (34, 9),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "coreutils",
                   position: (34, 14),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/cat << EOF\nProblem detected with disk: $SMARTD_DEVICESTRING\nWarning message from smartd is:\n\n$SMARTD_MESSAGE\nEOF\n} | ",
               position: (34, 24),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (40, 13),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "util-linux",
                   position: (40, 18),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/wall 2>/dev/null\n",
               position: (40, 29),
              },
             ],
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (41, 8),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (42, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "nx",
              position: (42, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (42, 25),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "export DISPLAY=",
               position: (43, 1),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "nx",
                 position: (43, 24),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "display",
                   position: (43, 27),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\n{\n",
               position: (43, 35),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (45, 9),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "coreutils",
                   position: (45, 14),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/cat << EOF\nProblem detected with disk: $SMARTD_DEVICESTRING\nWarning message from smartd is:\n\n$SMARTD_FULLMESSAGE\nEOF\n} | ",
               position: (45, 24),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (51, 13),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "xorg",
                   position: (51, 18),
                  },
                  Raw {
                   content: "xmessage",
                   position: (51, 23),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/xmessage -file - 2>/dev/null &\n",
               position: (51, 32),
              },
             ],
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (52, 8),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "notifyOpts",
        position: (55, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "optionalString",
       position: (55, 16),
      },
      arguments: [
       BinaryOperation {
        operator: LogicalOr,
        operands: [
         BinaryOperation {
          operator: LogicalOr,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "nm",
             position: (55, 32),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (55, 35),
              },
             ],
            },
            default: None,
           },
           PropertyAccess {
            expression: Variable {
             identifier: "nw",
             position: (55, 45),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (55, 48),
              },
             ],
            },
            default: None,
           },
          ],
         },
         PropertyAccess {
          expression: Variable {
           identifier: "nx",
           position: (55, 58),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (55, 61),
            },
           ],
          },
          default: None,
         },
        ],
       },
       BinaryOperation {
        operator: Addition,
        operands: [
         String {
          parts: [
           Raw {
            content: "-m <nomailer> -M exec ",
            position: (56, 7),
           },
           Expression {
            expression: Variable {
             identifier: "smartdNotify",
             position: (56, 31),
            },
           },
           Raw {
            content: " ",
            position: (56, 44),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (56, 49),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (56, 64),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "notifications",
               position: (56, 68),
              },
              Raw {
               content: "test",
               position: (56, 82),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "-M test ",
              position: (56, 88),
             },
            ],
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "smartdConf",
        position: (58, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (58, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (58, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "smartd.conf",
          position: (58, 32),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "# Autogenerated smartd startup config file\nDEFAULT ",
          position: (59, 1),
         },
         Expression {
          expression: Variable {
           identifier: "notifyOpts",
           position: (60, 15),
          },
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (60, 28),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "defaults",
              position: (60, 32),
             },
             Raw {
              content: "monitored",
              position: (60, 41),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\n",
          position: (60, 51),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatMapStringsSep",
            position: (62, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (62, 28),
              },
             ],
            },
            Function {
             argument: Some(
              "d",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: String {
              parts: [
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "d",
                  position: (62, 39),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "device",
                    position: (62, 41),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " ",
                position: (62, 48),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "d",
                  position: (62, 51),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "options",
                    position: (62, 53),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
             },
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (62, 64),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "devices",
                position: (62, 68),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (62, 76),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (64, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (64, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "autodetect",
                position: (64, 26),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "DEVICESCAN ",
               position: (65, 9),
              },
              Expression {
               expression: Variable {
                identifier: "notifyOpts",
                position: (65, 22),
               },
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (65, 35),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "defaults",
                   position: (65, 39),
                  },
                  Raw {
                   content: "autodetected",
                   position: (65, 48),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (65, 63),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "smartdDeviceOpts",
        position: (68, 3),
       },
      ],
     },
     Function {
      argument: None,
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: true,
      },
      definition: Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "options",
            position: (70, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "device",
               position: (72, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (72, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (73, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/dev/sda",
                    position: (73, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (74, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (74, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (74, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (75, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Location of the device.",
                    position: (75, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "options",
               position: (78, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (78, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (79, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (80, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "-d sat",
                    position: (80, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (81, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (81, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "separatedString",
                      position: (81, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: " ",
                      position: (81, 39),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (82, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Options that determine how smartd monitors the device.",
                    position: (82, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (94, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (96, 5),
           },
           Raw {
            content: "smartd",
            position: (96, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (98, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (98, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "smartd daemon from <literal>smartmontools</literal> package",
                 position: (98, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "autodetect",
               position: (100, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (100, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (101, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (101, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (102, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (102, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (102, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (103, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whenever smartd should monitor all devices connected to the\nmachine at the time it's being started (the default).\n\nSet to false to monitor the devices listed in\n<option>services.smartd.devices</option> only.\n",
                    position: (104, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraOptions",
               position: (112, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (112, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (113, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (114, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (114, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (114, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (114, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (114, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (115, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "-A /var/log/smartd/",
                      position: (115, 21),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "--interval=3600",
                      position: (115, 43),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (116, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra command-line options passed to the <literal>smartd</literal>\ndaemon on startup.\n\n(See <literal>man 8 smartd</literal>.)\n",
                    position: (117, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "notifications",
               position: (124, 7),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "mail",
                  position: (126, 9),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "enable",
                     position: (127, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (127, 20),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (128, 13),
                         },
                        ],
                       },
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "config",
                           position: (128, 23),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "services",
                             position: (128, 30),
                            },
                            Raw {
                             content: "mail",
                             position: (128, 39),
                            },
                            Raw {
                             content: "sendmailSetuidWrapper",
                             position: (128, 44),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "null",
                          position: (128, 69),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "defaultText",
                          position: (129, 13),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "literalExpression",
                         position: (129, 27),
                        },
                        arguments: [
                         String {
                          parts: [
                           Raw {
                            content: "config.services.mail.sendmailSetuidWrapper != null",
                            position: (129, 46),
                           },
                          ],
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (130, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (130, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "bool",
                           position: (130, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (131, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Whenever to send e-mail notifications.",
                          position: (131, 28),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "sender",
                     position: (134, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (134, 20),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (135, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "root",
                          position: (135, 24),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "example",
                          position: (136, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "example@domain.tld",
                          position: (136, 24),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (137, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (137, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "str",
                           position: (137, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (138, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Sender of the notification messages.\nActs as the value of <literal>email</literal> in the emails' <literal>From: ... </literal> field.\n",
                          position: (139, 1),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "recipient",
                     position: (144, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (144, 23),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (145, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "root",
                          position: (145, 24),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (146, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (146, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "str",
                           position: (146, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (147, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Recipient of the notification messages.",
                          position: (147, 28),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "mailer",
                     position: (150, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (150, 20),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (151, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "/run/wrappers/bin/sendmail",
                          position: (151, 24),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (152, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (152, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "path",
                           position: (152, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (153, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Sendmail-compatible binary to be used to send the messages.\n\nYou should probably enable\n<option>services.postfix</option> or some other MTA for\nthis to work.\n",
                          position: (154, 1),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "wall",
                  position: (163, 9),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "enable",
                     position: (164, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (164, 20),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (165, 13),
                         },
                        ],
                       },
                       Variable {
                        identifier: "true",
                        position: (165, 23),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (166, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (166, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "bool",
                           position: (166, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (167, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Whenever to send wall notifications to all users.",
                          position: (167, 28),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "x11",
                  position: (171, 9),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "enable",
                     position: (172, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (172, 20),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (173, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "config",
                         position: (173, 23),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "services",
                           position: (173, 30),
                          },
                          Raw {
                           content: "xserver",
                           position: (173, 39),
                          },
                          Raw {
                           content: "enable",
                           position: (173, 47),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "defaultText",
                          position: (174, 13),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "literalExpression",
                         position: (174, 27),
                        },
                        arguments: [
                         String {
                          parts: [
                           Raw {
                            content: "config.services.xserver.enable",
                            position: (174, 46),
                           },
                          ],
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (175, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (175, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "bool",
                           position: (175, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (176, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Whenever to send X11 xmessage notifications.",
                          position: (176, 28),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "display",
                     position: (179, 11),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (179, 21),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "default",
                          position: (180, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: ":",
                          position: (180, 24),
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "toString",
                            position: (180, 27),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (180, 36),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "services",
                                position: (180, 43),
                               },
                               Raw {
                                content: "xserver",
                                position: (180, 52),
                               },
                               Raw {
                                content: "display",
                                position: (180, 60),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "defaultText",
                          position: (181, 13),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "literalExpression",
                         position: (181, 27),
                        },
                        arguments: [
                         String {
                          parts: [
                           Raw {
                            content: "\":",
                            position: (181, 47),
                           },
                           Raw {
                            content: "$",
                            position: (181, 49),
                           },
                           Raw {
                            content: "{toString config.services.xserver.display}\"",
                            position: (181, 52),
                           },
                          ],
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "type",
                          position: (182, 13),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (182, 20),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "str",
                           position: (182, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (183, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "DISPLAY to send X11 notifications to.",
                          position: (183, 28),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "test",
                  position: (187, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (187, 16),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (188, 11),
                      },
                     ],
                    },
                    Variable {
                     identifier: "false",
                     position: (188, 21),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (189, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (189, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "bool",
                        position: (189, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (190, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Whenever to send a test notification on startup.",
                       position: (190, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "defaults",
               position: (195, 7),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "monitored",
                  position: (196, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (196, 21),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (197, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "-a",
                       position: (197, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (198, 11),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (198, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "separatedString",
                         position: (198, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (198, 41),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "example",
                       position: (199, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "-a -o on -s (S/../.././02|L/../../7/04)",
                       position: (199, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (200, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Common default options for explicitly monitored (listed in\n<option>services.smartd.devices</option>) devices.\n\nThe default value turns on monitoring of all the things (see\n<literal>man 5 smartd.conf</literal>).\n\nThe example also turns on SMART Automatic Offline Testing on\nstartup, and schedules short self-tests daily, and long\nself-tests weekly.\n",
                       position: (201, 1),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "autodetected",
                  position: (213, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (213, 24),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (214, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (214, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "defaults",
                        position: (214, 25),
                       },
                       Raw {
                        content: "monitored",
                        position: (214, 34),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "defaultText",
                       position: (215, 11),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "literalExpression",
                      position: (215, 25),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "config.",
                         position: (215, 44),
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "opt",
                           position: (215, 53),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "defaults",
                             position: (215, 57),
                            },
                            Raw {
                             content: "monitored",
                             position: (215, 66),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (216, 11),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (216, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "separatedString",
                         position: (216, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (216, 41),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (217, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Like <option>services.smartd.defaults.monitored</option>, but for the\nautodetected devices.\n",
                       position: (218, 1),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "devices",
               position: (224, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (224, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (225, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (226, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "device",
                         position: (226, 23),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "/dev/sda",
                         position: (226, 33),
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "device",
                         position: (226, 48),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "/dev/sdb",
                         position: (226, 58),
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "options",
                         position: (226, 69),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "-d sat",
                         position: (226, 80),
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (227, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (227, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (227, 28),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "submodule",
                      position: (227, 36),
                     },
                     arguments: [
                      Variable {
                       identifier: "smartdDeviceOpts",
                       position: (227, 46),
                      },
                     ],
                    },
                   ],
                  },
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (228, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of devices to monitor.",
                    position: (228, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (238, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (238, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (238, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (238, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (240, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (241, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: LogicalOr,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (241, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "autodetect",
                      position: (241, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (241, 37),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "devices",
                        position: (241, 41),
                       },
                      ],
                     },
                     default: None,
                    },
                    List {
                     elements: [],
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (242, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "smartd can't run with both disabled autodetect and an empty list of devices to monitor.",
                   position: (242, 18),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (245, 5),
             },
             Raw {
              content: "services",
              position: (245, 13),
             },
             Raw {
              content: "smartd",
              position: (245, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (246, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "S.M.A.R.T. Daemon",
                 position: (246, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (247, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (247, 21),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (248, 7),
                },
                Raw {
                 content: "ExecStart",
                 position: (248, 21),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (248, 36),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "smartmontools",
                     position: (248, 41),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/sbin/smartd ",
                 position: (248, 55),
                },
                Expression {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (248, 70),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "concatStringsSep",
                      position: (248, 74),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: " ",
                      position: (248, 92),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (248, 95),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "extraOptions",
                       position: (248, 99),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " --no-fork --configfile=",
                 position: (248, 112),
                },
                Expression {
                 expression: Variable {
                  identifier: "smartdConf",
                  position: (248, 138),
                 },
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}