---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (4, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (4, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (4, 16),
       },
       Raw {
        content: "packagekit",
        position: (4, 25),
       },
      ],
     },
     default: None,
    },
   ),
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (6, 12),
     },
    ),
    [
     Raw {
      content: "mkEnableOption",
      position: (7, 5),
     },
     Raw {
      content: "mkOption",
      position: (7, 20),
     },
     Raw {
      content: "mkIf",
      position: (7, 29),
     },
     Raw {
      content: "mkRemovedOptionModule",
      position: (7, 34),
     },
     Raw {
      content: "types",
      position: (7, 56),
     },
     Raw {
      content: "listToAttrs",
      position: (8, 5),
     },
     Raw {
      content: "recursiveUpdate",
      position: (8, 17),
     },
    ],
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "iniFmt",
       position: (10, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (10, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "formats",
         position: (10, 17),
        },
        Raw {
         content: "ini",
         position: (10, 25),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Map {
       bindings: [],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "confFiles",
       position: (12, 3),
      },
     ],
    },
    List {
     elements: [
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "iniFmt",
         position: (13, 6),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "generate",
           position: (13, 13),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "PackageKit.conf",
           position: (13, 23),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "recursiveUpdate",
          position: (13, 41),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "Daemon",
                position: (15, 9),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "DefaultBackend",
                   position: (16, 11),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "nix",
                   position: (16, 29),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "KeepCache",
                   position: (17, 11),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (17, 23),
                },
               ),
              ],
              recursive: false,
             },
            ),
           ],
           recursive: false,
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (20, 7),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "settings",
              position: (20, 11),
             },
            ],
           },
           default: None,
          },
         ],
        },
       ],
      },
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "iniFmt",
         position: (22, 6),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "generate",
           position: (22, 13),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "Vendor.conf",
           position: (22, 23),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "recursiveUpdate",
          position: (22, 37),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "PackagesNotFound",
                position: (24, 9),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "DefaultUrl",
                   position: (25, 11),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "https://github.com/NixOS/nixpkgs",
                   position: (25, 25),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "CodecUrl",
                   position: (26, 11),
                  },
                 ],
                },
                Variable {
                 identifier: "DefaultUrl",
                 position: (26, 22),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "HardwareUrl",
                   position: (27, 11),
                  },
                 ],
                },
                Variable {
                 identifier: "DefaultUrl",
                 position: (27, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "FontUrl",
                   position: (28, 11),
                  },
                 ],
                },
                Variable {
                 identifier: "DefaultUrl",
                 position: (28, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "MimeUrl",
                   position: (29, 11),
                  },
                 ],
                },
                Variable {
                 identifier: "DefaultUrl",
                 position: (29, 21),
                },
               ),
              ],
              recursive: true,
             },
            ),
           ],
           recursive: false,
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (32, 7),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "vendorSettings",
              position: (32, 11),
             },
            ],
           },
           default: None,
          },
         ],
        },
       ],
      },
     ],
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (37, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: Variable {
         identifier: "mkRemovedOptionModule",
         position: (38, 6),
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
              position: (38, 31),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "packagekit",
              position: (38, 42),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "backend",
              position: (38, 55),
             },
            ],
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "Always set to Nix.",
            position: (38, 67),
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (41, 3),
       },
       Raw {
        content: "services",
        position: (41, 11),
       },
       Raw {
        content: "packagekit",
        position: (41, 20),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (42, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkEnableOption",
          position: (42, 14),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "PackageKit provides a cross-platform D-Bus abstraction layer for\ninstalling software. Software utilizing PackageKit can install\nsoftware regardless of the package manager.\n",
             position: (43, 1),
            },
           ],
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "settings",
           position: (48, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (48, 16),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (49, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "iniFmt",
               position: (49, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (49, 21),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (50, 7),
               },
              ],
             },
             Map {
              bindings: [],
              recursive: false,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (51, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Additional settings passed straight through to PackageKit.conf",
                position: (51, 22),
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "vendorSettings",
           position: (54, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (54, 22),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (55, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "iniFmt",
               position: (55, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (55, 21),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (56, 7),
               },
              ],
             },
             Map {
              bindings: [],
              recursive: false,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (57, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Additional settings passed straight through to Vendor.conf",
                position: (57, 22),
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (61, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (61, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (61, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (61, 21),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (63, 5),
            },
            Raw {
             content: "dbus",
             position: (63, 14),
            },
            Raw {
             content: "packages",
             position: (63, 19),
            },
           ],
          },
          With {
           expression: Variable {
            identifier: "pkgs",
            position: (63, 35),
           },
           target: List {
            elements: [
             Variable {
              identifier: "packagekit",
              position: (63, 43),
             },
            ],
           },
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (65, 5),
            },
            Raw {
             content: "systemPackages",
             position: (65, 17),
            },
           ],
          },
          With {
           expression: Variable {
            identifier: "pkgs",
            position: (65, 39),
           },
           target: List {
            elements: [
             Variable {
              identifier: "packagekit",
              position: (65, 47),
             },
            ],
           },
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (67, 5),
            },
            Raw {
             content: "packages",
             position: (67, 13),
            },
           ],
          },
          With {
           expression: Variable {
            identifier: "pkgs",
            position: (67, 29),
           },
           target: List {
            elements: [
             Variable {
              identifier: "packagekit",
              position: (67, 37),
             },
            ],
           },
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (69, 5),
            },
            Raw {
             content: "etc",
             position: (69, 17),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "listToAttrs",
            position: (69, 23),
           },
           arguments: [
            FunctionApplication {
             function: Variable {
              identifier: "map",
              position: (69, 36),
             },
             arguments: [
              Function {
               argument: Some(
                "e",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (71, 9),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "nameValuePair",
                    position: (71, 13),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "PackageKit/",
                    position: (71, 28),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "e",
                      position: (71, 41),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "name",
                        position: (71, 43),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "source",
                       position: (71, 52),
                      },
                     ],
                    },
                    Variable {
                     identifier: "e",
                     position: (71, 61),
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              },
              Variable {
               identifier: "confFiles",
               position: (72, 7),
              },
             ],
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
 },
}