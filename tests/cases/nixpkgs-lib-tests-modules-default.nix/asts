---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: Some(
     FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (1, 9),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "../..",
          position: (1, 16),
         },
        ],
        position: (1, 16),
       },
      ],
     },
    ),
   },
   DestructuredArgument {
    identifier: "modules",
    default: Some(
     List {
      elements: [],
      position: (1, 33),
     },
    ),
   },
  ],
  ellipsis: false,
 },
 definition: Map {
  bindings: [
   Inherit {
    from: Some(
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (4, 12),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "evalModules",
          position: (4, 16),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "modules",
            position: (5, 13),
           },
          ],
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "specialArgs",
             position: (6, 5),
            },
            Raw {
             content: "modulesPath",
             position: (6, 17),
            },
           ],
          },
          to: Path {
           parts: [
            Raw {
             content: "./.",
             position: (6, 31),
            },
           ],
           position: (6, 31),
          },
         },
        ],
        recursive: false,
        position: (4, 28),
       },
      ],
     },
    ),
    attributes: [
     Raw {
      content: "config",
      position: (7, 6),
     },
     Raw {
      content: "options",
      position: (7, 13),
     },
    ],
   },
  ],
  recursive: false,
  position: (3, 1),
 },
 position: (1, 1),
}