---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: Map {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pc",
       position: (3, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (4, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (5, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "pc",
             position: (5, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (7, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "defconfig",
             position: (7, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (9, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (9, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (10, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "bzImage",
             position: (10, 17),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pc_simplekernel",
       position: (14, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (14, 21),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "recursiveUpdate",
         position: (14, 25),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "pc",
       position: (14, 41),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "linux-kernel",
            position: (15, 5),
           },
           Raw {
            content: "autoModules",
            position: (15, 18),
           },
          ],
         },
         Variable {
          identifier: "false",
          position: (15, 32),
         },
        ),
       ],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "powernv",
       position: (18, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (19, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (20, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "PowerNV",
             position: (20, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (22, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "powernv_defconfig",
             position: (22, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (23, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vmlinux",
             position: (23, 17),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (24, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (24, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (26, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "PPC_64K_PAGES n\nPPC_4K_PAGES y\nIPV6 y\n\nATA_BMDMA y\nATA_SFF y\nVIRTIO_MENU y\n",
             position: (27, 1),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pogoplug4",
       position: (42, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (43, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (44, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "pogoplug4",
             position: (44, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (46, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v5_defconfig",
             position: (46, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (47, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (47, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (48, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Ubi for the mtd\nMTD_UBI y\nUBIFS_FS y\nUBIFS_FS_XATTR y\nUBIFS_FS_ADVANCED_COMPR y\nUBIFS_FS_LZO y\nUBIFS_FS_ZLIB y\nUBIFS_FS_DEBUG n\n",
             position: (49, 1),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "makeFlags",
             position: (58, 7),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "LOADADDR=0x8000",
               position: (58, 22),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (59, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "uImage",
             position: (59, 17),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (63, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (64, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv5te",
             position: (64, 15),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "sheevaplug",
       position: (68, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (69, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (70, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "sheevaplug",
             position: (70, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (72, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v5_defconfig",
             position: (72, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (73, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (73, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (74, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "BLK_DEV_RAM y\nBLK_DEV_INITRD y\nBLK_DEV_CRYPTOLOOP m\nBLK_DEV_DM m\nDM_CRYPT m\nMD y\nREISERFS_FS m\nBTRFS_FS m\nXFS_FS m\nJFS_FS m\nEXT4_FS m\nUSB_STORAGE_CYPRESS_ATACB m\n\n# mv cesa requires this sw fallback, for mv-sha1\nCRYPTO_SHA1 y\n# Fast crypto\nCRYPTO_TWOFISH y\nCRYPTO_TWOFISH_COMMON y\nCRYPTO_BLOWFISH y\nCRYPTO_BLOWFISH_COMMON y\n\nIP_PNP y\nIP_PNP_DHCP y\nNFS_FS y\nROOT_NFS y\nTUN m\nNFS_V4 y\nNFS_V4_1 y\nNFS_FSCACHE y\nNFSD m\nNFSD_V2_ACL y\nNFSD_V3 y\nNFSD_V3_ACL y\nNFSD_V4 y\nNETFILTER y\nIP_NF_IPTABLES y\nIP_NF_FILTER y\nIP_NF_MATCH_ADDRTYPE y\nIP_NF_TARGET_LOG y\nIP_NF_MANGLE y\nIPV6 m\nVLAN_8021Q m\n\nCIFS y\nCIFS_XATTR y\nCIFS_POSIX y\nCIFS_FSCACHE y\nCIFS_ACL y\n\nWATCHDOG y\nWATCHDOG_CORE y\nORION_WATCHDOG m\n\nZRAM m\nNETCONSOLE m\n\n# Disable OABI to have seccomp_filter (required for systemd)\n# https://github.com/raspberrypi/firmware/issues/651\nOABI_COMPAT n\n\n# Fail to build\nDRM n\nSCSI_ADVANSYS n\nUSB_ISP1362_HCD n\nSND_SOC n\nSND_ALI5451 n\nFB_SAVAGE n\nSCSI_NSP32 n\nATA_SFF n\nSUNGEM n\nIRDA n\nATM_HE n\nSCSI_ACARD n\nBLK_DEV_CMD640_ENHANCED n\n\nFUSE_FS m\n\n# systemd uses cgroups\nCGROUPS y\n\n# Latencytop\nLATENCYTOP y\n\n# Ubi for the mtd\nMTD_UBI y\nUBIFS_FS y\nUBIFS_FS_XATTR y\nUBIFS_FS_ADVANCED_COMPR y\nUBIFS_FS_LZO y\nUBIFS_FS_ZLIB y\nUBIFS_FS_DEBUG n\n\n# Kdb, for kernel troubles\nKGDB y\nKGDB_SERIAL_CONSOLE y\nKGDB_KDB y\n",
             position: (75, 1),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "makeFlags",
             position: (172, 7),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "LOADADDR=0x0200000",
               position: (172, 22),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (173, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "uImage",
             position: (173, 17),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (174, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (174, 13),
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (176, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (177, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv5te",
             position: (177, 15),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "raspberrypi",
       position: (181, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (182, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (183, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "raspberrypi",
             position: (183, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (185, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "bcm2835_defconfig",
             position: (185, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (186, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (186, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (187, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (187, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (188, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (188, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (189, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Disable OABI to have seccomp_filter (required for systemd)\n# https://github.com/raspberrypi/firmware/issues/651\nOABI_COMPAT n\n",
             position: (190, 1),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (194, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
             position: (194, 17),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (196, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (197, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv6",
             position: (197, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (198, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vfp",
             position: (198, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "raspberrypi2",
       position: (203, 3),
      },
     ],
    },
    Variable {
     identifier: "armv7l-hf-multiplatform",
     position: (203, 18),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "zero-gravitas",
       position: (205, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (206, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (207, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-gravitas",
             position: (207, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (209, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-gravitas_defconfig",
             position: (209, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (211, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
             position: (211, 17),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (212, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (212, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (213, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (213, 13),
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (215, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (216, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "neon",
             position: (216, 14),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (217, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cortex-a9",
             position: (217, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "zero-sugar",
       position: (221, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (222, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (223, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-sugar",
             position: (223, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (225, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-sugar_defconfig",
             position: (225, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (226, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (226, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (227, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (227, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (228, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (228, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (229, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
             position: (229, 17),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (231, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (232, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cortex-a7",
             position: (232, 14),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (233, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "neon-vfpv4",
             position: (233, 14),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float-abi",
             position: (234, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "hard",
             position: (234, 20),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "scaleway-c1",
       position: (238, 3),
      },
     ],
    },
    BinaryOperation {
     operator: Update,
     operands: [
      Variable {
       identifier: "armv7l-hf-multiplatform",
       position: (238, 17),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "gcc",
            position: (239, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "cpu",
               position: (240, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "cortex-a9",
               position: (240, 14),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "fpu",
               position: (241, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "vfpv3",
               position: (241, 14),
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "utilite",
       position: (245, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (246, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (247, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "utilite",
             position: (247, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "maseConfig",
             position: (248, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v7_defconfig",
             position: (248, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (249, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (249, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (250, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Ubi for the mtd\nMTD_UBI y\nUBIFS_FS y\nUBIFS_FS_XATTR y\nUBIFS_FS_ADVANCED_COMPR y\nUBIFS_FS_LZO y\nUBIFS_FS_ZLIB y\nUBIFS_FS_DEBUG n\n",
             position: (251, 1),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "makeFlags",
             position: (260, 7),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "LOADADDR=0x10800000",
               position: (260, 22),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (261, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "uImage",
             position: (261, 17),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (262, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (262, 13),
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (264, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (265, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cortex-a9",
             position: (265, 14),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (266, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "neon",
             position: (266, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "guruplug",
       position: (270, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (270, 14),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "recursiveUpdate",
         position: (270, 18),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "sheevaplug",
       position: (270, 34),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "linux-kernel",
            position: (275, 5),
           },
           Raw {
            content: "baseConfig",
            position: (275, 18),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "guruplug_defconfig",
            position: (275, 32),
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "beaglebone",
       position: (278, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (278, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "recursiveUpdate",
         position: (278, 20),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "armv7l-hf-multiplatform",
       position: (278, 36),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "linux-kernel",
            position: (279, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "name",
               position: (280, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "beaglebone",
               position: (280, 15),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "baseConfig",
               position: (281, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "bb.org_defconfig",
               position: (281, 21),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "autoModules",
               position: (282, 7),
              },
             ],
            },
            Variable {
             identifier: "false",
             position: (282, 21),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (283, 7),
              },
             ],
            },
            String {
             parts: [],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "target",
               position: (284, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "zImage",
               position: (284, 17),
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "armv7a-android",
       position: (289, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (290, 5),
         },
         Raw {
          content: "name",
          position: (290, 18),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "armeabi-v7a",
          position: (290, 26),
         },
        ],
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (291, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (292, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv7-a",
             position: (292, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float-abi",
             position: (293, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "softfp",
             position: (293, 20),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (294, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vfpv3-d16",
             position: (294, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "armv7l-hf-multiplatform",
       position: (298, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (299, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (300, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv7l-hf-multiplatform",
             position: (300, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "Major",
             position: (301, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "2.6",
             position: (301, 16),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (302, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v7_defconfig",
             position: (302, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (303, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (303, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (304, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (304, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (305, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (305, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (306, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
             position: (306, 17),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (307, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Serial port for Raspberry Pi 3. Wasn't included in ARMv7 defconfig\n# until 4.17.\nSERIAL_8250_BCM2835AUX y\nSERIAL_8250_EXTENDED y\nSERIAL_8250_SHARE_IRQ y\n\n# Hangs ODROID-XU4\nARM_BIG_LITTLE_CPUIDLE n\n\n# Disable OABI to have seccomp_filter (required for systemd)\n# https://github.com/raspberrypi/firmware/issues/651\nOABI_COMPAT n\n\n# >=5.12 fails with:\n# drivers/net/ethernet/micrel/ks8851_common.o: in function `ks8851_probe_common':\n# ks8851_common.c:(.text+0x179c): undefined reference to `__this_module'\n# See: https://lore.kernel.org/netdev/20210116164828.40545-1-marex@denx.de/T/\nKS8851_MLL y\n",
             position: (308, 1),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (328, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (342, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv7-a",
             position: (342, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (343, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vfpv3-d16",
             position: (343, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "aarch64-multiplatform",
       position: (351, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (352, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (353, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "aarch64-multiplatform",
             position: (353, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (354, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "defconfig",
             position: (354, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (355, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (355, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (356, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (356, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (357, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (357, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (358, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Raspberry Pi 3 stuff. Not needed for   s >= 4.10.\nARCH_BCM2835 y\nBCM2835_MBOX y\nBCM2835_WDT y\nRASPBERRYPI_FIRMWARE y\nRASPBERRYPI_POWER y\nSERIAL_8250_BCM2835AUX y\nSERIAL_8250_EXTENDED y\nSERIAL_8250_SHARE_IRQ y\n\n# Cavium ThunderX stuff.\nPCI_HOST_THUNDER_ECAM y\n\n# Nvidia Tegra stuff.\nPCI_TEGRA y\n\n# The default (=y) forces us to have the XHCI firmware available in initrd,\n# which our initrd builder can't currently do easily.\nUSB_XHCI_TEGRA m\n",
             position: (359, 1),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (379, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Image",
             position: (379, 17),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (381, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (382, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv8-a",
             position: (382, 15),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "apple-m1",
       position: (386, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (387, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (388, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv8.3-a+crypto+sha2+aes+crc+fp16+lse+simd+ras+rdm+rcpc",
             position: (388, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (389, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "apple-a13",
             position: (389, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "ben_nanonote",
       position: (397, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (398, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (399, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "ben_nanonote",
             position: (399, 15),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (401, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (402, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips32",
             position: (402, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float",
             position: (403, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "soft",
             position: (403, 16),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "fuloong2f_n32",
       position: (407, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (408, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (409, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "fuloong2f_n32",
             position: (409, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (410, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "lemote2f_defconfig",
             position: (410, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (411, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (411, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (412, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "MIGRATION n\nCOMPACTION n\n\n# nixos mounts some cgroup\nCGROUPS y\n\nBLK_DEV_RAM y\nBLK_DEV_INITRD y\nBLK_DEV_CRYPTOLOOP m\nBLK_DEV_DM m\nDM_CRYPT m\nMD y\nREISERFS_FS m\nEXT4_FS m\nUSB_STORAGE_CYPRESS_ATACB m\n\nIP_PNP y\nIP_PNP_DHCP y\nIP_PNP_BOOTP y\nNFS_FS y\nROOT_NFS y\nTUN m\nNFS_V4 y\nNFS_V4_1 y\nNFS_FSCACHE y\nNFSD m\nNFSD_V2_ACL y\nNFSD_V3 y\nNFSD_V3_ACL y\nNFSD_V4 y\n\n# Fail to build\nDRM n\nSCSI_ADVANSYS n\nUSB_ISP1362_HCD n\nSND_SOC n\nSND_ALI5451 n\nFB_SAVAGE n\nSCSI_NSP32 n\nATA_SFF n\nSUNGEM n\nIRDA n\nATM_HE n\nSCSI_ACARD n\nBLK_DEV_CMD640_ENHANCED n\n\nFUSE_FS m\n\n# Needed for udev >= 150\nSYSFS_DEPRECATED_V2 n\n\nVGA_CONSOLE n\nVT_HW_CONSOLE_BINDING y\nSERIAL_8250_CONSOLE y\nFRAMEBUFFER_CONSOLE y\nEXT2_FS y\nEXT3_FS y\nREISERFS_FS y\nMAGIC_SYSRQ y\n\n# The kernel doesn't boot at all, with FTRACE\nFTRACE n\n",
             position: (413, 1),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (476, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vmlinux",
             position: (476, 17),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (478, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (479, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "loongson2f",
             position: (479, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float",
             position: (480, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "hard",
             position: (480, 16),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (481, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "n32",
             position: (481, 14),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "riscv-multiplatform",
       position: (489, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (490, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (491, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "riscv-multiplatform",
             position: (491, 15),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (492, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Image",
             position: (492, 17),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (493, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (493, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (494, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "defconfig",
             position: (494, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (495, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (495, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (496, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "SERIAL_OF_PLATFORM y\n",
             position: (497, 1),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ),
     ],
     recursive: false,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "select",
       position: (502, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "platform",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: IfThenElse {
      predicate: PropertyAccess {
       expression: Variable {
        identifier: "platform",
        position: (504, 13),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "isx86",
          position: (504, 22),
         },
        ],
       },
       default: None,
      },
      then: Variable {
       identifier: "pc",
       position: (504, 33),
      },
      else_: IfThenElse {
       predicate: PropertyAccess {
        expression: Variable {
         identifier: "platform",
         position: (507, 13),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isAarch32",
           position: (507, 22),
          },
         ],
        },
        default: None,
       },
       then: LetIn {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "version",
             position: (508, 7),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "platform",
            position: (508, 17),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "parsed",
              position: (508, 26),
             },
             Raw {
              content: "cpu",
              position: (508, 33),
             },
             Raw {
              content: "version",
              position: (508, 37),
             },
            ],
           },
           default: Some(
            Variable {
             identifier: "null",
             position: (508, 48),
            },
           ),
          },
         ),
        ],
        target: IfThenElse {
         predicate: BinaryOperation {
          operator: EqualTo,
          operands: [
           Variable {
            identifier: "version",
            position: (509, 17),
           },
           Variable {
            identifier: "null",
            position: (509, 28),
           },
          ],
         },
         then: Variable {
          identifier: "pc",
          position: (509, 38),
         },
         else_: IfThenElse {
          predicate: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (510, 17),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "versionOlder",
               position: (510, 21),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Variable {
             identifier: "version",
             position: (510, 34),
            },
            String {
             parts: [
              Raw {
               content: "6",
               position: (510, 43),
              },
             ],
            },
           ],
          },
          then: Variable {
           identifier: "sheevaplug",
           position: (510, 51),
          },
          else_: IfThenElse {
           predicate: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (511, 17),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "versionOlder",
                position: (511, 21),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Variable {
              identifier: "version",
              position: (511, 34),
             },
             String {
              parts: [
               Raw {
                content: "7",
                position: (511, 43),
               },
              ],
             },
            ],
           },
           then: Variable {
            identifier: "raspberrypi",
            position: (511, 51),
           },
           else_: Variable {
            identifier: "armv7l-hf-multiplatform",
            position: (512, 14),
           },
          },
         },
        },
       },
       else_: IfThenElse {
        predicate: PropertyAccess {
         expression: Variable {
          identifier: "platform",
          position: (514, 13),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "isAarch64",
            position: (514, 22),
           },
          ],
         },
         default: None,
        },
        then: IfThenElse {
         predicate: PropertyAccess {
          expression: Variable {
           identifier: "platform",
           position: (515, 10),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "isDarwin",
             position: (515, 19),
            },
           ],
          },
          default: None,
         },
         then: Variable {
          identifier: "apple-m1",
          position: (515, 33),
         },
         else_: Variable {
          identifier: "aarch64-multiplatform",
          position: (516, 12),
         },
        },
        else_: IfThenElse {
         predicate: PropertyAccess {
          expression: Variable {
           identifier: "platform",
           position: (518, 13),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "isRiscV",
             position: (518, 22),
            },
           ],
          },
          default: None,
         },
         then: Variable {
          identifier: "riscv-multiplatform",
          position: (518, 35),
         },
         else_: IfThenElse {
          predicate: BinaryOperation {
           operator: EqualTo,
           operands: [
            PropertyAccess {
             expression: Variable {
              identifier: "platform",
              position: (520, 13),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "parsed",
                position: (520, 22),
               },
               Raw {
                content: "cpu",
                position: (520, 29),
               },
              ],
             },
             default: None,
            },
            PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (520, 36),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "systems",
                position: (520, 40),
               },
               Raw {
                content: "parse",
                position: (520, 48),
               },
               Raw {
                content: "cpuTypes",
                position: (520, 54),
               },
               Raw {
                content: "mipsel",
                position: (520, 63),
               },
              ],
             },
             default: None,
            },
           ],
          },
          then: Variable {
           identifier: "fuloong2f_n32",
           position: (520, 75),
          },
          else_: IfThenElse {
           predicate: BinaryOperation {
            operator: EqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "platform",
               position: (522, 13),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "parsed",
                 position: (522, 22),
                },
                Raw {
                 content: "cpu",
                 position: (522, 29),
                },
               ],
              },
              default: None,
             },
             PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (522, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "systems",
                 position: (522, 40),
                },
                Raw {
                 content: "parse",
                 position: (522, 48),
                },
                Raw {
                 content: "cpuTypes",
                 position: (522, 54),
                },
                Raw {
                 content: "powerpc64le",
                 position: (522, 63),
                },
               ],
              },
              default: None,
             },
            ],
           },
           then: Variable {
            identifier: "powernv",
            position: (522, 80),
           },
           else_: Variable {
            identifier: "pc",
            position: (524, 10),
           },
          },
         },
        },
       },
      },
     },
    },
   ),
  ],
  recursive: true,
 },
}