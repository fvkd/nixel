---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: Map {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pc",
       position: (10, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (11, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (12, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "pc",
            },
           ],
           position: (12, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (14, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "defconfig",
            },
           ],
           position: (14, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (16, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (16, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (17, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "bzImage",
            },
           ],
           position: (17, 16),
          },
         ),
        ],
        recursive: false,
        position: (11, 20),
       },
      ),
     ],
     recursive: false,
     position: (10, 8),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pc_simplekernel",
       position: (21, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (21, 21),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "recursiveUpdate",
         position: (21, 25),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "pc",
       position: (21, 41),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "linux-kernel",
            position: (22, 5),
           },
           Raw {
            content: "autoModules",
            position: (22, 18),
           },
          ],
         },
         Variable {
          identifier: "false",
          position: (22, 32),
         },
        ),
       ],
       recursive: false,
       position: (21, 44),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "powernv",
       position: (25, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (26, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (27, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "PowerNV",
            },
           ],
           position: (27, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (29, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "powernv_defconfig",
            },
           ],
           position: (29, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (30, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vmlinux",
            },
           ],
           position: (30, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (31, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (31, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (33, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "PPC_64K_PAGES n\nPPC_4K_PAGES y\nIPV6 y\n\nATA_BMDMA y\nATA_SFF y\nVIRTIO_MENU y\n",
            },
           ],
           position: (33, 21),
          },
         ),
        ],
        recursive: false,
        position: (26, 20),
       },
      ),
     ],
     recursive: false,
     position: (25, 13),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pogoplug4",
       position: (49, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (50, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (51, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "pogoplug4",
            },
           ],
           position: (51, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (53, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v5_defconfig",
            },
           ],
           position: (53, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (54, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (54, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (55, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Ubi for the mtd\nMTD_UBI y\nUBIFS_FS y\nUBIFS_FS_XATTR y\nUBIFS_FS_ADVANCED_COMPR y\nUBIFS_FS_LZO y\nUBIFS_FS_ZLIB y\nUBIFS_FS_DEBUG n\n",
            },
           ],
           position: (55, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "makeFlags",
             position: (65, 7),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "LOADADDR=0x8000",
              },
             ],
             position: (65, 21),
            },
           ],
           position: (65, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (66, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "uImage",
            },
           ],
           position: (66, 16),
          },
         ),
        ],
        recursive: false,
        position: (50, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (70, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (71, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv5te",
            },
           ],
           position: (71, 14),
          },
         ),
        ],
        recursive: false,
        position: (70, 11),
       },
      ),
     ],
     recursive: false,
     position: (49, 15),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "sheevaplug",
       position: (75, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (76, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (77, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "sheevaplug",
            },
           ],
           position: (77, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (79, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v5_defconfig",
            },
           ],
           position: (79, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (80, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (80, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (81, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "BLK_DEV_RAM y\nBLK_DEV_INITRD y\nBLK_DEV_CRYPTOLOOP m\nBLK_DEV_DM m\nDM_CRYPT m\nMD y\nREISERFS_FS m\nBTRFS_FS m\nXFS_FS m\nJFS_FS m\nEXT4_FS m\nUSB_STORAGE_CYPRESS_ATACB m\n\n# mv cesa requires this sw fallback, for mv-sha1\nCRYPTO_SHA1 y\n# Fast crypto\nCRYPTO_TWOFISH y\nCRYPTO_TWOFISH_COMMON y\nCRYPTO_BLOWFISH y\nCRYPTO_BLOWFISH_COMMON y\n\nIP_PNP y\nIP_PNP_DHCP y\nNFS_FS y\nROOT_NFS y\nTUN m\nNFS_V4 y\nNFS_V4_1 y\nNFS_FSCACHE y\nNFSD m\nNFSD_V2_ACL y\nNFSD_V3 y\nNFSD_V3_ACL y\nNFSD_V4 y\nNETFILTER y\nIP_NF_IPTABLES y\nIP_NF_FILTER y\nIP_NF_MATCH_ADDRTYPE y\nIP_NF_TARGET_LOG y\nIP_NF_MANGLE y\nIPV6 m\nVLAN_8021Q m\n\nCIFS y\nCIFS_XATTR y\nCIFS_POSIX y\nCIFS_FSCACHE y\nCIFS_ACL y\n\nWATCHDOG y\nWATCHDOG_CORE y\nORION_WATCHDOG m\n\nZRAM m\nNETCONSOLE m\n\n# Disable OABI to have seccomp_filter (required for systemd)\n# https://github.com/raspberrypi/firmware/issues/651\nOABI_COMPAT n\n\n# Fail to build\nDRM n\nSCSI_ADVANSYS n\nUSB_ISP1362_HCD n\nSND_SOC n\nSND_ALI5451 n\nFB_SAVAGE n\nSCSI_NSP32 n\nATA_SFF n\nSUNGEM n\nIRDA n\nATM_HE n\nSCSI_ACARD n\nBLK_DEV_CMD640_ENHANCED n\n\nFUSE_FS m\n\n# systemd uses cgroups\nCGROUPS y\n\n# Latencytop\nLATENCYTOP y\n\n# Ubi for the mtd\nMTD_UBI y\nUBIFS_FS y\nUBIFS_FS_XATTR y\nUBIFS_FS_ADVANCED_COMPR y\nUBIFS_FS_LZO y\nUBIFS_FS_ZLIB y\nUBIFS_FS_DEBUG n\n\n# Kdb, for kernel troubles\nKGDB y\nKGDB_SERIAL_CONSOLE y\nKGDB_KDB y\n",
            },
           ],
           position: (81, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "makeFlags",
             position: (179, 7),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "LOADADDR=0x0200000",
              },
             ],
             position: (179, 21),
            },
           ],
           position: (179, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (180, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "uImage",
            },
           ],
           position: (180, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (181, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (181, 13),
          },
         ),
        ],
        recursive: false,
        position: (76, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (183, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (184, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv5te",
            },
           ],
           position: (184, 14),
          },
         ),
        ],
        recursive: false,
        position: (183, 11),
       },
      ),
     ],
     recursive: false,
     position: (75, 16),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "raspberrypi",
       position: (188, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (189, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (190, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "raspberrypi",
            },
           ],
           position: (190, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (192, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "bcm2835_defconfig",
            },
           ],
           position: (192, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (193, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (193, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (194, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (194, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (195, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (195, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (196, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Disable OABI to have seccomp_filter (required for systemd)\n# https://github.com/raspberrypi/firmware/issues/651\nOABI_COMPAT n\n",
            },
           ],
           position: (196, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (201, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
            },
           ],
           position: (201, 16),
          },
         ),
        ],
        recursive: false,
        position: (189, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (203, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (204, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv6",
            },
           ],
           position: (204, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (205, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vfp",
            },
           ],
           position: (205, 13),
          },
         ),
        ],
        recursive: false,
        position: (203, 11),
       },
      ),
     ],
     recursive: false,
     position: (188, 17),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "raspberrypi2",
       position: (210, 3),
      },
     ],
    },
    Variable {
     identifier: "armv7l-hf-multiplatform",
     position: (210, 18),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "zero-gravitas",
       position: (212, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (213, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (214, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-gravitas",
            },
           ],
           position: (214, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (216, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-gravitas_defconfig",
            },
           ],
           position: (216, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (218, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
            },
           ],
           position: (218, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (219, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (219, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (220, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (220, 13),
          },
         ),
        ],
        recursive: false,
        position: (213, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (222, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (223, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "neon",
            },
           ],
           position: (223, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (224, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cortex-a9",
            },
           ],
           position: (224, 13),
          },
         ),
        ],
        recursive: false,
        position: (222, 11),
       },
      ),
     ],
     recursive: false,
     position: (212, 19),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "zero-sugar",
       position: (228, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (229, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (230, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-sugar",
            },
           ],
           position: (230, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (232, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zero-sugar_defconfig",
            },
           ],
           position: (232, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (233, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (233, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (234, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (234, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (235, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (235, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (236, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
            },
           ],
           position: (236, 16),
          },
         ),
        ],
        recursive: false,
        position: (229, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (238, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (239, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cortex-a7",
            },
           ],
           position: (239, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (240, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "neon-vfpv4",
            },
           ],
           position: (240, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float-abi",
             position: (241, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "hard",
            },
           ],
           position: (241, 19),
          },
         ),
        ],
        recursive: false,
        position: (238, 11),
       },
      ),
     ],
     recursive: false,
     position: (228, 16),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "scaleway-c1",
       position: (245, 3),
      },
     ],
    },
    BinaryOperation {
     operator: Update,
     operands: [
      Variable {
       identifier: "armv7l-hf-multiplatform",
       position: (245, 17),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "gcc",
            position: (246, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "cpu",
               position: (247, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "cortex-a9",
              },
             ],
             position: (247, 13),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "fpu",
               position: (248, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "vfpv3",
              },
             ],
             position: (248, 13),
            },
           ),
          ],
          recursive: false,
          position: (246, 11),
         },
        ),
       ],
       recursive: false,
       position: (245, 44),
      },
     ],
     position: (245, 41),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "utilite",
       position: (252, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (253, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (254, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "utilite",
            },
           ],
           position: (254, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "maseConfig",
             position: (255, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v7_defconfig",
            },
           ],
           position: (255, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (256, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (256, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (257, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Ubi for the mtd\nMTD_UBI y\nUBIFS_FS y\nUBIFS_FS_XATTR y\nUBIFS_FS_ADVANCED_COMPR y\nUBIFS_FS_LZO y\nUBIFS_FS_ZLIB y\nUBIFS_FS_DEBUG n\n",
            },
           ],
           position: (257, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "makeFlags",
             position: (267, 7),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "LOADADDR=0x10800000",
              },
             ],
             position: (267, 21),
            },
           ],
           position: (267, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (268, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "uImage",
            },
           ],
           position: (268, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (269, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (269, 13),
          },
         ),
        ],
        recursive: false,
        position: (253, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (271, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (272, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cortex-a9",
            },
           ],
           position: (272, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (273, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "neon",
            },
           ],
           position: (273, 13),
          },
         ),
        ],
        recursive: false,
        position: (271, 11),
       },
      ),
     ],
     recursive: false,
     position: (252, 13),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "guruplug",
       position: (277, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (277, 14),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "recursiveUpdate",
         position: (277, 18),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "sheevaplug",
       position: (277, 34),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "linux-kernel",
            position: (282, 5),
           },
           Raw {
            content: "baseConfig",
            position: (282, 18),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "guruplug_defconfig",
           },
          ],
          position: (282, 31),
         },
        ),
       ],
       recursive: false,
       position: (277, 45),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "beaglebone",
       position: (285, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (285, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "recursiveUpdate",
         position: (285, 20),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "armv7l-hf-multiplatform",
       position: (285, 36),
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "linux-kernel",
            position: (286, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "name",
               position: (287, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "beaglebone",
              },
             ],
             position: (287, 14),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "baseConfig",
               position: (288, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "bb.org_defconfig",
              },
             ],
             position: (288, 20),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "autoModules",
               position: (289, 7),
              },
             ],
            },
            Variable {
             identifier: "false",
             position: (289, 21),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (290, 7),
              },
             ],
            },
            String {
             parts: [],
             position: (290, 21),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "target",
               position: (291, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "zImage",
              },
             ],
             position: (291, 16),
            },
           ),
          ],
          recursive: false,
          position: (286, 20),
         },
        ),
       ],
       recursive: false,
       position: (285, 60),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "armv7a-android",
       position: (296, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (297, 5),
         },
         Raw {
          content: "name",
          position: (297, 18),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "armeabi-v7a",
         },
        ],
        position: (297, 25),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (298, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (299, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv7-a",
            },
           ],
           position: (299, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float-abi",
             position: (300, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "softfp",
            },
           ],
           position: (300, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (301, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vfpv3-d16",
            },
           ],
           position: (301, 13),
          },
         ),
        ],
        recursive: false,
        position: (298, 11),
       },
      ),
     ],
     recursive: false,
     position: (296, 20),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "armv7l-hf-multiplatform",
       position: (305, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (306, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (307, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv7l-hf-multiplatform",
            },
           ],
           position: (307, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "Major",
             position: (308, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "2.6",
            },
           ],
           position: (308, 15),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (309, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "multi_v7_defconfig",
            },
           ],
           position: (309, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (310, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (310, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (311, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (311, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (312, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (312, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (313, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "zImage",
            },
           ],
           position: (313, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (314, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Serial port for Raspberry Pi 3. Wasn't included in ARMv7 defconfig\n# until 4.17.\nSERIAL_8250_BCM2835AUX y\nSERIAL_8250_EXTENDED y\nSERIAL_8250_SHARE_IRQ y\n\n# Hangs ODROID-XU4\nARM_BIG_LITTLE_CPUIDLE n\n\n# Disable OABI to have seccomp_filter (required for systemd)\n# https://github.com/raspberrypi/firmware/issues/651\nOABI_COMPAT n\n\n# >=5.12 fails with:\n# drivers/net/ethernet/micrel/ks8851_common.o: in function `ks8851_probe_common':\n# ks8851_common.c:(.text+0x179c): undefined reference to `__this_module'\n# See: https://lore.kernel.org/netdev/20210116164828.40545-1-marex@denx.de/T/\nKS8851_MLL y\n",
            },
           ],
           position: (314, 21),
          },
         ),
        ],
        recursive: false,
        position: (306, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (335, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (349, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv7-a",
            },
           ],
           position: (349, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "fpu",
             position: (350, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vfpv3-d16",
            },
           ],
           position: (350, 13),
          },
         ),
        ],
        recursive: false,
        position: (335, 11),
       },
      ),
     ],
     recursive: false,
     position: (305, 29),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "aarch64-multiplatform",
       position: (358, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (359, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (360, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "aarch64-multiplatform",
            },
           ],
           position: (360, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (361, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "defconfig",
            },
           ],
           position: (361, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (362, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (362, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (363, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (363, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferBuiltin",
             position: (364, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (364, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (365, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "# Raspberry Pi 3 stuff. Not needed for   s >= 4.10.\nARCH_BCM2835 y\nBCM2835_MBOX y\nBCM2835_WDT y\nRASPBERRYPI_FIRMWARE y\nRASPBERRYPI_POWER y\nSERIAL_8250_BCM2835AUX y\nSERIAL_8250_EXTENDED y\nSERIAL_8250_SHARE_IRQ y\n\n# Cavium ThunderX stuff.\nPCI_HOST_THUNDER_ECAM y\n\n# Nvidia Tegra stuff.\nPCI_TEGRA y\n\n# The default (=y) forces us to have the XHCI firmware available in initrd,\n# which our initrd builder can't currently do easily.\nUSB_XHCI_TEGRA m\n",
            },
           ],
           position: (365, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (386, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Image",
            },
           ],
           position: (386, 16),
          },
         ),
        ],
        recursive: false,
        position: (359, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (388, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (389, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv8-a",
            },
           ],
           position: (389, 14),
          },
         ),
        ],
        recursive: false,
        position: (388, 11),
       },
      ),
     ],
     recursive: false,
     position: (358, 27),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "apple-m1",
       position: (393, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (394, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (395, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "armv8.3-a+crypto+sha2+aes+crc+fp16+lse+simd+ras+rdm+rcpc",
            },
           ],
           position: (395, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cpu",
             position: (396, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "apple-a13",
            },
           ],
           position: (396, 13),
          },
         ),
        ],
        recursive: false,
        position: (394, 11),
       },
      ),
     ],
     recursive: false,
     position: (393, 14),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "ben_nanonote",
       position: (404, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (405, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (406, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "ben_nanonote",
            },
           ],
           position: (406, 14),
          },
         ),
        ],
        recursive: false,
        position: (405, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (408, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (409, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips32",
            },
           ],
           position: (409, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float",
             position: (410, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "soft",
            },
           ],
           position: (410, 15),
          },
         ),
        ],
        recursive: false,
        position: (408, 11),
       },
      ),
     ],
     recursive: false,
     position: (404, 18),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "fuloong2f_n32",
       position: (414, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (415, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (416, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "fuloong2f_n32",
            },
           ],
           position: (416, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (417, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "lemote2f_defconfig",
            },
           ],
           position: (417, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (418, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (418, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (419, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "MIGRATION n\nCOMPACTION n\n\n# nixos mounts some cgroup\nCGROUPS y\n\nBLK_DEV_RAM y\nBLK_DEV_INITRD y\nBLK_DEV_CRYPTOLOOP m\nBLK_DEV_DM m\nDM_CRYPT m\nMD y\nREISERFS_FS m\nEXT4_FS m\nUSB_STORAGE_CYPRESS_ATACB m\n\nIP_PNP y\nIP_PNP_DHCP y\nIP_PNP_BOOTP y\nNFS_FS y\nROOT_NFS y\nTUN m\nNFS_V4 y\nNFS_V4_1 y\nNFS_FSCACHE y\nNFSD m\nNFSD_V2_ACL y\nNFSD_V3 y\nNFSD_V3_ACL y\nNFSD_V4 y\n\n# Fail to build\nDRM n\nSCSI_ADVANSYS n\nUSB_ISP1362_HCD n\nSND_SOC n\nSND_ALI5451 n\nFB_SAVAGE n\nSCSI_NSP32 n\nATA_SFF n\nSUNGEM n\nIRDA n\nATM_HE n\nSCSI_ACARD n\nBLK_DEV_CMD640_ENHANCED n\n\nFUSE_FS m\n\n# Needed for udev >= 150\nSYSFS_DEPRECATED_V2 n\n\nVGA_CONSOLE n\nVT_HW_CONSOLE_BINDING y\nSERIAL_8250_CONSOLE y\nFRAMEBUFFER_CONSOLE y\nEXT2_FS y\nEXT3_FS y\nREISERFS_FS y\nMAGIC_SYSRQ y\n\n# The kernel doesn't boot at all, with FTRACE\nFTRACE n\n",
            },
           ],
           position: (419, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (483, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vmlinux",
            },
           ],
           position: (483, 16),
          },
         ),
        ],
        recursive: false,
        position: (415, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (485, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (486, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "loongson2f",
            },
           ],
           position: (486, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float",
             position: (487, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "hard",
            },
           ],
           position: (487, 15),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (488, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "n32",
            },
           ],
           position: (488, 13),
          },
         ),
        ],
        recursive: false,
        position: (485, 11),
       },
      ),
     ],
     recursive: false,
     position: (414, 19),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "gcc_mips32r2_o32",
       position: (493, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (493, 24),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (493, 32),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips32r2",
            },
           ],
           position: (493, 39),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (493, 51),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "o32",
            },
           ],
           position: (493, 57),
          },
         ),
        ],
        recursive: false,
        position: (493, 30),
       },
      ),
     ],
     recursive: false,
     position: (493, 22),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "gcc_mips32r6_o32",
       position: (494, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (494, 24),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (494, 32),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips32r6",
            },
           ],
           position: (494, 39),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (494, 51),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "o32",
            },
           ],
           position: (494, 57),
          },
         ),
        ],
        recursive: false,
        position: (494, 30),
       },
      ),
     ],
     recursive: false,
     position: (494, 22),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "gcc_mips64r2_n32",
       position: (495, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (495, 24),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (495, 32),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips64r2",
            },
           ],
           position: (495, 39),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (495, 51),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "n32",
            },
           ],
           position: (495, 57),
          },
         ),
        ],
        recursive: false,
        position: (495, 30),
       },
      ),
     ],
     recursive: false,
     position: (495, 22),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "gcc_mips64r6_n32",
       position: (496, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (496, 24),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (496, 32),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips64r6",
            },
           ],
           position: (496, 39),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (496, 51),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "n32",
            },
           ],
           position: (496, 57),
          },
         ),
        ],
        recursive: false,
        position: (496, 30),
       },
      ),
     ],
     recursive: false,
     position: (496, 22),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "gcc_mips64r2_64",
       position: (497, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (497, 24),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (497, 32),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips64r2",
            },
           ],
           position: (497, 39),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (497, 51),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "64",
            },
           ],
           position: (497, 58),
          },
         ),
        ],
        recursive: false,
        position: (497, 30),
       },
      ),
     ],
     recursive: false,
     position: (497, 22),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "gcc_mips64r6_64",
       position: (498, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "gcc",
          position: (498, 24),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "arch",
             position: (498, 32),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips64r6",
            },
           ],
           position: (498, 39),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "abi",
             position: (498, 51),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "64",
            },
           ],
           position: (498, 58),
          },
         ),
        ],
        recursive: false,
        position: (498, 30),
       },
      ),
     ],
     recursive: false,
     position: (498, 22),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mips64el-qemu-linux-gnuabi64",
       position: (503, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (504, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (505, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mips64el",
            },
           ],
           position: (505, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (506, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "64r2el_defconfig",
            },
           ],
           position: (506, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (507, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "vmlinuz",
            },
           ],
           position: (507, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (508, 7),
            },
           ],
          },
          Variable {
           identifier: "false",
           position: (508, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (509, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (509, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (511, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "MIPS_MALTA y\nPAGE_SIZE_4KB y\nCPU_LITTLE_ENDIAN y\nCPU_MIPS64_R2 y\n64BIT y\nCPU_MIPS64_R2 y\n\nNET_9P y\nNET_9P_VIRTIO y\n9P_FS y\n9P_FS_POSIX_ACL y\nPCI y\nVIRTIO_PCI y\n",
            },
           ],
           position: (511, 21),
          },
         ),
        ],
        recursive: false,
        position: (504, 20),
       },
      ),
     ],
     recursive: false,
     position: (503, 34),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "riscv-multiplatform",
       position: (533, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "linux-kernel",
          position: (534, 5),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (535, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "riscv-multiplatform",
            },
           ],
           position: (535, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "target",
             position: (536, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Image",
            },
           ],
           position: (536, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "autoModules",
             position: (537, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (537, 21),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseConfig",
             position: (538, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "defconfig",
            },
           ],
           position: (538, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "DTB",
             position: (539, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (539, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (540, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "SERIAL_OF_PLATFORM y\n",
            },
           ],
           position: (540, 21),
          },
         ),
        ],
        recursive: false,
        position: (534, 20),
       },
      ),
     ],
     recursive: false,
     position: (533, 25),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "select",
       position: (549, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "platform",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: IfThenElse {
      predicate: PropertyAccess {
       expression: Variable {
        identifier: "platform",
        position: (551, 13),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "isx86",
          position: (551, 22),
         },
        ],
       },
       default: None,
      },
      then: Variable {
       identifier: "pc",
       position: (551, 33),
      },
      else_: IfThenElse {
       predicate: PropertyAccess {
        expression: Variable {
         identifier: "platform",
         position: (554, 13),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isAarch32",
           position: (554, 22),
          },
         ],
        },
        default: None,
       },
       then: LetIn {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "version",
             position: (555, 7),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "platform",
            position: (555, 17),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "parsed",
              position: (555, 26),
             },
             Raw {
              content: "cpu",
              position: (555, 33),
             },
             Raw {
              content: "version",
              position: (555, 37),
             },
            ],
           },
           default: Some(
            Variable {
             identifier: "null",
             position: (555, 48),
            },
           ),
          },
         ),
        ],
        target: IfThenElse {
         predicate: BinaryOperation {
          operator: EqualTo,
          operands: [
           Variable {
            identifier: "version",
            position: (556, 17),
           },
           Variable {
            identifier: "null",
            position: (556, 28),
           },
          ],
          position: (556, 25),
         },
         then: Variable {
          identifier: "pc",
          position: (556, 38),
         },
         else_: IfThenElse {
          predicate: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (557, 17),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "versionOlder",
               position: (557, 21),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Variable {
             identifier: "version",
             position: (557, 34),
            },
            String {
             parts: [
              Raw {
               content: "6",
              },
             ],
             position: (557, 42),
            },
           ],
          },
          then: Variable {
           identifier: "sheevaplug",
           position: (557, 51),
          },
          else_: IfThenElse {
           predicate: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (558, 17),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "versionOlder",
                position: (558, 21),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Variable {
              identifier: "version",
              position: (558, 34),
             },
             String {
              parts: [
               Raw {
                content: "7",
               },
              ],
              position: (558, 42),
             },
            ],
           },
           then: Variable {
            identifier: "raspberrypi",
            position: (558, 51),
           },
           else_: Variable {
            identifier: "armv7l-hf-multiplatform",
            position: (559, 14),
           },
           position: (558, 14),
          },
          position: (557, 14),
         },
         position: (556, 14),
        },
        position: (554, 37),
       },
       else_: IfThenElse {
        predicate: PropertyAccess {
         expression: Variable {
          identifier: "platform",
          position: (561, 13),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "isAarch64",
            position: (561, 22),
           },
          ],
         },
         default: None,
        },
        then: IfThenElse {
         predicate: PropertyAccess {
          expression: Variable {
           identifier: "platform",
           position: (562, 10),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "isDarwin",
             position: (562, 19),
            },
           ],
          },
          default: None,
         },
         then: Variable {
          identifier: "apple-m1",
          position: (562, 33),
         },
         else_: Variable {
          identifier: "aarch64-multiplatform",
          position: (563, 12),
         },
         position: (562, 7),
        },
        else_: IfThenElse {
         predicate: PropertyAccess {
          expression: Variable {
           identifier: "platform",
           position: (565, 13),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "isRiscV",
             position: (565, 22),
            },
           ],
          },
          default: None,
         },
         then: Variable {
          identifier: "riscv-multiplatform",
          position: (565, 35),
         },
         else_: IfThenElse {
          predicate: BinaryOperation {
           operator: EqualTo,
           operands: [
            PropertyAccess {
             expression: Variable {
              identifier: "platform",
              position: (567, 13),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "parsed",
                position: (567, 22),
               },
               Raw {
                content: "cpu",
                position: (567, 29),
               },
              ],
             },
             default: None,
            },
            PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (567, 36),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "systems",
                position: (567, 40),
               },
               Raw {
                content: "parse",
                position: (567, 48),
               },
               Raw {
                content: "cpuTypes",
                position: (567, 54),
               },
               Raw {
                content: "mipsel",
                position: (567, 63),
               },
              ],
             },
             default: None,
            },
           ],
           position: (567, 33),
          },
          then: Variable {
           identifier: "fuloong2f_n32",
           position: (567, 75),
          },
          else_: IfThenElse {
           predicate: BinaryOperation {
            operator: EqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "platform",
               position: (569, 13),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "parsed",
                 position: (569, 22),
                },
                Raw {
                 content: "cpu",
                 position: (569, 29),
                },
               ],
              },
              default: None,
             },
             PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (569, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "systems",
                 position: (569, 40),
                },
                Raw {
                 content: "parse",
                 position: (569, 48),
                },
                Raw {
                 content: "cpuTypes",
                 position: (569, 54),
                },
                Raw {
                 content: "powerpc64le",
                 position: (569, 63),
                },
               ],
              },
              default: None,
             },
            ],
            position: (569, 33),
           },
           then: Variable {
            identifier: "powernv",
            position: (569, 80),
           },
           else_: Variable {
            identifier: "pc",
            position: (571, 10),
           },
           position: (569, 10),
          },
          position: (567, 10),
         },
         position: (565, 10),
        },
        position: (561, 10),
       },
       position: (554, 10),
      },
      position: (551, 10),
     },
     position: (549, 12),
    },
   ),
  ],
  recursive: true,
  position: (9, 1),
 },
 position: (8, 1),
}