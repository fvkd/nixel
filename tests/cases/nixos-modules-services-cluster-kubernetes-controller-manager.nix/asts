---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "top",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "kubernetes",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "otop",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "options",
       position: (7, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (7, 18),
        },
        Raw {
         content: "kubernetes",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "top",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "controllerManager",
         position: (8, 13),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (11, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (12, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (12, 30),
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
              },
             ],
             position: (12, 41),
            },
            String {
             parts: [
              Raw {
               content: "controllerManager",
              },
             ],
             position: (12, 54),
            },
            String {
             parts: [
              Raw {
               content: "address",
              },
             ],
             position: (12, 74),
            },
           ],
           position: (12, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (12, 87),
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
              },
             ],
             position: (12, 98),
            },
            String {
             parts: [
              Raw {
               content: "controllerManager",
              },
             ],
             position: (12, 111),
            },
            String {
             parts: [
              Raw {
               content: "bindAddress",
              },
             ],
             position: (12, 131),
            },
           ],
           position: (12, 86),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (13, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (13, 30),
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
              },
             ],
             position: (13, 41),
            },
            String {
             parts: [
              Raw {
               content: "controllerManager",
              },
             ],
             position: (13, 54),
            },
            String {
             parts: [
              Raw {
               content: "port",
              },
             ],
             position: (13, 74),
            },
           ],
           position: (13, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (13, 84),
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
              },
             ],
             position: (13, 95),
            },
            String {
             parts: [
              Raw {
               content: "controllerManager",
              },
             ],
             position: (13, 108),
            },
            String {
             parts: [
              Raw {
               content: "insecurePort",
              },
             ],
             position: (13, 128),
            },
           ],
           position: (13, 83),
          },
         ],
        },
       ],
       position: (11, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (17, 3),
        },
        Raw {
         content: "services",
         position: (17, 11),
        },
        Raw {
         content: "kubernetes",
         position: (17, 20),
        },
        Raw {
         content: "controllerManager",
         position: (17, 31),
        },
       ],
      },
      With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (17, 56),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "types",
           position: (17, 60),
          },
         ],
        },
        default: None,
       },
       target: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "allocateNodeCIDRs",
             position: (19, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (19, 25),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (20, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Whether to automatically allocate CIDR ranges for cluster nodes.",
                 },
                ],
                position: (20, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (21, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (21, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (22, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (22, 14),
               },
              ),
             ],
             recursive: false,
             position: (19, 34),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "bindAddress",
             position: (25, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (25, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (26, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller manager listening address.",
                 },
                ],
                position: (26, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (27, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "127.0.0.1",
                 },
                ],
                position: (27, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (28, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (28, 14),
               },
              ),
             ],
             recursive: false,
             position: (25, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "clusterCidr",
             position: (31, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (31, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (32, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes CIDR Range for Pods in cluster.",
                 },
                ],
                position: (32, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (33, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "top",
                 position: (33, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "clusterCidr",
                   position: (33, 21),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (34, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (34, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "otop",
                      position: (34, 49),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "clusterCidr",
                        position: (34, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (34, 39),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (35, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (35, 14),
               },
              ),
             ],
             recursive: false,
             position: (31, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (38, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkEnableOption",
            position: (38, 14),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "Kubernetes controller manager",
              },
             ],
             position: (38, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraOpts",
             position: (40, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (40, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (41, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller manager extra command line options.",
                 },
                ],
                position: (41, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (42, 7),
                 },
                ],
               },
               String {
                parts: [],
                position: (42, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (43, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "separatedString",
                 position: (43, 14),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: " ",
                   },
                  ],
                  position: (43, 30),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (40, 26),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "featureGates",
             position: (46, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (46, 20),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (47, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "List set of feature gates",
                 },
                ],
                position: (47, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (48, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "top",
                 position: (48, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "featureGates",
                   position: (48, 21),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (49, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (49, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "otop",
                      position: (49, 49),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "featureGates",
                        position: (49, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (49, 39),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (50, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (50, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (50, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (46, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "insecurePort",
             position: (53, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (53, 20),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (54, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller manager insecure listening port.",
                 },
                ],
                position: (54, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (55, 7),
                 },
                ],
               },
               Int {
                value: 0,
                position: (55, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (56, 7),
                 },
                ],
               },
               Variable {
                identifier: "int",
                position: (56, 14),
               },
              ),
             ],
             recursive: false,
             position: (53, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "kubeconfig",
             position: (59, 5),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "top",
             position: (59, 18),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "lib",
               position: (59, 22),
              },
              Raw {
               content: "mkKubeConfigOptions",
               position: (59, 26),
              },
             ],
            },
            default: None,
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "Kubernetes controller manager",
              },
             ],
             position: (59, 46),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "leaderElect",
             position: (61, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (61, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (62, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Whether to start leader election before executing main loop.",
                 },
                ],
                position: (62, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (63, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (63, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (64, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (64, 17),
               },
              ),
             ],
             recursive: false,
             position: (61, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "rootCaFile",
             position: (67, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (67, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (68, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller manager certificate authority file included in\nservice account's token secret.\n",
                 },
                ],
                position: (68, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (72, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "top",
                 position: (72, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "caFile",
                   position: (72, 21),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (73, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (73, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "otop",
                      position: (73, 49),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "caFile",
                        position: (73, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (73, 39),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (74, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (74, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (74, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (67, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "securePort",
             position: (77, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (77, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (78, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller manager secure listening port.",
                 },
                ],
                position: (78, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (79, 7),
                 },
                ],
               },
               Int {
                value: 10252,
                position: (79, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (80, 7),
                 },
                ],
               },
               Variable {
                identifier: "int",
                position: (80, 14),
               },
              ),
             ],
             recursive: false,
             position: (77, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "serviceAccountKeyFile",
             position: (83, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (83, 29),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (84, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller manager PEM-encoded private RSA key file used to\nsign service account tokens\n",
                 },
                ],
                position: (84, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (88, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (88, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (89, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (89, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (89, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (83, 38),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "tlsCertFile",
             position: (92, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (92, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (93, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller-manager certificate file.",
                 },
                ],
                position: (93, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (94, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (94, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (95, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (95, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (95, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (92, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "tlsKeyFile",
             position: (98, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (98, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (99, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes controller-manager private key file.",
                 },
                ],
                position: (99, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (100, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (100, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (101, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (101, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (101, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (98, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "verbosity",
             position: (104, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (104, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (105, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n",
                 },
                ],
                position: (105, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (109, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (109, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (110, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (110, 14),
                },
                arguments: [
                 Variable {
                  identifier: "int",
                  position: (110, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (104, 26),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (17, 67),
       },
       position: (17, 51),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (116, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (116, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (116, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (116, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (117, 5),
             },
             Raw {
              content: "services",
              position: (117, 13),
             },
             Raw {
              content: "kube-controller-manager",
              position: (117, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (118, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Kubernetes Controller Manager Service",
                },
               ],
               position: (118, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (119, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "kubernetes.target",
                  },
                 ],
                 position: (119, 20),
                },
               ],
               position: (119, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (120, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "kube-apiserver.service",
                  },
                 ],
                 position: (120, 17),
                },
               ],
               position: (120, 15),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (121, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RestartSec",
                    position: (122, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "30s",
                   },
                  ],
                  position: (122, 22),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (123, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "on-failure",
                   },
                  ],
                  position: (123, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Slice",
                    position: (124, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "kubernetes.slice",
                   },
                  ],
                  position: (124, 17),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (125, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "top",
                      position: (125, 25),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (125, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/kube-controller-manager \\\n          --allocate-node-cidrs=",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "boolToString",
                      position: (126, 35),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (126, 48),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "allocateNodeCIDRs",
                          position: (126, 52),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          --bind-address=",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (127, 28),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "bindAddress",
                        position: (127, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (128, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (128, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "clusterCidr",
                            position: (128, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (128, 46),
                        },
                       ],
                       position: (128, 44),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--cluster-cidr=",
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (129, 31),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "clusterCidr",
                             position: (129, 35),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (129, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (130, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (130, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "featureGates",
                            position: (130, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        List {
                         elements: [],
                         position: (130, 49),
                        },
                       ],
                       position: (130, 46),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--feature-gates=",
                        },
                        Expression {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "concatMapStringsSep",
                           position: (131, 32),
                          },
                          arguments: [
                           String {
                            parts: [
                             Raw {
                              content: ",",
                             },
                            ],
                            position: (131, 52),
                           },
                           Function {
                            argument: Some(
                             "feature",
                            ),
                            arguments: FunctionArguments {
                             arguments: [],
                             ellipsis: false,
                            },
                            definition: String {
                             parts: [
                              Expression {
                               expression: Variable {
                                identifier: "feature",
                                position: (131, 69),
                               },
                              },
                              Raw {
                               content: "=true",
                              },
                             ],
                             position: (131, 66),
                            },
                            position: (131, 57),
                           },
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (131, 85),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "featureGates",
                               position: (131, 89),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                         },
                        },
                       ],
                       position: (131, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          --kubeconfig=",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "top",
                       position: (132, 26),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "lib",
                         position: (132, 30),
                        },
                        Raw {
                         content: "mkKubeConfig",
                         position: (132, 34),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "kube-controller-manager",
                        },
                       ],
                       position: (132, 47),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (132, 73),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "kubeconfig",
                          position: (132, 77),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          --leader-elect=",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "boolToString",
                      position: (133, 28),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (133, 41),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "leaderElect",
                          position: (133, 45),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (134, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (134, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "rootCaFile",
                            position: (134, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (134, 45),
                        },
                       ],
                       position: (134, 43),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--root-ca-file=",
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (135, 31),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "rootCaFile",
                             position: (135, 35),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (135, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          --port=",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (136, 20),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (136, 29),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "insecurePort",
                          position: (136, 33),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          --secure-port=",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (137, 27),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (137, 36),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "securePort",
                          position: (137, 40),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (138, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (138, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "serviceAccountKeyFile",
                            position: (138, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (138, 56),
                        },
                       ],
                       position: (138, 54),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--service-account-private-key-file=",
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (139, 51),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "serviceAccountKeyFile",
                             position: (139, 55),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (139, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (140, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (140, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "tlsCertFile",
                            position: (140, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (140, 46),
                        },
                       ],
                       position: (140, 44),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--tls-cert-file=",
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (141, 32),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "tlsCertFile",
                             position: (141, 36),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (141, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (142, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (142, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "tlsKeyFile",
                            position: (142, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (142, 45),
                        },
                       ],
                       position: (142, 43),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--tls-private-key-file=",
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (143, 39),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "tlsKeyFile",
                             position: (143, 43),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (143, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (144, 13),
                     },
                     arguments: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "elem",
                        position: (144, 29),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "RBAC",
                          },
                         ],
                         position: (144, 34),
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "top",
                          position: (144, 41),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "apiserver",
                            position: (144, 45),
                           },
                           Raw {
                            content: "authorizationMode",
                            position: (144, 55),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--use-service-account-credentials",
                        },
                       ],
                       position: (145, 13),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (146, 13),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (146, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "verbosity",
                            position: (146, 33),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (146, 46),
                        },
                       ],
                       position: (146, 43),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "--v=",
                        },
                        Expression {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "toString",
                           position: (146, 59),
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (146, 68),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "verbosity",
                               position: (146, 72),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                         },
                        },
                       ],
                       position: (146, 52),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " \\\n          ",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (147, 13),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "extraOpts",
                        position: (147, 17),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\n        ",
                   },
                  ],
                  position: (125, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "WorkingDirectory",
                    position: (149, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "top",
                   position: (149, 28),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "dataDir",
                     position: (149, 32),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (150, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "kubernetes",
                   },
                  ],
                  position: (150, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Group",
                    position: (151, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "kubernetes",
                   },
                  ],
                  position: (151, 17),
                 },
                ),
               ],
               recursive: false,
               position: (121, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "unitConfig",
                 position: (153, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StartLimitIntervalSec",
                    position: (154, 9),
                   },
                  ],
                 },
                 Int {
                  value: 0,
                  position: (154, 33),
                 },
                ),
               ],
               recursive: false,
               position: (153, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (156, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "top",
                position: (156, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "path",
                  position: (156, 18),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (117, 48),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (159, 5),
             },
             Raw {
              content: "kubernetes",
              position: (159, 14),
             },
             Raw {
              content: "pki",
              position: (159, 25),
             },
             Raw {
              content: "certs",
              position: (159, 29),
             },
            ],
           },
           With {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "top",
              position: (159, 42),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "lib",
                position: (159, 46),
               },
              ],
             },
             default: None,
            },
            target: Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "controllerManager",
                  position: (160, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkCert",
                 position: (160, 27),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "name",
                       position: (161, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "kube-controller-manager",
                      },
                     ],
                     position: (161, 16),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "CN",
                       position: (162, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "kube-controller-manager",
                      },
                     ],
                     position: (162, 14),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "action",
                       position: (163, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "systemctl restart kube-controller-manager.service",
                      },
                     ],
                     position: (163, 18),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (160, 34),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "controllerManagerClient",
                  position: (165, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkCert",
                 position: (165, 33),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "name",
                       position: (166, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "kube-controller-manager-client",
                      },
                     ],
                     position: (166, 16),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "CN",
                       position: (167, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "system:kube-controller-manager",
                      },
                     ],
                     position: (167, 14),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "action",
                       position: (168, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "systemctl restart kube-controller-manager.service",
                      },
                     ],
                     position: (168, 18),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (165, 40),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (159, 51),
            },
            position: (159, 37),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (172, 5),
             },
             Raw {
              content: "kubernetes",
              position: (172, 14),
             },
             Raw {
              content: "controllerManager",
              position: (172, 25),
             },
             Raw {
              content: "kubeconfig",
              position: (172, 43),
             },
             Raw {
              content: "server",
              position: (172, 54),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (172, 63),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "top",
               position: (172, 73),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "apiserverAddress",
                 position: (172, 77),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (116, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (175, 3),
        },
        Raw {
         content: "buildDocsInSandbox",
         position: (175, 8),
        },
       ],
      },
      Variable {
       identifier: "false",
       position: (175, 29),
      },
     ),
    ],
    recursive: false,
    position: (10, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}