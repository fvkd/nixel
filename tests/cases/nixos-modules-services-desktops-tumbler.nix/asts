---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (9, 16),
        },
        Raw {
         content: "tumbler",
         position: (9, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (15, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (16, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (17, 9),
            },
            String {
             parts: [
              Raw {
               content: "tumbler",
              },
             ],
             position: (17, 20),
            },
            String {
             parts: [
              Raw {
               content: "package",
              },
             ],
             position: (17, 30),
            },
           ],
           position: (17, 7),
          },
          String {
           parts: [],
           position: (18, 7),
          },
         ],
        },
       ],
       position: (15, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (21, 3),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "lib",
        position: (21, 15),
       },
       target: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "maintainers",
             position: (22, 5),
            },
           ],
          },
          With {
           expression: Variable {
            identifier: "maintainers",
            position: (22, 24),
           },
           target: BinaryOperation {
            operator: Concatenation,
            operands: [
             List {
              elements: [],
              position: (22, 37),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "teams",
               position: (22, 44),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "pantheon",
                 position: (22, 50),
                },
                Raw {
                 content: "members",
                 position: (22, 59),
                },
               ],
              },
              default: None,
             },
            ],
            position: (22, 41),
           },
           position: (22, 19),
          },
         ),
        ],
        recursive: false,
        position: (21, 20),
       },
       position: (21, 10),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (27, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (29, 5),
           },
           Raw {
            content: "tumbler",
            position: (29, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (31, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (31, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Tumbler, A D-Bus thumbnailer service",
                },
               ],
               position: (31, 31),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (29, 24),
         },
        ),
       ],
       recursive: false,
       position: (27, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (40, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (40, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (40, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (40, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (42, 5),
             },
             Raw {
              content: "systemPackages",
              position: (42, 17),
             },
            ],
           },
           With {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (42, 39),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "xfce",
                position: (42, 44),
               },
              ],
             },
             default: None,
            },
            target: List {
             elements: [
              Variable {
               identifier: "tumbler",
               position: (43, 7),
              },
             ],
             position: (42, 50),
            },
            position: (42, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (46, 5),
             },
             Raw {
              content: "dbus",
              position: (46, 14),
             },
             Raw {
              content: "packages",
              position: (46, 19),
             },
            ],
           },
           With {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (46, 35),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "xfce",
                position: (46, 40),
               },
              ],
             },
             default: None,
            },
            target: List {
             elements: [
              Variable {
               identifier: "tumbler",
               position: (47, 7),
              },
             ],
             position: (46, 46),
            },
            position: (46, 30),
           },
          ),
         ],
         recursive: false,
         position: (40, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}