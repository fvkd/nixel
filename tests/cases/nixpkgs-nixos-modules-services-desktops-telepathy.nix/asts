---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "meta",
        position: (9, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "maintainers",
           position: (10, 5),
          },
         ],
        },
        to: PropertyAccess {
         expression: Variable {
          identifier: "teams",
          position: (10, 19),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "gnome",
            position: (10, 25),
           },
           Raw {
            content: "members",
            position: (10, 31),
           },
          ],
         },
         default: None,
        },
       },
      ],
      recursive: false,
      position: (9, 10),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "options",
        position: (15, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "services",
           position: (17, 5),
          },
          Raw {
           content: "telepathy",
           position: (17, 14),
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "enable",
              position: (19, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (19, 16),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (20, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (20, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (20, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (21, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (21, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (22, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Whether to enable Telepathy service, a communications framework\nthat enables real-time communication via pluggable protocol backends.\n",
                   position: (23, 1),
                  },
                 ],
                 position: (22, 23),
                },
               },
              ],
              recursive: false,
              position: (19, 25),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (17, 26),
        },
       },
      ],
      recursive: false,
      position: (15, 13),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "config",
        position: (35, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (35, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (35, 17),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "services",
           position: (35, 24),
          },
          Raw {
           content: "telepathy",
           position: (35, 33),
          },
          Raw {
           content: "enable",
           position: (35, 43),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "environment",
             position: (37, 5),
            },
            Raw {
             content: "systemPackages",
             position: (37, 17),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (37, 36),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "telepathy-mission-control",
                position: (37, 41),
               },
              ],
             },
             default: None,
            },
           ],
           position: (37, 34),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "services",
             position: (39, 5),
            },
            Raw {
             content: "dbus",
             position: (39, 14),
            },
            Raw {
             content: "packages",
             position: (39, 19),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (39, 32),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "telepathy-mission-control",
                position: (39, 37),
               },
              ],
             },
             default: None,
            },
           ],
           position: (39, 30),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "services",
             position: (42, 5),
            },
            Raw {
             content: "xserver",
             position: (42, 14),
            },
            Raw {
             content: "desktopManager",
             position: (42, 22),
            },
            Raw {
             content: "gnome",
             position: (42, 37),
            },
            Raw {
             content: "sessionPath",
             position: (42, 43),
            },
           ],
          },
          to: With {
           expression: Variable {
            identifier: "pkgs",
            position: (42, 62),
           },
           target: List {
            elements: [
             Variable {
              identifier: "telepathy-glib",
              position: (43, 7),
             },
             Variable {
              identifier: "telepathy-logger",
              position: (44, 7),
             },
            ],
            position: (42, 68),
           },
           position: (42, 57),
          },
         },
        ],
        recursive: false,
        position: (35, 50),
       },
      ],
     },
    },
   ],
   recursive: false,
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}