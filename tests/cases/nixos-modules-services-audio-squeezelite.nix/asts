---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Inherit {
    from: Some(
     Variable {
      identifier: "lib",
      position: (4, 12),
     },
    ),
    attributes: [
     Raw {
      content: "mkEnableOption",
      position: (4, 17),
     },
     Raw {
      content: "mkIf",
      position: (4, 32),
     },
     Raw {
      content: "mkOption",
      position: (4, 37),
     },
     Raw {
      content: "optionalString",
      position: (4, 46),
     },
     Raw {
      content: "types",
      position: (4, 61),
     },
    ],
   },
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "dataDir",
       position: (6, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "/var/lib/squeezelite",
      },
     ],
     position: (6, 13),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (7, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (7, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (7, 16),
       },
       Raw {
        content: "squeezelite",
        position: (7, 25),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pkg",
       position: (8, 3),
      },
     ],
    },
    IfThenElse {
     predicate: PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (8, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "pulseAudio",
         position: (8, 16),
        },
       ],
      },
      default: None,
     },
     then: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (8, 32),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "squeezelite-pulse",
         position: (8, 37),
        },
       ],
      },
      default: None,
     },
     else_: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (8, 60),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "squeezelite",
         position: (8, 65),
        },
       ],
      },
      default: None,
     },
     position: (8, 9),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "bin",
       position: (9, 3),
      },
     ],
    },
    String {
     parts: [
      Expression {
       expression: Variable {
        identifier: "pkg",
        position: (9, 12),
       },
      },
      Raw {
       content: "/bin/",
      },
      Expression {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "pkg",
         position: (9, 23),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "pname",
           position: (9, 27),
          },
         ],
        },
        default: None,
       },
      },
     ],
     position: (9, 9),
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (16, 3),
       },
       Raw {
        content: "services",
        position: (16, 11),
       },
       Raw {
        content: "squeezelite",
        position: (16, 20),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (17, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkEnableOption",
          position: (17, 14),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "Squeezelite, a software Squeezebox emulator",
            },
           ],
           position: (17, 29),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "pulseAudio",
           position: (19, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkEnableOption",
          position: (19, 18),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "pulseaudio support",
            },
           ],
           position: (19, 33),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "extraArguments",
           position: (21, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (21, 22),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (22, 7),
               },
              ],
             },
             String {
              parts: [],
              position: (22, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (23, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (23, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "str",
                 position: (23, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (24, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Additional command line arguments to pass to Squeezelite.\n",
               },
              ],
              position: (24, 21),
             },
            ),
           ],
           recursive: false,
           position: (21, 31),
          },
         ],
        },
       ),
      ],
      recursive: false,
      position: (16, 34),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (33, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (33, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (33, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (33, 21),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (34, 5),
            },
            Raw {
             content: "services",
             position: (34, 13),
            },
            Raw {
             content: "squeezelite",
             position: (34, 22),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wantedBy",
                position: (35, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "multi-user.target",
                 },
                ],
                position: (35, 20),
               },
              ],
              position: (35, 18),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "after",
                position: (36, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "network.target",
                 },
                ],
                position: (36, 17),
               },
               String {
                parts: [
                 Raw {
                  content: "sound.target",
                 },
                ],
                position: (36, 34),
               },
              ],
              position: (36, 15),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (37, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Software Squeezebox emulator",
               },
              ],
              position: (37, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (38, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "DynamicUser",
                   position: (39, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (39, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ExecStart",
                   position: (40, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Expression {
                   expression: Variable {
                    identifier: "bin",
                    position: (40, 24),
                   },
                  },
                  Raw {
                   content: " -N ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "dataDir",
                    position: (40, 34),
                   },
                  },
                  Raw {
                   content: "/player-name ",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (40, 57),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "extraArguments",
                       position: (40, 61),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 position: (40, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "StateDirectory",
                   position: (41, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "builtins",
                   position: (41, 26),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "baseNameOf",
                     position: (41, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "dataDir",
                   position: (41, 46),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "SupplementaryGroups",
                   position: (42, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "audio",
                  },
                 ],
                 position: (42, 31),
                },
               ),
              ],
              recursive: false,
              position: (38, 23),
             },
            ),
           ],
           recursive: false,
           position: (34, 36),
          },
         ),
        ],
        recursive: false,
        position: (33, 28),
       },
      ],
     },
    ),
   ],
   recursive: false,
   position: (12, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}