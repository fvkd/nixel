---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (1, 16)
            , := lexemes ","
              , "," (1, 24)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "coreutils" (1, 26)
              , := lexemes ","
                , "," (1, 35)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "ncurses" (1, 37)
                , := lexemes ","
                  , "," (1, 44)
                formals := rules "formal"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "fetchpatch" (1, 46)
      } := lexemes "}"
        } "}" (1, 57)
      : := lexemes ":"
        : ":" (1, 58)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (3, 1)
                  . := lexemes "."
                    . "." (3, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (3, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 21)
                  { := lexemes "{"
                    { "{" (3, 25)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules 
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "pname" (4, 3)
                                    = := lexemes "="
                                      = "=" (4, 9)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (4, 11)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "entr" (4, 12)
                                                  " := lexemes "\""
                                                    " "\"" (4, 16)
                                    ; := lexemes ";"
                                      ; ";" (4, 17)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "version" (5, 3)
                                  = := lexemes "="
                                    = "=" (5, 11)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (5, 13)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "5.1" (5, 14)
                                                " := lexemes "\""
                                                  " "\"" (5, 17)
                                  ; := lexemes ";"
                                    ; ";" (5, 18)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "src" (7, 3)
                                = := lexemes "="
                                  = "=" (7, 7)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_app" "expr_select"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "fetchurl" (7, 9)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "{" "binds" "}"
                                              { := lexemes "{"
                                                { "{" (7, 18)
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules 
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "url" (8, 5)
                                                  = := lexemes "="
                                                    = "=" (8, 9)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "\"" "string_parts" "\""
                                                                " := lexemes "\""
                                                                  " "\"" (8, 11)
                                                                string_parts := rules "string_parts_interpolated"
                                                                  string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                    string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                                      string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                        string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                          STR := lexemes "STR"
                                                                            STR "https://eradman.com/entrproject/code/" (8, 12)
                                                                          DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                            DOLLAR_CURLY "${" (8, 49)
                                                                          expr := rules "expr_function"
                                                                            expr_function := rules "expr_if"
                                                                              expr_if := rules "expr_op"
                                                                                expr_op := rules "expr_app"
                                                                                  expr_app := rules "expr_select"
                                                                                    expr_select := rules "expr_simple"
                                                                                      expr_simple := rules "ID"
                                                                                        ID := lexemes "ID"
                                                                                          ID "pname" (8, 51)
                                                                          } := lexemes "}"
                                                                            } "}" (8, 56)
                                                                        STR := lexemes "STR"
                                                                          STR "-" (8, 57)
                                                                      DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                        DOLLAR_CURLY "${" (8, 58)
                                                                      expr := rules "expr_function"
                                                                        expr_function := rules "expr_if"
                                                                          expr_if := rules "expr_op"
                                                                            expr_op := rules "expr_app"
                                                                              expr_app := rules "expr_select"
                                                                                expr_select := rules "expr_simple"
                                                                                  expr_simple := rules "ID"
                                                                                    ID := lexemes "ID"
                                                                                      ID "version" (8, 60)
                                                                      } := lexemes "}"
                                                                        } "}" (8, 67)
                                                                    STR := lexemes "STR"
                                                                      STR ".tar.gz" (8, 68)
                                                                " := lexemes "\""
                                                                  " "\"" (8, 75)
                                                  ; := lexemes ";"
                                                    ; ";" (8, 76)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "hash" (9, 5)
                                                = := lexemes "="
                                                  = "=" (9, 10)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (9, 12)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "sha256-D4f1d7zodkHFJa3bm8xgu6pXn+mB2rdZBD484VVtu5I=" (9, 13)
                                                              " := lexemes "\""
                                                                " "\"" (9, 64)
                                                ; := lexemes ";"
                                                  ; ";" (9, 65)
                                              } := lexemes "}"
                                                } "}" (10, 3)
                                ; := lexemes ";"
                                  ; ";" (10, 4)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "postPatch" (12, 3)
                              = := lexemes "="
                                = "=" (12, 13)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                            IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                              IND_STRING_OPEN "''\n" (12, 15)
                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                              ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                  ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                      ind_string_parts := rules 
                                                      IND_STR := lexemes "IND_STR"
                                                        IND_STR "    substituteInPlace Makefile.bsd --replace /bin/echo echo\n    substituteInPlace entr.c --replace /bin/cat " (13, 1)
                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                      DOLLAR_CURLY "${" (14, 49)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "coreutils" (14, 51)
                                                    } := lexemes "}"
                                                      } "}" (14, 60)
                                                  IND_STR := lexemes "IND_STR"
                                                    IND_STR "/bin/cat\n    substituteInPlace entr.c --replace /usr/bin/clear " (14, 61)
                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                  DOLLAR_CURLY "${" (15, 55)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "ncurses" (15, 57)
                                                            . := lexemes "."
                                                              . "." (15, 64)
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "out" (15, 65)
                                                } := lexemes "}"
                                                  } "}" (15, 68)
                                              IND_STR := lexemes "IND_STR"
                                                IND_STR "/bin/clear\n    substituteInPlace entr.1 --replace /bin/cat cat\n    substituteInPlace entr.1 --replace /usr/bin/clear clear\n  " (15, 69)
                                            IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                              IND_STRING_CLOSE "''" (18, 3)
                              ; := lexemes ";"
                                ; ";" (18, 5)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "dontAddPrefix" (19, 3)
                            = := lexemes "="
                              = "=" (19, 17)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "true" (19, 19)
                            ; := lexemes ";"
                              ; ";" (19, 23)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "doCheck" (20, 3)
                          = := lexemes "="
                            = "=" (20, 11)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "true" (20, 13)
                          ; := lexemes ";"
                            ; ";" (20, 17)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "checkTarget" (21, 3)
                        = := lexemes "="
                          = "=" (21, 15)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "\"" "string_parts" "\""
                                      " := lexemes "\""
                                        " "\"" (21, 17)
                                      string_parts := rules "STR"
                                        STR := lexemes "STR"
                                          STR "test" (21, 18)
                                      " := lexemes "\""
                                        " "\"" (21, 22)
                        ; := lexemes ";"
                          ; ";" (21, 23)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "installFlags" (22, 3)
                      = := lexemes "="
                        = "=" (22, 16)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "[" "expr_list" "]"
                                    [ := lexemes "["
                                      [ "[" (22, 18)
                                    expr_list := rules "expr_list" "expr_select"
                                      expr_list := rules 
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (22, 20)
                                          string_parts := rules "STR"
                                            STR := lexemes "STR"
                                              STR "PREFIX=$(out)" (22, 21)
                                          " := lexemes "\""
                                            " "\"" (22, 34)
                                    ] := lexemes "]"
                                      ] "]" (22, 36)
                      ; := lexemes ";"
                        ; ";" (22, 37)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (24, 3)
                    = := lexemes "="
                      = "=" (24, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (24, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (24, 15)
                        ; := lexemes ";"
                          ; ";" (24, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (24, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "homepage" (25, 5)
                                                = := lexemes "="
                                                  = "=" (25, 14)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (25, 16)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "https://eradman.com/entrproject/" (25, 17)
                                                              " := lexemes "\""
                                                                " "\"" (25, 49)
                                                ; := lexemes ";"
                                                  ; ";" (25, 50)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "description" (26, 5)
                                              = := lexemes "="
                                                = "=" (26, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (26, 19)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "Run arbitrary commands when files change" (26, 20)
                                                            " := lexemes "\""
                                                              " "\"" (26, 60)
                                              ; := lexemes ";"
                                                ; ";" (26, 61)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "changelog" (27, 5)
                                            = := lexemes "="
                                              = "=" (27, 15)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (27, 17)
                                                          string_parts := rules "string_parts_interpolated"
                                                            string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                              string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                STR := lexemes "STR"
                                                                  STR "https://github.com/eradman/entr/raw/" (27, 18)
                                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                  DOLLAR_CURLY "${" (27, 54)
                                                                expr := rules "expr_function"
                                                                  expr_function := rules "expr_if"
                                                                    expr_if := rules "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "version" (27, 56)
                                                                } := lexemes "}"
                                                                  } "}" (27, 63)
                                                              STR := lexemes "STR"
                                                                STR "/NEWS" (27, 64)
                                                          " := lexemes "\""
                                                            " "\"" (27, 69)
                                            ; := lexemes ";"
                                              ; ";" (27, 70)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "license" (28, 5)
                                          = := lexemes "="
                                            = "=" (28, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "licenses" (28, 15)
                                                      . := lexemes "."
                                                        . "." (28, 23)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "isc" (28, 24)
                                          ; := lexemes ";"
                                            ; ";" (28, 27)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "platforms" (29, 5)
                                        = := lexemes "="
                                          = "=" (29, 15)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "platforms" (29, 17)
                                                    . := lexemes "."
                                                      . "." (29, 26)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "all" (29, 27)
                                        ; := lexemes ";"
                                          ; ";" (29, 30)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (30, 5)
                                      = := lexemes "="
                                        = "=" (30, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "WITH" "expr" ";" "expr_function"
                                          WITH := lexemes "WITH"
                                            WITH "with" (30, 19)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (30, 24)
                                          ; := lexemes ";"
                                            ; ";" (30, 35)
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (30, 37)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "pSub" (30, 39)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "synthetica" (30, 44)
                                                      ] := lexemes "]"
                                                        ] "]" (30, 55)
                                      ; := lexemes ";"
                                        ; ";" (30, 56)
                                    } := lexemes "}"
                                      } "}" (31, 3)
                    ; := lexemes ";"
                      ; ";" (31, 4)
                  } := lexemes "}"
                    } "}" (32, 1)