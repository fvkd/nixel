---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nncpCfgFile",
        position: (5, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "/run/nncp.hjson",
       },
      ],
      position: (5, 17),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "programCfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 23),
        },
        Raw {
         content: "nncp",
         position: (6, 32),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "settingsFormat",
        position: (7, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (7, 20),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "formats",
          position: (7, 25),
         },
         Raw {
          content: "json",
          position: (7, 33),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [],
        recursive: false,
        position: (7, 38),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "jsonCfgFile",
        position: (8, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "settingsFormat",
        position: (8, 17),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "generate",
          position: (8, 32),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "nncp.json",
         },
        ],
        position: (8, 41),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "programCfg",
         position: (8, 53),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "settings",
           position: (8, 64),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "pkg",
        position: (9, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "programCfg",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "package",
         position: (9, 20),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (11, 3),
        },
        Raw {
         content: "programs",
         position: (11, 11),
        },
        Raw {
         content: "nncp",
         position: (11, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (13, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (14, 7),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "NNCP (Node to Node copy) utilities and configuration",
             },
            ],
            position: (14, 22),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "group",
            position: (16, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (16, 13),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (17, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (17, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (17, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (18, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "uucp",
                },
               ],
               position: (18, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (19, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The group under which NNCP files shall be owned.\nAny member of this group may access the secret keys\nof this NNCP node.\n",
                },
               ],
               position: (19, 21),
              },
             ),
            ],
            recursive: false,
            position: (16, 22),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (26, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (26, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (27, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (27, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (27, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (28, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (28, 17),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nncp",
                  position: (28, 22),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (29, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (29, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.nncp",
                  },
                 ],
                 position: (29, 39),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (30, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The NNCP package to use system-wide.",
                },
               ],
               position: (30, 21),
              },
             ),
            ],
            recursive: false,
            position: (26, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "secrets",
            position: (33, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (33, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (34, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (34, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (34, 26),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (34, 33),
                 },
                ],
               },
               position: (34, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (35, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "/run/keys/nncp.hjson",
                  },
                 ],
                 position: (35, 19),
                },
               ],
               position: (35, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (36, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "A list of paths to NNCP configuration files that should not be\nin the Nix store. These files are layered on top of the values at\n<xref linkend=\"opt-programs.nncp.settings\"/>.\n",
                },
               ],
               position: (36, 21),
              },
             ),
            ],
            recursive: false,
            position: (33, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "settings",
            position: (43, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (43, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (44, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "settingsFormat",
                position: (44, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (44, 29),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (45, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "NNCP configuration, see\n<link xlink:href=\"http://www.nncpgo.org/Configuration.html\"/>.\nAt runtime these settings will be overlayed by the contents of\n<xref linkend=\"opt-programs.nncp.secrets\"/> into the file\n<literal>",
                },
                Expression {
                 expression: Variable {
                  identifier: "nncpCfgFile",
                  position: (50, 20),
                 },
                },
                Raw {
                 content: "</literal>. Node keypairs go in\n<literal>secrets</literal>, do not specify them in\n<literal>settings</literal> as they will be leaked into\n<literal>/nix/store</literal>!\n",
                },
               ],
               position: (45, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (55, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (55, 17),
              },
             ),
            ],
            recursive: false,
            position: (43, 25),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (11, 27),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (60, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (60, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "programCfg",
          position: (60, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (60, 28),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (62, 5),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "systemPackages",
                 position: (63, 7),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "pkg",
                 position: (63, 26),
                },
               ],
               position: (63, 24),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "etc",
                 position: (64, 7),
                },
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "nncp.hjson",
                   },
                  ],
                  position: (64, 11),
                 },
                },
                Raw {
                 content: "source",
                 position: (64, 24),
                },
               ],
              },
              Variable {
               identifier: "nncpCfgFile",
               position: (64, 33),
              },
             ),
            ],
            recursive: false,
            position: (62, 19),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "programs",
              position: (67, 5),
             },
             Raw {
              content: "nncp",
              position: (67, 14),
             },
             Raw {
              content: "settings",
              position: (67, 19),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "spool",
                 position: (68, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkDefault",
                position: (68, 15),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "/var/spool/nncp",
                  },
                 ],
                 position: (68, 25),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "log",
                 position: (69, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkDefault",
                position: (69, 13),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "/var/spool/nncp/log",
                  },
                 ],
                 position: (69, 23),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (67, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (72, 5),
             },
             Raw {
              content: "tmpfiles",
              position: (72, 13),
             },
             Raw {
              content: "rules",
              position: (72, 22),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "d ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "programCfg",
                  position: (73, 12),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (73, 23),
                   },
                   Raw {
                    content: "spool",
                    position: (73, 32),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " 0770 root ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "programCfg",
                  position: (73, 51),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "group",
                    position: (73, 62),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              position: (73, 7),
             },
             String {
              parts: [
               Raw {
                content: "f ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "programCfg",
                  position: (74, 12),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (74, 23),
                   },
                   Raw {
                    content: "log",
                    position: (74, 32),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " 0770 root ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "programCfg",
                  position: (74, 49),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "group",
                    position: (74, 60),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              position: (74, 7),
             },
            ],
            position: (72, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (77, 5),
             },
             Raw {
              content: "services",
              position: (77, 13),
             },
             Raw {
              content: "nncp-config",
              position: (77, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (78, 7),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "pkg",
                 position: (78, 16),
                },
               ],
               position: (78, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (79, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Generate NNCP configuration",
                },
               ],
               position: (79, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (80, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "basic.target",
                  },
                 ],
                 position: (80, 20),
                },
               ],
               position: (80, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (81, 7),
                },
                Raw {
                 content: "Type",
                 position: (81, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "oneshot",
                },
               ],
               position: (81, 28),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "script",
                 position: (82, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "umask u=rw\nnncpCfgDir=$(mktemp --directory nncp.XXX)\nfor f in ",
                },
                Expression {
                 expression: Variable {
                  identifier: "jsonCfgFile",
                  position: (85, 20),
                 },
                },
                Raw {
                 content: " ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (85, 35),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (85, 44),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "programs",
                       position: (85, 51),
                      },
                      Raw {
                       content: "nncp",
                       position: (85, 60),
                      },
                      Raw {
                       content: "secrets",
                       position: (85, 65),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "; do\n  tmpdir=$(mktemp --directory nncp.XXX)\n  nncp-cfgdir -cfg $f -dump $tmpdir\n  find $tmpdir -size 1c -delete\n  cp -a $tmpdir/* $nncpCfgDir/\n  rm -rf $tmpdir\ndone\nnncp-cfgdir -load $nncpCfgDir > ",
                },
                Expression {
                 expression: Variable {
                  identifier: "nncpCfgFile",
                  position: (92, 43),
                 },
                },
                Raw {
                 content: "\nrm -rf $nncpCfgDir\nchgrp ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "programCfg",
                   position: (94, 17),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "group",
                     position: (94, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: " ",
                },
                Expression {
                 expression: Variable {
                  identifier: "nncpCfgFile",
                  position: (94, 37),
                 },
                },
                Raw {
                 content: "\nchmod g+r ",
                },
                Expression {
                 expression: Variable {
                  identifier: "nncpCfgFile",
                  position: (95, 21),
                 },
                },
                Raw {
                 content: "\n",
                },
               ],
               position: (82, 16),
              },
             ),
            ],
            recursive: false,
            position: (77, 36),
           },
          ),
         ],
         recursive: false,
         position: (60, 35),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (100, 3),
        },
        Raw {
         content: "maintainers",
         position: (100, 8),
        },
       ],
      },
      With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (100, 27),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (100, 31),
          },
         ],
        },
        default: None,
       },
       target: List {
        elements: [
         Variable {
          identifier: "ehmry",
          position: (100, 46),
         },
        ],
        position: (100, 44),
       },
       position: (100, 22),
      },
     ),
    ],
    recursive: false,
    position: (10, 4),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}