---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "iniDescription",
        position: (9, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "pkg",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: String {
       parts: [
        Raw {
         content: "[",
         position: (10, 1),
        },
        Expression {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "pkg",
           position: (10, 8),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "fancyName",
             position: (10, 12),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "]\nDescription = ",
         position: (10, 22),
        },
        Expression {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "pkg",
           position: (11, 21),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "meta",
             position: (11, 25),
            },
            Raw {
             content: "description",
             position: (11, 30),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "\nDriver = ",
         position: (11, 42),
        },
        Expression {
         expression: Variable {
          identifier: "pkg",
          position: (12, 16),
         },
        },
        Raw {
         content: "/",
         position: (12, 20),
        },
        Expression {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "pkg",
           position: (12, 23),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "driver",
             position: (12, 27),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "\n",
         position: (12, 34),
        },
       ],
      },
      position: (9, 20),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (18, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (19, 5),
           },
           Raw {
            content: "unixODBCDrivers",
            position: (19, 17),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (19, 35),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (20, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (20, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (20, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (20, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (20, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (21, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (22, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (22, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "with pkgs.unixODBCDrivers; [ sqlite psql ]",
                   position: (22, 36),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (23, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Specifies Unix ODBC drivers to be registered in\n<filename>/etc/odbcinst.ini</filename>.  You may also want to\nadd <literal>pkgs.unixODBC</literal> to the system path to get\na command line client to connect to ODBC databases.\n",
                 position: (24, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (34, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (34, 12),
       },
       arguments: [
        BinaryOperation {
         operator: NotEqualTo,
         operands: [
          PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (34, 18),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (34, 25),
             },
             Raw {
              content: "unixODBCDrivers",
              position: (34, 37),
             },
            ],
           },
           default: None,
          },
          List {
           elements: [],
          },
         ],
         position: (34, 53),
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (35, 5),
             },
             Raw {
              content: "etc",
              position: (35, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "odbcinst.ini",
                 position: (35, 22),
                },
               ],
              },
             },
             Raw {
              content: "text",
              position: (35, 36),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "concatMapStringsSep",
             position: (35, 43),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "\n",
                position: (35, 64),
               },
              ],
             },
             Variable {
              identifier: "iniDescription",
              position: (35, 68),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (35, 83),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (35, 90),
                },
                Raw {
                 content: "unixODBCDrivers",
                 position: (35, 102),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (8, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}