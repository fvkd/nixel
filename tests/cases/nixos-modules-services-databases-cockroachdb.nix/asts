---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "utils",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "cockroachdb",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "crdb",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (7, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "package",
         position: (7, 14),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "startupCommand",
        position: (9, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "utils",
        position: (9, 20),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "escapeSystemdExecArgs",
          position: (9, 26),
         },
        ],
       },
       default: None,
      },
      arguments: [
       BinaryOperation {
        operator: Concatenation,
        operands: [
         List {
          elements: [
           String {
            parts: [
             Expression {
              expression: Variable {
               identifier: "crdb",
               position: (12, 10),
              },
             },
             Raw {
              content: "/bin/cockroach",
             },
            ],
            position: (12, 7),
           },
           String {
            parts: [
             Raw {
              content: "start",
             },
            ],
            position: (13, 7),
           },
           String {
            parts: [
             Raw {
              content: "--logtostderr",
             },
            ],
            position: (14, 7),
           },
           String {
            parts: [
             Raw {
              content: "--store=/var/lib/cockroachdb",
             },
            ],
            position: (15, 7),
           },
           String {
            parts: [
             Raw {
              content: "--http-addr=",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (18, 22),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "http",
                  position: (18, 26),
                 },
                 Raw {
                  content: "address",
                  position: (18, 31),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: ":",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (18, 42),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (18, 51),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "http",
                    position: (18, 55),
                   },
                   Raw {
                    content: "port",
                    position: (18, 60),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ],
            position: (18, 7),
           },
           String {
            parts: [
             Raw {
              content: "--listen-addr=",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (21, 24),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "listen",
                  position: (21, 28),
                 },
                 Raw {
                  content: "address",
                  position: (21, 35),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: ":",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (21, 46),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (21, 55),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "listen",
                    position: (21, 59),
                   },
                   Raw {
                    content: "port",
                    position: (21, 66),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ],
            position: (21, 7),
           },
           String {
            parts: [
             Raw {
              content: "--cache=",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (24, 18),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "cache",
                  position: (24, 22),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (24, 7),
           },
           String {
            parts: [
             Raw {
              content: "--max-sql-memory=",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (25, 27),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "maxSqlMemory",
                  position: (25, 31),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (25, 7),
           },
           IfThenElse {
            predicate: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (28, 11),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "insecure",
                position: (28, 15),
               },
              ],
             },
             default: None,
            },
            then: String {
             parts: [
              Raw {
               content: "--insecure",
              },
             ],
             position: (28, 29),
            },
            else_: String {
             parts: [
              Raw {
               content: "--certs-dir=",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (28, 62),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "certsDir",
                   position: (28, 66),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (28, 47),
            },
            position: (28, 8),
           },
          ],
          position: (10, 6),
         },
         BinaryOperation {
          operator: Concatenation,
          operands: [
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (30, 8),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "optional",
                position: (30, 12),
               },
              ],
             },
             default: None,
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (30, 22),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "join",
                   position: (30, 26),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (30, 34),
               },
              ],
              position: (30, 31),
             },
             String {
              parts: [
               Raw {
                content: "--join=",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (30, 50),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "join",
                    position: (30, 54),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              position: (30, 40),
             },
            ],
           },
           BinaryOperation {
            operator: Concatenation,
            operands: [
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "lib",
                position: (31, 8),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "optional",
                  position: (31, 12),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (31, 22),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "locality",
                     position: (31, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (31, 38),
                 },
                ],
                position: (31, 35),
               },
               String {
                parts: [
                 Raw {
                  content: "--locality=",
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (31, 58),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "locality",
                      position: (31, 62),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                ],
                position: (31, 44),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (32, 8),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "extraArgs",
                 position: (32, 12),
                },
               ],
              },
              default: None,
             },
            ],
            position: (32, 5),
           },
          ],
          position: (31, 5),
         },
        ],
        position: (30, 5),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "addressOption",
        position: (34, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "descr",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "defaultPort",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "address",
             position: (35, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (35, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (36, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (36, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "str",
                   position: (36, 20),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (37, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "localhost",
                 },
                ],
                position: (37, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (38, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Address to bind to for ",
                 },
                 Expression {
                  expression: Variable {
                   identifier: "descr",
                   position: (38, 47),
                  },
                 },
                ],
                position: (38, 21),
               },
              ),
             ],
             recursive: false,
             position: (35, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "port",
             position: (41, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (41, 12),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (42, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (42, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "port",
                   position: (42, 20),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (43, 7),
                 },
                ],
               },
               Variable {
                identifier: "defaultPort",
                position: (43, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (44, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Port to bind to for ",
                 },
                 Expression {
                  expression: Variable {
                   identifier: "descr",
                   position: (44, 44),
                  },
                 },
                ],
                position: (44, 21),
               },
              ),
             ],
             recursive: false,
             position: (41, 21),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (34, 39),
       },
       position: (34, 26),
      },
      position: (34, 19),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (50, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (51, 5),
           },
           Raw {
            content: "cockroachdb",
            position: (51, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (52, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (52, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "CockroachDB Server",
                },
               ],
               position: (52, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "listen",
               position: (54, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "addressOption",
              position: (54, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "intra-cluster communication",
                },
               ],
               position: (54, 30),
              },
              Int {
               value: 26257,
               position: (54, 60),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "http",
               position: (56, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "addressOption",
              position: (56, 14),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "http-based Admin UI",
                },
               ],
               position: (56, 28),
              },
              Int {
               value: 8080,
               position: (56, 50),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "locality",
               position: (58, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (58, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (59, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (59, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (59, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (59, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (59, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (60, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (60, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (61, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "An ordered, comma-separated list of key-value pairs that describe the\ntopography of the machine. Topography might include country,\ndatacenter or rack designations. Data is automatically replicated to\nmaximize diversities of each tier. The order of tiers is used to\ndetermine the priority of the diversity, so the more inclusive\nlocalities like country should come before less inclusive localities\nlike datacenter.  The tiers and order must be the same on all nodes.\nIncluding more tiers is better than including fewer. For example:\n\n<literal>\n    country=us,region=us-west,datacenter=us-west-1b,rack=12\n    country=ca,region=ca-east,datacenter=ca-east-2,rack=4\n\n    planet=earth,province=manitoba,colo=secondary,power=3\n</literal>\n",
                   },
                  ],
                  position: (61, 23),
                 },
                ),
               ],
               recursive: false,
               position: (58, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "join",
               position: (80, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (80, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (81, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (81, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (81, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (81, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (81, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (82, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (82, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (83, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The addresses for connecting the node to a cluster.",
                   },
                  ],
                  position: (83, 23),
                 },
                ),
               ],
               recursive: false,
               position: (80, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "insecure",
               position: (86, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (86, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (87, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (87, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (87, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (88, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (88, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (89, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Run in insecure mode.",
                   },
                  ],
                  position: (89, 23),
                 },
                ),
               ],
               recursive: false,
               position: (86, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "certsDir",
               position: (92, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (92, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (93, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (93, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (93, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (93, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (93, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (94, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (94, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (95, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The path to the certificate directory.",
                   },
                  ],
                  position: (95, 23),
                 },
                ),
               ],
               recursive: false,
               position: (92, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "user",
               position: (98, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (98, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (99, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (99, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (99, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (100, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cockroachdb",
                   },
                  ],
                  position: (100, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (101, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "User account under which CockroachDB runs",
                   },
                  ],
                  position: (101, 23),
                 },
                ),
               ],
               recursive: false,
               position: (98, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "group",
               position: (104, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (104, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (105, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (105, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (105, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (106, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cockroachdb",
                   },
                  ],
                  position: (106, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (107, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "User account under which CockroachDB runs",
                   },
                  ],
                  position: (107, 23),
                 },
                ),
               ],
               recursive: false,
               position: (104, 24),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "openPorts",
               position: (110, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (110, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (111, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (111, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (111, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (112, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (112, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (113, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Open firewall ports for cluster communication by default",
                   },
                  ],
                  position: (113, 23),
                 },
                ),
               ],
               recursive: false,
               position: (110, 28),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "cache",
               position: (116, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (116, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (117, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (117, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (117, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (118, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "25%",
                   },
                  ],
                  position: (118, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (119, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The total size for caches.\n\nThis can be a percentage, expressed with a fraction sign or as a\ndecimal-point number, or any bytes-based unit. For example,\n<literal>\"25%\"</literal>, <literal>\"0.25\"</literal> both represent\n25% of the available system memory. The values\n<literal>\"1000000000\"</literal> and <literal>\"1GB\"</literal> both\nrepresent 1 gigabyte of memory.\n\n",
                   },
                  ],
                  position: (119, 23),
                 },
                ),
               ],
               recursive: false,
               position: (116, 24),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "maxSqlMemory",
               position: (132, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (132, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (133, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (133, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (133, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (134, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "25%",
                   },
                  ],
                  position: (134, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (135, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The maximum in-memory storage capacity available to store temporary\ndata for SQL queries.\n\nThis can be a percentage, expressed with a fraction sign or as a\ndecimal-point number, or any bytes-based unit. For example,\n<literal>\"25%\"</literal>, <literal>\"0.25\"</literal> both represent\n25% of the available system memory. The values\n<literal>\"1000000000\"</literal> and <literal>\"1GB\"</literal> both\nrepresent 1 gigabyte of memory.\n",
                   },
                  ],
                  position: (135, 23),
                 },
                ),
               ],
               recursive: false,
               position: (132, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (148, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (148, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (149, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (149, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (149, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (150, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (150, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "cockroachdb",
                     position: (150, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (151, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (151, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.cockroachdb",
                     },
                    ],
                    position: (151, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (152, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The CockroachDB derivation to use for running the service.\n\nThis would primarily be useful to enable Enterprise Edition features\nin your own custom CockroachDB build (Nixpkgs CockroachDB binaries\nonly contain open source features and open source code).\n",
                   },
                  ],
                  position: (152, 23),
                 },
                ),
               ],
               recursive: false,
               position: (148, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraArgs",
               position: (161, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (161, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (162, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (162, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (162, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (162, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (162, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (163, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (163, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (164, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "--advertise-addr",
                     },
                    ],
                    position: (164, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "[fe80::f6f2:::]",
                     },
                    ],
                    position: (164, 40),
                   },
                  ],
                  position: (164, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (165, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra CLI arguments passed to <command>cockroach start</command>.\nFor the full list of supported argumemnts, check <link xlink:href=\"https://www.cockroachlabs.com/docs/stable/cockroach-start.html#flags\"/>\n",
                   },
                  ],
                  position: (165, 23),
                 },
                ),
               ],
               recursive: false,
               position: (161, 28),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (51, 28),
         },
        ),
       ],
       recursive: false,
       position: (50, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (173, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (173, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (173, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (173, 24),
           },
           Raw {
            content: "cockroachdb",
            position: (173, 33),
           },
           Raw {
            content: "enable",
            position: (173, 45),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (174, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (175, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  UnaryOperation {
                   operator: Not,
                   operand: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (175, 22),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "insecure",
                       position: (175, 26),
                      },
                     ],
                    },
                    default: None,
                   },
                   position: (175, 21),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (175, 38),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "certsDir",
                        position: (175, 42),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (175, 54),
                    },
                   ],
                   position: (175, 51),
                  },
                 ],
                 position: (175, 35),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (176, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "CockroachDB must have a set of SSL certificates (.certsDir), or run in Insecure Mode (.insecure = true)",
                  },
                 ],
                 position: (176, 19),
                },
               ),
              ],
              recursive: false,
              position: (175, 7),
             },
            ],
            position: (174, 18),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (180, 5),
             },
             Raw {
              content: "systemPackages",
              position: (180, 17),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "crdb",
              position: (180, 36),
             },
            ],
            position: (180, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (182, 5),
             },
             Raw {
              content: "users",
              position: (182, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (182, 19),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (182, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "user",
                   position: (182, 38),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "cockroachdb",
                 },
                ],
                position: (182, 46),
               },
              ],
              position: (182, 43),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "cockroachdb",
                   position: (183, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (184, 9),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "CockroachDB Server User",
                     },
                    ],
                    position: (184, 23),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "uid",
                      position: (185, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (185, 23),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "ids",
                       position: (185, 30),
                      },
                      Raw {
                       content: "uids",
                       position: (185, 34),
                      },
                      Raw {
                       content: "cockroachdb",
                       position: (185, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (186, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (186, 23),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "group",
                       position: (186, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 ],
                 recursive: false,
                 position: (183, 21),
                },
               ),
              ],
              recursive: false,
              position: (182, 61),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (190, 5),
             },
             Raw {
              content: "groups",
              position: (190, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (190, 20),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (190, 35),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "group",
                   position: (190, 39),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "cockroachdb",
                 },
                ],
                position: (190, 48),
               },
              ],
              position: (190, 45),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "cockroachdb",
                   position: (191, 7),
                  },
                  Raw {
                   content: "gid",
                   position: (191, 19),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (191, 25),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "ids",
                    position: (191, 32),
                   },
                   Raw {
                    content: "gids",
                    position: (191, 36),
                   },
                   Raw {
                    content: "cockroachdb",
                    position: (191, 41),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
              position: (190, 63),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "networking",
              position: (194, 5),
             },
             Raw {
              content: "firewall",
              position: (194, 16),
             },
             Raw {
              content: "allowedTCPPorts",
              position: (194, 25),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (194, 43),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "optionals",
                position: (194, 47),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (194, 57),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "openPorts",
                 position: (194, 61),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (195, 9),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "http",
                   position: (195, 13),
                  },
                  Raw {
                   content: "port",
                   position: (195, 18),
                  },
                 ],
                },
                default: None,
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (195, 23),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listen",
                   position: (195, 27),
                  },
                  Raw {
                   content: "port",
                   position: (195, 34),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (195, 7),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (197, 5),
             },
             Raw {
              content: "services",
              position: (197, 13),
             },
             Raw {
              content: "cockroachdb",
              position: (197, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (198, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "CockroachDB Server",
                },
               ],
               position: (198, 25),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "documentation",
                 position: (199, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "man:cockroach(1)",
                  },
                 ],
                 position: (199, 27),
                },
                String {
                 parts: [
                  Raw {
                   content: "https://www.cockroachlabs.com",
                  },
                 ],
                 position: (199, 46),
                },
               ],
               position: (199, 25),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (201, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                  },
                 ],
                 position: (201, 22),
                },
                String {
                 parts: [
                  Raw {
                   content: "time-sync.target",
                  },
                 ],
                 position: (201, 39),
                },
               ],
               position: (201, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (202, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "time-sync.target",
                  },
                 ],
                 position: (202, 22),
                },
               ],
               position: (202, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (203, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (203, 22),
                },
               ],
               position: (203, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "unitConfig",
                 position: (205, 9),
                },
                Raw {
                 content: "RequiresMountsFor",
                 position: (205, 20),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/var/lib/cockroachdb",
                },
               ],
               position: (205, 40),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (207, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (208, 13),
                   },
                  ],
                 },
                 Variable {
                  identifier: "startupCommand",
                  position: (208, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (209, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "notify",
                   },
                  ],
                  position: (209, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (210, 13),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (210, 20),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "user",
                     position: (210, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StateDirectory",
                    position: (211, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cockroachdb",
                   },
                  ],
                  position: (211, 30),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StateDirectoryMode",
                    position: (212, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0700",
                   },
                  ],
                  position: (212, 34),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (214, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                   },
                  ],
                  position: (214, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "TimeoutStopSec",
                    position: (218, 13),
                   },
                  ],
                 },
                 Int {
                  value: 60,
                  position: (218, 30),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RestartSec",
                    position: (219, 13),
                   },
                  ],
                 },
                 Int {
                  value: 10,
                  position: (219, 26),
                 },
                ),
               ],
               recursive: false,
               position: (208, 11),
              },
             ),
            ],
            recursive: false,
            position: (198, 7),
           },
          ),
         ],
         recursive: false,
         position: (173, 52),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (224, 3),
        },
        Raw {
         content: "maintainers",
         position: (224, 8),
        },
       ],
      },
      With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (224, 27),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (224, 31),
          },
         ],
        },
        default: None,
       },
       target: List {
        elements: [
         Variable {
          identifier: "thoughtpolice",
          position: (224, 46),
         },
        ],
        position: (224, 44),
       },
       position: (224, 22),
      },
     ),
    ],
    recursive: false,
    position: (49, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}