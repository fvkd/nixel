---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "modulesPath",
    default: None,
   },
   DestructuredArgument {
    identifier: "extraModules",
    default: None,
   },
   DestructuredArgument {
    identifier: "baseModules",
    default: None,
   },
   DestructuredArgument {
    identifier: "modules",
    default: None,
   },
   DestructuredArgument {
    identifier: "utils",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "options",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "documentation",
         position: (7, 16),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "allOpts",
        position: (8, 3),
       },
      ],
     },
     Variable {
      identifier: "options",
      position: (8, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "extraDocModules",
        position: (11, 3),
       },
      ],
     },
     List {
      elements: [
       Path {
        parts: [
         Raw {
          content: "../virtualisation/qemu-vm.nix",
         },
        ],
        position: (11, 23),
       },
      ],
      position: (11, 21),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "canCacheDocs",
        position: (13, 3),
       },
      ],
     },
     Function {
      argument: Simple {
       identifier: "m",
      },
      definition: LetIn {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "f",
            position: (15, 7),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "import",
           position: (15, 11),
          },
          arguments: [
           Variable {
            identifier: "m",
            position: (15, 18),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "instance",
            position: (16, 7),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "f",
           position: (16, 18),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrs",
             position: (16, 21),
            },
            arguments: [
             Function {
              argument: Simple {
               identifier: "n",
              },
              definition: Function {
               argument: Simple {
                identifier: "_",
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "abort",
                 position: (16, 37),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "evaluating ",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "n",
                     position: (16, 57),
                    },
                   },
                   Raw {
                    content: " for `meta` failed",
                   },
                  ],
                  position: (16, 43),
                 },
                ],
               },
               position: (16, 34),
              },
              position: (16, 31),
             },
             FunctionApplication {
              function: Variable {
               identifier: "functionArgs",
               position: (16, 81),
              },
              arguments: [
               Variable {
                identifier: "f",
                position: (16, 94),
               },
              ],
             },
            ],
           },
          ],
         },
        ),
       ],
       target: BinaryOperation {
        operator: LogicalAnd,
        operands: [
         BinaryOperation {
          operator: LogicalAnd,
          operands: [
           BinaryOperation {
            operator: LogicalAnd,
            operands: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (18, 7),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nixos",
                   position: (18, 11),
                  },
                  Raw {
                   content: "options",
                   position: (18, 17),
                  },
                  Raw {
                   content: "splitBuild",
                   position: (18, 25),
                  },
                 ],
                },
                default: None,
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "builtins",
                  position: (19, 12),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "isPath",
                    position: (19, 21),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Variable {
                  identifier: "m",
                  position: (19, 28),
                 },
                ],
               },
              ],
              position: (19, 9),
             },
             FunctionApplication {
              function: Variable {
               identifier: "isFunction",
               position: (20, 12),
              },
              arguments: [
               Variable {
                identifier: "f",
                position: (20, 23),
               },
              ],
             },
            ],
            position: (20, 9),
           },
           HasProperty {
            expression: Variable {
             identifier: "instance",
             position: (21, 12),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "options",
               position: (21, 23),
              },
             ],
            },
            position: (21, 21),
           },
          ],
          position: (21, 9),
         },
         PropertyAccess {
          expression: Variable {
           identifier: "instance",
           position: (22, 12),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "meta",
             position: (22, 21),
            },
            Raw {
             content: "buildDocsInSandbox",
             position: (22, 26),
            },
           ],
          },
          default: Some(
           Variable {
            identifier: "true",
            position: (22, 48),
           },
          ),
         },
        ],
        position: (22, 9),
       },
       position: (14, 5),
      },
      position: (13, 18),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "docModules",
        position: (24, 3),
       },
      ],
     },
     LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "p",
           position: (26, 7),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "partition",
          position: (26, 11),
         },
         arguments: [
          Variable {
           identifier: "canCacheDocs",
           position: (26, 21),
          },
          BinaryOperation {
           operator: Concatenation,
           operands: [
            Variable {
             identifier: "baseModules",
             position: (26, 35),
            },
            Variable {
             identifier: "extraDocModules",
             position: (26, 50),
            },
           ],
           position: (26, 47),
          },
         ],
        },
       ),
      ],
      target: Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "lazy",
            position: (29, 9),
           },
          ],
         },
         PropertyAccess {
          expression: Variable {
           identifier: "p",
           position: (29, 16),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "right",
             position: (29, 18),
            },
           ],
          },
          default: None,
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "eager",
            position: (30, 9),
           },
          ],
         },
         BinaryOperation {
          operator: Concatenation,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "p",
             position: (30, 17),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "wrong",
               position: (30, 19),
              },
             ],
            },
            default: None,
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionals",
             position: (30, 28),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (30, 38),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "nixos",
                 position: (30, 42),
                },
                Raw {
                 content: "includeAllModules",
                 position: (30, 48),
                },
               ],
              },
              default: None,
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               Variable {
                identifier: "extraModules",
                position: (30, 67),
               },
               Variable {
                identifier: "modules",
                position: (30, 83),
               },
              ],
              position: (30, 80),
             },
            ],
           },
          ],
          position: (30, 25),
         },
        ),
       ],
       recursive: false,
       position: (28, 7),
      },
      position: (25, 5),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "manual",
        position: (33, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (33, 12),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "../../doc/manual",
         },
        ],
        position: (33, 19),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "pkgs",
            position: (34, 13),
           },
           Raw {
            content: "config",
            position: (34, 18),
           },
          ],
         },
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "version",
             position: (35, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (35, 15),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "system",
              position: (35, 22),
             },
             Raw {
              content: "nixos",
              position: (35, 29),
             },
             Raw {
              content: "release",
              position: (35, 35),
             },
            ],
           },
           default: None,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "revision",
             position: (36, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "release-",
            },
            Expression {
             expression: Variable {
              identifier: "version",
              position: (36, 27),
             },
            },
           ],
           position: (36, 16),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraSources",
             position: (37, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (37, 20),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "nixos",
              position: (37, 24),
             },
             Raw {
              content: "extraModuleSources",
              position: (37, 30),
             },
            ],
           },
           default: None,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (38, 5),
            },
           ],
          },
          LetIn {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "scrubbedEval",
                position: (40, 9),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "evalModules",
               position: (40, 24),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "modules",
                     position: (41, 11),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    List {
                     elements: [
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "_module",
                            position: (42, 13),
                           },
                           Raw {
                            content: "check",
                            position: (42, 21),
                           },
                          ],
                         },
                         Variable {
                          identifier: "false",
                          position: (42, 29),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (41, 23),
                      },
                     ],
                     position: (41, 21),
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "docModules",
                      position: (43, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "eager",
                        position: (43, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                   position: (43, 15),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "specialArgs",
                     position: (44, 11),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "pkgs",
                        position: (45, 13),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "scrubDerivations",
                       position: (45, 20),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "pkgs",
                         },
                        ],
                        position: (45, 37),
                       },
                       Variable {
                        identifier: "pkgs",
                        position: (45, 44),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "options",
                        position: (48, 13),
                       },
                      ],
                     },
                     Variable {
                      identifier: "allOpts",
                      position: (48, 23),
                     },
                    ),
                    Inherit {
                     from: None,
                     attributes: [
                      Raw {
                       content: "modulesPath",
                       position: (49, 21),
                      },
                      Raw {
                       content: "utils",
                       position: (49, 33),
                      },
                     ],
                    },
                   ],
                   recursive: false,
                   position: (44, 25),
                  },
                 ),
                ],
                recursive: false,
                position: (40, 36),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "scrubDerivations",
                position: (52, 9),
               },
              ],
             },
             Function {
              argument: Simple {
               identifier: "namePrefix",
              },
              definition: Function {
               argument: Simple {
                identifier: "pkgSet",
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "mapAttrs",
                 position: (52, 48),
                },
                arguments: [
                 Function {
                  argument: Simple {
                   identifier: "name",
                  },
                  definition: Function {
                   argument: Simple {
                    identifier: "value",
                   },
                   definition: LetIn {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "wholeName",
                         position: (54, 17),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Expression {
                         expression: Variable {
                          identifier: "namePrefix",
                          position: (54, 32),
                         },
                        },
                        Raw {
                         content: ".",
                        },
                        Expression {
                         expression: Variable {
                          identifier: "name",
                          position: (54, 46),
                         },
                        },
                       ],
                       position: (54, 29),
                      },
                     ),
                    ],
                    target: IfThenElse {
                     predicate: FunctionApplication {
                      function: Variable {
                       identifier: "isAttrs",
                       position: (55, 16),
                      },
                      arguments: [
                       Variable {
                        identifier: "value",
                        position: (55, 24),
                       },
                      ],
                     },
                     then: BinaryOperation {
                      operator: Update,
                      operands: [
                       FunctionApplication {
                        function: Variable {
                         identifier: "scrubDerivations",
                         position: (56, 15),
                        },
                        arguments: [
                         Variable {
                          identifier: "wholeName",
                          position: (56, 32),
                         },
                         Variable {
                          identifier: "value",
                          position: (56, 42),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "optionalAttrs",
                         position: (57, 19),
                        },
                        arguments: [
                         FunctionApplication {
                          function: Variable {
                           identifier: "isDerivation",
                           position: (57, 34),
                          },
                          arguments: [
                           Variable {
                            identifier: "value",
                            position: (57, 47),
                           },
                          ],
                         },
                         Map {
                          bindings: [
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "outPath",
                               position: (57, 56),
                              },
                             ],
                            },
                            String {
                             parts: [
                              Raw {
                               content: "${",
                              },
                              Expression {
                               expression: Variable {
                                identifier: "wholeName",
                                position: (57, 72),
                               },
                              },
                              Raw {
                               content: "}",
                              },
                             ],
                             position: (57, 66),
                            },
                           ),
                          ],
                          recursive: false,
                          position: (57, 54),
                         },
                        ],
                       },
                      ],
                      position: (57, 15),
                     },
                     else_: Variable {
                      identifier: "value",
                      position: (58, 18),
                     },
                     position: (55, 13),
                    },
                    position: (54, 13),
                   },
                   position: (53, 18),
                  },
                  position: (53, 12),
                 },
                 Variable {
                  identifier: "pkgSet",
                  position: (60, 11),
                 },
                ],
               },
               position: (52, 40),
              },
              position: (52, 28),
             },
            ),
           ],
           target: PropertyAccess {
            expression: Variable {
             identifier: "scrubbedEval",
             position: (61, 10),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "options",
               position: (61, 23),
              },
             ],
            },
            default: None,
           },
           position: (39, 7),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "baseOptionsJSON",
             position: (62, 5),
            },
           ],
          },
          LetIn {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "filter",
                position: (64, 9),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "builtins",
                position: (65, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "filterSource",
                  position: (65, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Function {
                argument: Simple {
                 identifier: "n",
                },
                definition: Function {
                 argument: Simple {
                  identifier: "t",
                 },
                 definition: BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   BinaryOperation {
                    operator: Implication,
                    operands: [
                     BinaryOperation {
                      operator: EqualTo,
                      operands: [
                       Variable {
                        identifier: "t",
                        position: (67, 16),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "directory",
                         },
                        ],
                        position: (67, 21),
                       },
                      ],
                      position: (67, 18),
                     },
                     BinaryOperation {
                      operator: NotEqualTo,
                      operands: [
                       FunctionApplication {
                        function: Variable {
                         identifier: "baseNameOf",
                         position: (67, 36),
                        },
                        arguments: [
                         Variable {
                          identifier: "n",
                          position: (67, 47),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "tests",
                         },
                        ],
                        position: (67, 52),
                       },
                      ],
                      position: (67, 49),
                     },
                    ],
                    position: (67, 33),
                   },
                   BinaryOperation {
                    operator: Implication,
                    operands: [
                     BinaryOperation {
                      operator: EqualTo,
                      operands: [
                       Variable {
                        identifier: "t",
                        position: (68, 19),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "file",
                         },
                        ],
                        position: (68, 24),
                       },
                      ],
                      position: (68, 21),
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "hasSuffix",
                       position: (68, 34),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: ".nix",
                         },
                        ],
                        position: (68, 44),
                       },
                       Variable {
                        identifier: "n",
                        position: (68, 51),
                       },
                      ],
                     },
                    ],
                    position: (68, 31),
                   },
                  ],
                  position: (68, 15),
                 },
                 position: (66, 17),
                },
                position: (66, 14),
               },
              ],
             },
            ),
           ],
           target: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (71, 9),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "runCommand",
                position: (71, 14),
               },
              ],
             },
             default: None,
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "lazy-options.json",
               },
              ],
              position: (71, 25),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "libPath",
                   position: (72, 11),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "filter",
                  position: (72, 21),
                 },
                 arguments: [
                  String {
                   parts: [
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "toString",
                       position: (72, 31),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (72, 40),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "path",
                           position: (72, 45),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "/lib",
                    },
                   ],
                   position: (72, 28),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "pkgsLibPath",
                   position: (73, 11),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "filter",
                  position: (73, 25),
                 },
                 arguments: [
                  String {
                   parts: [
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "toString",
                       position: (73, 35),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (73, 44),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "path",
                           position: (73, 49),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "/pkgs/pkgs-lib",
                    },
                   ],
                   position: (73, 32),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nixosPath",
                   position: (74, 11),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "filter",
                  position: (74, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "toString",
                       position: (74, 33),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (74, 42),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "path",
                           position: (74, 47),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "/nixos",
                    },
                   ],
                   position: (74, 30),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "modules",
                   position: (75, 11),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "map",
                  position: (75, 21),
                 },
                 arguments: [
                  Function {
                   argument: Simple {
                    identifier: "p",
                   },
                   definition: String {
                    parts: [
                     Raw {
                      content: "\"",
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "removePrefix",
                        position: (75, 34),
                       },
                       arguments: [
                        String {
                         parts: [
                          Expression {
                           expression: Variable {
                            identifier: "modulesPath",
                            position: (75, 50),
                           },
                          },
                          Raw {
                           content: "/",
                          },
                         ],
                         position: (75, 47),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "toString",
                          position: (75, 66),
                         },
                         arguments: [
                          Variable {
                           identifier: "p",
                           position: (75, 75),
                          },
                         ],
                        },
                       ],
                      },
                     },
                     Raw {
                      content: "\"",
                     },
                    ],
                    position: (75, 29),
                   },
                   position: (75, 26),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "docModules",
                    position: (75, 83),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "lazy",
                      position: (75, 94),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (71, 45),
             },
             String {
              parts: [
               Raw {
                content: "export NIX_STORE_DIR=$TMPDIR/store\nexport NIX_STATE_DIR=$TMPDIR/state\n",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (79, 13),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "buildPackages",
                    position: (79, 18),
                   },
                   Raw {
                    content: "nix",
                    position: (79, 32),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "/bin/nix-instantiate \\\n  --show-trace \\\n  --eval --json --strict \\\n  --argstr libPath \"$libPath\" \\\n  --argstr pkgsLibPath \"$pkgsLibPath\" \\\n  --argstr nixosPath \"$nixosPath\" \\\n  --arg modules \"[ $modules ]\" \\\n  --argstr stateVersion \"",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "options",
                  position: (86, 38),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "system",
                    position: (86, 46),
                   },
                   Raw {
                    content: "stateVersion",
                    position: (86, 53),
                   },
                   Raw {
                    content: "default",
                    position: (86, 66),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "\" \\\n  --argstr release \"",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (87, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "system",
                    position: (87, 40),
                   },
                   Raw {
                    content: "nixos",
                    position: (87, 47),
                   },
                   Raw {
                    content: "release",
                    position: (87, 53),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "\" \\\n  $nixosPath/lib/eval-cacheable-options.nix > $out \\\n  || {\n    echo -en \"\\e[1;31m\"\n    echo 'Cacheable portion of option doc build failed.'\n    echo 'Usually this means that an option attribute that ends up in documentation (eg' \\\n      '`default` or `description`) depends on the restricted module arguments' \\\n      '`config` or `pkgs`.'\n    echo\n    echo 'Rebuild your configuration with `--show-trace` to find the offending' \\\n      'location. Remove the references to restricted arguments (eg by escaping' \\\n      'their antiquotations or adding a `defaultText`) or disable the sandboxed' \\\n      'build for the failing module by setting `meta.buildDocsInSandbox = false`.'\n    echo -en \"\\e[0m\"\n    exit 1\n  } >&2\n",
               },
              ],
              position: (76, 11),
             },
            ],
           },
           position: (63, 7),
          },
         ),
         Inherit {
          from: Some(
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (104, 14),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "nixos",
               position: (104, 18),
              },
              Raw {
               content: "options",
               position: (104, 24),
              },
             ],
            },
            default: None,
           },
          ),
          attributes: [
           Raw {
            content: "warningsAreErrors",
            position: (104, 33),
           },
          ],
         },
        ],
        recursive: true,
        position: (33, 36),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nixos-help",
        position: (108, 3),
       },
      ],
     },
     LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "helpScript",
           position: (109, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (109, 18),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "writeShellScriptBin",
             position: (109, 23),
            },
           ],
          },
          default: None,
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "nixos-help",
            },
           ],
           position: (109, 43),
          },
          String {
           parts: [
            Raw {
             content: "# Finds first executable browser in a colon-separated list.\n# (see how xdg-open defines BROWSER)\nbrowser=\"$(\n  IFS=: ; for b in $BROWSER; do\n    [ -n \"$(type -P \"$b\" || true)\" ] && echo \"$b\" && break\n  done\n)\"\nif [ -z \"$browser\" ]; then\n  browser=\"$(type -P xdg-open || true)\"\n  if [ -z \"$browser\" ]; then\n    browser=\"",
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (120, 22),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "w3m-nographics",
                 position: (120, 27),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "/bin/w3m\"\n  fi\nfi\nexec \"$browser\" ",
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "manual",
               position: (123, 25),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "manualHTMLIndex",
                 position: (123, 32),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "\n",
            },
           ],
           position: (109, 56),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "desktopItem",
           position: (126, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (126, 19),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "makeDesktopItem",
             position: (126, 24),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "name",
                position: (127, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "nixos-manual",
               },
              ],
              position: (127, 14),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "desktopName",
                position: (128, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "NixOS Manual",
               },
              ],
              position: (128, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "genericName",
                position: (129, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "View NixOS documentation in a web browser",
               },
              ],
              position: (129, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "icon",
                position: (130, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "nix-snowflake",
               },
              ],
              position: (130, 14),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "exec",
                position: (131, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "nixos-help",
               },
              ],
              position: (131, 14),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "categories",
                position: (132, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "System",
                 },
                ],
                position: (132, 21),
               },
              ],
              position: (132, 20),
             },
            ),
           ],
           recursive: false,
           position: (126, 40),
          },
         ],
        },
       ),
      ],
      target: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (135, 8),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "symlinkJoin",
           position: (135, 13),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "name",
              position: (136, 7),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "nixos-help",
             },
            ],
            position: (136, 14),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "paths",
              position: (137, 7),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "helpScript",
              position: (138, 9),
             },
             Variable {
              identifier: "desktopItem",
              position: (139, 9),
             },
            ],
            position: (137, 15),
           },
          ),
         ],
         recursive: false,
         position: (135, 25),
        },
       ],
      },
      position: (108, 16),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (146, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (147, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (147, 30),
            },
            String {
             parts: [
              Raw {
               content: "info",
              },
             ],
             position: (147, 41),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (147, 48),
            },
           ],
           position: (147, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "documentation",
              },
             ],
             position: (147, 61),
            },
            String {
             parts: [
              Raw {
               content: "info",
              },
             ],
             position: (147, 77),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (147, 84),
            },
           ],
           position: (147, 59),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (148, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (148, 30),
            },
            String {
             parts: [
              Raw {
               content: "man",
              },
             ],
             position: (148, 41),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (148, 48),
            },
           ],
           position: (148, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "documentation",
              },
             ],
             position: (148, 61),
            },
            String {
             parts: [
              Raw {
               content: "man",
              },
             ],
             position: (148, 77),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (148, 84),
            },
           ],
           position: (148, 59),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (149, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (149, 30),
            },
            String {
             parts: [
              Raw {
               content: "nixosManual",
              },
             ],
             position: (149, 41),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (149, 55),
            },
           ],
           position: (149, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "documentation",
              },
             ],
             position: (149, 68),
            },
            String {
             parts: [
              Raw {
               content: "nixos",
              },
             ],
             position: (149, 84),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (149, 92),
            },
           ],
           position: (149, 66),
          },
         ],
        },
       ],
       position: (146, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (152, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "documentation",
            position: (154, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (156, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (156, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (157, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (157, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (157, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (158, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (158, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (159, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install documentation of packages from\n<option>environment.systemPackages</option> into the generated system path.\n\nSee \"Multiple-output packages\" chapter in the nixpkgs manual for more info.\n",
                   },
                  ],
                  position: (159, 23),
                 },
                ),
               ],
               recursive: false,
               position: (156, 25),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "man",
               position: (168, 7),
              },
              Raw {
               content: "enable",
               position: (168, 11),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (168, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (169, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (169, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (169, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (170, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (170, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (171, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install manual pages.\nThis also includes <literal>man</literal> outputs.\n",
                   },
                  ],
                  position: (171, 23),
                 },
                ),
               ],
               recursive: false,
               position: (168, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "man",
               position: (177, 7),
              },
              Raw {
               content: "generateCaches",
               position: (177, 11),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (177, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (178, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (178, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (178, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (179, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (179, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (180, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to generate the manual page index caches.\nThis allows searching for a page or\nkeyword using utilities like\n<citerefentry>\n  <refentrytitle>apropos</refentrytitle>\n  <manvolnum>1</manvolnum>\n</citerefentry>\nand the <literal>-k</literal> option of\n<citerefentry>\n  <refentrytitle>man</refentrytitle>\n  <manvolnum>1</manvolnum>\n</citerefentry>.\n",
                   },
                  ],
                  position: (180, 23),
                 },
                ),
               ],
               recursive: false,
               position: (177, 37),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "info",
               position: (196, 7),
              },
              Raw {
               content: "enable",
               position: (196, 12),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (196, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (197, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (197, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (197, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (198, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (198, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (199, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install info pages and the <command>info</command> command.\nThis also includes \"info\" outputs.\n",
                   },
                  ],
                  position: (199, 23),
                 },
                ),
               ],
               recursive: false,
               position: (196, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "doc",
               position: (205, 7),
              },
              Raw {
               content: "enable",
               position: (205, 11),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (205, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (206, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (206, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (206, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (207, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (207, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (208, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install documentation distributed in packages' <literal>/share/doc</literal>.\nUsually plain text and/or HTML.\nThis also includes \"doc\" outputs.\n",
                   },
                  ],
                  position: (208, 23),
                 },
                ),
               ],
               recursive: false,
               position: (205, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "dev",
               position: (215, 7),
              },
              Raw {
               content: "enable",
               position: (215, 11),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (215, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (216, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (216, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (216, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (217, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (217, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (218, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install documentation targeted at developers.\n<itemizedlist>\n<listitem><para>This includes man pages targeted at developers if <option>documentation.man.enable</option> is\n          set (this also includes \"devman\" outputs).</para></listitem>\n<listitem><para>This includes info pages targeted at developers if <option>documentation.info.enable</option>\n          is set (this also includes \"devinfo\" outputs).</para></listitem>\n<listitem><para>This includes other pages targeted at developers if <option>documentation.doc.enable</option>\n          is set (this also includes \"devdoc\" outputs).</para></listitem>\n</itemizedlist>\n",
                   },
                  ],
                  position: (218, 23),
                 },
                ),
               ],
               recursive: false,
               position: (215, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nixos",
               position: (231, 7),
              },
              Raw {
               content: "enable",
               position: (231, 13),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (231, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (232, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (232, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (232, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (233, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (233, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (234, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to install NixOS's own documentation.\n<itemizedlist>\n<listitem><para>This includes man pages like\n          <citerefentry><refentrytitle>configuration.nix</refentrytitle>\n          <manvolnum>5</manvolnum></citerefentry> if <option>documentation.man.enable</option> is\n          set.</para></listitem>\n<listitem><para>This includes the HTML manual and the <command>nixos-help</command> command if\n          <option>documentation.doc.enable</option> is set.</para></listitem>\n</itemizedlist>\n",
                   },
                  ],
                  position: (234, 23),
                 },
                ),
               ],
               recursive: false,
               position: (231, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nixos",
               position: (247, 7),
              },
              Raw {
               content: "options",
               position: (247, 13),
              },
              Raw {
               content: "splitBuild",
               position: (247, 21),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (247, 34),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (248, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (248, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (248, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (249, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (249, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (250, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to split the option docs build into a cacheable and an uncacheable part.\nSplitting the build can substantially decrease the amount of time needed to build\nthe manual, but some user modules may be incompatible with this splitting.\n",
                   },
                  ],
                  position: (250, 23),
                 },
                ),
               ],
               recursive: false,
               position: (247, 43),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nixos",
               position: (257, 7),
              },
              Raw {
               content: "options",
               position: (257, 13),
              },
              Raw {
               content: "warningsAreErrors",
               position: (257, 21),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (257, 41),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (258, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (258, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (258, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (259, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (259, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (260, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Treat warning emitted during the option documentation build (eg for missing option\ndescriptions) as errors.\n",
                   },
                  ],
                  position: (260, 23),
                 },
                ),
               ],
               recursive: false,
               position: (257, 50),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nixos",
               position: (266, 7),
              },
              Raw {
               content: "includeAllModules",
               position: (266, 13),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (266, 33),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (267, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (267, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (267, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (268, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (268, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (269, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether the generated NixOS's documentation should include documentation for all\nthe options from all the NixOS modules included in the current\n<literal>configuration.nix</literal>. Disabling this will make the manual\ngenerator to ignore options defined outside of <literal>baseModules</literal>.\n",
                   },
                  ],
                  position: (269, 23),
                 },
                ),
               ],
               recursive: false,
               position: (266, 42),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nixos",
               position: (277, 7),
              },
              Raw {
               content: "extraModuleSources",
               position: (277, 13),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (277, 34),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (278, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (278, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (278, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (278, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "either",
                        position: (278, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (278, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "path",
                         position: (278, 49),
                        },
                       ],
                      },
                      default: None,
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (278, 54),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "str",
                         position: (278, 60),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (279, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (279, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (280, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Which extra NixOS module paths the generated NixOS's documentation should strip\nfrom options.\n",
                   },
                  ],
                  position: (280, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (284, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (284, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "# e.g. with options from modules in ",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{pkgs.customModules}/nix:\n[ pkgs.customModules ]\n",
                     },
                    ],
                    position: (284, 37),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (277, 43),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (154, 21),
         },
        ),
       ],
       recursive: false,
       position: (152, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (294, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (294, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (294, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (294, 21),
           },
          ],
         },
         default: None,
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkMerge",
          position: (294, 29),
         },
         arguments: [
          List {
           elements: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "assertions",
                  position: (296, 7),
                 },
                ],
               },
               List {
                elements: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "assertion",
                       position: (298, 11),
                      },
                     ],
                    },
                    UnaryOperation {
                     operator: Not,
                     operand: BinaryOperation {
                      operator: LogicalAnd,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (298, 25),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "man",
                           position: (298, 29),
                          },
                          Raw {
                           content: "man-db",
                           position: (298, 33),
                          },
                          Raw {
                           content: "enable",
                           position: (298, 40),
                          },
                         ],
                        },
                        default: None,
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (298, 50),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "man",
                           position: (298, 54),
                          },
                          Raw {
                           content: "mandoc",
                           position: (298, 58),
                          },
                          Raw {
                           content: "enable",
                           position: (298, 65),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                      position: (298, 47),
                     },
                     position: (298, 23),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "message",
                       position: (299, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "man-db and mandoc can't be used as the default man page viewer at the same time!\n",
                      },
                     ],
                     position: (299, 21),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (297, 9),
                 },
                ],
                position: (296, 20),
               },
              ),
             ],
             recursive: false,
             position: (295, 5),
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (308, 6),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (308, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "man",
                  position: (308, 15),
                 },
                 Raw {
                  content: "enable",
                  position: (308, 19),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (309, 7),
                   },
                   Raw {
                    content: "pathsToLink",
                    position: (309, 19),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/share/man",
                     },
                    ],
                    position: (309, 35),
                   },
                  ],
                  position: (309, 33),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (310, 7),
                   },
                   Raw {
                    content: "extraOutputsToInstall",
                    position: (310, 19),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "man",
                       },
                      ],
                      position: (310, 45),
                     },
                    ],
                    position: (310, 43),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "optional",
                     position: (310, 56),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (310, 65),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "dev",
                         position: (310, 69),
                        },
                        Raw {
                         content: "enable",
                         position: (310, 73),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "devman",
                       },
                      ],
                      position: (310, 80),
                     },
                    ],
                   },
                  ],
                  position: (310, 53),
                 },
                ),
               ],
               recursive: false,
               position: (308, 26),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (313, 6),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (313, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "info",
                  position: (313, 15),
                 },
                 Raw {
                  content: "enable",
                  position: (313, 20),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (314, 7),
                   },
                   Raw {
                    content: "systemPackages",
                    position: (314, 19),
                   },
                  ],
                 },
                 List {
                  elements: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (314, 38),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "texinfoInteractive",
                       position: (314, 43),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                  position: (314, 36),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (315, 7),
                   },
                   Raw {
                    content: "pathsToLink",
                    position: (315, 19),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/share/info",
                     },
                    ],
                    position: (315, 35),
                   },
                  ],
                  position: (315, 33),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (316, 7),
                   },
                   Raw {
                    content: "extraOutputsToInstall",
                    position: (316, 19),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "info",
                       },
                      ],
                      position: (316, 45),
                     },
                    ],
                    position: (316, 43),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "optional",
                     position: (316, 57),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (316, 66),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "dev",
                         position: (316, 70),
                        },
                        Raw {
                         content: "enable",
                         position: (316, 74),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "devinfo",
                       },
                      ],
                      position: (316, 81),
                     },
                    ],
                   },
                  ],
                  position: (316, 54),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (317, 7),
                   },
                   Raw {
                    content: "extraSetup",
                    position: (317, 19),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "if [ -w $out/share/info ]; then\n  shopt -s nullglob\n  for i in $out/share/info/*.info $out/share/info/*.info.gz; do\n      ",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (321, 17),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "buildPackages",
                        position: (321, 22),
                       },
                       Raw {
                        content: "texinfo",
                        position: (321, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/install-info $i $out/share/info/dir\n  done\nfi\n",
                   },
                  ],
                  position: (317, 32),
                 },
                ),
               ],
               recursive: false,
               position: (313, 27),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (327, 6),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (327, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "doc",
                  position: (327, 15),
                 },
                 Raw {
                  content: "enable",
                  position: (327, 19),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (328, 7),
                   },
                   Raw {
                    content: "pathsToLink",
                    position: (328, 19),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/share/doc",
                     },
                    ],
                    position: (328, 35),
                   },
                  ],
                  position: (328, 33),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (329, 7),
                   },
                   Raw {
                    content: "extraOutputsToInstall",
                    position: (329, 19),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "doc",
                       },
                      ],
                      position: (329, 45),
                     },
                    ],
                    position: (329, 43),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "optional",
                     position: (329, 56),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (329, 65),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "dev",
                         position: (329, 69),
                        },
                        Raw {
                         content: "enable",
                         position: (329, 73),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "devdoc",
                       },
                      ],
                      position: (329, 80),
                     },
                    ],
                   },
                  ],
                  position: (329, 53),
                 },
                ),
               ],
               recursive: false,
               position: (327, 26),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (332, 6),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (332, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nixos",
                  position: (332, 15),
                 },
                 Raw {
                  content: "enable",
                  position: (332, 21),
                 },
                ],
               },
               default: None,
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "system",
                    position: (333, 7),
                   },
                   Raw {
                    content: "build",
                    position: (333, 14),
                   },
                   Raw {
                    content: "manual",
                    position: (333, 20),
                   },
                  ],
                 },
                 Variable {
                  identifier: "manual",
                  position: (333, 29),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (335, 7),
                   },
                   Raw {
                    content: "systemPackages",
                    position: (335, 19),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   List {
                    elements: [],
                    position: (335, 36),
                   },
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     FunctionApplication {
                      function: Variable {
                       identifier: "optional",
                       position: (336, 12),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (336, 21),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "man",
                           position: (336, 25),
                          },
                          Raw {
                           content: "enable",
                           position: (336, 29),
                          },
                         ],
                        },
                        default: None,
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "manual",
                         position: (336, 36),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "manpages",
                           position: (336, 43),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "optionals",
                       position: (337, 12),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (337, 22),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "doc",
                           position: (337, 26),
                          },
                          Raw {
                           content: "enable",
                           position: (337, 30),
                          },
                         ],
                        },
                        default: None,
                       },
                       List {
                        elements: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "manual",
                           position: (337, 39),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "manualHTML",
                             position: (337, 46),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "nixos-help",
                          position: (337, 57),
                         },
                        ],
                        position: (337, 37),
                       },
                      ],
                     },
                    ],
                    position: (337, 9),
                   },
                  ],
                  position: (336, 9),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "services",
                    position: (339, 7),
                   },
                   Raw {
                    content: "getty",
                    position: (339, 16),
                   },
                   Raw {
                    content: "helpLine",
                    position: (339, 22),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mkIf",
                   position: (339, 33),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (339, 38),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "doc",
                       position: (339, 42),
                      },
                      Raw {
                       content: "enable",
                       position: (339, 46),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "\nRun 'nixos-help' for the NixOS manual.",
                     },
                    ],
                    position: (340, 11),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (332, 28),
              },
             ],
            },
           ],
           position: (294, 37),
          },
         ],
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (145, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}