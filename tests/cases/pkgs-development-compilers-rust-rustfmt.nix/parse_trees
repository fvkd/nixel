---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "rustPlatform" (1, 16)
            , := lexemes ","
              , "," (1, 28)
            formals := rules "formal"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "Security" (1, 30)
      } := lexemes "}"
        } "}" (1, 39)
      : := lexemes ":"
        : ":" (1, 40)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "rustPlatform" (3, 1)
                  . := lexemes "."
                    . "." (3, 13)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "buildRustPackage" (3, 14)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 31)
                  { := lexemes "{"
                    { "{" (3, 35)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "INHERIT" "(" "expr" ")" "attrs" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules 
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "pname" (4, 3)
                                      = := lexemes "="
                                        = "=" (4, 9)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (4, 11)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "rustfmt" (4, 12)
                                                    " := lexemes "\""
                                                      " "\"" (4, 19)
                                      ; := lexemes ";"
                                        ; ";" (4, 20)
                                    INHERIT := lexemes "INHERIT"
                                      INHERIT "inherit" (5, 3)
                                    ( := lexemes "("
                                      ( "(" (5, 11)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple" "." "attrpath"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "rustPlatform" (5, 12)
                                                . := lexemes "."
                                                  . "." (5, 24)
                                                attrpath := rules "attrpath" "." "attr"
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "rust" (5, 25)
                                                  . := lexemes "."
                                                    . "." (5, 29)
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "rustc" (5, 30)
                                    ) := lexemes ")"
                                      ) ")" (5, 35)
                                    attrs := rules "attrs" "attr"
                                      attrs := rules "attrs" "attr"
                                        attrs := rules 
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "version" (5, 37)
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "src" (5, 45)
                                    ; := lexemes ";"
                                      ; ";" (5, 48)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "cargoVendorDir" (8, 3)
                                  = := lexemes "="
                                    = "=" (8, 18)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (8, 20)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "vendor" (8, 21)
                                                " := lexemes "\""
                                                  " "\"" (8, 27)
                                  ; := lexemes ";"
                                    ; ";" (8, 28)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "buildAndTestSubdir" (9, 3)
                                = := lexemes "="
                                  = "=" (9, 22)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (9, 24)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "src/tools/rustfmt" (9, 25)
                                              " := lexemes "\""
                                                " "\"" (9, 42)
                                ; := lexemes ";"
                                  ; ";" (9, 43)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "dontUpdateAutotoolsGnuConfigScripts" (12, 3)
                              = := lexemes "="
                                = "=" (12, 39)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "true" (12, 41)
                              ; := lexemes ";"
                                ; ";" (12, 45)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "buildInputs" (14, 3)
                            = := lexemes "="
                              = "=" (14, 15)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "lib" (14, 17)
                                            . := lexemes "."
                                              . "." (14, 20)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "optional" (14, 21)
                                        expr_select := rules "expr_simple" "." "attrpath"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "stdenv" (14, 30)
                                          . := lexemes "."
                                            . "." (14, 36)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "isDarwin" (14, 37)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "Security" (14, 46)
                            ; := lexemes ";"
                              ; ";" (14, 54)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "RUSTC_BOOTSTRAP" (17, 3)
                          = := lexemes "="
                            = "=" (17, 19)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "INT"
                                        INT := lexemes "INT"
                                          INT "1" (17, 21)
                          ; := lexemes ";"
                            ; ";" (17, 22)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "CFG_RELEASE" (21, 3)
                        = := lexemes "="
                          = "=" (21, 15)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "\"" "string_parts" "\""
                                      " := lexemes "\""
                                        " "\"" (21, 17)
                                      string_parts := rules "string_parts_interpolated"
                                        string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                          string_parts_interpolated := rules "DOLLAR_CURLY" "expr" "}"
                                            DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                              DOLLAR_CURLY "${" (21, 18)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "rustPlatform" (21, 20)
                                                        . := lexemes "."
                                                          . "." (21, 32)
                                                        attrpath := rules "attrpath" "." "attr"
                                                          attrpath := rules "attrpath" "." "attr"
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "rust" (21, 33)
                                                            . := lexemes "."
                                                              . "." (21, 37)
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "rustc" (21, 38)
                                                          . := lexemes "."
                                                            . "." (21, 43)
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "version" (21, 44)
                                            } := lexemes "}"
                                              } "}" (21, 51)
                                          STR := lexemes "STR"
                                            STR "-nightly" (21, 52)
                                      " := lexemes "\""
                                        " "\"" (21, 60)
                        ; := lexemes ";"
                          ; ";" (21, 61)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "CFG_RELEASE_CHANNEL" (22, 3)
                      = := lexemes "="
                        = "=" (22, 23)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "\"" "string_parts" "\""
                                    " := lexemes "\""
                                      " "\"" (22, 25)
                                    string_parts := rules "STR"
                                      STR := lexemes "STR"
                                        STR "nightly" (22, 26)
                                    " := lexemes "\""
                                      " "\"" (22, 33)
                      ; := lexemes ";"
                        ; ";" (22, 34)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (24, 3)
                    = := lexemes "="
                      = "=" (24, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (24, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (24, 15)
                        ; := lexemes ";"
                          ; ";" (24, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (24, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "description" (25, 5)
                                            = := lexemes "="
                                              = "=" (25, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (25, 19)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "A tool for formatting Rust code according to style guidelines" (25, 20)
                                                          " := lexemes "\""
                                                            " "\"" (25, 81)
                                            ; := lexemes ";"
                                              ; ";" (25, 82)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (26, 5)
                                          = := lexemes "="
                                            = "=" (26, 14)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (26, 16)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "https://github.com/rust-lang-nursery/rustfmt" (26, 17)
                                                        " := lexemes "\""
                                                          " "\"" (26, 61)
                                          ; := lexemes ";"
                                            ; ";" (26, 62)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (27, 5)
                                        = := lexemes "="
                                          = "=" (27, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "WITH" "expr" ";" "expr_function"
                                            WITH := lexemes "WITH"
                                              WITH "with" (27, 15)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "licenses" (27, 20)
                                            ; := lexemes ";"
                                              ; ";" (27, 28)
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "[" "expr_list" "]"
                                                        [ := lexemes "["
                                                          [ "[" (27, 30)
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules "expr_list" "expr_select"
                                                            expr_list := rules 
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "mit" (27, 32)
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "asl20" (27, 36)
                                                        ] := lexemes "]"
                                                          ] "]" (27, 42)
                                        ; := lexemes ";"
                                          ; ";" (27, 43)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (28, 5)
                                      = := lexemes "="
                                        = "=" (28, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "WITH" "expr" ";" "expr_function"
                                          WITH := lexemes "WITH"
                                            WITH "with" (28, 19)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (28, 24)
                                          ; := lexemes ";"
                                            ; ";" (28, 35)
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (28, 37)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "globin" (28, 39)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "basvandijk" (28, 46)
                                                      ] := lexemes "]"
                                                        ] "]" (28, 57)
                                      ; := lexemes ";"
                                        ; ";" (28, 58)
                                    } := lexemes "}"
                                      } "}" (29, 3)
                    ; := lexemes ";"
                      ; ";" (29, 4)
                  } := lexemes "}"
                    } "}" (30, 1)