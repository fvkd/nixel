---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (14, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nodeCfg",
        position: (17, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (17, 13),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (17, 20),
        },
        Raw {
         content: "munin-node",
         position: (17, 29),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cronCfg",
        position: (18, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (18, 13),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (18, 20),
        },
        Raw {
         content: "munin-cron",
         position: (18, 29),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "muninConf",
        position: (20, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (20, 15),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (20, 20),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "munin.conf",
          position: (20, 31),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "dbdir     /var/lib/munin\nhtmldir   /var/www/munin\nlogdir    /var/log/munin\nrundir    /run/munin\n\n",
          position: (22, 1),
         },
         Expression {
          expression: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (27, 9),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "optionalString",
               position: (27, 13),
              },
             ],
            },
            default: None,
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cronCfg",
                position: (27, 29),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "extraCSS",
                  position: (27, 37),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [],
              },
             ],
             position: (27, 46),
            },
            String {
             parts: [
              Raw {
               content: "staticdir ",
               position: (27, 54),
              },
              Expression {
               expression: Variable {
                identifier: "customStaticDir",
                position: (27, 66),
               },
              },
             ],
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (27, 84),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cronCfg",
            position: (29, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "extraGlobalConfig",
              position: (29, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\n",
          position: (29, 35),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cronCfg",
            position: (31, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "hosts",
              position: (31, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (31, 23),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "nodeConf",
        position: (34, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (34, 14),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (34, 19),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "munin-node.conf",
          position: (34, 30),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "log_level 3\nlog_file Sys::Syslog\nport 4949\nhost *\nbackground 0\nuser root\ngroup root\nhost_name ",
          position: (36, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (43, 19),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "networking",
              position: (43, 26),
             },
             Raw {
              content: "hostName",
              position: (43, 37),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\nsetsid 0\n\n# wrapped plugins by makeWrapper being with dots\nignore_file ^\\.\n\nallow ^::1$\nallow ^127\\.0\\.0\\.1$\n\n",
          position: (43, 46),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "nodeCfg",
            position: (52, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "extraConfig",
              position: (52, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (52, 29),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "pluginConf",
        position: (55, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (55, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (55, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "munin-plugin-conf",
          position: (55, 32),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "[hddtemp_smartctl]\nuser root\ngroup root\n\n[meminfo]\nuser root\ngroup root\n\n[ipmi*]\nuser root\ngroup root\n\n[munin*]\nenv.UPDATE_STATSFILE /var/lib/munin/munin-update.stats\n\n",
          position: (57, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "nodeCfg",
            position: (72, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "extraPluginConfig",
              position: (72, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (72, 35),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "pluginConfDir",
        position: (75, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (75, 19),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "stdenv",
          position: (75, 24),
         },
         Raw {
          content: "mkDerivation",
          position: (75, 31),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (76, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "munin-plugin-conf.d",
             position: (76, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "buildCommand",
             position: (77, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mkdir $out\nln -s ",
             position: (78, 1),
            },
            Expression {
             expression: Variable {
              identifier: "pluginConf",
              position: (79, 15),
             },
            },
            Raw {
             content: " $out/nixos-config\n",
             position: (79, 26),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "internOnePlugin",
        position: (86, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "path",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: String {
        parts: [
         Raw {
          content: "cp -a '",
          position: (87, 6),
         },
         Expression {
          expression: Variable {
           identifier: "path",
           position: (87, 15),
          },
         },
         Raw {
          content: "' '",
          position: (87, 20),
         },
         Expression {
          expression: Variable {
           identifier: "name",
           position: (87, 25),
          },
         },
         Raw {
          content: "'",
          position: (87, 30),
         },
        ],
       },
       position: (86, 27),
      },
      position: (86, 21),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "internManyPlugins",
        position: (93, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "path",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: String {
        parts: [
         Raw {
          content: "find '",
          position: (94, 6),
         },
         Expression {
          expression: Variable {
           identifier: "path",
           position: (94, 14),
          },
         },
         Raw {
          content: "' -type f -perm /a+x -exec cp -a -t . '{}' '+'",
          position: (94, 19),
         },
        ],
       },
       position: (93, 29),
      },
      position: (93, 23),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "internAndFixPlugins",
        position: (98, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "intern-fn",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Function {
        argument: Some(
         "paths",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (99, 5),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "runCommand",
             position: (99, 10),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "name",
           position: (99, 21),
          },
          Map {
           bindings: [],
           recursive: false,
          },
          String {
           parts: [
            Raw {
             content: "mkdir -p \"$out\"\ncd \"$out\"\n",
             position: (100, 1),
            },
            Expression {
             expression: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "lib",
                position: (102, 9),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "concatStringsSep",
                  position: (102, 13),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "\n",
                  position: (102, 31),
                 },
                ],
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (103, 12),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "attrsets",
                    position: (103, 16),
                   },
                   Raw {
                    content: "mapAttrsToList",
                    position: (103, 25),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Variable {
                  identifier: "intern-fn",
                  position: (103, 40),
                 },
                 Variable {
                  identifier: "paths",
                  position: (103, 50),
                 },
                ],
               },
              ],
             },
            },
            Raw {
             content: "\nchmod -R u+w .\nfind . -type f -exec sed -E -i '\n  s,(/usr)?/s?bin/,/run/current-system/sw/bin/,g\n' '{}' '+'\n",
             position: (103, 57),
            },
           ],
          },
         ],
        },
        position: (98, 42),
       },
       position: (98, 31),
      },
      position: (98, 25),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "extraPluginDir",
        position: (113, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "internAndFixPlugins",
       position: (113, 20),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "munin-extra-plugins.d",
          position: (113, 41),
         },
        ],
       },
       Variable {
        identifier: "internOnePlugin",
        position: (114, 5),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "nodeCfg",
         position: (114, 21),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "extraPlugins",
           position: (114, 29),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "extraAutoPluginDir",
        position: (116, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "internAndFixPlugins",
       position: (116, 24),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "munin-extra-auto-plugins.d",
          position: (116, 45),
         },
        ],
       },
       Variable {
        identifier: "internManyPlugins",
        position: (117, 5),
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "builtins",
          position: (118, 6),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "listToAttrs",
            position: (118, 15),
           },
          ],
         },
         default: None,
        },
        arguments: [
         FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (119, 8),
          },
          arguments: [
           Function {
            argument: Some(
             "path",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (120, 18),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "baseNameOf",
                 position: (120, 25),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (120, 36),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "value",
                  position: (120, 42),
                 },
                ],
               },
               Variable {
                identifier: "path",
                position: (120, 50),
               },
              ),
             ],
             recursive: false,
            },
            position: (120, 10),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "nodeCfg",
             position: (121, 9),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "extraAutoPlugins",
               position: (121, 17),
              },
             ],
            },
            default: None,
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "customStaticDir",
        position: (123, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (123, 21),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "runCommand",
          position: (123, 26),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "munin-custom-static-data",
          position: (123, 38),
         },
        ],
       },
       Map {
        bindings: [],
        recursive: false,
       },
       String {
        parts: [
         Raw {
          content: "cp -a \"",
          position: (124, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (124, 14),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "munin",
              position: (124, 19),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/etc/opt/munin/static\" \"$out\"\ncd \"$out\"\nchmod -R u+w .\necho \"",
          position: (124, 25),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cronCfg",
            position: (127, 13),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "extraCSS",
              position: (127, 21),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\" >> style.css\necho \"",
          position: (127, 30),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cronCfg",
            position: (128, 13),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "extraCSS",
              position: (128, 21),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\" >> style-new.css\n",
          position: (128, 30),
         },
        ],
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (134, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (136, 5),
           },
           Raw {
            content: "munin-node",
            position: (136, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (138, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (138, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (139, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (139, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (140, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (140, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (140, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (141, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enable Munin Node agent. Munin node listens on 0.0.0.0 and\nby default accepts connections only from 127.0.0.1 for security reasons.\n\nSee <link xlink:href='http://guide.munin-monitoring.org/en/latest/architecture/index.html' />.\n",
                    position: (142, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (149, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (149, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (150, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (151, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (151, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (151, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (152, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "<filename>munin-node.conf</filename> extra configuration. See\n<link xlink:href='http://guide.munin-monitoring.org/en/latest/reference/munin-node.conf.html' />\n",
                    position: (153, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraPluginConfig",
               position: (158, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (158, 27),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (159, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (160, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (160, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (160, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (161, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "<filename>plugin-conf.d</filename> extra plugin configuration. See\n<link xlink:href='http://guide.munin-monitoring.org/en/latest/plugin/use.html' />\n",
                    position: (162, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (165, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "[fail2ban_*]\nuser root\n",
                    position: (166, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraPlugins",
               position: (171, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (171, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (172, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (173, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (173, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (173, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "path",
                     position: (173, 36),
                    },
                   ],
                  },
                  position: (173, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (174, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Additional Munin plugins to activate. Keys are the name of the plugin\nsymlink, values are the path to the underlying plugin script. You\ncan use the same plugin script multiple times (e.g. for wildcard\nplugins).\n\nNote that these plugins do not participate in autoconfiguration. If\nyou want to autoconfigure additional plugins, use\n<option>services.munin-node.extraAutoPlugins</option>.\n\nPlugins enabled in this manner take precedence over autoconfigured\nplugins.\n\nPlugins will be copied into the Nix store, and it will attempt to\nmodify them to run properly by fixing hardcoded references to\n<literal>/bin</literal>, <literal>/usr/bin</literal>,\n<literal>/sbin</literal>, and <literal>/usr/sbin</literal>.\n",
                    position: (175, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (192, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (192, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  zfs_usage_bigpool = /src/munin-contrib/plugins/zfs/zfs_usage_;\n  zfs_usage_smallpool = /src/munin-contrib/plugins/zfs/zfs_usage_;\n  zfs_list = /src/munin-contrib/plugins/zfs/zfs_list;\n};\n",
                      position: (193, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraAutoPlugins",
               position: (201, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (201, 26),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (202, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (203, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (203, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (203, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "path",
                     position: (203, 35),
                    },
                   ],
                  },
                  position: (203, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (204, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Additional Munin plugins to autoconfigure, using\n<literal>munin-node-configure --suggest</literal>. These should be\nthe actual paths to the plugin files (or directories containing them),\nnot just their names.\n\nIf you want to manually enable individual plugins instead, use\n<option>services.munin-node.extraPlugins</option>.\n\nNote that only plugins that have the 'autoconfig' capability will do\nanything if listed here, since plugins that cannot autoconfigure\nwon't be automatically enabled by\n<literal>munin-node-configure</literal>.\n\nPlugins will be copied into the Nix store, and it will attempt to\nmodify them to run properly by fixing hardcoded references to\n<literal>/bin</literal>, <literal>/usr/bin</literal>,\n<literal>/sbin</literal>, and <literal>/usr/sbin</literal>.\n",
                    position: (205, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (223, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (223, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[\n  /src/munin-contrib/plugins/zfs\n  /src/munin-contrib/plugins/ssh\n];\n",
                      position: (224, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "disabledPlugins",
               position: (231, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (231, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (235, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "munin_stats",
                      position: (235, 22),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (236, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (236, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (236, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (236, 35),
                    },
                   ],
                  },
                  position: (236, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (237, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Munin plugins to disable, even if\n<literal>munin-node-configure --suggest</literal> tries to enable\nthem. To disable a wildcard plugin, use an actual wildcard, as in\nthe example.\n\nmunin_stats is disabled by default as it tries to read\n<literal>/var/log/munin/munin-update.log</literal> for timing\ninformation, and the NixOS build of Munin does not write this file.\n",
                    position: (238, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (247, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "diskstats",
                      position: (247, 22),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "zfs_usage_*",
                      position: (247, 34),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (251, 5),
           },
           Raw {
            content: "munin-cron",
            position: (251, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (253, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (253, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (254, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (254, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (255, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (255, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (255, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (256, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enable munin-cron. Takes care of all heavy lifting to collect data from\nnodes and draws graphs to html. Runs munin-update, munin-limits,\nmunin-graphs and munin-html in that order.\n\nHTML output is in <filename>/var/www/munin/</filename>, configure your\nfavourite webserver to serve static files.\n",
                    position: (257, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraGlobalConfig",
               position: (266, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (266, 27),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (267, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (268, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (268, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (268, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (269, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "<filename>munin.conf</filename> extra global configuration.\nSee <link xlink:href='http://guide.munin-monitoring.org/en/latest/reference/munin.conf.html' />.\nUseful to setup notifications, see\n<link xlink:href='http://guide.munin-monitoring.org/en/latest/tutorial/alert.html' />\n",
                    position: (270, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (275, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "contact.email.command mail -s \"Munin notification for ",
                    position: (276, 1),
                   },
                   Raw {
                    content: "$",
                    position: (276, 65),
                   },
                   Raw {
                    content: "{var:host}\" someone@example.com\n",
                    position: (276, 68),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "hosts",
               position: (280, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (280, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (281, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (282, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (282, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (282, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (283, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Definitions of hosts of nodes to collect data from. Needs at least one\nhost for cron to succeed. See\n<link xlink:href='http://guide.munin-monitoring.org/en/latest/reference/munin.conf.html' />\n",
                    position: (284, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (288, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (288, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "",
                      position: (289, 1),
                     },
                     Raw {
                      content: "''",
                      position: (289, 11),
                     },
                     Raw {
                      content: "\n  [",
                      position: (289, 14),
                     },
                     Raw {
                      content: "$",
                      position: (290, 14),
                     },
                     Raw {
                      content: "{config.networking.hostName}]\n  address localhost\n",
                      position: (290, 17),
                     },
                     Raw {
                      content: "''",
                      position: (292, 11),
                     },
                     Raw {
                      content: "\n",
                      position: (292, 14),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraCSS",
               position: (296, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (296, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (297, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (298, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (298, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (298, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (299, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Custom styling for the HTML that munin-cron generates. This will be\nappended to the CSS files used by munin-cron and will thus take\nprecedence over the builtin styles.\n",
                    position: (300, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (304, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/* A simple dark theme. */\nhtml, body { background: #222222; }\n#header, #footer { background: #333333; }\nimg.i, img.iwarn, img.icrit, img.iunkn {\n  filter: invert(100%) hue-rotate(-30deg);\n}\n",
                    position: (305, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (318, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (318, 12),
       },
       arguments: [
        List {
         elements: [
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (318, 23),
           },
           arguments: [
            BinaryOperation {
             operator: LogicalOr,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "nodeCfg",
                position: (318, 29),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (318, 37),
                 },
                ],
               },
               default: None,
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cronCfg",
                position: (318, 47),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (318, 55),
                 },
                ],
               },
               default: None,
              },
             ],
             position: (318, 44),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (320, 5),
                 },
                 Raw {
                  content: "systemPackages",
                  position: (320, 17),
                 },
                ],
               },
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (320, 36),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "munin",
                     position: (320, 41),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "users",
                  position: (322, 5),
                 },
                 Raw {
                  content: "users",
                  position: (322, 11),
                 },
                 Raw {
                  content: "munin",
                  position: (322, 17),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (323, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Munin monitoring user",
                     position: (323, 22),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "group",
                     position: (324, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "munin",
                     position: (324, 16),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "uid",
                     position: (325, 7),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (325, 13),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "ids",
                      position: (325, 20),
                     },
                     Raw {
                      content: "uids",
                      position: (325, 24),
                     },
                     Raw {
                      content: "munin",
                      position: (325, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "home",
                     position: (326, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/var/lib/munin",
                     position: (326, 15),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "users",
                  position: (329, 5),
                 },
                 Raw {
                  content: "groups",
                  position: (329, 11),
                 },
                 Raw {
                  content: "munin",
                  position: (329, 18),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "gid",
                     position: (330, 7),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (330, 13),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "ids",
                      position: (330, 20),
                     },
                     Raw {
                      content: "gids",
                      position: (330, 24),
                     },
                     Raw {
                      content: "munin",
                      position: (330, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                ],
                recursive: false,
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (333, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "nodeCfg",
              position: (333, 12),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (333, 20),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (335, 5),
                 },
                 Raw {
                  content: "services",
                  position: (335, 13),
                 },
                 Raw {
                  content: "munin-node",
                  position: (335, 22),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (336, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Munin Node",
                     position: (336, 22),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "after",
                     position: (337, 7),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "network.target",
                       position: (337, 18),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "wantedBy",
                     position: (338, 7),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "multi-user.target",
                       position: (338, 21),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (339, 7),
                    },
                   ],
                  },
                  With {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (339, 19),
                   },
                   target: List {
                    elements: [
                     Variable {
                      identifier: "munin",
                      position: (339, 27),
                     },
                     Variable {
                      identifier: "smartmontools",
                      position: (339, 33),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "/run/current-system/sw",
                        position: (339, 48),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "/run/wrappers",
                        position: (339, 73),
                       },
                      ],
                     },
                    ],
                   },
                   position: (339, 14),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "environment",
                     position: (340, 7),
                    },
                    Raw {
                     content: "MUNIN_LIBDIR",
                     position: (340, 19),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (340, 37),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "munin",
                         position: (340, 42),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/lib",
                     position: (340, 48),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "environment",
                     position: (341, 7),
                    },
                    Raw {
                     content: "MUNIN_PLUGSTATE",
                     position: (341, 19),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/run/munin",
                     position: (341, 38),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "environment",
                     position: (342, 7),
                    },
                    Raw {
                     content: "MUNIN_LOGDIR",
                     position: (342, 19),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/var/log/munin",
                     position: (342, 35),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "preStart",
                     position: (343, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "echo \"Updating munin plugins...\"\n\nmkdir -p /etc/munin/plugins\nrm -rf /etc/munin/plugins/*\n\n# Autoconfigure builtin plugins\n",
                     position: (344, 1),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (350, 11),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "munin",
                         position: (350, 16),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/bin/munin-node-configure --suggest --shell --families contrib,auto,manual --config ",
                     position: (350, 22),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "nodeConf",
                      position: (350, 108),
                     },
                    },
                    Raw {
                     content: " --libdir=",
                     position: (350, 117),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (350, 129),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "munin",
                         position: (350, 134),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/lib/plugins --servicedir=/etc/munin/plugins --sconfdir=",
                     position: (350, 140),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "pluginConfDir",
                      position: (350, 198),
                     },
                    },
                    Raw {
                     content: " 2>/dev/null | ",
                     position: (350, 212),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (350, 229),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "bash",
                         position: (350, 234),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/bin/bash\n\n# Autoconfigure extra plugins\n",
                     position: (350, 239),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (353, 11),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "munin",
                         position: (353, 16),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/bin/munin-node-configure --suggest --shell --families contrib,auto,manual --config ",
                     position: (353, 22),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "nodeConf",
                      position: (353, 108),
                     },
                    },
                    Raw {
                     content: " --libdir=",
                     position: (353, 117),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "extraAutoPluginDir",
                      position: (353, 129),
                     },
                    },
                    Raw {
                     content: " --servicedir=/etc/munin/plugins --sconfdir=",
                     position: (353, 148),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "pluginConfDir",
                      position: (353, 194),
                     },
                    },
                    Raw {
                     content: " 2>/dev/null | ",
                     position: (353, 208),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (353, 225),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "bash",
                         position: (353, 230),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/bin/bash\n\n",
                     position: (353, 235),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "lib",
                        position: (355, 11),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "optionalString",
                          position: (355, 15),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "nodeCfg",
                           position: (355, 31),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "extraPlugins",
                             position: (355, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                         Map {
                          bindings: [],
                          recursive: false,
                         },
                        ],
                        position: (355, 52),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "# Link in manually enabled plugins\nln -f -s -t /etc/munin/plugins ",
                          position: (356, 1),
                         },
                         Expression {
                          expression: Variable {
                           identifier: "extraPluginDir",
                           position: (357, 46),
                          },
                         },
                         Raw {
                          content: "/*\n",
                          position: (357, 61),
                         },
                        ],
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n\n",
                     position: (358, 14),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "lib",
                        position: (360, 11),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "optionalString",
                          position: (360, 15),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "nodeCfg",
                           position: (360, 31),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "disabledPlugins",
                             position: (360, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                         List {
                          elements: [],
                         },
                        ],
                        position: (360, 55),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "# Disable plugins\ncd /etc/munin/plugins\nrm -f ",
                          position: (361, 1),
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "toString",
                            position: (363, 21),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "nodeCfg",
                              position: (363, 30),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "disabledPlugins",
                                position: (363, 38),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                         Raw {
                          content: "\n",
                          position: (363, 54),
                         },
                        ],
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n",
                     position: (364, 14),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (366, 7),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ExecStart",
                        position: (367, 9),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (367, 24),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "munin",
                            position: (367, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/sbin/munin-node --config ",
                        position: (367, 35),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "nodeConf",
                         position: (367, 63),
                        },
                       },
                       Raw {
                        content: " --servicedir /etc/munin/plugins/ --sconfdir=",
                        position: (367, 72),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "pluginConfDir",
                         position: (367, 119),
                        },
                       },
                      ],
                     },
                    ),
                   ],
                   recursive: false,
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (372, 5),
                 },
                 Raw {
                  content: "tmpfiles",
                  position: (372, 13),
                 },
                 Raw {
                  content: "rules",
                  position: (372, 22),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "d /run/munin 0755 munin munin -",
                    position: (372, 33),
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (374, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cronCfg",
              position: (374, 12),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (374, 20),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "fonts",
                  position: (378, 5),
                 },
                 Raw {
                  content: "fonts",
                  position: (378, 11),
                 },
                ],
               },
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (378, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "dejavu_fonts",
                     position: (378, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (380, 5),
                 },
                 Raw {
                  content: "timers",
                  position: (380, 13),
                 },
                 Raw {
                  content: "munin-cron",
                  position: (380, 20),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (381, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "batch Munin master programs",
                     position: (381, 22),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "wantedBy",
                     position: (382, 7),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "timers.target",
                       position: (382, 21),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "timerConfig",
                     position: (383, 7),
                    },
                    Raw {
                     content: "OnCalendar",
                     position: (383, 19),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "*:0/5",
                     position: (383, 33),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (386, 5),
                 },
                 Raw {
                  content: "services",
                  position: (386, 13),
                 },
                 Raw {
                  content: "munin-cron",
                  position: (386, 22),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (387, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "batch Munin master programs",
                     position: (387, 22),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "unitConfig",
                     position: (388, 7),
                    },
                    Raw {
                     content: "Documentation",
                     position: (388, 18),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "man:munin-cron(8)",
                     position: (388, 35),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (390, 7),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Type",
                        position: (391, 9),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "oneshot",
                        position: (391, 17),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "User",
                        position: (392, 9),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "munin",
                        position: (392, 17),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ExecStart",
                        position: (393, 9),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (393, 24),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "munin",
                            position: (393, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/munin-cron --config ",
                        position: (393, 35),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "muninConf",
                         position: (393, 62),
                        },
                       },
                      ],
                     },
                    ),
                   ],
                   recursive: false,
                  },
                 ),
                ],
                recursive: false,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (397, 5),
                 },
                 Raw {
                  content: "tmpfiles",
                  position: (397, 13),
                 },
                 Raw {
                  content: "rules",
                  position: (397, 22),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "d /run/munin 0755 munin munin -",
                    position: (398, 8),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "d /var/log/munin 0755 munin munin -",
                    position: (399, 8),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "d /var/www/munin 0755 munin munin -",
                    position: (400, 8),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "d /var/lib/munin 0755 munin munin -",
                    position: (401, 8),
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
         ],
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (16, 1),
  },
  position: (14, 1),
 },
 position: (1, 1),
}