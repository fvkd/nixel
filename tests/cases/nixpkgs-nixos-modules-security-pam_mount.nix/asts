---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "security",
         position: (6, 16),
        },
        Raw {
         content: "pam",
         position: (6, 25),
        },
        Raw {
         content: "mount",
         position: (6, 29),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "anyPamMount",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "any",
       position: (8, 17),
      },
      arguments: [
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "attrByPath",
          position: (8, 22),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "pamMount",
               position: (8, 35),
              },
             ],
             position: (8, 34),
            },
           ],
           position: (8, 33),
          },
          Variable {
           identifier: "false",
           position: (8, 46),
          },
         ],
        },
        position: (8, 21),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "attrValues",
          position: (8, 54),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "config",
            position: (8, 65),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "security",
              position: (8, 72),
             },
             Raw {
              content: "pam",
              position: (8, 81),
             },
             Raw {
              content: "services",
              position: (8, 85),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (8, 53),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (12, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "security",
            position: (14, 5),
           },
           Raw {
            content: "pam",
            position: (14, 14),
           },
           Raw {
            content: "mount",
            position: (14, 18),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (15, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (15, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (16, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (16, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (16, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (17, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (17, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (18, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Enable PAM mount system to mount fileystems on user login.\n",
                    position: (19, 1),
                   },
                  ],
                  position: (18, 23),
                 },
                },
               ],
               recursive: false,
               position: (15, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraVolumes",
               position: (23, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (23, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (24, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (24, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (24, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (24, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (25, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (25, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (26, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of volume definitions for pam_mount.\nFor more information, visit <link\nxlink:href=\"http://pam-mount.sourceforge.net/pam_mount.conf.5.html\" />.\n",
                    position: (27, 1),
                   },
                  ],
                  position: (26, 23),
                 },
                },
               ],
               recursive: false,
               position: (23, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "additionalSearchPaths",
               position: (33, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (33, 31),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (34, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (34, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (34, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (34, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (34, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (35, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (36, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (36, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.bindfs ]",
                      position: (36, 38),
                     },
                    ],
                    position: (36, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (37, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Additional programs to include in the search path of pam_mount.\nUseful for example if you want to use some FUSE filesystems like bindfs.\n",
                    position: (38, 1),
                   },
                  ],
                  position: (37, 23),
                 },
                },
               ],
               recursive: false,
               position: (33, 40),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "fuseMountOptions",
               position: (43, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (43, 26),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (44, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (44, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (44, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (44, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (44, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (45, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (45, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (46, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (46, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ \"nodev\" \"nosuid\" \"force-user=%(USER)\" \"gid=%(USERGID)\" \"perms=0700\" \"chmod-deny\" \"chown-deny\" \"chgrp-deny\" ]\n",
                      position: (47, 1),
                     },
                    ],
                    position: (46, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Global mount options that apply to every FUSE volume.\nYou can define volume-specific options in the volume definitions.\n",
                    position: (50, 1),
                   },
                  ],
                  position: (49, 23),
                 },
                },
               ],
               recursive: false,
               position: (43, 35),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (14, 26),
         },
        },
       ],
       recursive: false,
       position: (12, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (58, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (58, 12),
       },
       arguments: [
        Parentheses {
         expression: BinaryOperation {
          operator: LogicalOr,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (58, 18),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (58, 22),
              },
             ],
            },
            default: None,
           },
           Variable {
            identifier: "anyPamMount",
            position: (58, 32),
           },
          ],
          position: (58, 29),
         },
         position: (58, 17),
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (60, 5),
             },
             Raw {
              content: "systemPackages",
              position: (60, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (60, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "pam_mount",
                 position: (60, 41),
                },
               ],
              },
              default: None,
             },
            ],
            position: (60, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (61, 5),
             },
             Raw {
              content: "etc",
              position: (61, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "security/pam_mount.conf.xml",
                 position: (61, 22),
                },
               ],
               position: (61, 21),
              },
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (62, 7),
                },
               ],
              },
              to: LetIn {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "extraUserVolumes",
                    position: (64, 11),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "filterAttrs",
                   position: (64, 30),
                  },
                  arguments: [
                   Parentheses {
                    expression: Function {
                     argument: Simple {
                      identifier: "n",
                     },
                     definition: Function {
                      argument: Simple {
                       identifier: "u",
                      },
                      definition: BinaryOperation {
                       operator: LogicalOr,
                       operands: [
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "u",
                            position: (64, 49),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "cryptHomeLuks",
                              position: (64, 51),
                             },
                            ],
                           },
                           default: None,
                          },
                          Variable {
                           identifier: "null",
                           position: (64, 68),
                          },
                         ],
                         position: (64, 65),
                        },
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "u",
                            position: (64, 76),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "pamMount",
                              position: (64, 78),
                             },
                            ],
                           },
                           default: None,
                          },
                          Map {
                           bindings: [],
                           recursive: false,
                           position: (64, 90),
                          },
                         ],
                         position: (64, 87),
                        },
                       ],
                       position: (64, 73),
                      },
                      position: (64, 46),
                     },
                     position: (64, 43),
                    },
                    position: (64, 42),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (64, 94),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "users",
                       position: (64, 101),
                      },
                      Raw {
                       content: "users",
                       position: (64, 107),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "mkAttr",
                    position: (65, 11),
                   },
                  ],
                 },
                 to: Function {
                  argument: Simple {
                   identifier: "k",
                  },
                  definition: Function {
                   argument: Simple {
                    identifier: "v",
                   },
                   definition: String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "k",
                       position: (65, 30),
                      },
                     },
                     Raw {
                      content: "=\"",
                      position: (65, 32),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "v",
                       position: (65, 36),
                      },
                     },
                     Raw {
                      content: "\"",
                      position: (65, 38),
                     },
                    ],
                    position: (65, 26),
                   },
                   position: (65, 23),
                  },
                  position: (65, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "userVolumeEntry",
                    position: (66, 11),
                   },
                  ],
                 },
                 to: Function {
                  argument: Simple {
                   identifier: "user",
                  },
                  definition: LetIn {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "attrs",
                        position: (67, 13),
                       },
                      ],
                     },
                     to: BinaryOperation {
                      operator: Update,
                      operands: [
                       Map {
                        bindings: [
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "user",
                             position: (68, 15),
                            },
                           ],
                          },
                          to: PropertyAccess {
                           expression: Variable {
                            identifier: "user",
                            position: (68, 22),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "name",
                              position: (68, 27),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "path",
                             position: (69, 15),
                            },
                           ],
                          },
                          to: PropertyAccess {
                           expression: Variable {
                            identifier: "user",
                            position: (69, 22),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "cryptHomeLuks",
                              position: (69, 27),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "mountpoint",
                             position: (70, 15),
                            },
                           ],
                          },
                          to: PropertyAccess {
                           expression: Variable {
                            identifier: "user",
                            position: (70, 28),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "home",
                              position: (70, 33),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                        ],
                        recursive: false,
                        position: (67, 21),
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "user",
                         position: (71, 18),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "pamMount",
                           position: (71, 23),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                      position: (71, 15),
                     },
                    },
                   ],
                   target: String {
                    parts: [
                     Raw {
                      content: "<volume ",
                      position: (73, 14),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "concatStringsSep",
                        position: (73, 24),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: " ",
                           position: (73, 42),
                          },
                         ],
                         position: (73, 41),
                        },
                        Parentheses {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "mapAttrsToList",
                           position: (73, 46),
                          },
                          arguments: [
                           Variable {
                            identifier: "mkAttr",
                            position: (73, 61),
                           },
                           Variable {
                            identifier: "attrs",
                            position: (73, 68),
                           },
                          ],
                         },
                         position: (73, 45),
                        },
                       ],
                      },
                     },
                     Raw {
                      content: " />\n",
                      position: (73, 75),
                     },
                    ],
                    position: (73, 13),
                   },
                   position: (66, 35),
                  },
                  position: (66, 29),
                 },
                },
               ],
               target: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (75, 10),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "writeText",
                    position: (75, 15),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "pam_mount.conf.xml",
                    position: (75, 26),
                   },
                  ],
                  position: (75, 25),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<!DOCTYPE pam_mount SYSTEM \"pam_mount.conf.xml.dtd\">\n<!-- auto generated from Nixos: modules/config/users-groups.nix -->\n<pam_mount>\n<debug enable=\"0\" />\n\n<!-- if activated, requires ofl from hxtools to be present -->\n<logout wait=\"0\" hup=\"no\" term=\"no\" kill=\"no\" />\n<!-- set PATH variable for pam_mount module -->\n<path>",
                    position: (76, 1),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "makeBinPath",
                      position: (85, 19),
                     },
                     arguments: [
                      Parentheses {
                       expression: BinaryOperation {
                        operator: Concatenation,
                        operands: [
                         List {
                          elements: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "pkgs",
                             position: (85, 34),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "util-linux",
                               position: (85, 39),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                          position: (85, 32),
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (85, 55),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "additionalSearchPaths",
                             position: (85, 59),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                        position: (85, 52),
                       },
                       position: (85, 31),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "</path>\n<!-- create mount point if not present -->\n<mkmountpoint enable=\"1\" remove=\"true\" />\n\n<!-- specify the binaries to be called -->\n<fusemount>",
                    position: (85, 82),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (90, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "fuse",
                        position: (90, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/mount.fuse %(VOLUME) %(MNTPT) -o ",
                    position: (90, 34),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "concatStringsSep",
                      position: (90, 74),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: ",",
                         position: (90, 92),
                        },
                       ],
                       position: (90, 91),
                      },
                      Parentheses {
                       expression: BinaryOperation {
                        operator: Concatenation,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (90, 96),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "fuseMountOptions",
                             position: (90, 100),
                            },
                           ],
                          },
                          default: None,
                         },
                         List {
                          elements: [
                           String {
                            parts: [
                             Raw {
                              content: "%(OPTIONS)",
                              position: (90, 123),
                             },
                            ],
                            position: (90, 122),
                           },
                          ],
                          position: (90, 120),
                         },
                        ],
                        position: (90, 117),
                       },
                       position: (90, 95),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "</fusemount>\n<cryptmount>",
                    position: (90, 138),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (91, 25),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "pam_mount",
                        position: (91, 30),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/mount.crypt %(VOLUME) %(MNTPT)</cryptmount>\n<cryptumount>",
                    position: (91, 40),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (92, 26),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "pam_mount",
                        position: (92, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/umount.crypt %(MNTPT)</cryptumount>\n<pmvarrun>",
                    position: (92, 41),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (93, 23),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "pam_mount",
                        position: (93, 28),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/pmvarrun -u %(USER) -o %(OPERATION)</pmvarrun>\n\n",
                    position: (93, 38),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "concatStrings",
                      position: (95, 13),
                     },
                     arguments: [
                      Parentheses {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "map",
                         position: (95, 28),
                        },
                        arguments: [
                         Variable {
                          identifier: "userVolumeEntry",
                          position: (95, 32),
                         },
                         Parentheses {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "attrValues",
                            position: (95, 49),
                           },
                           arguments: [
                            Variable {
                             identifier: "extraUserVolumes",
                             position: (95, 60),
                            },
                           ],
                          },
                          position: (95, 48),
                         },
                        ],
                       },
                       position: (95, 27),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\n",
                    position: (95, 79),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "concatStringsSep",
                      position: (96, 13),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "\n",
                         position: (96, 31),
                        },
                       ],
                       position: (96, 30),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (96, 35),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "extraVolumes",
                          position: (96, 39),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\n</pam_mount>\n",
                    position: (96, 52),
                   },
                  ],
                  position: (75, 46),
                 },
                ],
               },
               position: (63, 9),
              },
             },
            ],
            recursive: false,
            position: (61, 53),
           },
          },
         ],
         recursive: false,
         position: (58, 45),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (11, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}