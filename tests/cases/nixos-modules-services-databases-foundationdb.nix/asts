---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "foundationdb",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "pkg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "package",
         position: (7, 13),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "initialIpAddr",
        position: (10, 3),
       },
      ],
     },
     to: IfThenElse {
      predicate: BinaryOperation {
       operator: NotEqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (10, 23),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "publicAddress",
            position: (10, 27),
           },
          ],
         },
         default: None,
        },
        String {
         parts: [
          Raw {
           content: "auto",
           position: (10, 45),
          },
         ],
         position: (10, 44),
        },
       ],
       position: (10, 41),
      },
      then: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (10, 57),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "publicAddress",
          position: (10, 61),
         },
        ],
       },
       default: None,
      },
      else_: String {
       parts: [
        Raw {
         content: "127.0.0.1",
         position: (10, 81),
        },
       ],
       position: (10, 80),
      },
      position: (10, 19),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fdbServers",
        position: (12, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "n",
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "concatStringsSep",
        position: (13, 5),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "\n",
           position: (13, 23),
          },
         ],
         position: (13, 22),
        },
        FunctionApplication {
         function: Variable {
          identifier: "map",
          position: (13, 28),
         },
         arguments: [
          Function {
           argument: Simple {
            identifier: "x",
           },
           definition: String {
            parts: [
             Raw {
              content: "[fdbserver.",
              position: (13, 37),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (13, 50),
               },
               arguments: [
                BinaryOperation {
                 operator: Addition,
                 operands: [
                  Variable {
                   identifier: "x",
                   position: (13, 60),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (13, 62),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listenPortStart",
                      position: (13, 66),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (13, 61),
                },
               ],
              },
             },
             Raw {
              content: "]",
              position: (13, 83),
             },
            ],
            position: (13, 36),
           },
           position: (13, 33),
          },
          FunctionApplication {
           function: Variable {
            identifier: "range",
            position: (13, 88),
           },
           arguments: [
            Int {
             value: 0,
             position: (13, 94),
            },
            BinaryOperation {
             operator: Subtraction,
             operands: [
              Variable {
               identifier: "n",
               position: (13, 97),
              },
              Int {
               value: 1,
               position: (13, 101),
              },
             ],
             position: (13, 99),
            },
           ],
          },
         ],
        },
       ],
      },
      position: (12, 16),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "backupAgents",
        position: (15, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "n",
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "concatStringsSep",
        position: (16, 5),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "\n",
           position: (16, 23),
          },
         ],
         position: (16, 22),
        },
        FunctionApplication {
         function: Variable {
          identifier: "map",
          position: (16, 28),
         },
         arguments: [
          Function {
           argument: Simple {
            identifier: "x",
           },
           definition: String {
            parts: [
             Raw {
              content: "[backup_agent.",
              position: (16, 37),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (16, 53),
               },
               arguments: [
                Variable {
                 identifier: "x",
                 position: (16, 62),
                },
               ],
              },
             },
             Raw {
              content: "]",
              position: (16, 64),
             },
            ],
            position: (16, 36),
           },
           position: (16, 33),
          },
          FunctionApplication {
           function: Variable {
            identifier: "range",
            position: (16, 69),
           },
           arguments: [
            Int {
             value: 1,
             position: (16, 75),
            },
            Variable {
             identifier: "n",
             position: (16, 77),
            },
           ],
          },
         ],
        },
       ],
      },
      position: (15, 18),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "configFile",
        position: (18, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (18, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (18, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "foundationdb.conf",
          position: (18, 32),
         },
        ],
        position: (18, 31),
       },
       String {
        parts: [
         Raw {
          content: "[general]\ncluster_file  = /etc/foundationdb/fdb.cluster\n\n[fdbmonitor]\nrestart_delay = ",
          position: (19, 1),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "toString",
            position: (23, 23),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (23, 32),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "restartDelay",
                position: (23, 36),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\nuser          = ",
          position: (23, 49),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (24, 23),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "user",
              position: (24, 27),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\ngroup         = ",
          position: (24, 32),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (25, 23),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "group",
              position: (25, 27),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\n[fdbserver]\ncommand        = ",
          position: (25, 33),
         },
         Expression {
          expression: Variable {
           identifier: "pkg",
           position: (28, 24),
          },
         },
         Raw {
          content: "/bin/fdbserver\npublic_address = ",
          position: (28, 28),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (29, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "publicAddress",
              position: (29, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: ":$ID\nlisten_address = ",
          position: (29, 42),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (30, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "listenAddress",
              position: (30, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\ndatadir        = ",
          position: (30, 42),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (31, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "dataDir",
              position: (31, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/$ID\nlogdir         = ",
          position: (31, 36),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (32, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "logDir",
              position: (32, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\nlogsize        = ",
          position: (32, 35),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (33, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "logSize",
              position: (33, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\nmaxlogssize    = ",
          position: (33, 36),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (34, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "maxLogSize",
              position: (34, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (34, 39),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (35, 7),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (35, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "class",
                  position: (35, 27),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (35, 36),
              },
             ],
             position: (35, 33),
            },
            String {
             parts: [
              Raw {
               content: "class = ",
               position: (35, 43),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (35, 53),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "class",
                   position: (35, 57),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (35, 42),
            },
           ],
          },
         },
         Raw {
          content: "\nmemory         = ",
          position: (35, 65),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (36, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "memory",
              position: (36, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\nstorage_memory = ",
          position: (36, 35),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (37, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "storageMemory",
              position: (37, 28),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\n",
          position: (37, 42),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (39, 7),
           },
           arguments: [
            FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (39, 23),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "versionAtLeast",
                 position: (39, 27),
                },
               ],
              },
              default: None,
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (39, 42),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (39, 46),
                 },
                 Raw {
                  content: "version",
                  position: (39, 54),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [
                Raw {
                 content: "6.1",
                 position: (39, 63),
                },
               ],
               position: (39, 62),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "trace_format   = ",
               position: (40, 1),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (40, 24),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "traceFormat",
                   position: (40, 28),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\n",
               position: (40, 40),
              },
             ],
             position: (39, 69),
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (41, 8),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (43, 7),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (43, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "tls",
                  position: (43, 27),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (43, 34),
              },
             ],
             position: (43, 31),
            },
            String {
             parts: [
              Raw {
               content: "tls_plugin           = ",
               position: (44, 1),
              },
              Expression {
               expression: Variable {
                identifier: "pkg",
                position: (44, 32),
               },
              },
              Raw {
               content: "/libexec/plugins/FDBLibTLS.so\ntls_certificate_file = ",
               position: (44, 36),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (45, 32),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "tls",
                   position: (45, 36),
                  },
                  Raw {
                   content: "certificate",
                   position: (45, 40),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\ntls_key_file         = ",
               position: (45, 52),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (46, 32),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "tls",
                   position: (46, 36),
                  },
                  Raw {
                   content: "key",
                   position: (46, 40),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\ntls_verify_peers     = ",
               position: (46, 44),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (47, 32),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "tls",
                   position: (47, 36),
                  },
                  Raw {
                   content: "allowedPeers",
                   position: (47, 40),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\n",
               position: (47, 53),
              },
             ],
             position: (43, 40),
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (48, 8),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (50, 7),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (50, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "locality",
                  position: (50, 27),
                 },
                 Raw {
                  content: "machineId",
                  position: (50, 36),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (50, 52),
              },
             ],
             position: (50, 49),
            },
            String {
             parts: [
              Raw {
               content: "locality_machineid=",
               position: (50, 59),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (50, 80),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "locality",
                   position: (50, 84),
                  },
                  Raw {
                   content: "machineId",
                   position: (50, 93),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (50, 58),
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (50, 105),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (51, 7),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (51, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "locality",
                  position: (51, 27),
                 },
                 Raw {
                  content: "zoneId",
                  position: (51, 36),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (51, 52),
              },
             ],
             position: (51, 49),
            },
            String {
             parts: [
              Raw {
               content: "locality_zoneid=",
               position: (51, 59),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (51, 77),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "locality",
                   position: (51, 81),
                  },
                  Raw {
                   content: "zoneId",
                   position: (51, 90),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (51, 58),
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (51, 99),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (52, 7),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (52, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "locality",
                  position: (52, 27),
                 },
                 Raw {
                  content: "datacenterId",
                  position: (52, 36),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (52, 52),
              },
             ],
             position: (52, 49),
            },
            String {
             parts: [
              Raw {
               content: "locality_dcid=",
               position: (52, 59),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (52, 75),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "locality",
                   position: (52, 79),
                  },
                  Raw {
                   content: "datacenterId",
                   position: (52, 88),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (52, 58),
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (52, 103),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (53, 7),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (53, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "locality",
                  position: (53, 27),
                 },
                 Raw {
                  content: "dataHall",
                  position: (53, 36),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (53, 52),
              },
             ],
             position: (53, 49),
            },
            String {
             parts: [
              Raw {
               content: "locality_data_hall=",
               position: (53, 59),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (53, 80),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "locality",
                   position: (53, 84),
                  },
                  Raw {
                   content: "dataHall",
                   position: (53, 93),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (53, 58),
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (53, 104),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "fdbServers",
            position: (55, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (55, 18),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "serverProcesses",
                position: (55, 22),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[backup_agent]\ncommand = ",
          position: (55, 38),
         },
         Expression {
          expression: Variable {
           identifier: "pkg",
           position: (58, 17),
          },
         },
         Raw {
          content: "/libexec/backup_agent\n",
          position: (58, 21),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "backupAgents",
            position: (59, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (59, 20),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "backupProcesses",
                position: (59, 24),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (59, 40),
         },
        ],
        position: (18, 51),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (63, 3),
        },
        Raw {
         content: "services",
         position: (63, 11),
        },
        Raw {
         content: "foundationdb",
         position: (63, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (65, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (65, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "FoundationDB Server",
              position: (65, 30),
             },
            ],
            position: (65, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "package",
            position: (67, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (67, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (68, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (68, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (68, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (69, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The FoundationDB package to use for this server. This must be specified by the user\nin order to ensure migrations and upgrades are controlled appropriately.\n",
                 position: (70, 1),
                },
               ],
               position: (69, 21),
              },
             },
            ],
            recursive: false,
            position: (67, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "publicAddress",
            position: (75, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (75, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (76, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (76, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (76, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (77, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "auto",
                 position: (77, 22),
                },
               ],
               position: (77, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (78, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Publicly visible IP address of the process. Port is determined by process ID",
                 position: (78, 22),
                },
               ],
               position: (78, 21),
              },
             },
            ],
            recursive: false,
            position: (75, 30),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "listenAddress",
            position: (81, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (81, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (82, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (82, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (82, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (83, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "public",
                 position: (83, 22),
                },
               ],
               position: (83, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (84, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Publicly visible IP address of the process. Port is determined by process ID",
                 position: (84, 22),
                },
               ],
               position: (84, 21),
              },
             },
            ],
            recursive: false,
            position: (81, 30),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "listenPortStart",
            position: (87, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (87, 23),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (88, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (88, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "int",
                  position: (88, 29),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (89, 7),
                },
               ],
              },
              to: Int {
               value: 4500,
               position: (89, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (90, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Starting port number for database listening sockets. Every FDB process binds to a\nsubsequent port, to this number reflects the start of the overall range. e.g. having\n8 server processes will use all ports between 4500 and 4507.\n",
                 position: (91, 1),
                },
               ],
               position: (90, 23),
              },
             },
            ],
            recursive: false,
            position: (87, 32),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "openFirewall",
            position: (97, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (97, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (98, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (98, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (98, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (99, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (99, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (100, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Open the firewall ports corresponding to FoundationDB processes and coordinators\nusing <option>config.networking.firewall.*</option>.\n",
                 position: (101, 1),
                },
               ],
               position: (100, 21),
              },
             },
            ],
            recursive: false,
            position: (97, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "dataDir",
            position: (106, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (106, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (107, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (107, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (107, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (108, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/var/lib/foundationdb",
                 position: (108, 22),
                },
               ],
               position: (108, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (109, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Data directory. All cluster data will be put under here.",
                 position: (109, 22),
                },
               ],
               position: (109, 21),
              },
             },
            ],
            recursive: false,
            position: (106, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "logDir",
            position: (112, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (112, 14),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (113, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (113, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (113, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (114, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/var/log/foundationdb",
                 position: (114, 22),
                },
               ],
               position: (114, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (115, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Log directory.",
                 position: (115, 22),
                },
               ],
               position: (115, 21),
              },
             },
            ],
            recursive: false,
            position: (112, 23),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "user",
            position: (118, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (118, 12),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (119, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (119, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (119, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (120, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "foundationdb",
                 position: (120, 22),
                },
               ],
               position: (120, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (121, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "User account under which FoundationDB runs.",
                 position: (121, 22),
                },
               ],
               position: (121, 21),
              },
             },
            ],
            recursive: false,
            position: (118, 21),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "group",
            position: (124, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (124, 13),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (125, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (125, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (125, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (126, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "foundationdb",
                 position: (126, 22),
                },
               ],
               position: (126, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (127, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Group account under which FoundationDB runs.",
                 position: (127, 22),
                },
               ],
               position: (127, 21),
              },
             },
            ],
            recursive: false,
            position: (124, 22),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "class",
            position: (130, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (130, 13),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (131, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (131, 21),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (131, 27),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (131, 35),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "enum",
                     position: (131, 41),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "storage",
                       position: (131, 49),
                      },
                     ],
                     position: (131, 48),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "transaction",
                       position: (131, 59),
                      },
                     ],
                     position: (131, 58),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "stateless",
                       position: (131, 73),
                      },
                     ],
                     position: (131, 72),
                    },
                   ],
                   position: (131, 46),
                  },
                 ],
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (132, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (132, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (133, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Process class",
                 position: (133, 22),
                },
               ],
               position: (133, 21),
              },
             },
            ],
            recursive: false,
            position: (130, 22),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "restartDelay",
            position: (136, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (136, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (137, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (137, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "int",
                  position: (137, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (138, 7),
                },
               ],
              },
              to: Int {
               value: 10,
               position: (138, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (139, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Number of seconds to wait before restarting servers.",
                 position: (139, 22),
                },
               ],
               position: (139, 21),
              },
             },
            ],
            recursive: false,
            position: (136, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "logSize",
            position: (142, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (142, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (143, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (143, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (143, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (144, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "10MiB",
                 position: (144, 22),
                },
               ],
               position: (144, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (145, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Roll over to a new log file after the current log file\nreaches the specified size.\n",
                 position: (146, 1),
                },
               ],
               position: (145, 21),
              },
             },
            ],
            recursive: false,
            position: (142, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maxLogSize",
            position: (151, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (151, 18),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (152, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (152, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (152, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (153, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "100MiB",
                 position: (153, 22),
                },
               ],
               position: (153, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (154, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Delete the oldest log file when the total size of all log\nfiles exceeds the specified size. If set to 0, old log files\nwill not be deleted.\n",
                 position: (155, 1),
                },
               ],
               position: (154, 21),
              },
             },
            ],
            recursive: false,
            position: (151, 27),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "serverProcesses",
            position: (161, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (161, 23),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (162, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (162, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "int",
                  position: (162, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (163, 7),
                },
               ],
              },
              to: Int {
               value: 1,
               position: (163, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (164, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Number of fdbserver processes to run.",
                 position: (164, 22),
                },
               ],
               position: (164, 21),
              },
             },
            ],
            recursive: false,
            position: (161, 32),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "backupProcesses",
            position: (167, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (167, 23),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (168, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (168, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "int",
                  position: (168, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (169, 7),
                },
               ],
              },
              to: Int {
               value: 1,
               position: (169, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (170, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Number of backup_agent processes to run for snapshots.",
                 position: (170, 22),
                },
               ],
               position: (170, 21),
              },
             },
            ],
            recursive: false,
            position: (167, 32),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "memory",
            position: (173, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (173, 14),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (174, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (174, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (174, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (175, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "8GiB",
                 position: (175, 22),
                },
               ],
               position: (175, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (176, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Maximum memory used by the process. The default value is\n<literal>8GiB</literal>. When specified without a unit,\n<literal>MiB</literal> is assumed. This parameter does not\nchange the memory allocation of the program. Rather, it sets\na hard limit beyond which the process will kill itself and\nbe restarted. The default value of <literal>8GiB</literal>\nis double the intended memory usage in the default\nconfiguration (providing an emergency buffer to deal with\nmemory leaks or similar problems). It is not recommended to\ndecrease the value of this parameter below its default\nvalue. It may be increased if you wish to allocate a very\nlarge amount of storage engine memory or cache. In\nparticular, when the <literal>storageMemory</literal>\nparameter is increased, the <literal>memory</literal>\nparameter should be increased by an equal amount.\n",
                 position: (177, 1),
                },
               ],
               position: (176, 21),
              },
             },
            ],
            recursive: false,
            position: (173, 23),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "storageMemory",
            position: (195, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (195, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (196, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (196, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (196, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (197, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "1GiB",
                 position: (197, 22),
                },
               ],
               position: (197, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (198, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Maximum memory used for data storage. The default value is\n<literal>1GiB</literal>. When specified without a unit,\n<literal>MB</literal> is assumed. Clusters using the memory\nstorage engine will be restricted to using this amount of\nmemory per process for purposes of data storage. Memory\noverhead associated with storing the data is counted against\nthis total. If you increase the\n<literal>storageMemory</literal>, you should also increase\nthe <literal>memory</literal> parameter by the same amount.\n",
                 position: (199, 1),
                },
               ],
               position: (198, 21),
              },
             },
            ],
            recursive: false,
            position: (195, 30),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "tls",
            position: (211, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (211, 11),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (212, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (212, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (213, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "FoundationDB Transport Security Layer (TLS) settings.\n",
                 position: (214, 1),
                },
               ],
               position: (213, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (217, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (217, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (217, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (217, 28),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "submodule",
                     position: (217, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "options",
                        position: (218, 9),
                       },
                      ],
                     },
                     to: Map {
                      bindings: [
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "certificate",
                           position: (219, 11),
                          },
                         ],
                        },
                        to: FunctionApplication {
                         function: Variable {
                          identifier: "mkOption",
                          position: (219, 25),
                         },
                         arguments: [
                          Map {
                           bindings: [
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "type",
                                position: (220, 13),
                               },
                              ],
                             },
                             to: PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (220, 20),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (220, 26),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "description",
                                position: (221, 13),
                               },
                              ],
                             },
                             to: String {
                              parts: [
                               Raw {
                                content: "Path to the TLS certificate file. This certificate will\nbe offered to, and may be verified by, clients.\n",
                                position: (222, 1),
                               },
                              ],
                              position: (221, 27),
                             },
                            },
                           ],
                           recursive: false,
                           position: (219, 34),
                          },
                         ],
                        },
                       },
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "key",
                           position: (227, 11),
                          },
                         ],
                        },
                        to: FunctionApplication {
                         function: Variable {
                          identifier: "mkOption",
                          position: (227, 17),
                         },
                         arguments: [
                          Map {
                           bindings: [
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "type",
                                position: (228, 13),
                               },
                              ],
                             },
                             to: PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (228, 20),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (228, 26),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "description",
                                position: (229, 13),
                               },
                              ],
                             },
                             to: String {
                              parts: [
                               Raw {
                                content: "Private key file for the certificate.",
                                position: (229, 28),
                               },
                              ],
                              position: (229, 27),
                             },
                            },
                           ],
                           recursive: false,
                           position: (227, 26),
                          },
                         ],
                        },
                       },
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "allowedPeers",
                           position: (232, 11),
                          },
                         ],
                        },
                        to: FunctionApplication {
                         function: Variable {
                          identifier: "mkOption",
                          position: (232, 26),
                         },
                         arguments: [
                          Map {
                           bindings: [
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "type",
                                position: (233, 13),
                               },
                              ],
                             },
                             to: PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (233, 20),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (233, 26),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "default",
                                position: (234, 13),
                               },
                              ],
                             },
                             to: String {
                              parts: [
                               Raw {
                                content: "Check.Valid=1,Check.Unexpired=1",
                                position: (234, 24),
                               },
                              ],
                              position: (234, 23),
                             },
                            },
                            Binding {
                             from: AttributePath {
                              parts: [
                               Raw {
                                content: "description",
                                position: (235, 13),
                               },
                              ],
                             },
                             to: String {
                              parts: [
                               Raw {
                                content: "\"Peer verification string\". This may be used to adjust which TLS\nclient certificates a server will accept, as a form of user\nauthorization; for example, it may only accept TLS clients who\noffer a certificate abiding by some locality or organization name.\n\nFor more information, please see the FoundationDB documentation.\n",
                                position: (236, 1),
                               },
                              ],
                              position: (235, 27),
                             },
                            },
                           ],
                           recursive: false,
                           position: (232, 35),
                          },
                         ],
                        },
                       },
                      ],
                      recursive: false,
                      position: (218, 19),
                     },
                    },
                   ],
                   recursive: false,
                   position: (217, 45),
                  },
                 ],
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (211, 20),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "locality",
            position: (248, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (248, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (249, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "machineId",
                    position: (250, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (250, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "zoneId",
                    position: (251, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (251, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "datacenterId",
                    position: (252, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (252, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "dataHall",
                    position: (253, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (253, 24),
                 },
                },
               ],
               recursive: false,
               position: (249, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (256, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "FoundationDB locality settings.\n",
                 position: (257, 1),
                },
               ],
               position: (256, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (260, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (260, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "submodule",
                   position: (260, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "options",
                      position: (261, 9),
                     },
                    ],
                   },
                   to: Map {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "machineId",
                         position: (262, 11),
                        },
                       ],
                      },
                      to: FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (262, 23),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "default",
                              position: (263, 13),
                             },
                            ],
                           },
                           to: Variable {
                            identifier: "null",
                            position: (263, 23),
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "type",
                              position: (264, 13),
                             },
                            ],
                           },
                           to: FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (264, 20),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "nullOr",
                                position: (264, 26),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (264, 33),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (264, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "description",
                              position: (265, 13),
                             },
                            ],
                           },
                           to: String {
                            parts: [
                             Raw {
                              content: "Machine identifier key. All processes on a machine should share a\nunique id. By default, processes on a machine determine a unique id to share.\nThis does not generally need to be set.\n",
                              position: (266, 1),
                             },
                            ],
                            position: (265, 27),
                           },
                          },
                         ],
                         recursive: false,
                         position: (262, 32),
                        },
                       ],
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "zoneId",
                         position: (272, 11),
                        },
                       ],
                      },
                      to: FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (272, 20),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "default",
                              position: (273, 13),
                             },
                            ],
                           },
                           to: Variable {
                            identifier: "null",
                            position: (273, 23),
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "type",
                              position: (274, 13),
                             },
                            ],
                           },
                           to: FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (274, 20),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "nullOr",
                                position: (274, 26),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (274, 33),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (274, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "description",
                              position: (275, 13),
                             },
                            ],
                           },
                           to: String {
                            parts: [
                             Raw {
                              content: "Zone identifier key. Processes that share a zone id are\nconsidered non-unique for the purposes of data replication.\nIf unset, defaults to machine id.\n",
                              position: (276, 1),
                             },
                            ],
                            position: (275, 27),
                           },
                          },
                         ],
                         recursive: false,
                         position: (272, 29),
                        },
                       ],
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "datacenterId",
                         position: (282, 11),
                        },
                       ],
                      },
                      to: FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (282, 26),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "default",
                              position: (283, 13),
                             },
                            ],
                           },
                           to: Variable {
                            identifier: "null",
                            position: (283, 23),
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "type",
                              position: (284, 13),
                             },
                            ],
                           },
                           to: FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (284, 20),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "nullOr",
                                position: (284, 26),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (284, 33),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (284, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "description",
                              position: (285, 13),
                             },
                            ],
                           },
                           to: String {
                            parts: [
                             Raw {
                              content: "Data center identifier key. All processes physically located in a\ndata center should share the id. If you are depending on data\ncenter based replication this must be set on all processes.\n",
                              position: (286, 1),
                             },
                            ],
                            position: (285, 27),
                           },
                          },
                         ],
                         recursive: false,
                         position: (282, 35),
                        },
                       ],
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "dataHall",
                         position: (292, 11),
                        },
                       ],
                      },
                      to: FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (292, 22),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "default",
                              position: (293, 13),
                             },
                            ],
                           },
                           to: Variable {
                            identifier: "null",
                            position: (293, 23),
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "type",
                              position: (294, 13),
                             },
                            ],
                           },
                           to: FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (294, 20),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "nullOr",
                                position: (294, 26),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "types",
                               position: (294, 33),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "str",
                                 position: (294, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Binding {
                           from: AttributePath {
                            parts: [
                             Raw {
                              content: "description",
                              position: (295, 13),
                             },
                            ],
                           },
                           to: String {
                            parts: [
                             Raw {
                              content: "Data hall identifier key. All processes physically located in a\ndata hall should share the id. If you are depending on data\nhall based replication this must be set on all processes.\n",
                              position: (296, 1),
                             },
                            ],
                            position: (295, 27),
                           },
                          },
                         ],
                         recursive: false,
                         position: (292, 31),
                        },
                       ],
                      },
                     },
                    ],
                    recursive: false,
                    position: (261, 19),
                   },
                  },
                 ],
                 recursive: false,
                 position: (260, 31),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (248, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraReadWritePaths",
            position: (305, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (305, 27),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (306, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (306, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (307, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (307, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (307, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (307, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "path",
                    position: (307, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (308, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "An extra set of filesystem paths that FoundationDB can read to\nand write from. By default, FoundationDB runs under a heavily\nnamespaced systemd environment without write access to most of\nthe filesystem outside of its data and log directories. By\nadding paths to this list, the set of writeable paths will be\nexpanded. This is useful for allowing e.g. backups to local files,\nwhich must be performed on behalf of the foundationdb service.\n",
                 position: (309, 1),
                },
               ],
               position: (308, 21),
              },
             },
            ],
            recursive: false,
            position: (305, 36),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "pidfile",
            position: (319, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (319, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (320, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (320, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (320, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (321, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/run/foundationdb.pid",
                 position: (321, 22),
                },
               ],
               position: (321, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (322, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Path to pidfile for fdbmonitor.",
                 position: (322, 22),
                },
               ],
               position: (322, 21),
              },
             },
            ],
            recursive: false,
            position: (319, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "traceFormat",
            position: (325, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (325, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (326, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (326, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "enum",
                   position: (326, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "xml",
                     position: (326, 28),
                    },
                   ],
                   position: (326, 27),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "json",
                     position: (326, 34),
                    },
                   ],
                   position: (326, 33),
                  },
                 ],
                 position: (326, 25),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (327, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "xml",
                 position: (327, 18),
                },
               ],
               position: (327, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (328, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Trace logging format.",
                 position: (328, 22),
                },
               ],
               position: (328, 21),
              },
             },
            ],
            recursive: false,
            position: (325, 28),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (63, 35),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (332, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (332, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (332, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (332, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (333, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (334, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "lib",
                     position: (334, 21),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "versionOlder",
                       position: (334, 25),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (334, 38),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "package",
                        position: (334, 42),
                       },
                       Raw {
                        content: "version",
                        position: (334, 50),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "6.1",
                       position: (334, 59),
                      },
                     ],
                     position: (334, 58),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (334, 67),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "traceFormat",
                        position: (334, 71),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "xml",
                       position: (334, 87),
                      },
                     ],
                     position: (334, 86),
                    },
                   ],
                   position: (334, 83),
                  },
                 ],
                 position: (334, 64),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (335, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Addition,
                 operands: [
                  BinaryOperation {
                   operator: Addition,
                   operands: [
                    String {
                     parts: [
                      Raw {
                       content: "          Versions of FoundationDB before 6.1 do not support configurable trace formats (only XML is supported).\nThis option has no effect for version ",
                       position: (336, 1),
                      },
                     ],
                     position: (335, 19),
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (337, 54),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "package",
                        position: (337, 58),
                       },
                       Raw {
                        content: "version",
                        position: (337, 66),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                   position: (337, 52),
                  },
                  String {
                   parts: [
                    Raw {
                     content: ", and enabling it is an error.\n",
                     position: (337, 78),
                    },
                   ],
                   position: (337, 76),
                  },
                 ],
                 position: (337, 74),
                },
               },
              ],
              recursive: false,
              position: (334, 7),
             },
            ],
            position: (333, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (342, 5),
             },
             Raw {
              content: "systemPackages",
              position: (342, 17),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "pkg",
              position: (342, 36),
             },
            ],
            position: (342, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (344, 5),
             },
             Raw {
              content: "users",
              position: (344, 11),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (344, 19),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (344, 34),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "user",
                   position: (344, 38),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "foundationdb",
                  position: (344, 47),
                 },
                ],
                position: (344, 46),
               },
              ],
              position: (344, 43),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "foundationdb",
                   position: (345, 7),
                  },
                 ],
                },
                to: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "description",
                      position: (346, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "FoundationDB User",
                      position: (346, 24),
                     },
                    ],
                    position: (346, 23),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "uid",
                      position: (347, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (347, 23),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "ids",
                       position: (347, 30),
                      },
                      Raw {
                       content: "uids",
                       position: (347, 34),
                      },
                      Raw {
                       content: "foundationdb",
                       position: (347, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "group",
                      position: (348, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (348, 23),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "group",
                       position: (348, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 recursive: false,
                 position: (345, 22),
                },
               },
              ],
              recursive: false,
              position: (344, 62),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (352, 5),
             },
             Raw {
              content: "groups",
              position: (352, 11),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (352, 20),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (352, 35),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "group",
                   position: (352, 39),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "foundationdb",
                  position: (352, 49),
                 },
                ],
                position: (352, 48),
               },
              ],
              position: (352, 45),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "foundationdb",
                   position: (353, 7),
                  },
                  Raw {
                   content: "gid",
                   position: (353, 20),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (353, 26),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "ids",
                    position: (353, 33),
                   },
                   Raw {
                    content: "gids",
                    position: (353, 37),
                   },
                   Raw {
                    content: "foundationdb",
                    position: (353, 42),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              recursive: false,
              position: (352, 64),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "networking",
              position: (356, 5),
             },
             Raw {
              content: "firewall",
              position: (356, 16),
             },
             Raw {
              content: "allowedTCPPortRanges",
              position: (356, 25),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (356, 48),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (356, 53),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "openFirewall",
                 position: (356, 57),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [
               Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "from",
                     position: (357, 11),
                    },
                   ],
                  },
                  to: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (357, 18),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listenPortStart",
                      position: (357, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "to",
                     position: (358, 11),
                    },
                   ],
                  },
                  to: BinaryOperation {
                   operator: Subtraction,
                   operands: [
                    BinaryOperation {
                     operator: Addition,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (358, 17),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "listenPortStart",
                          position: (358, 21),
                         },
                        ],
                       },
                       default: None,
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (358, 39),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "serverProcesses",
                          position: (358, 43),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (358, 37),
                    },
                    Int {
                     value: 1,
                     position: (358, 62),
                    },
                   ],
                   position: (358, 60),
                  },
                 },
                ],
                recursive: false,
                position: (357, 9),
               },
              ],
              position: (357, 7),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (362, 5),
             },
             Raw {
              content: "tmpfiles",
              position: (362, 13),
             },
             Raw {
              content: "rules",
              position: (362, 22),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "d /etc/foundationdb 0755 ",
                position: (363, 8),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (363, 35),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "user",
                    position: (363, 39),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " ",
                position: (363, 44),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (363, 47),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "group",
                    position: (363, 51),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " - -",
                position: (363, 57),
               },
              ],
              position: (363, 7),
             },
             String {
              parts: [
               Raw {
                content: "d '",
                position: (364, 8),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (364, 13),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "dataDir",
                    position: (364, 17),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' 0770 ",
                position: (364, 25),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (364, 34),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "user",
                    position: (364, 38),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " ",
                position: (364, 43),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (364, 46),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "group",
                    position: (364, 50),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " - -",
                position: (364, 56),
               },
              ],
              position: (364, 7),
             },
             String {
              parts: [
               Raw {
                content: "d '",
                position: (365, 8),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (365, 13),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "logDir",
                    position: (365, 17),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' 0770 ",
                position: (365, 24),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (365, 33),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "user",
                    position: (365, 37),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " ",
                position: (365, 42),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (365, 45),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "group",
                    position: (365, 49),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " - -",
                position: (365, 55),
               },
              ],
              position: (365, 7),
             },
             String {
              parts: [
               Raw {
                content: "F '",
                position: (366, 8),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (366, 13),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "pidfile",
                    position: (366, 17),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' - ",
                position: (366, 25),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (366, 31),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "user",
                    position: (366, 35),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " ",
                position: (366, 40),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (366, 43),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "group",
                    position: (366, 47),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: " - -",
                position: (366, 53),
               },
              ],
              position: (366, 7),
             },
            ],
            position: (362, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (369, 5),
             },
             Raw {
              content: "services",
              position: (369, 13),
             },
             Raw {
              content: "foundationdb",
              position: (369, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (370, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "FoundationDB Service",
                 position: (370, 34),
                },
               ],
               position: (370, 33),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (372, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (372, 36),
                  },
                 ],
                 position: (372, 35),
                },
               ],
               position: (372, 33),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (373, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (373, 36),
                  },
                 ],
                 position: (373, 35),
                },
               ],
               position: (373, 33),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "unitConfig",
                 position: (374, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RequiresMountsFor",
                    position: (375, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (375, 34),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "dataDir",
                        position: (375, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " ",
                    position: (375, 46),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (375, 49),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "logDir",
                        position: (375, 53),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (375, 31),
                 },
                },
               ],
               recursive: false,
               position: (375, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (378, 7),
                },
               ],
              },
              to: LetIn {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "rwpaths",
                    position: (379, 13),
                   },
                  ],
                 },
                 to: BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   List {
                    elements: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (379, 25),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "dataDir",
                         position: (379, 29),
                        },
                       ],
                      },
                      default: None,
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (379, 37),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "logDir",
                         position: (379, 41),
                        },
                       ],
                      },
                      default: None,
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (379, 48),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "pidfile",
                         position: (379, 52),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "/etc/foundationdb",
                        position: (379, 61),
                       },
                      ],
                      position: (379, 60),
                     },
                    ],
                    position: (379, 23),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (380, 23),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "extraReadWritePaths",
                       position: (380, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                  position: (380, 20),
                 },
                },
               ],
               target: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "Type",
                     position: (382, 11),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "simple",
                     position: (382, 25),
                    },
                   ],
                   position: (382, 24),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "Restart",
                     position: (383, 11),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "always",
                     position: (383, 25),
                    },
                   ],
                   position: (383, 24),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "RestartSec",
                     position: (384, 11),
                    },
                   ],
                  },
                  to: Int {
                   value: 5,
                   position: (384, 24),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "User",
                     position: (385, 11),
                    },
                   ],
                  },
                  to: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (385, 24),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "user",
                      position: (385, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "Group",
                     position: (386, 11),
                    },
                   ],
                  },
                  to: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (386, 24),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "group",
                      position: (386, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "PIDFile",
                     position: (387, 11),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (387, 27),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "pidfile",
                         position: (387, 31),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   position: (387, 24),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "PermissionsStartOnly",
                     position: (389, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (389, 34),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "TimeoutSec",
                     position: (390, 11),
                    },
                   ],
                  },
                  to: Int {
                   value: 120,
                   position: (390, 34),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "NoNewPrivileges",
                     position: (393, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (393, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "ProtectHome",
                     position: (394, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (394, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "ProtectSystem",
                     position: (395, 11),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "strict",
                     position: (395, 36),
                    },
                   ],
                   position: (395, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "ProtectKernelTunables",
                     position: (396, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (396, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "ProtectControlGroups",
                     position: (397, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (397, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "PrivateTmp",
                     position: (398, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (398, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "PrivateDevices",
                     position: (399, 11),
                    },
                   ],
                  },
                  to: Variable {
                   identifier: "true",
                   position: (399, 35),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "ReadWritePaths",
                     position: (400, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "lib",
                     position: (400, 35),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "concatStringsSep",
                       position: (400, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: " ",
                       position: (400, 57),
                      },
                     ],
                     position: (400, 56),
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "map",
                      position: (400, 61),
                     },
                     arguments: [
                      Function {
                       argument: Simple {
                        identifier: "x",
                       },
                       definition: BinaryOperation {
                        operator: Addition,
                        operands: [
                         String {
                          parts: [
                           Raw {
                            content: "-",
                            position: (400, 70),
                           },
                          ],
                          position: (400, 69),
                         },
                         Variable {
                          identifier: "x",
                          position: (400, 75),
                         },
                        ],
                        position: (400, 73),
                       },
                       position: (400, 66),
                      },
                      Variable {
                       identifier: "rwpaths",
                       position: (400, 78),
                      },
                     ],
                    },
                   ],
                  },
                 },
                ],
                recursive: false,
                position: (382, 9),
               },
               position: (379, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "path",
                 position: (403, 7),
                },
               ],
              },
              to: List {
               elements: [
                Variable {
                 identifier: "pkg",
                 position: (403, 16),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (403, 20),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "coreutils",
                    position: (403, 25),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (403, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "preStart",
                 position: (405, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "if [ ! -f /etc/foundationdb/fdb.cluster ]; then\n    cf=/etc/foundationdb/fdb.cluster\n    desc=$(tr -dc A-Za-z0-9 </dev/urandom 2>/dev/null | head -c8)\n    rand=$(tr -dc A-Za-z0-9 </dev/urandom 2>/dev/null | head -c8)\n    echo ",
                 position: (406, 1),
                },
                Raw {
                 content: "$",
                 position: (410, 18),
                },
                Raw {
                 content: "{desc}:",
                 position: (410, 21),
                },
                Raw {
                 content: "$",
                 position: (410, 28),
                },
                Raw {
                 content: "{rand}@",
                 position: (410, 31),
                },
                Expression {
                 expression: Variable {
                  identifier: "initialIpAddr",
                  position: (410, 40),
                 },
                },
                Raw {
                 content: ":",
                 position: (410, 54),
                },
                Expression {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "builtins",
                    position: (410, 57),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "toString",
                      position: (410, 66),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (410, 75),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "listenPortStart",
                       position: (410, 79),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " > $cf\n    chmod 0664 $cf\n    touch \"",
                 position: (410, 95),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (412, 22),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dataDir",
                     position: (412, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/.first_startup\"\nfi\n",
                 position: (412, 34),
                },
               ],
               position: (405, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "script",
                 position: (416, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "exec fdbmonitor --lockfile ",
                 position: (416, 17),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (416, 46),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "pidfile",
                     position: (416, 50),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: " --conffile ",
                 position: (416, 58),
                },
                Expression {
                 expression: Variable {
                  identifier: "configFile",
                  position: (416, 72),
                 },
                },
               ],
               position: (416, 16),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "postStart",
                 position: (418, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "if [ -e \"",
                 position: (419, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (419, 20),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dataDir",
                     position: (419, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/.first_startup\" ]; then\n  fdbcli --exec \"configure new single ssd\"\n  rm -f \"",
                 position: (419, 32),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (421, 20),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dataDir",
                     position: (421, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/.first_startup\";\nfi\n",
                 position: (421, 32),
                },
               ],
               position: (418, 19),
              },
             },
            ],
            recursive: false,
            position: (369, 37),
           },
          },
         ],
         recursive: false,
         position: (332, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (427, 3),
        },
        Raw {
         content: "doc",
         position: (427, 8),
        },
       ],
      },
      to: Path {
       parts: [
        Raw {
         content: "./foundationdb.xml",
         position: (427, 22),
        },
       ],
       position: (427, 22),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (428, 3),
        },
        Raw {
         content: "maintainers",
         position: (428, 8),
        },
       ],
      },
      to: With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (428, 27),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "maintainers",
           position: (428, 31),
          },
         ],
        },
        default: None,
       },
       target: List {
        elements: [
         Variable {
          identifier: "thoughtpolice",
          position: (428, 46),
         },
        ],
        position: (428, 44),
       },
       position: (428, 22),
      },
     },
    ],
    recursive: false,
    position: (62, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}