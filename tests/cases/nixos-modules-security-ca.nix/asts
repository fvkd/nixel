---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "security",
         position: (7, 16),
        },
        Raw {
         content: "pki",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cacertPackage",
        position: (9, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (9, 19),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "cacert",
          position: (9, 24),
         },
         Raw {
          content: "override",
          position: (9, 31),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "blacklist",
             position: (10, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (10, 17),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "caCertificateBlacklist",
              position: (10, 21),
             },
            ],
           },
           default: None,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraCertificateFiles",
             position: (11, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (11, 29),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "certificateFiles",
              position: (11, 33),
             },
            ],
           },
           default: None,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraCertificateStrings",
             position: (12, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (12, 31),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "certificates",
              position: (12, 35),
             },
            ],
           },
           default: None,
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "caBundle",
        position: (14, 3),
       },
      ],
     },
     String {
      parts: [
       Expression {
        expression: Variable {
         identifier: "cacertPackage",
         position: (14, 17),
        },
       },
       Raw {
        content: "/etc/ssl/certs/ca-bundle.crt",
        position: (14, 31),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (20, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "security",
            position: (22, 5),
           },
           Raw {
            content: "pki",
            position: (22, 14),
           },
           Raw {
            content: "certificateFiles",
            position: (22, 18),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (22, 37),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (23, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (23, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (23, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (23, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (23, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (24, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (25, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (25, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[ \"",
                   position: (25, 37),
                  },
                  Raw {
                   content: "$",
                   position: (25, 40),
                  },
                  Raw {
                   content: "{pkgs.cacert}/etc/ssl/certs/ca-bundle.crt\" ]",
                   position: (25, 43),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (26, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "A list of files containing trusted root certificates in PEM\nformat. These are concatenated to form\n<filename>/etc/ssl/certs/ca-certificates.crt</filename>, which is\nused by many programs that use OpenSSL, such as\n<command>curl</command> and <command>git</command>.\n",
                 position: (27, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "security",
            position: (35, 5),
           },
           Raw {
            content: "pki",
            position: (35, 14),
           },
           Raw {
            content: "certificates",
            position: (35, 18),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (35, 33),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (36, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (36, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (36, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (36, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (36, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (37, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (38, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (38, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[ ",
                   position: (39, 1),
                  },
                  Raw {
                   content: "''",
                   position: (39, 11),
                  },
                  Raw {
                   content: "\n    NixOS.org\n    =========\n    -----BEGIN CERTIFICATE-----\n    MIIGUDCCBTigAwIBAgIDD8KWMA0GCSqGSIb3DQEBBQUAMIGMMQswCQYDVQQGEwJJ\n    TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0\n    ...\n    -----END CERTIFICATE-----\n  ",
                   position: (39, 14),
                  },
                  Raw {
                   content: "''",
                   position: (47, 11),
                  },
                  Raw {
                   content: "\n]\n",
                   position: (47, 14),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (50, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "A list of trusted root certificates in PEM format.\n",
                 position: (51, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "security",
            position: (55, 5),
           },
           Raw {
            content: "pki",
            position: (55, 14),
           },
           Raw {
            content: "caCertificateBlacklist",
            position: (55, 18),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (55, 43),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (56, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (56, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (56, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (56, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (56, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (57, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (58, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "WoSign",
                   position: (59, 10),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "WoSign China",
                   position: (59, 19),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "CA WoSign ECC Root",
                   position: (60, 10),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Certification Authority of WoSign G2",
                   position: (61, 10),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (63, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "A list of blacklisted CA certificate names that won't be imported from\nthe Mozilla Trust Store into\n<filename>/etc/ssl/certs/ca-certificates.crt</filename>. Use the\nnames from that file.\n",
                 position: (64, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (73, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (76, 5),
           },
           Raw {
            content: "etc",
            position: (76, 17),
           },
           Expression {
            expression: String {
             parts: [
              Raw {
               content: "ssl/certs/ca-certificates.crt",
               position: (76, 22),
              },
             ],
            },
           },
           Raw {
            content: "source",
            position: (76, 53),
           },
          ],
         },
         Variable {
          identifier: "caBundle",
          position: (76, 62),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (79, 5),
           },
           Raw {
            content: "etc",
            position: (79, 17),
           },
           Expression {
            expression: String {
             parts: [
              Raw {
               content: "ssl/certs/ca-bundle.crt",
               position: (79, 22),
              },
             ],
            },
           },
           Raw {
            content: "source",
            position: (79, 47),
           },
          ],
         },
         Variable {
          identifier: "caBundle",
          position: (79, 56),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (82, 5),
           },
           Raw {
            content: "etc",
            position: (82, 17),
           },
           Expression {
            expression: String {
             parts: [
              Raw {
               content: "pki/tls/certs/ca-bundle.crt",
               position: (82, 22),
              },
             ],
            },
           },
           Raw {
            content: "source",
            position: (82, 51),
           },
          ],
         },
         Variable {
          identifier: "caBundle",
          position: (82, 60),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "environment",
            position: (85, 5),
           },
           Raw {
            content: "etc",
            position: (85, 17),
           },
           Expression {
            expression: String {
             parts: [
              Raw {
               content: "ssl/trust-source",
               position: (85, 22),
              },
             ],
            },
           },
           Raw {
            content: "source",
            position: (85, 40),
           },
          ],
         },
         String {
          parts: [
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cacertPackage",
              position: (85, 52),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "p11kit",
                position: (85, 66),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "/etc/ssl/trust-source",
            position: (85, 73),
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
    ],
    recursive: false,
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}