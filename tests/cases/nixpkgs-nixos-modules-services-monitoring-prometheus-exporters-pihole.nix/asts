---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "options",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "prometheus",
         position: (6, 25),
        },
        Raw {
         content: "exporters",
         position: (6, 36),
        },
        Raw {
         content: "pihole",
         position: (6, 46),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "port",
         position: (9, 3),
        },
       ],
      },
      to: Int {
       value: 9617,
       position: (9, 10),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "extraOpts",
         position: (10, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "apiToken",
            position: (11, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (11, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (12, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (12, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (12, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (13, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (13, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (14, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "580a770cb40511eb85290242ac130003580a770cb40511eb85290242ac130003",
                 position: (14, 18),
                },
               ],
               position: (14, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (15, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "pi-hole API token which can be used instead of a password\n",
                 position: (16, 1),
                },
               ],
               position: (15, 21),
              },
             },
            ],
            recursive: false,
            position: (11, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "interval",
            position: (19, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (19, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (20, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (20, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (20, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (21, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "10s",
                 position: (21, 18),
                },
               ],
               position: (21, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (22, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "30s",
                 position: (22, 18),
                },
               ],
               position: (22, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (23, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "How often to scrape new data\n",
                 position: (24, 1),
                },
               ],
               position: (23, 21),
              },
             },
            ],
            recursive: false,
            position: (19, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "password",
            position: (27, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (27, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (28, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (28, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (28, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (29, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (29, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (30, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "password",
                 position: (30, 18),
                },
               ],
               position: (30, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (31, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The password to login into pihole. An api token can be used instead.\n",
                 position: (32, 1),
                },
               ],
               position: (31, 21),
              },
             },
            ],
            recursive: false,
            position: (27, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "piholeHostname",
            position: (35, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (35, 22),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (36, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (36, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (36, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (37, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "pihole",
                 position: (37, 18),
                },
               ],
               position: (37, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (38, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "127.0.0.1",
                 position: (38, 18),
                },
               ],
               position: (38, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (39, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Hostname or address where to find the pihole webinterface\n",
                 position: (40, 1),
                },
               ],
               position: (39, 21),
              },
             },
            ],
            recursive: false,
            position: (35, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "piholePort",
            position: (43, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (43, 18),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (44, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (44, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "port",
                  position: (44, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (45, 7),
                },
               ],
              },
              to: Int {
               value: 80,
               position: (45, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (46, 7),
                },
               ],
              },
              to: Int {
               value: 443,
               position: (46, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (47, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The port pihole webinterface is reachable on\n",
                 position: (48, 1),
                },
               ],
               position: (47, 21),
              },
             },
            ],
            recursive: false,
            position: (43, 27),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "protocol",
            position: (51, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (51, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (52, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (52, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "enum",
                   position: (52, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "http",
                     position: (52, 28),
                    },
                   ],
                   position: (52, 27),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "https",
                     position: (52, 35),
                    },
                   ],
                   position: (52, 34),
                  },
                 ],
                 position: (52, 25),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (53, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "http",
                 position: (53, 18),
                },
               ],
               position: (53, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (54, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "https",
                 position: (54, 18),
                },
               ],
               position: (54, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (55, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The protocol which is used to connect to pihole\n",
                 position: (56, 1),
                },
               ],
               position: (55, 21),
              },
             },
            ],
            recursive: false,
            position: (51, 25),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (10, 15),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "serviceOpts",
         position: (60, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "serviceConfig",
            position: (61, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ExecStart",
               position: (62, 7),
              },
             ],
            },
            to: String {
             parts: [
              Raw {
               content: "",
               position: (63, 1),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (63, 11),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "bash",
                   position: (63, 16),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/bash -c \"",
               position: (63, 21),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (63, 37),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "prometheus-pihole-exporter",
                   position: (63, 42),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/pihole-exporter \\\n  -interval ",
               position: (63, 69),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (64, 23),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "interval",
                   position: (64, 27),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " \\\n  ",
               position: (64, 36),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "optionalString",
                 position: (65, 13),
                },
                arguments: [
                 Parentheses {
                  expression: BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (65, 29),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "apiToken",
                        position: (65, 33),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [],
                     position: (65, 45),
                    },
                   ],
                   position: (65, 42),
                  },
                  position: (65, 28),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "-pihole_api_token ",
                    position: (65, 50),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (65, 70),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "apiToken",
                        position: (65, 74),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (65, 49),
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  -pihole_hostname ",
               position: (65, 85),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (66, 30),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "piholeHostname",
                   position: (66, 34),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " \\\n  ",
               position: (66, 49),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "optionalString",
                 position: (67, 13),
                },
                arguments: [
                 Parentheses {
                  expression: BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (67, 29),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "password",
                        position: (67, 33),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [],
                     position: (67, 45),
                    },
                   ],
                   position: (67, 42),
                  },
                  position: (67, 28),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "-pihole_password ",
                    position: (67, 50),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (67, 69),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "password",
                        position: (67, 73),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (67, 49),
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  -pihole_port ",
               position: (67, 84),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (68, 26),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (68, 35),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "piholePort",
                     position: (68, 39),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  -pihole_protocol ",
               position: (68, 50),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (69, 30),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "protocol",
                   position: (69, 34),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " \\\n  -port ",
               position: (69, 43),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (70, 19),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (70, 28),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "port",
                     position: (70, 32),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: "\"\n",
               position: (70, 37),
              },
             ],
             position: (62, 19),
            },
           },
          ],
          recursive: false,
          position: (61, 21),
         },
        },
       ],
       recursive: false,
       position: (60, 17),
      },
     },
    ],
    recursive: false,
    position: (8, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}