---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "makewhatis",
       position: (4, 3),
      },
     ],
    },
    String {
     parts: [
      Expression {
       expression: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (4, 19),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "getBin",
            position: (4, 23),
           },
          ],
         },
         default: None,
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (4, 30),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "package",
             position: (4, 34),
            },
           ],
          },
          default: None,
         },
        ],
       },
      },
      Raw {
       content: "/bin/makewhatis",
       position: (4, 42),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (6, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (6, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "documentation",
        position: (6, 16),
       },
       Raw {
        content: "man",
        position: (6, 30),
       },
       Raw {
        content: "mandoc",
        position: (6, 34),
       },
      ],
     },
     default: None,
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "meta",
        position: (9, 3),
       },
       Raw {
        content: "maintainers",
        position: (9, 8),
       },
      ],
     },
     List {
      elements: [
       PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (9, 24),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (9, 28),
          },
          Raw {
           content: "sternenseemann",
           position: (9, 40),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (11, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "documentation",
           position: (12, 5),
          },
          Raw {
           content: "man",
           position: (12, 19),
          },
          Raw {
           content: "mandoc",
           position: (12, 23),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (13, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (13, 16),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkEnableOption",
                position: (13, 20),
               },
              ],
             },
             default: None,
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "mandoc as the default man page viewer",
                position: (13, 36),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "manPath",
              position: (15, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (15, 17),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkOption",
                position: (15, 21),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (16, 9),
                  },
                 ],
                },
                With {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (16, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "types",
                     position: (16, 25),
                    },
                   ],
                  },
                  default: None,
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (16, 32),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (16, 39),
                   },
                  ],
                 },
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (17, 9),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "share/man",
                     position: (17, 22),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (18, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (18, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "literalExpression",
                     position: (18, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "[ \"share/man\" \"share/man/fr\" ]",
                     position: (18, 42),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (19, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Change the manpath, i. e. the directories where\n<citerefentry><refentrytitle>man</refentrytitle><manvolnum>1</manvolnum></citerefentry>\nlooks for section-specific directories of man pages.\nYou only need to change this setting if you want extra man pages\n(e. g. in non-english languages). All values must be strings that\nare a valid path from the target prefix (without including it).\nThe first value given takes priority.\n",
                   position: (20, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "package",
              position: (30, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (30, 17),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkOption",
                position: (30, 21),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (31, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (31, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "types",
                    position: (31, 20),
                   },
                   Raw {
                    content: "package",
                    position: (31, 26),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (32, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (32, 19),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "mandoc",
                    position: (32, 24),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "defaultText",
                   position: (33, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (33, 23),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "literalExpression",
                     position: (33, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "pkgs.mandoc",
                     position: (33, 46),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (34, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "The <literal>mandoc</literal> derivation to use. Useful to override\nconfiguration options used for the package.\n",
                   position: (35, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (42, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (42, 12),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "mkIf",
          position: (42, 16),
         },
        ],
       },
       default: None,
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (42, 21),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (42, 25),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (43, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "systemPackages",
                position: (44, 7),
               },
              ],
             },
             List {
              elements: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (44, 26),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "package",
                   position: (44, 30),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "etc",
                position: (47, 7),
               },
               Expression {
                expression: String {
                 parts: [
                  Raw {
                   content: "man.conf",
                   position: (47, 12),
                  },
                 ],
                },
               },
               Raw {
                content: "text",
                position: (47, 22),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "lib",
                position: (47, 29),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "concatMapStrings",
                  position: (47, 33),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Function {
                argument: Some(
                 "path",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: String {
                 parts: [
                  Raw {
                   content: "manpath /run/current-system/sw/",
                   position: (48, 1),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "path",
                    position: (48, 42),
                   },
                  },
                  Raw {
                   content: "\n",
                   position: (48, 47),
                  },
                 ],
                },
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (49, 11),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "manPath",
                   position: (49, 15),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "extraSetup",
                position: (54, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "lib",
                position: (54, 20),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "mkIf",
                  position: (54, 24),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (54, 29),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "documentation",
                   position: (54, 36),
                  },
                  Raw {
                   content: "man",
                   position: (54, 50),
                  },
                  Raw {
                   content: "generateCaches",
                   position: (54, 54),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "",
                  position: (55, 1),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "makewhatis",
                   position: (55, 11),
                  },
                 },
                 Raw {
                  content: " -T utf8 ",
                  position: (55, 22),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "lib",
                     position: (56, 11),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "concatMapStringsSep",
                       position: (56, 15),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: " ",
                       position: (56, 36),
                      },
                     ],
                    },
                    Function {
                     argument: Some(
                      "path",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: String {
                      parts: [
                       Raw {
                        content: "\"$out/",
                        position: (56, 47),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "path",
                         position: (56, 56),
                        },
                       },
                       Raw {
                        content: "\"",
                        position: (56, 61),
                       },
                      ],
                     },
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (56, 66),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "manPath",
                        position: (56, 70),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n",
                  position: (57, 10),
                 },
                ],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
 },
}