---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (10, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: Variable {
         identifier: "mkRenamedOptionModule",
         position: (11, 6),
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
              position: (12, 10),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "gnome3",
              position: (12, 21),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "seahorse",
              position: (12, 30),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "enable",
              position: (12, 41),
             },
            ],
           },
          ],
         },
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "programs",
              position: (13, 10),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "seahorse",
              position: (13, 21),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "enable",
              position: (13, 32),
             },
            ],
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (19, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "programs",
           position: (21, 5),
          },
          Raw {
           content: "seahorse",
           position: (21, 14),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (23, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (23, 16),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "Seahorse, a GNOME application for managing encryption keys and passwords in the GNOME Keyring",
                position: (23, 32),
               },
              ],
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (32, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (32, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (32, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "programs",
           position: (32, 24),
          },
          Raw {
           content: "seahorse",
           position: (32, 33),
          },
          Raw {
           content: "enable",
           position: (32, 42),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "programs",
             position: (34, 5),
            },
            Raw {
             content: "ssh",
             position: (34, 14),
            },
            Raw {
             content: "askPassword",
             position: (34, 18),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkDefault",
            position: (34, 32),
           },
           arguments: [
            String {
             parts: [
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (34, 45),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "gnome",
                   position: (34, 50),
                  },
                  Raw {
                   content: "seahorse",
                   position: (34, 56),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/libexec/seahorse/ssh-askpass",
               position: (34, 65),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (36, 5),
            },
            Raw {
             content: "systemPackages",
             position: (36, 17),
            },
           ],
          },
          List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (37, 7),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "gnome",
                position: (37, 12),
               },
               Raw {
                content: "seahorse",
                position: (37, 18),
               },
              ],
             },
             default: None,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (40, 5),
            },
            Raw {
             content: "dbus",
             position: (40, 14),
            },
            Raw {
             content: "packages",
             position: (40, 19),
            },
           ],
          },
          List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (41, 7),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "gnome",
                position: (41, 12),
               },
               Raw {
                content: "seahorse",
                position: (41, 18),
               },
              ],
             },
             default: None,
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
 },
}