---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (4, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (4, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (4, 16),
       },
       Raw {
        content: "zabbixAgent",
        position: (4, 25),
       },
      ],
     },
     default: None,
    },
   ),
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (6, 12),
     },
    ),
    [
     Raw {
      content: "mkDefault",
      position: (6, 17),
     },
     Raw {
      content: "mkEnableOption",
      position: (6, 27),
     },
     Raw {
      content: "mkIf",
      position: (6, 42),
     },
     Raw {
      content: "mkMerge",
      position: (6, 47),
     },
     Raw {
      content: "mkOption",
      position: (6, 55),
     },
    ],
   ),
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (7, 12),
     },
    ),
    [
     Raw {
      content: "attrValues",
      position: (7, 17),
     },
     Raw {
      content: "concatMapStringsSep",
      position: (7, 28),
     },
     Raw {
      content: "literalExpression",
      position: (7, 48),
     },
     Raw {
      content: "optionalString",
      position: (7, 66),
     },
     Raw {
      content: "types",
      position: (7, 81),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (8, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "generators",
         position: (8, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "toKeyValue",
      position: (8, 28),
     },
    ],
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "user",
       position: (10, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "zabbix-agent",
       position: (10, 11),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "group",
       position: (11, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "zabbix-agent",
       position: (11, 12),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "moduleEnv",
       position: (13, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (13, 15),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "symlinkJoin",
         position: (13, 20),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "name",
            position: (14, 5),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "zabbix-agent-module-env",
            position: (14, 13),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "paths",
            position: (15, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "attrValues",
           position: (15, 13),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (15, 24),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "modules",
               position: (15, 28),
              },
             ],
            },
            default: None,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "configFile",
       position: (18, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (18, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "writeText",
         position: (18, 21),
        },
       ],
      },
      default: None,
     },
     arguments: [
      String {
       parts: [
        Raw {
         content: "zabbix_agent.conf",
         position: (18, 32),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "toKeyValue",
        position: (18, 52),
       },
       arguments: [
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "listsAsDuplicateKeys",
              position: (18, 65),
             },
            ],
           },
           Variable {
            identifier: "true",
            position: (18, 88),
           },
          ),
         ],
         recursive: false,
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (18, 96),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "settings",
            position: (18, 100),
           },
          ],
         },
         default: None,
        },
       ],
      },
     ],
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (23, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (24, 6),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "mkRemovedOptionModule",
            position: (24, 10),
           },
          ],
         },
         default: None,
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
              position: (24, 35),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "zabbixAgent",
              position: (24, 46),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "extraConfig",
              position: (24, 60),
             },
            ],
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "Use services.zabbixAgent.settings instead.",
            position: (24, 76),
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (29, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (31, 5),
          },
          Raw {
           content: "zabbixAgent",
           position: (31, 14),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (32, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (32, 16),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "the Zabbix Agent",
                position: (32, 32),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "package",
              position: (34, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (34, 17),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (35, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (35, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (35, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (36, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (36, 19),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "zabbix",
                    position: (36, 24),
                   },
                   Raw {
                    content: "agent",
                    position: (36, 31),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "defaultText",
                   position: (37, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (37, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "pkgs.zabbix.agent",
                     position: (37, 42),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (38, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "The Zabbix package to use.",
                   position: (38, 24),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "extraPackages",
              position: (41, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (41, 23),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (42, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (42, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listOf",
                     position: (42, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (42, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (42, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (43, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (43, 24),
                 },
                 target: List {
                  elements: [
                   Variable {
                    identifier: "nettools",
                    position: (43, 32),
                   },
                  ],
                 },
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "defaultText",
                   position: (44, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (44, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "with pkgs; [ nettools ]",
                     position: (44, 42),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (45, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (45, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "with pkgs; [ nettools mysql ]",
                     position: (45, 38),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (46, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Packages to be added to the Zabbix <envar>PATH</envar>.\nTypically used to add executables for scripts, but can be anything.\n",
                   position: (47, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "modules",
              position: (52, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (52, 17),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (53, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (53, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrsOf",
                     position: (53, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (53, 30),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (53, 36),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (54, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "A set of modules to load.",
                   position: (54, 24),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (55, 9),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (56, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (56, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "{\n  \"dummy.so\" = pkgs.stdenv.mkDerivation {\n    name = \"zabbix-dummy-module-",
                     position: (57, 1),
                    },
                    Raw {
                     content: "$",
                     position: (59, 43),
                    },
                    Raw {
                     content: "{cfg.package.version}\";\n    src = cfg.package.src;\n    buildInputs = [ cfg.package ];\n    sourceRoot = \"zabbix-",
                     position: (59, 46),
                    },
                    Raw {
                     content: "$",
                     position: (62, 36),
                    },
                    Raw {
                     content: "{cfg.package.version}/src/modules/dummy\";\n    installPhase = ",
                     position: (62, 39),
                    },
                    Raw {
                     content: "''",
                     position: (63, 30),
                    },
                    Raw {
                     content: "\n      mkdir -p $out/lib\n      cp dummy.so $out/lib/\n    ",
                     position: (63, 33),
                    },
                    Raw {
                     content: "''",
                     position: (66, 15),
                    },
                    Raw {
                     content: ";\n  };\n}\n",
                     position: (66, 18),
                    },
                   ],
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "server",
              position: (72, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (72, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (73, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (73, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (73, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (74, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "The IP address or hostname of the Zabbix server to connect to.\n",
                   position: (75, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "listen",
              position: (79, 7),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "ip",
                 position: (80, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (80, 14),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (81, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (81, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (81, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (82, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "0.0.0.0",
                      position: (82, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (83, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "List of comma delimited IP addresses that the agent should listen on.\n",
                      position: (84, 1),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "port",
                 position: (88, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (88, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (89, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (89, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "port",
                       position: (89, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (90, 11),
                     },
                    ],
                   },
                   Int {
                    value: 10050,
                    position: (90, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (91, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Agent will listen on this port for connections from the server.\n",
                      position: (92, 1),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "openFirewall",
              position: (97, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (97, 22),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (98, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (98, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bool",
                    position: (98, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (99, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (99, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (100, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Open ports in the firewall for the Zabbix Agent.\n",
                   position: (101, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "settings",
              position: (105, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (105, 18),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (106, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "types",
                  position: (106, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (106, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "oneOf",
                     position: (106, 37),
                    },
                    arguments: [
                     List {
                      elements: [
                       Variable {
                        identifier: "int",
                        position: (106, 45),
                       },
                       Variable {
                        identifier: "str",
                        position: (106, 49),
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "listOf",
                         position: (106, 54),
                        },
                        arguments: [
                         Variable {
                          identifier: "str",
                          position: (106, 61),
                         },
                        ],
                       },
                      ],
                     },
                    ],
                   },
                  ],
                 },
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (107, 9),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (108, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Zabbix Agent configuration. Refer to\n<link xlink:href=\"https://www.zabbix.com/documentation/current/manual/appendix/config/zabbix_agentd\"/>\nfor details on supported values.\n",
                   position: (109, 1),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (113, 9),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "Hostname",
                      position: (114, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "example.org",
                      position: (114, 23),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "DebugLevel",
                      position: (115, 11),
                     },
                    ],
                   },
                   Int {
                    value: 4,
                    position: (115, 24),
                   },
                  ),
                 ],
                 recursive: false,
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (125, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (125, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (125, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (125, 21),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (127, 5),
            },
            Raw {
             content: "zabbixAgent",
             position: (127, 14),
            },
            Raw {
             content: "settings",
             position: (127, 26),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkMerge",
            position: (127, 37),
           },
           arguments: [
            List {
             elements: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LogType",
                    position: (129, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "console",
                    position: (129, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Server",
                    position: (130, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (130, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "server",
                     position: (130, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ListenPort",
                    position: (131, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (131, 22),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listen",
                     position: (131, 26),
                    },
                    Raw {
                     content: "port",
                     position: (131, 33),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (133, 8),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (133, 14),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "modules",
                      position: (133, 18),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "LoadModule",
                      position: (134, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "builtins",
                      position: (134, 22),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "attrNames",
                        position: (134, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (134, 41),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "modules",
                         position: (134, 45),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "LoadModulePath",
                      position: (135, 9),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "moduleEnv",
                       position: (135, 29),
                      },
                     },
                     Raw {
                      content: "/lib",
                      position: (135, 39),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (140, 8),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (140, 14),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listen",
                      position: (140, 18),
                     },
                     Raw {
                      content: "ip",
                      position: (140, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [
                    Raw {
                     content: "0.0.0.0",
                     position: (140, 32),
                    },
                   ],
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "ListenIP",
                      position: (140, 44),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (140, 55),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "listen",
                       position: (140, 59),
                      },
                      Raw {
                       content: "ip",
                       position: (140, 66),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "networking",
             position: (143, 5),
            },
            Raw {
             content: "firewall",
             position: (143, 16),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (143, 27),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (143, 32),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "openFirewall",
                position: (143, 36),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "allowedTCPPorts",
                  position: (144, 7),
                 },
                ],
               },
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (144, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listen",
                     position: (144, 31),
                    },
                    Raw {
                     content: "port",
                     position: (144, 38),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (147, 5),
            },
            Raw {
             content: "users",
             position: (147, 11),
            },
            Expression {
             expression: Variable {
              identifier: "user",
              position: (147, 19),
             },
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (148, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Zabbix Agent daemon user",
                position: (148, 22),
               },
              ],
             },
            ),
            Inherit(
             None,
             [
              Raw {
               content: "group",
               position: (149, 15),
              },
             ],
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "isSystemUser",
                position: (150, 7),
               },
              ],
             },
             Variable {
              identifier: "true",
              position: (150, 22),
             },
            ),
           ],
           recursive: false,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (153, 5),
            },
            Raw {
             content: "groups",
             position: (153, 11),
            },
            Expression {
             expression: Variable {
              identifier: "group",
              position: (153, 20),
             },
            },
           ],
          },
          Map {
           bindings: [],
           recursive: false,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (155, 5),
            },
            Raw {
             content: "services",
             position: (155, 13),
            },
            Raw {
             content: "zabbix-agent",
             position: (155, 22),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (156, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Zabbix Agent",
                position: (156, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wantedBy",
                position: (158, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "multi-user.target",
                  position: (158, 21),
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "path",
                position: (163, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "pkgs",
               position: (163, 19),
              },
              target: BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  Variable {
                   identifier: "bash",
                   position: (163, 27),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/run/wrappers",
                     position: (163, 33),
                    },
                   ],
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (163, 53),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "extraPackages",
                    position: (163, 57),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (165, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ExecStart",
                   position: (166, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "@",
                   position: (166, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (166, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (166, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/sbin/zabbix_agentd zabbix_agentd -f --config ",
                   position: (166, 37),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "configFile",
                    position: (166, 85),
                   },
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "Restart",
                   position: (167, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "always",
                   position: (167, 20),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RestartSec",
                   position: (168, 9),
                  },
                 ],
                },
                Int {
                 value: 2,
                 position: (168, 22),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "User",
                   position: (170, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "user",
                 position: (170, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "Group",
                   position: (171, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "group",
                 position: (171, 17),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "PrivateTmp",
                   position: (172, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (172, 22),
                },
               ),
              ],
              recursive: false,
             },
            ),
           ],
           recursive: false,
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
 },
}