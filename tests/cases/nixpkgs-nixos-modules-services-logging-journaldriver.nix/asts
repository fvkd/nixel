---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (14, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (14, 15),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (14, 21),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (14, 28),
        },
        Raw {
         content: "journaldriver",
         position: (14, 37),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (16, 3),
        },
        Raw {
         content: "services",
         position: (16, 11),
        },
        Raw {
         content: "journaldriver",
         position: (16, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (17, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 14),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (18, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (18, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (18, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (19, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (19, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (20, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to enable journaldriver to forward journald logs to\nStackdriver Logging.\n",
                 position: (21, 1),
                },
               ],
               position: (20, 21),
              },
             },
            ],
            recursive: false,
            position: (17, 23),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "logLevel",
            position: (26, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (26, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (27, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (27, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (27, 27),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (28, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "info",
                 position: (28, 22),
                },
               ],
               position: (28, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (29, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Log level at which journaldriver logs its own output.\n",
                 position: (30, 1),
                },
               ],
               position: (29, 21),
              },
             },
            ],
            recursive: false,
            position: (26, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "logName",
            position: (34, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (34, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (35, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (35, 26),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (35, 33),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (35, 40),
                 },
                ],
               },
               position: (35, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (36, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (36, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (37, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Configures the name of the target log in Stackdriver Logging.\nThis option can be set to, for example, the hostname of a\nmachine to improve the user experience in the logging\noverview.\n",
                 position: (38, 1),
                },
               ],
               position: (37, 21),
              },
             },
            ],
            recursive: false,
            position: (34, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "googleCloudProject",
            position: (45, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (45, 26),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (46, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (46, 26),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (46, 33),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (46, 40),
                 },
                ],
               },
               position: (46, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (47, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (47, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (48, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Configures the name of the Google Cloud project to which to\nforward journald logs.\n\nThis option is required on non-GCP machines, but should not be\nset on GCP instances.\n",
                 position: (49, 1),
                },
               ],
               position: (48, 21),
              },
             },
            ],
            recursive: false,
            position: (45, 35),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "logStream",
            position: (57, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (57, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (58, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (58, 26),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (58, 33),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (58, 40),
                 },
                ],
               },
               position: (58, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (59, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (59, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (60, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Configures the name of the Stackdriver Logging log stream into\nwhich to write journald entries.\n\nThis option is required on non-GCP machines, but should not be\nset on GCP instances.\n",
                 position: (61, 1),
                },
               ],
               position: (60, 21),
              },
             },
            ],
            recursive: false,
            position: (57, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "applicationCredentials",
            position: (69, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (69, 30),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (70, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (70, 26),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (70, 33),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (70, 40),
                 },
                ],
               },
               position: (70, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (71, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (71, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (72, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Path to the service account private key (in JSON-format) used\nto forward log entries to Stackdriver Logging on non-GCP\ninstances.\n\nThis option is required on non-GCP machines, but should not be\nset on GCP instances.\n",
                 position: (73, 1),
                },
               ],
               position: (72, 21),
              },
             },
            ],
            recursive: false,
            position: (69, 39),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (16, 36),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (83, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (83, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (83, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (83, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (84, 5),
             },
             Raw {
              content: "services",
              position: (84, 13),
             },
             Raw {
              content: "journaldriver",
              position: (84, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (85, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Stackdriver Logging journal forwarder",
                 position: (85, 22),
                },
               ],
               position: (85, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "script",
                 position: (86, 7),
                },
               ],
              },
              to: String {
               parts: [
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (86, 24),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "journaldriver",
                     position: (86, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/journaldriver",
                 position: (86, 43),
                },
               ],
               position: (86, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (87, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network-online.target",
                   position: (87, 24),
                  },
                 ],
                 position: (87, 23),
                },
               ],
               position: (87, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (88, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (88, 24),
                  },
                 ],
                 position: (88, 23),
                },
               ],
               position: (88, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (90, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (91, 27),
                   },
                  ],
                  position: (91, 26),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "DynamicUser",
                    position: (92, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (92, 26),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "StateDirectory",
                    position: (97, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "journaldriver",
                    position: (97, 27),
                   },
                  ],
                  position: (97, 26),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "SupplementaryGroups",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "systemd-journal",
                    position: (100, 32),
                   },
                  ],
                  position: (100, 31),
                 },
                },
               ],
               recursive: false,
               position: (90, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "environment",
                 position: (103, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RUST_LOG",
                    position: (104, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (104, 42),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "logLevel",
                     position: (104, 46),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "LOG_NAME",
                    position: (105, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (105, 42),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "logName",
                     position: (105, 46),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "LOG_STREAM",
                    position: (106, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (106, 42),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "logStream",
                     position: (106, 46),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "GOOGLE_CLOUD_PROJECT",
                    position: (107, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (107, 42),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "googleCloudProject",
                     position: (107, 46),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "GOOGLE_APPLICATION_CREDENTIALS",
                    position: (108, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (108, 42),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "applicationCredentials",
                     position: (108, 46),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               recursive: false,
               position: (103, 21),
              },
             },
            ],
            recursive: false,
            position: (84, 38),
           },
          },
         ],
         recursive: false,
         position: (83, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (15, 4),
   },
   position: (14, 11),
  },
  position: (14, 1),
 },
 position: (12, 1),
}