---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "options",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (6, 6),
  },
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "imports",
        position: (9, 3),
       },
      ],
     },
     to: List {
      elements: [
       Path {
        parts: [
         Raw {
          content: "./iso-image.nix",
          position: (10, 7),
         },
        ],
        position: (10, 7),
       },
       Path {
        parts: [
         Raw {
          content: "../../profiles/all-hardware.nix",
          position: (13, 7),
         },
        ],
        position: (13, 7),
       },
       Path {
        parts: [
         Raw {
          content: "../../profiles/base.nix",
          position: (14, 7),
         },
        ],
        position: (14, 7),
       },
       Path {
        parts: [
         Raw {
          content: "../../profiles/installation-device.nix",
          position: (15, 7),
         },
        ],
        position: (15, 7),
       },
      ],
      position: (10, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "console",
        position: (19, 3),
       },
       Raw {
        content: "packages",
        position: (19, 11),
       },
      ],
     },
     to: BinaryOperation {
      operator: Concatenation,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "options",
         position: (19, 22),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "console",
           position: (19, 30),
          },
          Raw {
           content: "packages",
           position: (19, 38),
          },
          Raw {
           content: "default",
           position: (19, 47),
          },
         ],
        },
        default: None,
       },
       List {
        elements: [
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (19, 60),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "terminus_font",
             position: (19, 65),
            },
           ],
          },
          default: None,
         },
        ],
        position: (19, 58),
       },
      ],
      position: (19, 55),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "isoImage",
        position: (22, 3),
       },
       Raw {
        content: "isoName",
        position: (22, 12),
       },
      ],
     },
     to: String {
      parts: [
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (22, 25),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "isoImage",
            position: (22, 32),
           },
           Raw {
            content: "isoBaseName",
            position: (22, 41),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "-",
        position: (22, 53),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (22, 56),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "system",
            position: (22, 63),
           },
           Raw {
            content: "nixos",
            position: (22, 70),
           },
           Raw {
            content: "label",
            position: (22, 76),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "-",
        position: (22, 82),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (22, 85),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "stdenv",
            position: (22, 90),
           },
           Raw {
            content: "hostPlatform",
            position: (22, 97),
           },
           Raw {
            content: "system",
            position: (22, 110),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: ".iso",
        position: (22, 117),
       },
      ],
      position: (22, 22),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "isoImage",
        position: (25, 3),
       },
       Raw {
        content: "makeEfiBootable",
        position: (25, 12),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (25, 30),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "isoImage",
        position: (28, 3),
       },
       Raw {
        content: "makeUsbBootable",
        position: (28, 12),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (28, 30),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "boot",
        position: (31, 3),
       },
       Raw {
        content: "loader",
        position: (31, 8),
       },
       Raw {
        content: "grub",
        position: (31, 15),
       },
       Raw {
        content: "memtest86",
        position: (31, 20),
       },
       Raw {
        content: "enable",
        position: (31, 30),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (31, 39),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "swapDevices",
        position: (35, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkImageMediaOverride",
       position: (35, 17),
      },
      arguments: [
       List {
        elements: [],
        position: (35, 38),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fileSystems",
        position: (36, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkImageMediaOverride",
       position: (36, 17),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (36, 38),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "lib",
           position: (36, 45),
          },
          Raw {
           content: "isoFileSystems",
           position: (36, 49),
          },
         ],
        },
        default: None,
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "boot",
        position: (38, 3),
       },
       Raw {
        content: "postBootCommands",
        position: (38, 8),
       },
      ],
     },
     to: String {
      parts: [
       Raw {
        content: "for o in $(</proc/cmdline); do\n  case \"$o\" in\n    live.nixos.passwd=*)\n      set -- $(IFS==; echo $o)\n      echo \"nixos:$2\" | ",
        position: (39, 1),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (43, 31),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "shadow",
            position: (43, 36),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "/bin/chpasswd\n      ;;\n  esac\ndone\n",
        position: (43, 43),
       },
      ],
      position: (38, 27),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "system",
        position: (49, 3),
       },
       Raw {
        content: "stateVersion",
        position: (49, 10),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkDefault",
       position: (49, 25),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "18.03",
          position: (49, 36),
         },
        ],
        position: (49, 35),
       },
      ],
     },
    },
   ],
   recursive: false,
   position: (8, 1),
  },
  position: (6, 1),
 },
 position: (4, 1),
}