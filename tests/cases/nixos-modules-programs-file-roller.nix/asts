---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 5),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 11),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (7, 18),
        },
        Raw {
         content: "file-roller",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (12, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (13, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (14, 9),
            },
            String {
             parts: [
              Raw {
               content: "gnome3",
              },
             ],
             position: (14, 20),
            },
            String {
             parts: [
              Raw {
               content: "file-roller",
              },
             ],
             position: (14, 29),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (14, 43),
            },
           ],
           position: (14, 7),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
              },
             ],
             position: (15, 9),
            },
            String {
             parts: [
              Raw {
               content: "file-roller",
              },
             ],
             position: (15, 20),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (15, 34),
            },
           ],
           position: (15, 7),
          },
         ],
        },
       ],
       position: (12, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (20, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (22, 5),
           },
           Raw {
            content: "file-roller",
            position: (22, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (24, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (24, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "File Roller, an archive manager for GNOME",
                },
               ],
               position: (24, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (26, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (26, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (27, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (27, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (27, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (28, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (28, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gnome",
                     position: (28, 24),
                    },
                    Raw {
                     content: "file-roller",
                     position: (28, 30),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (29, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (29, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.gnome.file-roller",
                     },
                    ],
                    position: (29, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (30, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "File Roller derivation to use.",
                   },
                  ],
                  position: (30, 23),
                 },
                ),
               ],
               recursive: false,
               position: (26, 26),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (22, 28),
         },
        ),
       ],
       recursive: false,
       position: (20, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (40, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (40, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (40, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (40, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (42, 5),
             },
             Raw {
              content: "systemPackages",
              position: (42, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (42, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (42, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (42, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (44, 5),
             },
             Raw {
              content: "dbus",
              position: (44, 14),
             },
             Raw {
              content: "packages",
              position: (44, 19),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (44, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (44, 36),
                },
               ],
              },
              default: None,
             },
            ],
            position: (44, 30),
           },
          ),
         ],
         recursive: false,
         position: (40, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (9, 4),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}