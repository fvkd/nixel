---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "xwayland",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (11, 3),
        },
        Raw {
         content: "programs",
         position: (11, 11),
        },
        Raw {
         content: "xwayland",
         position: (11, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (13, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (13, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Xwayland (an X server for interfacing X11 apps with the Wayland protocol)",
              position: (13, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "defaultFontPath",
            position: (15, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (15, 23),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (16, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (16, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (16, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (17, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (17, 17),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (17, 32),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "fonts",
                    position: (17, 39),
                   },
                   Raw {
                    content: "fontDir",
                    position: (17, 45),
                   },
                   Raw {
                    content: "enable",
                    position: (17, 53),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "/run/current-system/sw/share/X11/fonts",
                   position: (18, 10),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (19, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (19, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "optionalString config.fonts.fontDir.enable \"/run/current-system/sw/share/X11/fonts\"\n",
                   position: (20, 1),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (22, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Default font path. Setting this option causes Xwayland to be rebuilt.\n",
                 position: (23, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (15, 32),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (27, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (27, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (28, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (28, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "path",
                  position: (28, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (29, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (29, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "xwayland",
                   position: (29, 22),
                  },
                  Raw {
                   content: "override",
                   position: (29, 31),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Function {
                 argument: Some(
                  "oldArgs",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Map {
                  bindings: [
                   Inherit(
                    Some(
                     Variable {
                      identifier: "cfg",
                      position: (30, 18),
                     },
                    ),
                    [
                     Raw {
                      content: "defaultFontPath",
                      position: (30, 23),
                     },
                    ],
                   ),
                  ],
                  recursive: false,
                  position: (29, 50),
                 },
                 position: (29, 41),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (32, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (32, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.xwayland.override (oldArgs: {\n  inherit (config.programs.xwayland) defaultFontPath;\n})\n",
                   position: (33, 1),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (37, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The Xwayland package to use.",
                 position: (37, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (27, 24),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (11, 31),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (42, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (42, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (42, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (42, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (45, 5),
             },
             Raw {
              content: "pathsToLink",
              position: (45, 17),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "/share/X11",
                position: (45, 34),
               },
              ],
             },
            ],
            position: (45, 31),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (47, 5),
             },
             Raw {
              content: "systemPackages",
              position: (47, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (47, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (47, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (47, 34),
           },
          ),
         ],
         recursive: false,
         position: (42, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (10, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}