---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "copyChannel",
       position: (5, 3),
      },
     ],
    },
    Variable {
     identifier: "true",
     position: (5, 17),
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (8, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Concatenation,
      operands: [
       List {
        elements: [
         Path {
          parts: [
           Raw {
            content: "../../../modules/virtualisation/openstack-config.nix",
           },
          ],
          position: (9, 5),
         },
        ],
        position: (8, 13),
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (10, 9),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "optional",
            position: (10, 13),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Variable {
          identifier: "copyChannel",
          position: (10, 22),
         },
         Path {
          parts: [
           Raw {
            content: "../../../modules/installer/cd-dvd/channel.nix",
           },
          ],
          position: (10, 34),
         },
        ],
       },
      ],
      position: (10, 5),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "documentation",
        position: (12, 3),
       },
       Raw {
        content: "enable",
        position: (12, 17),
       },
      ],
     },
     Variable {
      identifier: "copyChannel",
      position: (12, 26),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "system",
        position: (14, 3),
       },
       Raw {
        content: "build",
        position: (14, 10),
       },
       Raw {
        content: "openstackImage",
        position: (14, 16),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (14, 33),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "../../../lib/make-disk-image.nix",
         },
        ],
        position: (14, 40),
       },
       Map {
        bindings: [
         Inherit(
          None,
          [
           Raw {
            content: "lib",
            position: (15, 13),
           },
           Raw {
            content: "config",
            position: (15, 17),
           },
           Raw {
            content: "copyChannel",
            position: (15, 24),
           },
          ],
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "additionalSpace",
             position: (16, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "1024M",
            },
           ],
           position: (16, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "pkgs",
             position: (17, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "import",
            position: (17, 12),
           },
           arguments: [
            Path {
             parts: [
              Raw {
               content: "../../../..",
              },
             ],
             position: (17, 19),
            },
            Map {
             bindings: [
              Inherit(
               Some(
                Variable {
                 identifier: "pkgs",
                 position: (17, 42),
                },
               ),
               [
                Raw {
                 content: "system",
                 position: (17, 48),
                },
               ],
              ),
             ],
             recursive: false,
             position: (17, 31),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "format",
             position: (18, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "qcow2",
            },
           ],
           position: (18, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "configFile",
             position: (19, 5),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (19, 18),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "writeText",
               position: (19, 23),
              },
             ],
            },
            default: None,
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "configuration.nix",
              },
             ],
             position: (19, 33),
            },
            String {
             parts: [
              Raw {
               content: "{\n  imports = [ <nixpkgs/nixos/modules/virtualisation/openstack-config.nix> ];\n}\n",
              },
             ],
             position: (20, 7),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (14, 73),
       },
      ],
     },
    ),
   ],
   recursive: false,
   position: (7, 1),
  },
  position: (4, 1),
 },
 position: (3, 1),
}