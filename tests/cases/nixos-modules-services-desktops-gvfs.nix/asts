---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (9, 16),
        },
        Raw {
         content: "gvfs",
         position: (9, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (15, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "maintainers",
            position: (16, 5),
           },
          ],
         },
         PropertyAccess {
          expression: Variable {
           identifier: "teams",
           position: (16, 19),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "gnome",
             position: (16, 25),
            },
            Raw {
             content: "members",
             position: (16, 31),
            },
           ],
          },
          default: None,
         },
        ),
       ],
       recursive: false,
       position: (15, 10),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (20, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (21, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (22, 9),
            },
            String {
             parts: [
              Raw {
               content: "gnome3",
              },
             ],
             position: (22, 20),
            },
            String {
             parts: [
              Raw {
               content: "gvfs",
              },
             ],
             position: (22, 29),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (22, 36),
            },
           ],
           position: (22, 7),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (23, 9),
            },
            String {
             parts: [
              Raw {
               content: "gvfs",
              },
             ],
             position: (23, 20),
            },
            String {
             parts: [
              Raw {
               content: "enable",
              },
             ],
             position: (23, 27),
            },
           ],
           position: (23, 7),
          },
         ],
        },
       ],
       position: (20, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (28, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (30, 5),
           },
           Raw {
            content: "gvfs",
            position: (30, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (32, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (32, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "GVfs, a userspace virtual filesystem",
                },
               ],
               position: (32, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (35, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (35, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (36, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (36, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (36, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (37, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (37, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gnome",
                     position: (37, 24),
                    },
                    Raw {
                     content: "gvfs",
                     position: (37, 30),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (38, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (38, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.gnome.gvfs",
                     },
                    ],
                    position: (38, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (39, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Which GVfs package to use.",
                   },
                  ],
                  position: (39, 23),
                 },
                ),
               ],
               recursive: false,
               position: (35, 26),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (30, 21),
         },
        ),
       ],
       recursive: false,
       position: (28, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (49, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (49, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (49, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (49, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (51, 5),
             },
             Raw {
              content: "systemPackages",
              position: (51, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (51, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (51, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (51, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (53, 5),
             },
             Raw {
              content: "dbus",
              position: (53, 14),
             },
             Raw {
              content: "packages",
              position: (53, 19),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (53, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (53, 36),
                },
               ],
              },
              default: None,
             },
            ],
            position: (53, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (55, 5),
             },
             Raw {
              content: "packages",
              position: (55, 13),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (55, 26),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (55, 30),
                },
               ],
              },
              default: None,
             },
            ],
            position: (55, 24),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (57, 5),
             },
             Raw {
              content: "udev",
              position: (57, 14),
             },
             Raw {
              content: "packages",
              position: (57, 19),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (57, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "libmtp",
                 position: (57, 37),
                },
                Raw {
                 content: "out",
                 position: (57, 44),
                },
               ],
              },
              default: None,
             },
            ],
            position: (57, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (60, 5),
             },
             Raw {
              content: "sessionVariables",
              position: (60, 17),
             },
             Raw {
              content: "GIO_EXTRA_MODULES",
              position: (60, 34),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (60, 59),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (60, 63),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "/lib/gio/modules",
               },
              ],
              position: (60, 56),
             },
            ],
            position: (60, 54),
           },
          ),
         ],
         recursive: false,
         position: (49, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}