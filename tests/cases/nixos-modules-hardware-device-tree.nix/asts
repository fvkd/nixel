---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "hardware",
         position: (6, 16),
        },
        Raw {
         content: "deviceTree",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "overlayType",
        position: (8, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "types",
        position: (8, 17),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "submodule",
          position: (8, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (9, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "name",
                position: (10, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (10, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (11, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (11, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (11, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (12, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Name of this overlay\n",
                     position: (13, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (10, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "dtsFile",
                position: (17, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (17, 17),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (18, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (18, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (18, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (18, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "path",
                        position: (18, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (19, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Path to .dts overlay file, overlay is applied to\neach .dtb file matching \"compatible\" of the overlay.\n",
                     position: (20, 1),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (23, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (23, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (24, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "literalExpression",
                    position: (24, 19),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "./dts/overlays.dts",
                       position: (24, 38),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (17, 26),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "dtsText",
                position: (27, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (27, 17),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (28, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (28, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (28, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (28, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (28, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (29, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (29, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (30, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Literal DTS contents, overlay is applied to\neach .dtb file matching \"compatible\" of the overlay.\n",
                     position: (31, 1),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (34, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/dts-v1/;\n/plugin/;\n/ {\n        compatible = \"raspberrypi\";\n        fragment@0 {\n                target-path = \"/soc\";\n                __overlay__ {\n                        pps {\n                                compatible = \"pps-gpio\";\n                                status = \"okay\";\n                        };\n                };\n        };\n};\n",
                     position: (35, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (27, 26),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "dtboFile",
                position: (52, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (52, 18),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (53, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (53, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (53, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (53, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "path",
                        position: (53, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (54, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (54, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (55, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Path to .dtbo compiled overlay file.\n",
                     position: (56, 1),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (52, 27),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (9, 15),
          },
         ),
        ],
        recursive: false,
        position: (8, 33),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "dtbsWithSymbols",
        position: (63, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (63, 21),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "stdenv",
          position: (63, 26),
         },
         Raw {
          content: "mkDerivation",
          position: (63, 33),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (64, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "dtbs-with-symbols",
             position: (64, 13),
            },
           ],
          },
         ),
         Inherit(
          Some(
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (65, 14),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "kernelPackage",
               position: (65, 18),
              },
             ],
            },
            default: None,
           },
          ),
          [
           Raw {
            content: "src",
            position: (65, 33),
           },
           Raw {
            content: "nativeBuildInputs",
            position: (65, 37),
           },
           Raw {
            content: "depsBuildBuild",
            position: (65, 55),
           },
          ],
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "patches",
             position: (66, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "map",
            position: (66, 15),
           },
           arguments: [
            Function {
             argument: Some(
              "patch",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: PropertyAccess {
              expression: Variable {
               identifier: "patch",
               position: (66, 27),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "patch",
                 position: (66, 33),
                },
               ],
              },
              default: None,
             },
             position: (66, 20),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (66, 40),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "kernelPackage",
                position: (66, 44),
               },
               Raw {
                content: "kernelPatches",
                position: (66, 58),
               },
              ],
             },
             default: None,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "buildPhase",
             position: (67, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "patchShebangs scripts/*\nsubstituteInPlace scripts/Makefile.lib \\\n  --replace 'DTC_FLAGS += $(DTC_FLAGS_$(basetarget))' 'DTC_FLAGS += $(DTC_FLAGS_$(basetarget)) -@'\nmake ",
             position: (68, 1),
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (71, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "stdenv",
                 position: (71, 19),
                },
                Raw {
                 content: "hostPlatform",
                 position: (71, 26),
                },
                Raw {
                 content: "linux-kernel",
                 position: (71, 39),
                },
                Raw {
                 content: "baseConfig",
                 position: (71, 52),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: " ARCH=\"",
             position: (71, 63),
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (71, 72),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "stdenv",
                 position: (71, 77),
                },
                Raw {
                 content: "hostPlatform",
                 position: (71, 84),
                },
                Raw {
                 content: "linuxArch",
                 position: (71, 97),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "\"\nmake dtbs ARCH=\"",
             position: (71, 107),
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (72, 25),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "stdenv",
                 position: (72, 30),
                },
                Raw {
                 content: "hostPlatform",
                 position: (72, 37),
                },
                Raw {
                 content: "linuxArch",
                 position: (72, 50),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "\"\n",
             position: (72, 60),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "installPhase",
             position: (74, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "make dtbs_install INSTALL_DTBS_PATH=$out/dtbs  ARCH=\"",
             position: (75, 1),
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (75, 62),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "stdenv",
                 position: (75, 67),
                },
                Raw {
                 content: "hostPlatform",
                 position: (75, 74),
                },
                Raw {
                 content: "linuxArch",
                 position: (75, 87),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "\"\n",
             position: (75, 97),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (63, 46),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "filterDTBs",
        position: (79, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "src",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: IfThenElse {
       predicate: FunctionApplication {
        function: Variable {
         identifier: "isNull",
         position: (79, 24),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (79, 31),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "filter",
             position: (79, 35),
            },
           ],
          },
          default: None,
         },
        ],
       },
       then: String {
        parts: [
         Expression {
          expression: Variable {
           identifier: "src",
           position: (80, 13),
          },
         },
         Raw {
          content: "/dtbs",
          position: (80, 17),
         },
        ],
       },
       else_: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (82, 7),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "runCommand",
            position: (82, 12),
           },
          ],
         },
         default: None,
        },
        arguments: [
         String {
          parts: [
           Raw {
            content: "dtbs-filtered",
            position: (82, 24),
           },
          ],
         },
         Map {
          bindings: [],
          recursive: false,
          position: (82, 39),
         },
         String {
          parts: [
           Raw {
            content: "mkdir -p $out\ncd ",
            position: (83, 1),
           },
           Expression {
            expression: Variable {
             identifier: "src",
             position: (84, 14),
            },
           },
           Raw {
            content: "/dtbs\nfind . -type f -name ",
            position: (84, 18),
           },
           Raw {
            content: "'",
            position: (85, 30),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (85, 33),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "filter",
                position: (85, 37),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "' -print0 \\\n  | xargs -0 cp -v --no-preserve=mode --target-directory $out --parents\n",
            position: (85, 44),
           },
          ],
         },
        ],
       },
       position: (79, 21),
      },
      position: (79, 16),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "compileDTS",
        position: (91, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "name",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "f",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (91, 25),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "callPackage",
            position: (91, 30),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Function {
          argument: None,
          arguments: FunctionArguments {
           arguments: [
            FunctionArgument {
             identifier: "dtc",
             default: None,
            },
           ],
           ellipsis: false,
          },
          definition: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (91, 51),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "stdenv",
               position: (91, 56),
              },
              Raw {
               content: "mkDerivation",
               position: (91, 63),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (92, 5),
                 },
                ],
               },
               String {
                parts: [
                 Expression {
                  expression: Variable {
                   identifier: "name",
                   position: (92, 15),
                  },
                 },
                 Raw {
                  content: "-dtbo",
                  position: (92, 20),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "nativeBuildInputs",
                  position: (94, 5),
                 },
                ],
               },
               List {
                elements: [
                 Variable {
                  identifier: "dtc",
                  position: (94, 27),
                 },
                ],
                position: (94, 25),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "buildCommand",
                  position: (96, 5),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "dtc -I dts ",
                  position: (97, 1),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "f",
                   position: (97, 20),
                  },
                 },
                 Raw {
                  content: " -O dtb -@ -o $out\n",
                  position: (97, 22),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (91, 76),
            },
           ],
          },
          position: (91, 42),
         },
         Map {
          bindings: [],
          recursive: false,
          position: (99, 6),
         },
        ],
       },
       position: (91, 22),
      },
      position: (91, 16),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "withDTBOs",
        position: (103, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "xs",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "flip",
        position: (103, 19),
       },
       arguments: [
        Variable {
         identifier: "map",
         position: (103, 24),
        },
        Variable {
         identifier: "xs",
         position: (103, 28),
        },
        Function {
         argument: Some(
          "o",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: BinaryOperation {
          operator: Update,
          operands: [
           Variable {
            identifier: "o",
            position: (103, 35),
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "dtboFile",
                 position: (103, 42),
                },
               ],
              },
              IfThenElse {
               predicate: FunctionApplication {
                function: Variable {
                 identifier: "isNull",
                 position: (104, 8),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "o",
                   position: (104, 15),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "dtboFile",
                     position: (104, 17),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               then: IfThenElse {
                predicate: UnaryOperation {
                 operator: Not,
                 operand: FunctionApplication {
                  function: Variable {
                   identifier: "isNull",
                   position: (105, 11),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "o",
                     position: (105, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "dtsFile",
                       position: (105, 20),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                 position: (105, 10),
                },
                then: FunctionApplication {
                 function: Variable {
                  identifier: "compileDTS",
                  position: (105, 33),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "o",
                    position: (105, 44),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "name",
                      position: (105, 46),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "o",
                    position: (105, 51),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dtsFile",
                      position: (105, 53),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
                else_: FunctionApplication {
                 function: Variable {
                  identifier: "compileDTS",
                  position: (106, 12),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "o",
                    position: (106, 23),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "name",
                      position: (106, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (106, 31),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "writeText",
                       position: (106, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "dts",
                       position: (106, 47),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "o",
                      position: (106, 52),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "dtsText",
                        position: (106, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ],
                },
                position: (105, 7),
               },
               else_: PropertyAccess {
                expression: Variable {
                 identifier: "o",
                 position: (107, 10),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "dtboFile",
                   position: (107, 12),
                  },
                 ],
                },
                default: None,
               },
               position: (104, 5),
              },
             ),
            ],
            recursive: false,
            position: (103, 40),
           },
          ],
          position: (103, 37),
         },
         position: (103, 32),
        },
       ],
      },
      position: (103, 15),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (111, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (112, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "hardware",
               position: (112, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "deviceTree",
               position: (112, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "base",
               position: (112, 55),
              },
             ],
            },
           ],
           position: (112, 28),
          },
          String {
           parts: [
            Raw {
             content: "Use hardware.deviceTree.kernelPackage instead",
             position: (112, 64),
            },
           ],
          },
         ],
        },
       ],
       position: (111, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (115, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "hardware",
            position: (116, 7),
           },
           Raw {
            content: "deviceTree",
            position: (116, 16),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (117, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (117, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (118, 11),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (118, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "stdenv",
                     position: (118, 26),
                    },
                    Raw {
                     content: "hostPlatform",
                     position: (118, 33),
                    },
                    Raw {
                     content: "linux-kernel",
                     position: (118, 46),
                    },
                    Raw {
                     content: "DTB",
                     position: (118, 59),
                    },
                   ],
                  },
                  default: Some(
                   Variable {
                    identifier: "false",
                    position: (118, 66),
                   },
                  ),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (119, 11),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (119, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (119, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (120, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Build device tree files. These are used to describe the\nnon-discoverable hardware of a system.\n",
                    position: (121, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (117, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "kernelPackage",
               position: (126, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (126, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (127, 11),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (127, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "boot",
                     position: (127, 28),
                    },
                    Raw {
                     content: "kernelPackages",
                     position: (127, 33),
                    },
                    Raw {
                     content: "kernel",
                     position: (127, 48),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (128, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (128, 25),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "config.boot.kernelPackages.kernel",
                      position: (128, 44),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (129, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (129, 21),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.linux_latest",
                      position: (129, 40),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (130, 11),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (130, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (130, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (131, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Kernel package containing the base device-tree (.dtb) to boot. Uses\ndevice trees bundled with the Linux kernel by default.\n",
                    position: (132, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (126, 34),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "name",
               position: (137, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (137, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (138, 11),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (138, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (139, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "some-dtb.dtb",
                    position: (139, 22),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (140, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (140, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (140, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (140, 31),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (140, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (141, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The name of an explicit dtb to be loaded, relative to the dtb base.\nUseful in extlinux scenarios if the bootloader doesn't pick the\nright .dtb file from FDTDIR.\n",
                    position: (142, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (137, 25),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "filter",
               position: (148, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (148, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (149, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (149, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (149, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (149, 31),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (149, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (150, 11),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (150, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (151, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "*rpi*.dtb",
                    position: (151, 22),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (152, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Only include .dtb files matching glob expression.\n",
                    position: (153, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (148, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "overlays",
               position: (157, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (157, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (158, 11),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (158, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (159, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (159, 21),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[\n  { name = \"pps\"; dtsFile = ./dts/pps.dts; }\n  { name = \"spi\";\n    dtsText = \"...\";\n  }\n  { name = \"precompiled\"; dtboFile = ./dtbos/example.dtbo; }\n]\n",
                      position: (160, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (168, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (168, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (168, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (168, 32),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "coercedTo",
                        position: (168, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (168, 48),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "path",
                         position: (168, 54),
                        },
                       ],
                      },
                      default: None,
                     },
                     Function {
                      argument: Some(
                       "path",
                      ),
                      arguments: FunctionArguments {
                       arguments: [],
                       ellipsis: false,
                      },
                      definition: Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "name",
                            position: (169, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "baseNameOf",
                           position: (169, 20),
                          },
                          arguments: [
                           Variable {
                            identifier: "path",
                            position: (169, 31),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "dtboFile",
                            position: (170, 13),
                           },
                          ],
                         },
                         Variable {
                          identifier: "path",
                          position: (170, 24),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (168, 66),
                      },
                      position: (168, 60),
                     },
                     Variable {
                      identifier: "overlayType",
                      position: (171, 14),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (172, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of overlays to apply to base device-tree (.dtb) files.\n",
                    position: (173, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (157, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (177, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (177, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (178, 11),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (178, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (179, 11),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (179, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (179, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (179, 31),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (179, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "internal",
                    position: (180, 11),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (180, 22),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (181, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A path containing the result of applying `overlays` to `kernelPackage`.\n",
                    position: (182, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (177, 28),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (116, 29),
         },
        ),
       ],
       recursive: false,
       position: (115, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (188, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (188, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (188, 18),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (188, 22),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (190, 5),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "invalidOverlay",
                 position: (191, 7),
                },
               ],
              },
              Function {
               argument: Some(
                "o",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: BinaryOperation {
                operator: LogicalAnd,
                operands: [
                 BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "isNull",
                     position: (191, 27),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "o",
                       position: (191, 34),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "dtsFile",
                         position: (191, 36),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "isNull",
                     position: (191, 47),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "o",
                       position: (191, 54),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "dtsText",
                         position: (191, 56),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                  position: (191, 44),
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "isNull",
                   position: (191, 67),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "o",
                     position: (191, 74),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "dtboFile",
                       position: (191, 76),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ],
                position: (191, 64),
               },
               position: (191, 24),
              },
             ),
            ],
            target: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (192, 8),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "singleton",
                 position: (192, 12),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "assertion",
                    position: (193, 7),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (193, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "all",
                      position: (193, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "o",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: UnaryOperation {
                     operator: Not,
                     operand: FunctionApplication {
                      function: Variable {
                       identifier: "invalidOverlay",
                       position: (193, 32),
                      },
                      arguments: [
                       Variable {
                        identifier: "o",
                        position: (193, 47),
                       },
                      ],
                     },
                     position: (193, 31),
                    },
                    position: (193, 28),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (193, 50),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "overlays",
                       position: (193, 54),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "message",
                    position: (194, 7),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "deviceTree overlay needs one of dtsFile, dtsText or dtboFile set.\nOffending overlay(s):\n",
                    position: (195, 1),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (197, 11),
                     },
                     arguments: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "map",
                        position: (197, 21),
                       },
                       arguments: [
                        Function {
                         argument: Some(
                          "o",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: PropertyAccess {
                          expression: Variable {
                           identifier: "o",
                           position: (197, 29),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "name",
                             position: (197, 31),
                            },
                           ],
                          },
                          default: None,
                         },
                         position: (197, 26),
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "builtins",
                           position: (197, 38),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "filter",
                             position: (197, 47),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Variable {
                           identifier: "invalidOverlay",
                           position: (197, 54),
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (197, 69),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "overlays",
                              position: (197, 73),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\n",
                    position: (197, 84),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (192, 22),
              },
             ],
            },
            position: (190, 18),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "hardware",
              position: (201, 5),
             },
             Raw {
              content: "deviceTree",
              position: (201, 14),
             },
             Raw {
              content: "package",
              position: (201, 25),
             },
            ],
           },
           IfThenElse {
            predicate: BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (201, 39),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "overlays",
                  position: (201, 43),
                 },
                ],
               },
               default: None,
              },
              List {
               elements: [],
               position: (201, 55),
              },
             ],
             position: (201, 52),
            },
            then: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (202, 12),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "deviceTree",
                 position: (202, 17),
                },
                Raw {
                 content: "applyOverlays",
                 position: (202, 28),
                },
               ],
              },
              default: None,
             },
             arguments: [
              FunctionApplication {
               function: Variable {
                identifier: "filterDTBs",
                position: (202, 43),
               },
               arguments: [
                Variable {
                 identifier: "dtbsWithSymbols",
                 position: (202, 54),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "withDTBOs",
                position: (202, 72),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (202, 82),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "overlays",
                    position: (202, 86),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ],
            },
            else_: FunctionApplication {
             function: Variable {
              identifier: "filterDTBs",
              position: (203, 13),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (203, 24),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "kernelPackage",
                  position: (203, 28),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            position: (201, 35),
           },
          ),
         ],
         recursive: false,
         position: (188, 30),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (110, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}