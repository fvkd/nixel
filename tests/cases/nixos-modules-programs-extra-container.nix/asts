---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (5, 16),
        },
        Raw {
         content: "extra-container",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (7, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (8, 5),
           },
           Raw {
            content: "extra-container",
            position: (8, 14),
           },
           Raw {
            content: "enable",
            position: (8, 30),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (8, 39),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "extra-container, a tool for running declarative NixOS containers\nwithout host system rebuilds\n",
              position: (9, 1),
             },
            ],
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (7, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (13, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (13, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (13, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (13, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (14, 5),
             },
             Raw {
              content: "systemPackages",
              position: (14, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (14, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "extra-container",
                 position: (14, 41),
                },
               ],
              },
              default: None,
             },
            ],
            position: (14, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "boot",
              position: (15, 5),
             },
             Raw {
              content: "extraSystemdUnitPaths",
              position: (15, 10),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "/etc/systemd-mutable/system",
                position: (15, 37),
               },
              ],
             },
            ],
            position: (15, 34),
           },
          ),
         ],
         recursive: false,
         position: (13, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (6, 4),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}