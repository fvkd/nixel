---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "steam",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "steam",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (8, 11),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "steam",
          position: (8, 16),
         },
         Raw {
          content: "override",
          position: (8, 22),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "extraLibraries",
             position: (9, 5),
            },
           ],
          },
          to: Function {
           argument: Simple {
            identifier: "pkgs",
           },
           definition: With {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "config",
              position: (9, 33),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "hardware",
                position: (9, 40),
               },
               Raw {
                content: "opengl",
                position: (9, 49),
               },
              ],
             },
             default: None,
            },
            target: IfThenElse {
             predicate: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (10, 10),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "hostPlatform",
                 position: (10, 15),
                },
                Raw {
                 content: "is64bit",
                 position: (10, 28),
                },
               ],
              },
              default: None,
             },
             then: BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 Variable {
                  identifier: "package",
                  position: (11, 14),
                 },
                ],
                position: (11, 12),
               },
               Variable {
                identifier: "extraPackages",
                position: (11, 27),
               },
              ],
              position: (11, 24),
             },
             else_: BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 Variable {
                  identifier: "package32",
                  position: (12, 14),
                 },
                ],
                position: (12, 12),
               },
               Variable {
                identifier: "extraPackages32",
                position: (12, 29),
               },
              ],
              position: (12, 26),
             },
             position: (10, 7),
            },
            position: (9, 28),
           },
           position: (9, 22),
          },
         },
        ],
        recursive: false,
        position: (8, 31),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (15, 3),
        },
        Raw {
         content: "programs",
         position: (15, 11),
        },
        Raw {
         content: "steam",
         position: (15, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (16, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (16, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "steam",
              position: (16, 30),
             },
            ],
            position: (16, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "remotePlay",
            position: (18, 5),
           },
           Raw {
            content: "openFirewall",
            position: (18, 16),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (18, 31),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (19, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (19, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (19, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (20, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (20, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (21, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Open ports in the firewall for Steam Remote Play.\n",
                 position: (22, 1),
                },
               ],
               position: (21, 21),
              },
             },
            ],
            recursive: false,
            position: (18, 40),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "dedicatedServer",
            position: (26, 5),
           },
           Raw {
            content: "openFirewall",
            position: (26, 21),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (26, 36),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (27, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (27, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (27, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (28, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (28, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (29, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Open ports in the firewall for Source Dedicated Server.\n",
                 position: (30, 1),
                },
               ],
               position: (29, 21),
              },
             },
            ],
            recursive: false,
            position: (26, 45),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (15, 28),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (35, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (35, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (35, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (35, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "hardware",
              position: (36, 5),
             },
             Raw {
              content: "opengl",
              position: (36, 14),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (37, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (37, 16),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "driSupport",
                 position: (38, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (38, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "driSupport32Bit",
                 position: (39, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (39, 25),
              },
             },
            ],
            recursive: false,
            position: (36, 23),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "hardware",
              position: (43, 5),
             },
             Raw {
              content: "pulseaudio",
              position: (43, 14),
             },
             Raw {
              content: "support32Bit",
              position: (43, 25),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "config",
             position: (43, 40),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "hardware",
               position: (43, 47),
              },
              Raw {
               content: "pulseaudio",
               position: (43, 56),
              },
              Raw {
               content: "enable",
               position: (43, 67),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "hardware",
              position: (45, 5),
             },
             Raw {
              content: "steam-hardware",
              position: (45, 14),
             },
             Raw {
              content: "enable",
              position: (45, 29),
             },
            ],
           },
           to: Variable {
            identifier: "true",
            position: (45, 38),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (47, 5),
             },
             Raw {
              content: "systemPackages",
              position: (47, 17),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "steam",
              position: (47, 36),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "steam",
               position: (47, 42),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "run",
                 position: (47, 48),
                },
               ],
              },
              default: None,
             },
            ],
            position: (47, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "networking",
              position: (49, 5),
             },
             Raw {
              content: "firewall",
              position: (49, 16),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (49, 27),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkMerge",
                position: (49, 31),
               },
              ],
             },
             default: None,
            },
            arguments: [
             List {
              elements: [
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mkIf",
                  position: (50, 8),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (50, 13),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "remotePlay",
                      position: (50, 17),
                     },
                     Raw {
                      content: "openFirewall",
                      position: (50, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "allowedTCPPorts",
                        position: (51, 9),
                       },
                      ],
                     },
                     to: List {
                      elements: [
                       Int {
                        value: 27036,
                        position: (51, 29),
                       },
                      ],
                      position: (51, 27),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "allowedUDPPortRanges",
                        position: (52, 9),
                       },
                      ],
                     },
                     to: List {
                      elements: [
                       Map {
                        bindings: [
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "from",
                             position: (52, 36),
                            },
                           ],
                          },
                          to: Int {
                           value: 27031,
                           position: (52, 43),
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "to",
                             position: (52, 50),
                            },
                           ],
                          },
                          to: Int {
                           value: 27036,
                           position: (52, 55),
                          },
                         },
                        ],
                        recursive: false,
                        position: (52, 34),
                       },
                      ],
                      position: (52, 32),
                     },
                    },
                   ],
                   recursive: false,
                   position: (50, 41),
                  },
                 ],
                },
                position: (50, 7),
               },
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mkIf",
                  position: (55, 8),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (55, 13),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "dedicatedServer",
                      position: (55, 17),
                     },
                     Raw {
                      content: "openFirewall",
                      position: (55, 33),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "allowedTCPPorts",
                        position: (56, 9),
                       },
                      ],
                     },
                     to: List {
                      elements: [
                       Int {
                        value: 27015,
                        position: (56, 29),
                       },
                      ],
                      position: (56, 27),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "allowedUDPPorts",
                        position: (57, 9),
                       },
                      ],
                     },
                     to: List {
                      elements: [
                       Int {
                        value: 27015,
                        position: (57, 29),
                       },
                      ],
                      position: (57, 27),
                     },
                    },
                   ],
                   recursive: false,
                   position: (55, 46),
                  },
                 ],
                },
                position: (55, 7),
               },
              ],
              position: (49, 39),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (35, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (62, 3),
        },
        Raw {
         content: "maintainers",
         position: (62, 8),
        },
       ],
      },
      to: With {
       expression: Variable {
        identifier: "maintainers",
        position: (62, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "mkg20001",
          position: (62, 42),
         },
        ],
        position: (62, 40),
       },
       position: (62, 22),
      },
     },
    ],
    recursive: false,
    position: (14, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}