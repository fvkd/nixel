---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "pkg",
        position: (5, 3),
       },
      ],
     },
     List {
      elements: [
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (5, 11),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "switcheroo-control",
           position: (5, 16),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "switcherooControl",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (8, 3),
        },
        Raw {
         content: "services",
         position: (8, 11),
        },
        Raw {
         content: "switcherooControl",
         position: (8, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (9, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (9, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "switcheroo-control, a D-Bus service to check the availability of dual-GPU",
              position: (9, 30),
             },
            ],
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (12, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (12, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (12, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (12, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (13, 5),
             },
             Raw {
              content: "dbus",
              position: (13, 14),
             },
             Raw {
              content: "packages",
              position: (13, 19),
             },
            ],
           },
           Variable {
            identifier: "pkg",
            position: (13, 30),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (14, 5),
             },
             Raw {
              content: "systemPackages",
              position: (14, 17),
             },
            ],
           },
           Variable {
            identifier: "pkg",
            position: (14, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (15, 5),
             },
             Raw {
              content: "packages",
              position: (15, 13),
             },
            ],
           },
           Variable {
            identifier: "pkg",
            position: (15, 24),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (16, 5),
             },
             Raw {
              content: "targets",
              position: (16, 13),
             },
             Raw {
              content: "multi-user",
              position: (16, 21),
             },
             Raw {
              content: "wants",
              position: (16, 32),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "switcheroo-control.service",
                position: (16, 43),
               },
              ],
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}