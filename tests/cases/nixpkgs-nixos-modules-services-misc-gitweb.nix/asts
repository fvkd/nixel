---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "gitweb",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (11, 3),
        },
        Raw {
         content: "services",
         position: (11, 11),
        },
        Raw {
         content: "gitweb",
         position: (11, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "projectroot",
            position: (13, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (13, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (14, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/srv/git",
                 position: (14, 18),
                },
               ],
               position: (14, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (15, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (15, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (15, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (16, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Path to git projects (bare repositories) that should be served by\ngitweb. Must not end with a slash.\n",
                 position: (17, 1),
                },
               ],
               position: (16, 21),
              },
             },
            ],
            recursive: false,
            position: (13, 28),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraConfig",
            position: (22, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (22, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (23, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (23, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (24, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (24, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (24, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (25, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Verbatim configuration text appended to the generated gitweb.conf file.\n",
                 position: (26, 1),
                },
               ],
               position: (25, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (28, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "$feature{'highlight'}{'default'} = [1];\n$feature{'ctags'}{'default'} = [1];\n$feature{'avatar'}{'default'} = ['gravatar'];\n",
                 position: (29, 1),
                },
               ],
               position: (28, 17),
              },
             },
            ],
            recursive: false,
            position: (22, 28),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "gitwebTheme",
            position: (35, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (35, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (36, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (36, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (37, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (37, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (37, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (38, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Use an alternative theme for gitweb, strongly inspired by GitHub.\n",
                 position: (39, 1),
                },
               ],
               position: (38, 21),
              },
             },
            ],
            recursive: false,
            position: (35, 28),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "gitwebConfigFile",
            position: (43, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (43, 24),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (44, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (44, 17),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "writeText",
                   position: (44, 22),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "gitweb.conf",
                   position: (44, 33),
                  },
                 ],
                 position: (44, 32),
                },
                String {
                 parts: [
                  Raw {
                   content: "# path to git projects (<project>.git)\n$projectroot = \"",
                   position: (45, 1),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (46, 27),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "projectroot",
                       position: (46, 31),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\";\n$highlight_bin = \"",
                   position: (46, 43),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (47, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "highlight",
                       position: (47, 34),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/highlight\";\n",
                   position: (47, 44),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (48, 11),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "extraConfig",
                       position: (48, 15),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\n",
                   position: (48, 27),
                  },
                 ],
                 position: (44, 46),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (50, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalDocBook",
                position: (50, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "generated config file",
                   position: (50, 37),
                  },
                 ],
                 position: (50, 36),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (51, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (51, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (51, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "readOnly",
                 position: (52, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (52, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "internal",
                 position: (53, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (53, 18),
              },
             },
            ],
            recursive: false,
            position: (43, 33),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (11, 29),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (58, 3),
        },
        Raw {
         content: "maintainers",
         position: (58, 8),
        },
       ],
      },
      to: With {
       expression: Variable {
        identifier: "maintainers",
        position: (58, 27),
       },
       target: List {
        elements: [],
        position: (58, 40),
       },
       position: (58, 22),
      },
     },
    ],
    recursive: false,
    position: (9, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}