---
LetIn {
 bindings: [
  KeyValue(
   AttributePath {
    attributes: [
     Raw {
      content: "nixpkgs",
      position: (2, 3),
     },
    ],
   },
   FunctionApplication {
    function: Variable {
     identifier: "import",
     position: (2, 13),
    },
    arguments: [
     Path {
      parts: [
       Raw {
        content: "../../..",
        position: (2, 20),
       },
      ],
     },
    ],
   },
  ),
  Inherit(
   Some(
    FunctionApplication {
     function: Variable {
      identifier: "nixpkgs",
      position: (3, 12),
     },
     arguments: [
      Map {
       bindings: [],
       recursive: false,
       position: (3, 20),
      },
     ],
    },
   ),
   [
    Raw {
     content: "haskellPackages",
     position: (3, 24),
    },
    Raw {
     content: "lib",
     position: (3, 40),
    },
   ],
  ),
  KeyValue(
   AttributePath {
    attributes: [
     Raw {
      content: "maintainedPkgs",
      position: (4, 3),
     },
    ],
   },
   FunctionApplication {
    function: PropertyAccess {
     expression: Variable {
      identifier: "lib",
      position: (4, 20),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "filterAttrs",
        position: (4, 24),
       },
      ],
     },
     default: None,
    },
    arguments: [
     Function {
      argument: Some(
       "_",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "v",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: BinaryOperation {
        operator: GreaterThan,
        operands: [
         FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "builtins",
            position: (5, 11),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "length",
              position: (5, 20),
             },
            ],
           },
           default: None,
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "v",
             position: (5, 28),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "meta",
               position: (5, 30),
              },
              Raw {
               content: "maintainers",
               position: (5, 35),
              },
             ],
            },
            default: Some(
             List {
              elements: [],
              position: (5, 50),
             },
            ),
           },
          ],
         },
         Int {
          value: 0,
          position: (5, 56),
         },
        ],
        position: (5, 54),
       },
       position: (5, 8),
      },
      position: (5, 5),
     },
     Variable {
      identifier: "haskellPackages",
      position: (6, 5),
     },
    ],
   },
  ),
  KeyValue(
   AttributePath {
    attributes: [
     Raw {
      content: "brokenPkgs",
      position: (7, 3),
     },
    ],
   },
   FunctionApplication {
    function: PropertyAccess {
     expression: Variable {
      identifier: "lib",
      position: (7, 16),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "filterAttrs",
        position: (7, 20),
       },
      ],
     },
     default: None,
    },
    arguments: [
     Function {
      argument: Some(
       "_",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "v",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: PropertyAccess {
        expression: Variable {
         identifier: "v",
         position: (7, 39),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "meta",
           position: (7, 41),
          },
          Raw {
           content: "broken",
           position: (7, 46),
          },
         ],
        },
        default: None,
       },
       position: (7, 36),
      },
      position: (7, 33),
     },
     Variable {
      identifier: "maintainedPkgs",
      position: (7, 54),
     },
    ],
   },
  ),
  KeyValue(
   AttributePath {
    attributes: [
     Raw {
      content: "transitiveBrokenPkgs",
      position: (8, 3),
     },
    ],
   },
   FunctionApplication {
    function: PropertyAccess {
     expression: Variable {
      identifier: "lib",
      position: (8, 26),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "filterAttrs",
        position: (8, 30),
       },
      ],
     },
     default: None,
    },
    arguments: [
     Function {
      argument: Some(
       "_",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "v",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: BinaryOperation {
        operator: LogicalAnd,
        operands: [
         UnaryOperation {
          operator: Not,
          operand: PropertyAccess {
           expression: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (9, 14),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "tryEval",
                position: (9, 23),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "v",
               position: (9, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "outPath",
                 position: (9, 34),
                },
               ],
              },
              default: Some(
               Variable {
                identifier: "null",
                position: (9, 45),
               },
              ),
             },
            ],
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "success",
              position: (9, 52),
             },
            ],
           },
           default: None,
          },
          position: (9, 12),
         },
         UnaryOperation {
          operator: Not,
          operand: PropertyAccess {
           expression: Variable {
            identifier: "v",
            position: (9, 64),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "meta",
              position: (9, 66),
             },
             Raw {
              content: "broken",
              position: (9, 71),
             },
            ],
           },
           default: None,
          },
          position: (9, 63),
         },
        ],
        position: (9, 60),
       },
       position: (9, 9),
      },
      position: (9, 6),
     },
     Variable {
      identifier: "maintainedPkgs",
      position: (10, 5),
     },
    ],
   },
  ),
  KeyValue(
   AttributePath {
    attributes: [
     Raw {
      content: "infoList",
      position: (11, 3),
     },
    ],
   },
   Function {
    argument: Some(
     "pkgs",
    ),
    arguments: FunctionArguments {
     arguments: [],
     ellipsis: false,
    },
    definition: FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (11, 20),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "concatStringsSep",
         position: (11, 24),
        },
       ],
      },
      default: None,
     },
     arguments: [
      String {
       parts: [
        Raw {
         content: "\n",
         position: (11, 42),
        },
       ],
      },
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (11, 47),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "mapAttrsToList",
           position: (11, 51),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Function {
         argument: Some(
          "name",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: Function {
          argument: Some(
           "drv",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: String {
           parts: [
            Expression {
             expression: Variable {
              identifier: "name",
              position: (11, 81),
             },
            },
            Raw {
             content: " ",
             position: (11, 86),
            },
            Expression {
             expression: PropertyAccess {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "builtins",
                 position: (11, 90),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "elemAt",
                   position: (11, 99),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "drv",
                  position: (11, 106),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "meta",
                    position: (11, 110),
                   },
                   Raw {
                    content: "maintainers",
                    position: (11, 115),
                   },
                  ],
                 },
                 default: None,
                },
                Int {
                 value: 0,
                 position: (11, 127),
                },
               ],
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "github",
                 position: (11, 130),
                },
               ],
              },
              default: None,
             },
            },
           ],
          },
          position: (11, 73),
         },
         position: (11, 67),
        },
        Variable {
         identifier: "pkgs",
         position: (11, 140),
        },
       ],
      },
     ],
    },
    position: (11, 14),
   },
  ),
 ],
 target: Map {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "report",
       position: (13, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "BROKEN:\n",
       position: (14, 1),
      },
      Expression {
       expression: FunctionApplication {
        function: Variable {
         identifier: "infoList",
         position: (15, 7),
        },
        arguments: [
         Variable {
          identifier: "brokenPkgs",
          position: (15, 16),
         },
        ],
       },
      },
      Raw {
       content: "\n\nTRANSITIVE BROKEN:\n",
       position: (15, 27),
      },
      Expression {
       expression: FunctionApplication {
        function: Variable {
         identifier: "infoList",
         position: (18, 7),
        },
        arguments: [
         Variable {
          identifier: "transitiveBrokenPkgs",
          position: (18, 16),
         },
        ],
       },
      },
      Raw {
       content: "\n",
       position: (18, 37),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "transitiveErrors",
       position: (20, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "builtins",
       position: (21, 5),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "attrValues",
         position: (21, 14),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "transitiveBrokenPkgs",
       position: (21, 25),
      },
     ],
    },
   ),
  ],
  recursive: false,
  position: (12, 4),
 },
 position: (1, 1),
}