---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fontcursormisc_hidpi",
        position: (11, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (11, 26),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "xorg",
          position: (11, 31),
         },
         Raw {
          content: "fontxfree86type1",
          position: (11, 36),
         },
         Raw {
          content: "overrideAttrs",
          position: (11, 53),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Parentheses {
        expression: Function {
         argument: Simple {
          identifier: "old",
         },
         definition: LetIn {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "size",
               position: (16, 7),
              },
             ],
            },
            to: BinaryOperation {
             operator: Multiplication,
             operands: [
              Float {
               value: 2.39583,
               position: (16, 14),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (16, 24),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "services",
                  position: (16, 31),
                 },
                 Raw {
                  content: "xserver",
                  position: (16, 40),
                 },
                 Raw {
                  content: "dpi",
                  position: (16, 48),
                 },
                ],
               },
               default: None,
              },
             ],
             position: (16, 22),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "sizeString",
               position: (17, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "builtins",
               position: (17, 20),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "head",
                 position: (17, 29),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "builtins",
                  position: (17, 35),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "split",
                    position: (17, 44),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "\\.",
                    position: (17, 51),
                   },
                  ],
                  position: (17, 50),
                 },
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toString",
                    position: (17, 57),
                   },
                   arguments: [
                    Variable {
                     identifier: "size",
                     position: (17, 66),
                    },
                   ],
                  },
                  position: (17, 56),
                 },
                ],
               },
               position: (17, 34),
              },
             ],
            },
           },
          ],
          target: Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "postInstall",
                position: (20, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "alias='cursor -xfree86-cursor-medium-r-normal--0-",
                position: (21, 1),
               },
               Expression {
                expression: Variable {
                 identifier: "sizeString",
                 position: (21, 60),
                },
               },
               Raw {
                content: "-0-0-p-0-adobe-fontspecific'\necho \"$alias\" > $out/lib/X11/fonts/Type1/fonts.alias\n",
                position: (21, 71),
               },
              ],
              position: (20, 21),
             },
            },
           ],
           recursive: false,
           position: (19, 5),
          },
          position: (12, 5),
         },
         position: (11, 68),
        },
        position: (11, 67),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "hasHidpi",
        position: (26, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: LogicalAnd,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (27, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "hardware",
           position: (27, 12),
          },
          Raw {
           content: "video",
           position: (27, 21),
          },
          Raw {
           content: "hidpi",
           position: (27, 27),
          },
          Raw {
           content: "enable",
           position: (27, 33),
          },
         ],
        },
        default: None,
       },
       BinaryOperation {
        operator: NotEqualTo,
        operands: [
         PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (28, 5),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "services",
             position: (28, 12),
            },
            Raw {
             content: "xserver",
             position: (28, 21),
            },
            Raw {
             content: "dpi",
             position: (28, 29),
            },
           ],
          },
          default: None,
         },
         Variable {
          identifier: "null",
          position: (28, 36),
         },
        ],
        position: (28, 33),
       },
      ],
      position: (27, 40),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultFonts",
        position: (30, 3),
       },
      ],
     },
     to: List {
      elements: [
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (31, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "dejavu_fonts",
           position: (31, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (32, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "freefont_ttf",
           position: (32, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (33, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "gyre-fonts",
           position: (33, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (34, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "liberation_ttf",
           position: (34, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (35, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "unifont",
           position: (35, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (36, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "noto-fonts-emoji",
           position: (36, 12),
          },
         ],
        },
        default: None,
       },
      ],
      position: (31, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultXFonts",
        position: (39, 3),
       },
      ],
     },
     to: List {
      elements: [
       Parentheses {
        expression: IfThenElse {
         predicate: Variable {
          identifier: "hasHidpi",
          position: (40, 11),
         },
         then: Variable {
          identifier: "fontcursormisc_hidpi",
          position: (40, 25),
         },
         else_: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (40, 51),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "xorg",
             position: (40, 56),
            },
            Raw {
             content: "fontcursormisc",
             position: (40, 61),
            },
           ],
          },
          default: None,
         },
         position: (40, 8),
        },
        position: (40, 7),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (41, 7),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "xorg",
           position: (41, 12),
          },
          Raw {
           content: "fontmiscmisc",
           position: (41, 17),
          },
         ],
        },
        default: None,
       },
      ],
      position: (40, 5),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (47, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (48, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "fonts",
                position: (48, 31),
               },
              ],
              position: (48, 30),
             },
             String {
              parts: [
               Raw {
                content: "enableCoreFonts",
                position: (48, 39),
               },
              ],
              position: (48, 38),
             },
            ],
            position: (48, 28),
           },
           String {
            parts: [
             Raw {
              content: "Use fonts.fonts = [ pkgs.corefonts ]; instead.",
              position: (48, 59),
             },
            ],
            position: (48, 58),
           },
          ],
         },
         position: (48, 5),
        },
       ],
       position: (47, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (51, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "fonts",
            position: (53, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "fonts",
               position: (56, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (56, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (57, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (57, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (57, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (57, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (58, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (59, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.dejavu_fonts ]",
                      position: (59, 38),
                     },
                    ],
                    position: (59, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of primary font paths.",
                    position: (60, 24),
                   },
                  ],
                  position: (60, 23),
                 },
                },
               ],
               recursive: false,
               position: (56, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enableDefaultFonts",
               position: (63, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (63, 28),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (64, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (64, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (65, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (66, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Enable a basic set of fonts providing several font styles\nand families and reasonable coverage of Unicode.\n",
                    position: (67, 1),
                   },
                  ],
                  position: (66, 23),
                 },
                },
               ],
               recursive: false,
               position: (63, 37),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (53, 13),
         },
        },
       ],
       recursive: false,
       position: (51, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (76, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (76, 12),
       },
       arguments: [
        List {
         elements: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "fonts",
                position: (77, 7),
               },
               Raw {
                content: "fonts",
                position: (77, 13),
               },
              ],
             },
             to: FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (77, 21),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (77, 26),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "fonts",
                   position: (77, 33),
                  },
                  Raw {
                   content: "enableDefaultFonts",
                   position: (77, 39),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "defaultFonts",
                position: (77, 58),
               },
              ],
             },
            },
           ],
           recursive: false,
           position: (77, 5),
          },
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "fonts",
                position: (78, 7),
               },
               Raw {
                content: "fonts",
                position: (78, 13),
               },
              ],
             },
             to: FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (78, 21),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (78, 26),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "services",
                   position: (78, 33),
                  },
                  Raw {
                   content: "xserver",
                   position: (78, 42),
                  },
                  Raw {
                   content: "enable",
                   position: (78, 50),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "defaultXFonts",
                position: (78, 57),
               },
              ],
             },
            },
           ],
           recursive: false,
           position: (78, 5),
          },
         ],
         position: (76, 20),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (46, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}