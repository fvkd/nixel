---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (2, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (4, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (4, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (4, 16),
        },
        Raw {
         content: "klipper",
         position: (4, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "format",
        position: (5, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (5, 12),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "formats",
          position: (5, 17),
         },
         Raw {
          content: "ini",
          position: (5, 25),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "listToValue",
             position: (7, 5),
            },
           ],
          },
          Function {
           argument: Simple {
            identifier: "l",
           },
           definition: IfThenElse {
            predicate: BinaryOperation {
             operator: EqualTo,
             operands: [
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "builtins",
                 position: (8, 10),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "length",
                   position: (8, 19),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Variable {
                 identifier: "l",
                 position: (8, 26),
                },
               ],
              },
              Int {
               value: 1,
               position: (8, 31),
              },
             ],
             position: (8, 28),
            },
            then: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "generators",
               position: (8, 38),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "mkValueStringDefault",
                 position: (8, 49),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [],
               recursive: false,
               position: (8, 70),
              },
              FunctionApplication {
               function: Variable {
                identifier: "head",
                position: (8, 74),
               },
               arguments: [
                Variable {
                 identifier: "l",
                 position: (8, 79),
                },
               ],
              },
             ],
            },
            else_: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (9, 12),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "concatMapStrings",
                 position: (9, 16),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Function {
               argument: Simple {
                identifier: "s",
               },
               definition: String {
                parts: [
                 Raw {
                  content: "\n  ",
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "generators",
                     position: (9, 44),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "mkValueStringDefault",
                       position: (9, 55),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (9, 76),
                    },
                    Variable {
                     identifier: "s",
                     position: (9, 79),
                    },
                   ],
                  },
                 },
                ],
                position: (9, 37),
               },
               position: (9, 34),
              },
              Variable {
               identifier: "l",
               position: (9, 84),
              },
             ],
            },
            position: (8, 7),
           },
           position: (7, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "mkKeyValue",
             position: (10, 5),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "generators",
             position: (10, 18),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "mkKeyValueDefault",
               position: (10, 29),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [],
             recursive: false,
             position: (10, 47),
            },
            String {
             parts: [
              Raw {
               content: ":",
              },
             ],
             position: (10, 50),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (5, 29),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (15, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (16, 5),
           },
           Raw {
            content: "klipper",
            position: (16, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (17, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (17, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Klipper, the 3D printer firmware",
                },
               ],
               position: (17, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (19, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (19, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (20, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (20, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (20, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (21, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (21, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "klipper",
                     position: (21, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (22, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (22, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.klipper",
                     },
                    ],
                    position: (22, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (23, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The Klipper package.",
                   },
                  ],
                  position: (23, 23),
                 },
                ),
               ],
               recursive: false,
               position: (19, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "inputTTY",
               position: (26, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (26, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (27, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (27, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (27, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (28, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/klipper/tty",
                   },
                  ],
                  position: (28, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (29, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path of the virtual printer symlink to create.",
                   },
                  ],
                  position: (29, 23),
                 },
                ),
               ],
               recursive: false,
               position: (26, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "apiSocket",
               position: (32, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (32, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (33, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (33, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (33, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (33, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (33, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (34, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/klipper/api",
                   },
                  ],
                  position: (34, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (35, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path of the API socket to create.",
                   },
                  ],
                  position: (35, 23),
                 },
                ),
               ],
               recursive: false,
               position: (32, 28),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "octoprintIntegration",
               position: (38, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (38, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (39, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (39, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (39, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (40, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (40, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (41, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Allows Octoprint to control Klipper.",
                   },
                  ],
                  position: (41, 23),
                 },
                ),
               ],
               recursive: false,
               position: (38, 39),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "user",
               position: (44, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (44, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (45, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (45, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (45, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (45, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (45, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (46, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (46, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (47, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "User account under which Klipper runs.\n\nIf null is specified (default), a temporary user will be created by systemd.\n",
                   },
                  ],
                  position: (47, 23),
                 },
                ),
               ],
               recursive: false,
               position: (44, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "group",
               position: (54, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (54, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (55, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (55, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (55, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (55, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (55, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (56, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (56, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (57, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Group account under which Klipper runs.\n\nIf null is specified (default), a temporary user will be created by systemd.\n",
                   },
                  ],
                  position: (57, 23),
                 },
                ),
               ],
               recursive: false,
               position: (54, 24),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "settings",
               position: (64, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (64, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (65, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "format",
                   position: (65, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (65, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (66, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (66, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (67, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Configuration for Klipper. See the <link xlink:href=\"https://www.klipper3d.org/Overview.html#configuration-and-tuning-guides\">documentation</link>\nfor supported values.\n",
                   },
                  ],
                  position: (67, 23),
                 },
                ),
               ],
               recursive: false,
               position: (64, 27),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (16, 24),
         },
        ),
       ],
       recursive: false,
       position: (15, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (76, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (76, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (76, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (76, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (77, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (79, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (79, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "octoprintIntegration",
                      position: (79, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (79, 49),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "services",
                      position: (79, 56),
                     },
                     Raw {
                      content: "octoprint",
                      position: (79, 65),
                     },
                     Raw {
                      content: "enable",
                      position: (79, 75),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (79, 46),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (80, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Option klipper.octoprintIntegration requires Octoprint to be enabled on this system. Please enable services.octoprint to use it.",
                  },
                 ],
                 position: (80, 19),
                },
               ),
              ],
              recursive: false,
              position: (78, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (83, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (83, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "user",
                        position: (83, 25),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (83, 33),
                    },
                   ],
                   position: (83, 30),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (83, 41),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "group",
                        position: (83, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (83, 54),
                    },
                   ],
                   position: (83, 51),
                  },
                 ],
                 position: (83, 38),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (84, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Option klipper.group is not set when a user is specified.",
                  },
                 ],
                 position: (84, 19),
                },
               ),
              ],
              recursive: false,
              position: (82, 7),
             },
            ],
            position: (77, 18),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (88, 5),
             },
             Raw {
              content: "etc",
              position: (88, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "klipper.cfg",
                },
               ],
               position: (88, 21),
              },
             },
             Raw {
              content: "source",
              position: (88, 35),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "format",
              position: (88, 44),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "generate",
                position: (88, 51),
               },
              ],
             },
             default: None,
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "klipper.cfg",
               },
              ],
              position: (88, 60),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (88, 74),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "settings",
                 position: (88, 78),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (90, 5),
             },
             Raw {
              content: "klipper",
              position: (90, 14),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (90, 24),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (90, 29),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "octoprintIntegration",
                 position: (90, 33),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "user",
                   position: (91, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (91, 14),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "services",
                    position: (91, 21),
                   },
                   Raw {
                    content: "octoprint",
                    position: (91, 30),
                   },
                   Raw {
                    content: "user",
                    position: (91, 40),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "group",
                   position: (92, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (92, 15),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "services",
                    position: (92, 22),
                   },
                   Raw {
                    content: "octoprint",
                    position: (92, 31),
                   },
                   Raw {
                    content: "group",
                    position: (92, 41),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
              position: (90, 54),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (95, 5),
             },
             Raw {
              content: "services",
              position: (95, 13),
             },
             Raw {
              content: "klipper",
              position: (95, 22),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "klippyArgs",
                 position: (96, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Addition,
               operands: [
                String {
                 parts: [
                  Raw {
                   content: "--input-tty=",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (96, 35),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "inputTTY",
                       position: (96, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 position: (96, 20),
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optionalString",
                  position: (97, 11),
                 },
                 arguments: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (97, 27),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "apiSocket",
                        position: (97, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (97, 44),
                    },
                   ],
                   position: (97, 41),
                  },
                  String {
                   parts: [
                    Raw {
                     content: " --api-server=",
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (97, 67),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "apiSocket",
                         position: (97, 71),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   position: (97, 50),
                  },
                 ],
                },
               ],
               position: (97, 9),
              },
             ),
            ],
            target: Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (99, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Klipper 3D Printer Firmware",
                 },
                ],
                position: (99, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "wantedBy",
                  position: (100, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "multi-user.target",
                   },
                  ],
                  position: (100, 20),
                 },
                ],
                position: (100, 18),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "after",
                  position: (101, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "network.target",
                   },
                  ],
                  position: (101, 17),
                 },
                ],
                position: (101, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "serviceConfig",
                  position: (103, 7),
                 },
                ],
               },
               BinaryOperation {
                operator: Update,
                operands: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "ExecStart",
                       position: (104, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (104, 24),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "package",
                           position: (104, 28),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/lib/klipper/klippy.py ",
                      },
                      Expression {
                       expression: Variable {
                        identifier: "klippyArgs",
                        position: (104, 61),
                       },
                      },
                      Raw {
                       content: " /etc/klipper.cfg",
                      },
                     ],
                     position: (104, 21),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "RuntimeDirectory",
                       position: (105, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "klipper",
                      },
                     ],
                     position: (105, 28),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "SupplementaryGroups",
                       position: (106, 9),
                      },
                     ],
                    },
                    List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "dialout",
                        },
                       ],
                       position: (106, 33),
                      },
                     ],
                     position: (106, 31),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "WorkingDirectory",
                       position: (107, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (107, 31),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "package",
                           position: (107, 35),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/lib",
                      },
                     ],
                     position: (107, 28),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (103, 23),
                 },
                 IfThenElse {
                  predicate: BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (108, 16),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "user",
                        position: (108, 20),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (108, 28),
                    },
                   ],
                   position: (108, 25),
                  },
                  then: Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Group",
                        position: (109, 9),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (109, 17),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "group",
                         position: (109, 21),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "User",
                        position: (110, 9),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (110, 16),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "user",
                         position: (110, 20),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                   ],
                   recursive: false,
                   position: (108, 38),
                  },
                  else_: Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "DynamicUser",
                        position: (112, 9),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (112, 23),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "User",
                        position: (113, 9),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "klipper",
                       },
                      ],
                      position: (113, 16),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (111, 14),
                  },
                  position: (108, 13),
                 },
                ],
                position: (108, 9),
               },
              ),
             ],
             recursive: false,
             position: (98, 8),
            },
            position: (95, 32),
           },
          ),
         ],
         recursive: false,
         position: (76, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (3, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}