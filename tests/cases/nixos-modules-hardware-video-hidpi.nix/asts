---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "config",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (2, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (5, 3),
       },
       Raw {
        content: "hardware",
        position: (5, 11),
       },
       Raw {
        content: "video",
        position: (5, 20),
       },
       Raw {
        content: "hidpi",
        position: (5, 26),
       },
       Raw {
        content: "enable",
        position: (5, 32),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkEnableOption",
       position: (5, 41),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "Font/DPI configuration optimized for HiDPI displays",
         },
        ],
        position: (5, 56),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (7, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (7, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (7, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "hardware",
           position: (7, 24),
          },
          Raw {
           content: "video",
           position: (7, 33),
          },
          Raw {
           content: "hidpi",
           position: (7, 39),
          },
          Raw {
           content: "enable",
           position: (7, 45),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "console",
             position: (8, 5),
            },
            Raw {
             content: "font",
             position: (8, 13),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (8, 20),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "mkDefault",
               position: (8, 24),
              },
             ],
            },
            default: None,
           },
           arguments: [
            String {
             parts: [
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (8, 37),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "terminus_font",
                   position: (8, 42),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/share/consolefonts/ter-v32n.psf.gz",
              },
             ],
             position: (8, 34),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "console",
             position: (11, 5),
            },
            Raw {
             content: "earlySetup",
             position: (11, 13),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkDefault",
            position: (11, 26),
           },
           arguments: [
            Variable {
             identifier: "true",
             position: (11, 36),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "boot",
             position: (12, 5),
            },
            Raw {
             content: "loader",
             position: (12, 10),
            },
            Raw {
             content: "systemd-boot",
             position: (12, 17),
            },
            Raw {
             content: "consoleMode",
             position: (12, 30),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkDefault",
            position: (12, 44),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "1",
              },
             ],
             position: (12, 54),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (7, 52),
       },
      ],
     },
    ),
   ],
   recursive: false,
   position: (4, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}