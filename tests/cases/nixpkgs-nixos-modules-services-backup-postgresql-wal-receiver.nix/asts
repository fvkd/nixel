---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "receiverSubmodule",
        position: (6, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "options",
           position: (7, 5),
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "postgresqlPackage",
              position: (8, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (8, 27),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (9, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (9, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "package",
                    position: (9, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (10, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (10, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "pkgs.postgresql_11",
                     position: (10, 38),
                    },
                   ],
                   position: (10, 37),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (11, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "PostgreSQL package to use.\n",
                   position: (12, 1),
                  },
                 ],
                 position: (11, 23),
                },
               },
              ],
              recursive: false,
              position: (8, 36),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "directory",
              position: (16, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (16, 19),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (17, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (17, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "path",
                    position: (17, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (18, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (18, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "/mnt/pg_wal/main/",
                     position: (18, 38),
                    },
                   ],
                   position: (18, 37),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (19, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Directory to write the output to.\n",
                   position: (20, 1),
                  },
                 ],
                 position: (19, 23),
                },
               },
              ],
              recursive: false,
              position: (16, 28),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "statusInterval",
              position: (24, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (24, 24),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (25, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (25, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (25, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (26, 9),
                  },
                 ],
                },
                to: Int {
                 value: 10,
                 position: (26, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (27, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Specifies the number of seconds between status packets sent back to the server.\nThis allows for easier monitoring of the progress from server.\nA value of zero disables the periodic status updates completely,\nalthough an update will still be sent when requested by the server, to avoid timeout disconnect.\n",
                   position: (28, 1),
                  },
                 ],
                 position: (27, 23),
                },
               },
              ],
              recursive: false,
              position: (24, 33),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "slot",
              position: (35, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (35, 14),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (36, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (36, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (36, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (37, 9),
                  },
                 ],
                },
                to: String {
                 parts: [],
                 position: (37, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (38, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "some_slot_name",
                   position: (38, 20),
                  },
                 ],
                 position: (38, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (39, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Require <command>pg_receivewal</command> to use an existing replication slot (see\n<link xlink:href=\"https://www.postgresql.org/docs/current/warm-standby.html#STREAMING-REPLICATION-SLOTS\">Section 26.2.6 of the PostgreSQL manual</link>).\nWhen this option is used, <command>pg_receivewal</command> will report a flush position to the server,\nindicating when each segment has been synchronized to disk so that the server can remove that segment if it is not otherwise needed.\n\nWhen the replication client of <command>pg_receivewal</command> is configured on the server as a synchronous standby,\nthen using a replication slot will report the flush position to the server, but only when a WAL file is closed.\nTherefore, that configuration will cause transactions on the primary to wait for a long time and effectively not work satisfactorily.\nThe option <option>synchronous</option> must be specified in addition to make this work correctly.\n",
                   position: (40, 1),
                  },
                 ],
                 position: (39, 23),
                },
               },
              ],
              recursive: false,
              position: (35, 23),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "synchronous",
              position: (52, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (52, 21),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (53, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (53, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (53, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (54, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (54, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (55, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Flush the WAL data to disk immediately after it has been received.\nAlso send a status packet back to the server immediately after flushing, regardless of <option>statusInterval</option>.\n\nThis option should be specified if the replication client of <command>pg_receivewal</command> is configured on the server as a synchronous standby,\nto ensure that timely feedback is sent to the server.\n",
                   position: (56, 1),
                  },
                 ],
                 position: (55, 23),
                },
               },
              ],
              recursive: false,
              position: (52, 30),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "compress",
              position: (64, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (64, 18),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (65, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (65, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "ints",
                     position: (65, 22),
                    },
                    Raw {
                     content: "between",
                     position: (65, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Int {
                   value: 0,
                   position: (65, 35),
                  },
                  Int {
                   value: 9,
                   position: (65, 37),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (66, 9),
                  },
                 ],
                },
                to: Int {
                 value: 0,
                 position: (66, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (67, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Enables gzip compression of write-ahead logs, and specifies the compression level\n(<literal>0</literal> through <literal>9</literal>, <literal>0</literal> being no compression and <literal>9</literal> being best compression).\nThe suffix <literal>.gz</literal> will automatically be added to all filenames.\n\nThis option requires PostgreSQL >= 10.\n",
                   position: (68, 1),
                  },
                 ],
                 position: (67, 23),
                },
               },
              ],
              recursive: false,
              position: (64, 27),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "connection",
              position: (76, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (76, 20),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (77, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (77, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (77, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (78, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "postgresql://user@somehost",
                   position: (78, 20),
                  },
                 ],
                 position: (78, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (79, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Specifies parameters used to connect to the server, as a connection string.\nSee <link xlink:href=\"https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING\">Section 34.1.1 of the PostgreSQL manual</link> for more information.\n\nBecause <command>pg_receivewal</command> doesn't connect to any particular database in the cluster,\ndatabase name in the connection string will be ignored.\n",
                   position: (80, 1),
                  },
                 ],
                 position: (79, 23),
                },
               },
              ],
              recursive: false,
              position: (76, 29),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "extraArgs",
              position: (88, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (88, 19),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (89, 9),
                  },
                 ],
                },
                to: With {
                 expression: Variable {
                  identifier: "types",
                  position: (89, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (89, 28),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (89, 35),
                   },
                  ],
                 },
                 position: (89, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (90, 9),
                  },
                 ],
                },
                to: List {
                 elements: [],
                 position: (90, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (91, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (91, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "[\n  \"--no-sync\"\n]\n",
                     position: (92, 1),
                    },
                   ],
                   position: (91, 37),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (96, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "A list of extra arguments to pass to the <command>pg_receivewal</command> command.\n",
                   position: (97, 1),
                  },
                 ],
                 position: (96, 23),
                },
               },
              ],
              recursive: false,
              position: (88, 28),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (101, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (101, 21),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (102, 9),
                  },
                 ],
                },
                to: With {
                 expression: Variable {
                  identifier: "types",
                  position: (102, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (102, 28),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (102, 36),
                   },
                  ],
                 },
                 position: (102, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (103, 9),
                  },
                 ],
                },
                to: Map {
                 bindings: [],
                 recursive: false,
                 position: (103, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "example",
                   position: (104, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (104, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "{\n  PGPASSFILE = \"/private/passfile\";\n  PGSSLMODE = \"require\";\n}\n",
                     position: (105, 1),
                    },
                   ],
                   position: (104, 37),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (110, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Environment variables passed to the service.\nUsable parameters are listed in <link xlink:href=\"https://www.postgresql.org/docs/current/libpq-envars.html\">Section 34.14 of the PostgreSQL manual</link>.\n",
                   position: (111, 1),
                  },
                 ],
                 position: (110, 23),
                },
               },
              ],
              recursive: false,
              position: (101, 30),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (7, 15),
        },
       },
      ],
      recursive: false,
      position: (6, 23),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (119, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (120, 5),
           },
           Raw {
            content: "postgresqlWalReceiver",
            position: (120, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "receivers",
               position: (121, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (121, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (122, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (122, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (122, 28),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "submodule",
                       position: (122, 37),
                      },
                      arguments: [
                       Variable {
                        identifier: "receiverSubmodule",
                        position: (122, 47),
                       },
                      ],
                     },
                     position: (122, 36),
                    },
                   ],
                  },
                  position: (122, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (123, 9),
                   },
                  ],
                 },
                 to: Map {
                  bindings: [],
                  recursive: false,
                  position: (123, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (124, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (124, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  main = {\n    postgresqlPackage = pkgs.postgresql_11;\n    directory = /mnt/pg_wal/main/;\n    slot = \"main_wal_receiver\";\n    connection = \"postgresql://user@somehost\";\n  };\n}\n",
                      position: (125, 1),
                     },
                    ],
                    position: (124, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (134, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "PostgreSQL WAL receivers.\nStream write-ahead logs from a PostgreSQL server using <command>pg_receivewal</command> (formerly <command>pg_receivexlog</command>).\nSee <link xlink:href=\"https://www.postgresql.org/docs/current/app-pgreceivewal.html\">the man page</link> for more information.\n",
                    position: (135, 1),
                   },
                  ],
                  position: (134, 23),
                 },
                },
               ],
               recursive: false,
               position: (121, 28),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (120, 38),
         },
        },
       ],
       recursive: false,
       position: (119, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (143, 3),
        },
       ],
      },
      to: LetIn {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "receivers",
            position: (144, 5),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (144, 17),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "services",
             position: (144, 24),
            },
            Raw {
             content: "postgresqlWalReceiver",
             position: (144, 33),
            },
            Raw {
             content: "receivers",
             position: (144, 55),
            },
           ],
          },
          default: None,
         },
        },
       ],
       target: FunctionApplication {
        function: Variable {
         identifier: "mkIf",
         position: (145, 6),
        },
        arguments: [
         Parentheses {
          expression: BinaryOperation {
           operator: NotEqualTo,
           operands: [
            Variable {
             identifier: "receivers",
             position: (145, 12),
            },
            Map {
             bindings: [],
             recursive: false,
             position: (145, 25),
            },
           ],
           position: (145, 22),
          },
          position: (145, 11),
         },
         Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "users",
               position: (146, 5),
              },
             ],
            },
            to: Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "users",
                  position: (147, 7),
                 },
                 Raw {
                  content: "postgres",
                  position: (147, 13),
                 },
                ],
               },
               to: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "uid",
                     position: (148, 9),
                    },
                   ],
                  },
                  to: PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (148, 15),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "ids",
                      position: (148, 22),
                     },
                     Raw {
                      content: "uids",
                      position: (148, 26),
                     },
                     Raw {
                      content: "postgres",
                      position: (148, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "group",
                     position: (149, 9),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "postgres",
                     position: (149, 18),
                    },
                   ],
                   position: (149, 17),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "description",
                     position: (150, 9),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "PostgreSQL server user",
                     position: (150, 24),
                    },
                   ],
                   position: (150, 23),
                  },
                 },
                ],
                recursive: false,
                position: (147, 24),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "groups",
                  position: (153, 7),
                 },
                 Raw {
                  content: "postgres",
                  position: (153, 14),
                 },
                ],
               },
               to: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "gid",
                     position: (154, 9),
                    },
                   ],
                  },
                  to: PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (154, 15),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "ids",
                      position: (154, 22),
                     },
                     Raw {
                      content: "gids",
                      position: (154, 26),
                     },
                     Raw {
                      content: "postgres",
                      position: (154, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                ],
                recursive: false,
                position: (153, 25),
               },
              },
             ],
             recursive: false,
             position: (146, 13),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "assertions",
               position: (158, 5),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "concatLists",
              position: (158, 18),
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "attrsets",
                  position: (158, 31),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "mapAttrsToList",
                    position: (158, 40),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Parentheses {
                  expression: Function {
                   argument: Simple {
                    identifier: "name",
                   },
                   definition: Function {
                    argument: Simple {
                     identifier: "config",
                    },
                    definition: List {
                     elements: [
                      Map {
                       bindings: [
                        Binding {
                         from: AttributePath {
                          parts: [
                           Raw {
                            content: "assertion",
                            position: (160, 9),
                           },
                          ],
                         },
                         to: BinaryOperation {
                          operator: Implication,
                          operands: [
                           BinaryOperation {
                            operator: GreaterThan,
                            operands: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (160, 21),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "compress",
                                 position: (160, 28),
                                },
                               ],
                              },
                              default: None,
                             },
                             Int {
                              value: 0,
                              position: (160, 39),
                             },
                            ],
                            position: (160, 37),
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "versionAtLeast",
                             position: (160, 44),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (160, 59),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "postgresqlPackage",
                                 position: (160, 66),
                                },
                                Raw {
                                 content: "version",
                                 position: (160, 84),
                                },
                               ],
                              },
                              default: None,
                             },
                             String {
                              parts: [
                               Raw {
                                content: "10",
                                position: (160, 93),
                               },
                              ],
                              position: (160, 92),
                             },
                            ],
                           },
                          ],
                          position: (160, 41),
                         },
                        },
                        Binding {
                         from: AttributePath {
                          parts: [
                           Raw {
                            content: "message",
                            position: (161, 9),
                           },
                          ],
                         },
                         to: String {
                          parts: [
                           Raw {
                            content: "Invalid configuration for WAL receiver \"",
                            position: (161, 20),
                           },
                           Expression {
                            expression: Variable {
                             identifier: "name",
                             position: (161, 63),
                            },
                           },
                           Raw {
                            content: "\": compress requires PostgreSQL version >= 10.",
                            position: (161, 68),
                           },
                          ],
                          position: (161, 19),
                         },
                        },
                       ],
                       recursive: false,
                       position: (159, 7),
                      },
                     ],
                     position: (158, 70),
                    },
                    position: (158, 62),
                   },
                   position: (158, 56),
                  },
                  position: (158, 55),
                 },
                 Variable {
                  identifier: "receivers",
                  position: (163, 8),
                 },
                ],
               },
               position: (158, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "systemd",
               position: (165, 5),
              },
              Raw {
               content: "tmpfiles",
               position: (165, 13),
              },
              Raw {
               content: "rules",
               position: (165, 22),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mapAttrsToList",
              position: (165, 30),
             },
             arguments: [
              Parentheses {
               expression: Function {
                argument: Simple {
                 identifier: "name",
                },
                definition: Function {
                 argument: Simple {
                  identifier: "config",
                 },
                 definition: String {
                  parts: [
                   Raw {
                    content: "d ",
                    position: (166, 1),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "escapeShellArg",
                      position: (166, 11),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (166, 26),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "directory",
                          position: (166, 33),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " 0750 postgres postgres - -\n",
                    position: (166, 43),
                   },
                  ],
                  position: (165, 60),
                 },
                 position: (165, 52),
                },
                position: (165, 46),
               },
               position: (165, 45),
              },
              Variable {
               identifier: "receivers",
               position: (167, 9),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "systemd",
               position: (169, 5),
              },
              Raw {
               content: "services",
               position: (169, 13),
              },
             ],
            },
            to: With {
             expression: Variable {
              identifier: "attrsets",
              position: (169, 29),
             },
             target: FunctionApplication {
              function: Variable {
               identifier: "mapAttrs'",
               position: (169, 39),
              },
              arguments: [
               Parentheses {
                expression: Function {
                 argument: Simple {
                  identifier: "name",
                 },
                 definition: Function {
                  argument: Simple {
                   identifier: "config",
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "nameValuePair",
                    position: (169, 64),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "postgresql-wal-receiver-",
                       position: (169, 79),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "name",
                        position: (169, 105),
                       },
                      },
                     ],
                     position: (169, 78),
                    },
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (170, 7),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "PostgreSQL WAL receiver (",
                          position: (170, 22),
                         },
                         Expression {
                          expression: Variable {
                           identifier: "name",
                           position: (170, 49),
                          },
                         },
                         Raw {
                          content: ")",
                          position: (170, 54),
                         },
                        ],
                        position: (170, 21),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "wantedBy",
                          position: (171, 7),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "multi-user.target",
                            position: (171, 21),
                           },
                          ],
                          position: (171, 20),
                         },
                        ],
                        position: (171, 18),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "startLimitIntervalSec",
                          position: (172, 7),
                         },
                        ],
                       },
                       to: Int {
                        value: 0,
                        position: (172, 31),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "serviceConfig",
                          position: (174, 7),
                         },
                        ],
                       },
                       to: Map {
                        bindings: [
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "User",
                             position: (175, 9),
                            },
                           ],
                          },
                          to: String {
                           parts: [
                            Raw {
                             content: "postgres",
                             position: (175, 17),
                            },
                           ],
                           position: (175, 16),
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "Group",
                             position: (176, 9),
                            },
                           ],
                          },
                          to: String {
                           parts: [
                            Raw {
                             content: "postgres",
                             position: (176, 18),
                            },
                           ],
                           position: (176, 17),
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "KillSignal",
                             position: (177, 9),
                            },
                           ],
                          },
                          to: String {
                           parts: [
                            Raw {
                             content: "SIGINT",
                             position: (177, 23),
                            },
                           ],
                           position: (177, 22),
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "Restart",
                             position: (178, 9),
                            },
                           ],
                          },
                          to: String {
                           parts: [
                            Raw {
                             content: "always",
                             position: (178, 20),
                            },
                           ],
                           position: (178, 19),
                          },
                         },
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "RestartSec",
                             position: (179, 9),
                            },
                           ],
                          },
                          to: Int {
                           value: 60,
                           position: (179, 22),
                          },
                         },
                        ],
                        recursive: false,
                        position: (174, 23),
                       },
                      },
                      Inherit {
                       from: Some(
                        Variable {
                         identifier: "config",
                         position: (182, 16),
                        },
                       ),
                       attributes: [
                        Raw {
                         content: "environment",
                         position: (182, 24),
                        },
                       ],
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "script",
                          position: (184, 7),
                         },
                        ],
                       },
                       to: LetIn {
                        bindings: [
                         Binding {
                          from: AttributePath {
                           parts: [
                            Raw {
                             content: "receiverCommand",
                             position: (185, 9),
                            },
                           ],
                          },
                          to: Function {
                           argument: Simple {
                            identifier: "postgresqlPackage",
                           },
                           definition: IfThenElse {
                            predicate: Parentheses {
                             expression: FunctionApplication {
                              function: Variable {
                               identifier: "versionAtLeast",
                               position: (186, 14),
                              },
                              arguments: [
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "postgresqlPackage",
                                 position: (186, 29),
                                },
                                attribute_path: AttributePath {
                                 parts: [
                                  Raw {
                                   content: "version",
                                   position: (186, 47),
                                  },
                                 ],
                                },
                                default: None,
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "10",
                                  position: (186, 56),
                                 },
                                ],
                                position: (186, 55),
                               },
                              ],
                             },
                             position: (186, 13),
                            },
                            then: String {
                             parts: [
                              Expression {
                               expression: Variable {
                                identifier: "postgresqlPackage",
                                position: (187, 20),
                               },
                              },
                              Raw {
                               content: "/bin/pg_receivewal",
                               position: (187, 38),
                              },
                             ],
                             position: (187, 17),
                            },
                            else_: String {
                             parts: [
                              Expression {
                               expression: Variable {
                                identifier: "postgresqlPackage",
                                position: (188, 20),
                               },
                              },
                              Raw {
                               content: "/bin/pg_receivexlog",
                               position: (188, 38),
                              },
                             ],
                             position: (188, 17),
                            },
                            position: (186, 10),
                           },
                           position: (185, 27),
                          },
                         },
                        ],
                        target: String {
                         parts: [
                          Raw {
                           content: "",
                           position: (190, 1),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "receiverCommand",
                             position: (190, 11),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (190, 27),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "postgresqlPackage",
                                 position: (190, 34),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n --no-password \\\n --directory=",
                           position: (190, 52),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "escapeShellArg",
                             position: (192, 25),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (192, 40),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "directory",
                                 position: (192, 47),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n --status-interval=",
                           position: (192, 57),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "toString",
                             position: (193, 31),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (193, 40),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "statusInterval",
                                 position: (193, 47),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n --dbname=",
                           position: (193, 62),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "escapeShellArg",
                             position: (194, 22),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (194, 37),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "connection",
                                 position: (194, 44),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n ",
                           position: (194, 55),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "optionalString",
                             position: (195, 13),
                            },
                            arguments: [
                             Parentheses {
                              expression: BinaryOperation {
                               operator: GreaterThan,
                               operands: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "config",
                                  position: (195, 29),
                                 },
                                 attribute_path: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "compress",
                                    position: (195, 36),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                Int {
                                 value: 0,
                                 position: (195, 47),
                                },
                               ],
                               position: (195, 45),
                              },
                              position: (195, 28),
                             },
                             String {
                              parts: [
                               Raw {
                                content: "--compress=",
                                position: (195, 51),
                               },
                               Expression {
                                expression: FunctionApplication {
                                 function: Variable {
                                  identifier: "toString",
                                  position: (195, 64),
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "config",
                                    position: (195, 73),
                                   },
                                   attribute_path: AttributePath {
                                    parts: [
                                     Raw {
                                      content: "compress",
                                      position: (195, 80),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                 ],
                                },
                               },
                              ],
                              position: (195, 50),
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n ",
                           position: (195, 91),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "optionalString",
                             position: (196, 13),
                            },
                            arguments: [
                             Parentheses {
                              expression: BinaryOperation {
                               operator: NotEqualTo,
                               operands: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "config",
                                  position: (196, 29),
                                 },
                                 attribute_path: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "slot",
                                    position: (196, 36),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                String {
                                 parts: [],
                                 position: (196, 44),
                                },
                               ],
                               position: (196, 41),
                              },
                              position: (196, 28),
                             },
                             String {
                              parts: [
                               Raw {
                                content: "--slot=",
                                position: (196, 49),
                               },
                               Expression {
                                expression: FunctionApplication {
                                 function: Variable {
                                  identifier: "escapeShellArg",
                                  position: (196, 58),
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "config",
                                    position: (196, 73),
                                   },
                                   attribute_path: AttributePath {
                                    parts: [
                                     Raw {
                                      content: "slot",
                                      position: (196, 80),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                 ],
                                },
                               },
                              ],
                              position: (196, 48),
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n ",
                           position: (196, 87),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "optionalString",
                             position: (197, 13),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (197, 28),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "synchronous",
                                 position: (197, 35),
                                },
                               ],
                              },
                              default: None,
                             },
                             String {
                              parts: [
                               Raw {
                                content: "--synchronous",
                                position: (197, 48),
                               },
                              ],
                              position: (197, 47),
                             },
                            ],
                           },
                          },
                          Raw {
                           content: " \\\n ",
                           position: (197, 63),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "concatStringsSep",
                             position: (198, 13),
                            },
                            arguments: [
                             String {
                              parts: [
                               Raw {
                                content: " ",
                                position: (198, 31),
                               },
                              ],
                              position: (198, 30),
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (198, 34),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "extraArgs",
                                 position: (198, 41),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                          Raw {
                           content: "\n",
                           position: (198, 51),
                          },
                         ],
                         position: (189, 10),
                        },
                        position: (184, 16),
                       },
                      },
                     ],
                     recursive: false,
                     position: (169, 112),
                    },
                   ],
                  },
                  position: (169, 56),
                 },
                 position: (169, 50),
                },
                position: (169, 49),
               },
               Variable {
                identifier: "receivers",
                position: (200, 8),
               },
              ],
             },
             position: (169, 24),
            },
           },
          ],
          recursive: false,
          position: (145, 30),
         },
        ],
       },
       position: (143, 12),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (203, 3),
        },
        Raw {
         content: "maintainers",
         position: (203, 8),
        },
       ],
      },
      to: With {
       expression: Variable {
        identifier: "maintainers",
        position: (203, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "pacien",
          position: (203, 42),
         },
        ],
        position: (203, 40),
       },
       position: (203, 22),
      },
     },
    ],
    recursive: false,
    position: (118, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}