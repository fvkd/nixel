---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "ethminer",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "poolUrl",
        position: (7, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "escapeShellArg",
       position: (7, 13),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "stratum1+tcp://",
          position: (7, 29),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (7, 46),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "wallet",
              position: (7, 50),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "@",
          position: (7, 57),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (7, 60),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "pool",
              position: (7, 64),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: ":",
          position: (7, 69),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "toString",
            position: (7, 72),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (7, 81),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "stratumPort",
                position: (7, 85),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "/",
          position: (7, 97),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (7, 100),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "rig",
              position: (7, 104),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/",
          position: (7, 108),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (7, 111),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "registerMail",
              position: (7, 115),
             },
            ],
           },
           default: None,
          },
         },
        ],
        position: (7, 28),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (14, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (16, 5),
           },
           Raw {
            content: "ethminer",
            position: (16, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (18, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (18, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (19, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (19, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (19, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (20, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (20, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (21, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Enable ethminer ether mining.",
                    position: (21, 24),
                   },
                  ],
                  position: (21, 23),
                 },
                },
               ],
               recursive: false,
               position: (18, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "recheckInterval",
               position: (24, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (24, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (25, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (25, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "ints",
                     position: (25, 22),
                    },
                    Raw {
                     content: "unsigned",
                     position: (25, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (26, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 2000,
                  position: (26, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (27, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Interval in milliseconds between farm rechecks.",
                    position: (27, 24),
                   },
                  ],
                  position: (27, 23),
                 },
                },
               ],
               recursive: false,
               position: (24, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "toolkit",
               position: (30, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (30, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (31, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (31, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (31, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "cuda",
                        position: (31, 30),
                       },
                      ],
                      position: (31, 29),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "opencl",
                        position: (31, 37),
                       },
                      ],
                      position: (31, 36),
                     },
                    ],
                    position: (31, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (32, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "cuda",
                    position: (32, 20),
                   },
                  ],
                  position: (32, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (33, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Cuda or opencl toolkit.",
                    position: (33, 24),
                   },
                  ],
                  position: (33, 23),
                 },
                },
               ],
               recursive: false,
               position: (30, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "apiPort",
               position: (36, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (36, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (37, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (37, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (37, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: UnaryOperation {
                  operator: Negate,
                  operand: Int {
                   value: 3333,
                   position: (38, 20),
                  },
                  position: (38, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (39, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Ethminer api port. minus sign puts api in read-only mode.",
                    position: (39, 24),
                   },
                  ],
                  position: (39, 23),
                 },
                },
               ],
               recursive: false,
               position: (36, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "wallet",
               position: (42, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (42, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (43, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (43, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (43, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (44, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "0x0123456789abcdef0123456789abcdef01234567",
                    position: (44, 20),
                   },
                  ],
                  position: (44, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (45, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Ethereum wallet address.",
                    position: (45, 24),
                   },
                  ],
                  position: (45, 23),
                 },
                },
               ],
               recursive: false,
               position: (42, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "pool",
               position: (48, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (48, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (49, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (49, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (50, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "eth-us-east1.nanopool.org",
                    position: (50, 20),
                   },
                  ],
                  position: (50, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Mining pool address.",
                    position: (51, 24),
                   },
                  ],
                  position: (51, 23),
                 },
                },
               ],
               recursive: false,
               position: (48, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "stratumPort",
               position: (54, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (54, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (55, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "port",
                     position: (55, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 9999,
                  position: (56, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Stratum protocol tcp port.",
                    position: (57, 24),
                   },
                  ],
                  position: (57, 23),
                 },
                },
               ],
               recursive: false,
               position: (54, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "rig",
               position: (60, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (60, 13),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (61, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (61, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "mining-rig-name",
                    position: (62, 20),
                   },
                  ],
                  position: (62, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Mining rig name.",
                    position: (63, 24),
                   },
                  ],
                  position: (63, 23),
                 },
                },
               ],
               recursive: false,
               position: (60, 22),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "registerMail",
               position: (66, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (66, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (67, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (67, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (67, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (68, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "email%40example.org",
                    position: (68, 20),
                   },
                  ],
                  position: (68, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (69, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Url encoded email address to register with pool.",
                    position: (69, 24),
                   },
                  ],
                  position: (69, 23),
                 },
                },
               ],
               recursive: false,
               position: (66, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "maxPower",
               position: (72, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (72, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (73, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (73, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "ints",
                     position: (73, 22),
                    },
                    Raw {
                     content: "unsigned",
                     position: (73, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 113,
                  position: (74, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Miner max watt usage.",
                    position: (75, 24),
                   },
                  ],
                  position: (75, 23),
                 },
                },
               ],
               recursive: false,
               position: (72, 27),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (16, 25),
         },
        },
       ],
       recursive: false,
       position: (14, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (85, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (85, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (85, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (85, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (87, 5),
             },
             Raw {
              content: "services",
              position: (87, 13),
             },
             Raw {
              content: "ethminer",
              position: (87, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "path",
                 position: (88, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "optional",
                position: (88, 14),
               },
               arguments: [
                Parentheses {
                 expression: BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (88, 24),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "toolkit",
                       position: (88, 28),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "cuda",
                      position: (88, 40),
                     },
                    ],
                    position: (88, 39),
                   },
                  ],
                  position: (88, 36),
                 },
                 position: (88, 23),
                },
                List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (88, 49),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "cudatoolkit",
                      position: (88, 54),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (88, 47),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (89, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "ethminer ethereum mining service",
                 position: (89, 22),
                },
               ],
               position: (89, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (90, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (90, 21),
                  },
                 ],
                 position: (90, 20),
                },
               ],
               position: (90, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (91, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (91, 18),
                  },
                 ],
                 position: (91, 17),
                },
               ],
               position: (91, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (93, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "DynamicUser",
                    position: (94, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (94, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStartPre",
                    position: (95, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (95, 27),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "ethminer",
                        position: (95, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/.ethminer-wrapped --list-devices",
                    position: (95, 41),
                   },
                  ],
                  position: (95, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStartPost",
                    position: (96, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "optional",
                   position: (96, 25),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (96, 35),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "toolkit",
                          position: (96, 39),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "cuda",
                         position: (96, 51),
                        },
                       ],
                       position: (96, 50),
                      },
                     ],
                     position: (96, 47),
                    },
                    position: (96, 34),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "+",
                      position: (96, 59),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "getBin",
                        position: (96, 62),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "config",
                          position: (96, 69),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "boot",
                            position: (96, 76),
                           },
                           Raw {
                            content: "kernelPackages",
                            position: (96, 81),
                           },
                           Raw {
                            content: "nvidia_x11",
                            position: (96, 96),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                     Raw {
                      content: "/bin/nvidia-smi -pl ",
                      position: (96, 107),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "toString",
                        position: (96, 129),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (96, 138),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "maxPower",
                            position: (96, 142),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                    ],
                    position: (96, 58),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (97, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (97, 20),
                   },
                  ],
                  position: (97, 19),
                 },
                },
               ],
               recursive: false,
               position: (93, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "environment",
                 position: (100, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (100, 21),
               },
               arguments: [
                Parentheses {
                 expression: BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (100, 27),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "toolkit",
                       position: (100, 31),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "cuda",
                      position: (100, 43),
                     },
                    ],
                    position: (100, 42),
                   },
                  ],
                  position: (100, 39),
                 },
                 position: (100, 26),
                },
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "LD_LIBRARY_PATH",
                      position: (101, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (101, 30),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "boot",
                          position: (101, 37),
                         },
                         Raw {
                          content: "kernelPackages",
                          position: (101, 42),
                         },
                         Raw {
                          content: "nvidia_x11",
                          position: (101, 57),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/lib",
                      position: (101, 68),
                     },
                    ],
                    position: (101, 27),
                   },
                  },
                 ],
                 recursive: false,
                 position: (100, 50),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "script",
                 position: (104, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "",
                 position: (105, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (105, 11),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "ethminer",
                     position: (105, 16),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/.ethminer-wrapped \\\n  --farm-recheck ",
                 position: (105, 25),
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (106, 28),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (106, 37),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "recheckInterval",
                       position: (106, 41),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " \\\n  --report-hashrate \\\n  --",
                 position: (106, 57),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (108, 15),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "toolkit",
                     position: (108, 19),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: " \\\n  --api-port ",
                 position: (108, 27),
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (109, 24),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (109, 33),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "apiPort",
                       position: (109, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " \\\n  --pool ",
                 position: (109, 45),
                },
                Expression {
                 expression: Variable {
                  identifier: "poolUrl",
                  position: (110, 20),
                 },
                },
                Raw {
                 content: "\n",
                 position: (110, 28),
                },
               ],
               position: (104, 16),
              },
             },
            ],
            recursive: false,
            position: (87, 33),
           },
          },
         ],
         recursive: false,
         position: (85, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (10, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}