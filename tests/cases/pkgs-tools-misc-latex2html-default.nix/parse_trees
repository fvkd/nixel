---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchFromGitHub" (1, 16)
            , := lexemes ","
              , "," (1, 31)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "makeWrapper" (1, 33)
              , := lexemes ","
                , "," (2, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "ghostscript" (2, 3)
                , := lexemes ","
                  , "," (2, 14)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "netpbm" (2, 16)
                  , := lexemes ","
                    , "," (2, 22)
                  formals := rules "formal"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "perl" (2, 24)
      } := lexemes "}"
        } "}" (2, 29)
      : := lexemes ":"
        : ":" (2, 30)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (5, 1)
                  . := lexemes "."
                    . "." (5, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (5, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (5, 21)
                  { := lexemes "{"
                    { "{" (5, 25)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules 
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "pname" (6, 3)
                                  = := lexemes "="
                                    = "=" (6, 9)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (6, 11)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "latex2html" (6, 12)
                                                " := lexemes "\""
                                                  " "\"" (6, 22)
                                  ; := lexemes ";"
                                    ; ";" (6, 23)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "version" (7, 3)
                                = := lexemes "="
                                  = "=" (7, 11)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (7, 13)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "2022" (7, 14)
                                              " := lexemes "\""
                                                " "\"" (7, 18)
                                ; := lexemes ";"
                                  ; ";" (7, 19)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "src" (9, 3)
                              = := lexemes "="
                                = "=" (9, 7)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "fetchFromGitHub" (9, 9)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "{" "binds" "}"
                                            { := lexemes "{"
                                              { "{" (9, 25)
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                                    binds := rules 
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "owner" (10, 5)
                                                    = := lexemes "="
                                                      = "=" (10, 11)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "pname" (10, 13)
                                                    ; := lexemes ";"
                                                      ; ";" (10, 18)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "repo" (11, 5)
                                                  = := lexemes "="
                                                    = "=" (11, 10)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "pname" (11, 12)
                                                  ; := lexemes ";"
                                                    ; ";" (11, 17)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "rev" (12, 5)
                                                = := lexemes "="
                                                  = "=" (12, 9)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (12, 11)
                                                              string_parts := rules "string_parts_interpolated"
                                                                string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                  STR := lexemes "STR"
                                                                    STR "v" (12, 12)
                                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                    DOLLAR_CURLY "${" (12, 13)
                                                                  expr := rules "expr_function"
                                                                    expr_function := rules "expr_if"
                                                                      expr_if := rules "expr_op"
                                                                        expr_op := rules "expr_app"
                                                                          expr_app := rules "expr_select"
                                                                            expr_select := rules "expr_simple"
                                                                              expr_simple := rules "ID"
                                                                                ID := lexemes "ID"
                                                                                  ID "version" (12, 15)
                                                                  } := lexemes "}"
                                                                    } "}" (12, 22)
                                                              " := lexemes "\""
                                                                " "\"" (12, 23)
                                                ; := lexemes ";"
                                                  ; ";" (12, 24)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "sha256" (13, 5)
                                              = := lexemes "="
                                                = "=" (13, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (13, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "sha256-a+OFBNMtP6mDqg1k9rjDLEJhZDM+zdRpPbn3aeC+Qks=" (13, 15)
                                                            " := lexemes "\""
                                                              " "\"" (13, 66)
                                              ; := lexemes ";"
                                                ; ";" (13, 67)
                                            } := lexemes "}"
                                              } "}" (14, 3)
                              ; := lexemes ";"
                                ; ";" (14, 4)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "buildInputs" (16, 3)
                            = := lexemes "="
                              = "=" (16, 15)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (16, 17)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules 
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "ghostscript" (16, 19)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "netpbm" (16, 31)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "perl" (16, 38)
                                          ] := lexemes "]"
                                            ] "]" (16, 43)
                            ; := lexemes ";"
                              ; ";" (16, 44)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "nativeBuildInputs" (18, 3)
                          = := lexemes "="
                            = "=" (18, 21)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (18, 23)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules 
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "makeWrapper" (18, 25)
                                        ] := lexemes "]"
                                          ] "]" (18, 37)
                          ; := lexemes ";"
                            ; ";" (18, 38)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "configurePhase" (20, 3)
                        = := lexemes "="
                          = "=" (20, 18)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (20, 20)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    ./configure \\\n      --prefix=\"$out\" \\\n      --without-mktexlsr \\\n      --with-texpath=$out/share/texmf/tex/latex/html\n  " (21, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (25, 3)
                        ; := lexemes ";"
                          ; ";" (25, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "postInstall" (27, 3)
                      = := lexemes "="
                        = "=" (27, 15)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (27, 17)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules 
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "    for p in $out/bin/{latex2html,pstoimg}; do \\\n      wrapProgram $p --add-flags '--tmp=\"" (28, 1)
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "$" (29, 42)
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "{TMPDIR:-/tmp}\"'\n    done\n  " (29, 45)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (31, 3)
                      ; := lexemes ";"
                        ; ";" (31, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (33, 3)
                    = := lexemes "="
                      = "=" (33, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (33, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (33, 15)
                        ; := lexemes ";"
                          ; ";" (33, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (33, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "description" (34, 5)
                                                = := lexemes "="
                                                  = "=" (34, 17)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (34, 19)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "LaTeX-to-HTML translator" (34, 20)
                                                              " := lexemes "\""
                                                                " "\"" (34, 44)
                                                ; := lexemes ";"
                                                  ; ";" (34, 45)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "longDescription" (35, 5)
                                              = := lexemes "="
                                                = "=" (35, 21)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                            IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                              IND_STRING_OPEN "''\n" (35, 23)
                                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                              ind_string_parts := rules 
                                                              IND_STR := lexemes "IND_STR"
                                                                IND_STR "      A Perl program that translates LaTeX into HTML (HyperText Markup\n      Language), optionally creating separate HTML files corresponding to each\n      unit (e.g., section) of the document. LaTeX2HTML proceeds by interpreting\n      LaTeX (to the best of its abilities). It contains definitions from a wide\n      variety of classes and packages, and users may add further definitions by\n      writing Perl scripts that provide information about class/package\n      commands.\n    " (36, 1)
                                                            IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                              IND_STRING_CLOSE "''" (43, 5)
                                              ; := lexemes ";"
                                                ; ";" (43, 7)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (45, 5)
                                            = := lexemes "="
                                              = "=" (45, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (45, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "https://www.ctan.org/pkg/latex2html" (45, 17)
                                                          " := lexemes "\""
                                                            " "\"" (45, 52)
                                            ; := lexemes ";"
                                              ; ";" (45, 53)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "license" (47, 5)
                                          = := lexemes "="
                                            = "=" (47, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "licenses" (47, 15)
                                                      . := lexemes "."
                                                        . "." (47, 23)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "gpl2" (47, 24)
                                          ; := lexemes ";"
                                            ; ";" (47, 28)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "platforms" (48, 5)
                                        = := lexemes "="
                                          = "=" (48, 15)
                                        expr := rules "expr_function"
                                          expr_function := rules "WITH" "expr" ";" "expr_function"
                                            WITH := lexemes "WITH"
                                              WITH "with" (48, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "platforms" (48, 22)
                                            ; := lexemes ";"
                                              ; ";" (48, 31)
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_op" "CONCAT" "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "linux" (48, 33)
                                                  CONCAT := lexemes "CONCAT"
                                                    CONCAT "++" (48, 39)
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "darwin" (48, 42)
                                        ; := lexemes ";"
                                          ; ";" (48, 48)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (49, 5)
                                      = := lexemes "="
                                        = "=" (49, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "WITH" "expr" ";" "expr_function"
                                          WITH := lexemes "WITH"
                                            WITH "with" (49, 19)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (49, 24)
                                          ; := lexemes ";"
                                            ; ";" (49, 35)
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (49, 37)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "yurrriq" (49, 39)
                                                      ] := lexemes "]"
                                                        ] "]" (49, 47)
                                      ; := lexemes ";"
                                        ; ";" (49, 48)
                                    } := lexemes "}"
                                      } "}" (50, 3)
                    ; := lexemes ";"
                      ; ";" (50, 4)
                  } := lexemes "}"
                    } "}" (51, 1)