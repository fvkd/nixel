---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (8, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (11, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (11, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (11, 16),
        },
        Raw {
         content: "ssmtp",
         position: (11, 25),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (16, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (17, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (17, 31),
               },
              ],
              position: (17, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (17, 44),
               },
              ],
              position: (17, 43),
             },
             String {
              parts: [
               Raw {
                content: "directDelivery",
                position: (17, 64),
               },
              ],
              position: (17, 63),
             },
            ],
            position: (17, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (17, 85),
               },
              ],
              position: (17, 84),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (17, 96),
               },
              ],
              position: (17, 95),
             },
             String {
              parts: [
               Raw {
                content: "enable",
                position: (17, 104),
               },
              ],
              position: (17, 103),
             },
            ],
            position: (17, 82),
           },
          ],
         },
         position: (17, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (18, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (18, 31),
               },
              ],
              position: (18, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (18, 44),
               },
              ],
              position: (18, 43),
             },
             String {
              parts: [
               Raw {
                content: "hostName",
                position: (18, 64),
               },
              ],
              position: (18, 63),
             },
            ],
            position: (18, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (18, 79),
               },
              ],
              position: (18, 78),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (18, 90),
               },
              ],
              position: (18, 89),
             },
             String {
              parts: [
               Raw {
                content: "hostName",
                position: (18, 98),
               },
              ],
              position: (18, 97),
             },
            ],
            position: (18, 76),
           },
          ],
         },
         position: (18, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (19, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (19, 31),
               },
              ],
              position: (19, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (19, 44),
               },
              ],
              position: (19, 43),
             },
             String {
              parts: [
               Raw {
                content: "domain",
                position: (19, 64),
               },
              ],
              position: (19, 63),
             },
            ],
            position: (19, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (19, 77),
               },
              ],
              position: (19, 76),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (19, 88),
               },
              ],
              position: (19, 87),
             },
             String {
              parts: [
               Raw {
                content: "domain",
                position: (19, 96),
               },
              ],
              position: (19, 95),
             },
            ],
            position: (19, 74),
           },
          ],
         },
         position: (19, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (20, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (20, 31),
               },
              ],
              position: (20, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (20, 44),
               },
              ],
              position: (20, 43),
             },
             String {
              parts: [
               Raw {
                content: "root",
                position: (20, 64),
               },
              ],
              position: (20, 63),
             },
            ],
            position: (20, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (20, 75),
               },
              ],
              position: (20, 74),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (20, 86),
               },
              ],
              position: (20, 85),
             },
             String {
              parts: [
               Raw {
                content: "root",
                position: (20, 94),
               },
              ],
              position: (20, 93),
             },
            ],
            position: (20, 72),
           },
          ],
         },
         position: (20, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (21, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (21, 31),
               },
              ],
              position: (21, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (21, 44),
               },
              ],
              position: (21, 43),
             },
             String {
              parts: [
               Raw {
                content: "useTLS",
                position: (21, 64),
               },
              ],
              position: (21, 63),
             },
            ],
            position: (21, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (21, 77),
               },
              ],
              position: (21, 76),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (21, 88),
               },
              ],
              position: (21, 87),
             },
             String {
              parts: [
               Raw {
                content: "useTLS",
                position: (21, 96),
               },
              ],
              position: (21, 95),
             },
            ],
            position: (21, 74),
           },
          ],
         },
         position: (21, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (22, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (22, 31),
               },
              ],
              position: (22, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (22, 44),
               },
              ],
              position: (22, 43),
             },
             String {
              parts: [
               Raw {
                content: "useSTARTTLS",
                position: (22, 64),
               },
              ],
              position: (22, 63),
             },
            ],
            position: (22, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (22, 82),
               },
              ],
              position: (22, 81),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (22, 93),
               },
              ],
              position: (22, 92),
             },
             String {
              parts: [
               Raw {
                content: "useSTARTTLS",
                position: (22, 101),
               },
              ],
              position: (22, 100),
             },
            ],
            position: (22, 79),
           },
          ],
         },
         position: (22, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (23, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (23, 31),
               },
              ],
              position: (23, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (23, 44),
               },
              ],
              position: (23, 43),
             },
             String {
              parts: [
               Raw {
                content: "authUser",
                position: (23, 64),
               },
              ],
              position: (23, 63),
             },
            ],
            position: (23, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (23, 79),
               },
              ],
              position: (23, 78),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (23, 90),
               },
              ],
              position: (23, 89),
             },
             String {
              parts: [
               Raw {
                content: "authUser",
                position: (23, 98),
               },
              ],
              position: (23, 97),
             },
            ],
            position: (23, 76),
           },
          ],
         },
         position: (23, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (24, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (24, 31),
               },
              ],
              position: (24, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (24, 44),
               },
              ],
              position: (24, 43),
             },
             String {
              parts: [
               Raw {
                content: "authPassFile",
                position: (24, 64),
               },
              ],
              position: (24, 63),
             },
            ],
            position: (24, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (24, 83),
               },
              ],
              position: (24, 82),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (24, 94),
               },
              ],
              position: (24, 93),
             },
             String {
              parts: [
               Raw {
                content: "authPassFile",
                position: (24, 102),
               },
              ],
              position: (24, 101),
             },
            ],
            position: (24, 80),
           },
          ],
         },
         position: (24, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (25, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (25, 31),
               },
              ],
              position: (25, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (25, 44),
               },
              ],
              position: (25, 43),
             },
             String {
              parts: [
               Raw {
                content: "setSendmail",
                position: (25, 64),
               },
              ],
              position: (25, 63),
             },
            ],
            position: (25, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (25, 82),
               },
              ],
              position: (25, 81),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (25, 93),
               },
              ],
              position: (25, 92),
             },
             String {
              parts: [
               Raw {
                content: "setSendmail",
                position: (25, 101),
               },
              ],
              position: (25, 100),
             },
            ],
            position: (25, 79),
           },
          ],
         },
         position: (25, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (27, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "networking",
                position: (27, 31),
               },
              ],
              position: (27, 30),
             },
             String {
              parts: [
               Raw {
                content: "defaultMailServer",
                position: (27, 44),
               },
              ],
              position: (27, 43),
             },
             String {
              parts: [
               Raw {
                content: "authPass",
                position: (27, 64),
               },
              ],
              position: (27, 63),
             },
            ],
            position: (27, 28),
           },
           String {
            parts: [
             Raw {
              content: "authPass has been removed since it leaks the clear-text password into the world-readable store. Use authPassFile instead and make sure it's not a store path",
              position: (27, 77),
             },
            ],
            position: (27, 76),
           },
          ],
         },
         position: (27, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (28, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (28, 31),
               },
              ],
              position: (28, 30),
             },
             String {
              parts: [
               Raw {
                content: "ssmtp",
                position: (28, 42),
               },
              ],
              position: (28, 41),
             },
             String {
              parts: [
               Raw {
                content: "authPass",
                position: (28, 50),
               },
              ],
              position: (28, 49),
             },
            ],
            position: (28, 28),
           },
           String {
            parts: [
             Raw {
              content: "authPass has been removed since it leaks the clear-text password into the world-readable store. Use authPassFile instead and make sure it's not a store path",
              position: (28, 63),
             },
            ],
            position: (28, 62),
           },
          ],
         },
         position: (28, 5),
        },
       ],
       position: (16, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (31, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (33, 5),
           },
           Raw {
            content: "ssmtp",
            position: (33, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (35, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (35, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (36, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (36, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (36, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (37, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (37, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Use the trivial Mail Transfer Agent (MTA)\n<command>ssmtp</command> package to allow programs to send\ne-mail.  If you don't want to run a “real” MTA like\n<command>sendmail</command> or <command>postfix</command> on\nyour machine, set this option to <literal>true</literal>, and\nset the option\n<option>services.ssmtp.hostName</option> to the\nhost name of your preferred mail server.\n",
                    position: (39, 1),
                   },
                  ],
                  position: (38, 23),
                 },
                },
               ],
               recursive: false,
               position: (35, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "settings",
               position: (50, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (51, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (51, 28),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "oneOf",
                       position: (51, 37),
                      },
                      arguments: [
                       List {
                        elements: [
                         Variable {
                          identifier: "bool",
                          position: (51, 45),
                         },
                         Variable {
                          identifier: "str",
                          position: (51, 50),
                         },
                        ],
                        position: (51, 43),
                       },
                      ],
                     },
                     position: (51, 36),
                    },
                   ],
                  },
                  position: (51, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (52, 9),
                   },
                  ],
                 },
                 to: Map {
                  bindings: [],
                  recursive: false,
                  position: (52, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "<citerefentry><refentrytitle>ssmtp</refentrytitle><manvolnum>5</manvolnum></citerefentry> configuration. Refer\nto <link xlink:href=\"https://linux.die.net/man/5/ssmtp.conf\"/> for details on supported values.\n",
                    position: (54, 1),
                   },
                  ],
                  position: (53, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (57, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  Debug = true;\n  FromLineOverride = false;\n}\n",
                      position: (58, 1),
                     },
                    ],
                    position: (57, 37),
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (50, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "hostName",
               position: (65, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (65, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (66, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (66, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (66, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (67, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "mail.example.org",
                    position: (67, 20),
                   },
                  ],
                  position: (67, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (68, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The host name of the default mail server to use to deliver\ne-mail. Can also contain a port number (ex: mail.example.org:587),\ndefaults to port 25 if no port is given.\n",
                    position: (69, 1),
                   },
                  ],
                  position: (68, 23),
                 },
                },
               ],
               recursive: false,
               position: (65, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "root",
               position: (75, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (75, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (76, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (76, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (77, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (77, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (78, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "root@example.org",
                    position: (78, 20),
                   },
                  ],
                  position: (78, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (79, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The e-mail to which mail for users with UID &lt; 1000 is forwarded.\n",
                    position: (80, 1),
                   },
                  ],
                  position: (79, 23),
                 },
                },
               ],
               recursive: false,
               position: (75, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "domain",
               position: (84, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (84, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (85, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (85, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (85, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (86, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (86, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (87, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "example.org",
                    position: (87, 20),
                   },
                  ],
                  position: (87, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (88, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The domain from which mail will appear to be sent.\n",
                    position: (89, 1),
                   },
                  ],
                  position: (88, 23),
                 },
                },
               ],
               recursive: false,
               position: (84, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "useTLS",
               position: (93, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (94, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (94, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (94, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (95, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (96, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether TLS should be used to connect to the default mail\nserver.\n",
                    position: (97, 1),
                   },
                  ],
                  position: (96, 23),
                 },
                },
               ],
               recursive: false,
               position: (93, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "useSTARTTLS",
               position: (102, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (102, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (103, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (103, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (103, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (104, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (104, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether the STARTTLS should be used to connect to the default\nmail server.  (This is needed for TLS-capable mail servers\nrunning on the default SMTP port 25.)\n",
                    position: (106, 1),
                   },
                  ],
                  position: (105, 23),
                 },
                },
               ],
               recursive: false,
               position: (102, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "authUser",
               position: (112, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (112, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (113, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (113, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (113, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (114, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (114, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (115, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "foo@example.org",
                    position: (115, 20),
                   },
                  ],
                  position: (115, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (116, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Username used for SMTP auth. Leave blank to disable.\n",
                    position: (117, 1),
                   },
                  ],
                  position: (116, 23),
                 },
                },
               ],
               recursive: false,
               position: (112, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "authPassFile",
               position: (121, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (121, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (122, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (122, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (122, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (122, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (122, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (123, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (123, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (124, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/run/keys/ssmtp-authpass",
                    position: (124, 20),
                   },
                  ],
                  position: (124, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (125, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Path to a file that contains the password used for SMTP auth. The file\nshould not contain a trailing newline, if the password does not contain one\n(e.g. use <command>echo -n \"password\" > file</command>).\nThis file should be readable by the users that need to execute ssmtp.\n",
                    position: (126, 1),
                   },
                  ],
                  position: (125, 23),
                 },
                },
               ],
               recursive: false,
               position: (121, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "setSendmail",
               position: (133, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (133, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (134, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (134, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (134, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (135, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (135, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (136, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to set the system sendmail to ssmtp's.",
                    position: (136, 24),
                   },
                  ],
                  position: (136, 23),
                 },
                },
               ],
               recursive: false,
               position: (133, 30),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (33, 22),
         },
        },
       ],
       recursive: false,
       position: (31, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (144, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (144, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (144, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (144, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (146, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (148, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (148, 21),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "useSTARTTLS",
                      position: (148, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (148, 40),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "useTLS",
                      position: (148, 44),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (148, 37),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (149, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "services.ssmtp.useSTARTTLS has no effect without services.ssmtp.useTLS",
                   position: (149, 20),
                  },
                 ],
                 position: (149, 19),
                },
               },
              ],
              recursive: false,
              position: (147, 7),
             },
            ],
            position: (146, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (153, 5),
             },
             Raw {
              content: "ssmtp",
              position: (153, 14),
             },
             Raw {
              content: "settings",
              position: (153, 20),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (153, 31),
            },
            arguments: [
             List {
              elements: [
               Parentheses {
                expression: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "MailHub",
                      position: (155, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (155, 19),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "hostName",
                       position: (155, 23),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "FromLineOverride",
                      position: (156, 9),
                     },
                    ],
                   },
                   to: FunctionApplication {
                    function: Variable {
                     identifier: "mkDefault",
                     position: (156, 28),
                    },
                    arguments: [
                     Variable {
                      identifier: "true",
                      position: (156, 38),
                     },
                    ],
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "UseTLS",
                      position: (157, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (157, 18),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "useTLS",
                       position: (157, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "UseSTARTTLS",
                      position: (158, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (158, 23),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "useSTARTTLS",
                       position: (158, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 recursive: false,
                 position: (154, 8),
                },
                position: (154, 7),
               },
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mkIf",
                  position: (160, 8),
                 },
                 arguments: [
                  Parentheses {
                   expression: BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (160, 14),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "root",
                         position: (160, 18),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [],
                      position: (160, 26),
                     },
                    ],
                    position: (160, 23),
                   },
                   position: (160, 13),
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "root",
                        position: (160, 32),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (160, 39),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "root",
                         position: (160, 43),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   recursive: false,
                   position: (160, 30),
                  },
                 ],
                },
                position: (160, 7),
               },
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mkIf",
                  position: (161, 8),
                 },
                 arguments: [
                  Parentheses {
                   expression: BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (161, 14),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "domain",
                         position: (161, 18),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [],
                      position: (161, 28),
                     },
                    ],
                    position: (161, 25),
                   },
                   position: (161, 13),
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "rewriteDomain",
                        position: (161, 34),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (161, 50),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "domain",
                         position: (161, 54),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   recursive: false,
                   position: (161, 32),
                  },
                 ],
                },
                position: (161, 7),
               },
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mkIf",
                  position: (162, 8),
                 },
                 arguments: [
                  Parentheses {
                   expression: BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (162, 14),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "authUser",
                         position: (162, 18),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [],
                      position: (162, 30),
                     },
                    ],
                    position: (162, 27),
                   },
                   position: (162, 13),
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "AuthUser",
                        position: (162, 36),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (162, 47),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "authUser",
                         position: (162, 51),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   recursive: false,
                   position: (162, 34),
                  },
                 ],
                },
                position: (162, 7),
               },
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mkIf",
                  position: (163, 8),
                 },
                 arguments: [
                  Parentheses {
                   expression: BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (163, 14),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "authPassFile",
                         position: (163, 18),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (163, 34),
                     },
                    ],
                    position: (163, 31),
                   },
                   position: (163, 13),
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "AuthPassFile",
                        position: (163, 42),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (163, 57),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "authPassFile",
                         position: (163, 61),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   recursive: false,
                   position: (163, 40),
                  },
                 ],
                },
                position: (163, 7),
               },
              ],
              position: (153, 39),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (167, 5),
             },
             Raw {
              content: "etc",
              position: (167, 17),
             },
             Expression {
              ast: String {
               parts: [
                Raw {
                 content: "ssmtp/ssmtp.conf",
                 position: (167, 22),
                },
               ],
               position: (167, 21),
              },
             },
             Raw {
              content: "text",
              position: (167, 40),
             },
            ],
           },
           to: With {
            expression: Variable {
             identifier: "generators",
             position: (167, 52),
            },
            target: FunctionApplication {
             function: Variable {
              identifier: "toKeyValue",
              position: (167, 64),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "mkKeyValue",
                    position: (168, 7),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "mkKeyValueDefault",
                   position: (168, 20),
                  },
                  arguments: [
                   Map {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "mkValueString",
                         position: (169, 9),
                        },
                       ],
                      },
                      to: Function {
                       argument: Simple {
                        identifier: "value",
                       },
                       definition: IfThenElse {
                        predicate: BinaryOperation {
                         operator: EqualTo,
                         operands: [
                          Variable {
                           identifier: "value",
                           position: (170, 14),
                          },
                          Variable {
                           identifier: "true",
                           position: (170, 23),
                          },
                         ],
                         position: (170, 20),
                        },
                        then: String {
                         parts: [
                          Raw {
                           content: "YES",
                           position: (170, 34),
                          },
                         ],
                         position: (170, 33),
                        },
                        else_: IfThenElse {
                         predicate: BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           Variable {
                            identifier: "value",
                            position: (171, 19),
                           },
                           Variable {
                            identifier: "false",
                            position: (171, 28),
                           },
                          ],
                          position: (171, 25),
                         },
                         then: String {
                          parts: [
                           Raw {
                            content: "NO",
                            position: (171, 40),
                           },
                          ],
                          position: (171, 39),
                         },
                         else_: FunctionApplication {
                          function: Variable {
                           identifier: "mkValueStringDefault",
                           position: (172, 16),
                          },
                          arguments: [
                           Map {
                            bindings: [],
                            recursive: false,
                            position: (172, 37),
                           },
                           Variable {
                            identifier: "value",
                            position: (172, 40),
                           },
                          ],
                         },
                         position: (171, 16),
                        },
                        position: (170, 11),
                       },
                       position: (169, 25),
                      },
                     },
                    ],
                    recursive: false,
                    position: (168, 38),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "=",
                      position: (174, 10),
                     },
                    ],
                    position: (174, 9),
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (167, 75),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (175, 7),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "settings",
                  position: (175, 11),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            position: (167, 47),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (177, 5),
             },
             Raw {
              content: "systemPackages",
              position: (177, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (177, 35),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "ssmtp",
                 position: (177, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (177, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (179, 5),
             },
             Raw {
              content: "mail",
              position: (179, 14),
             },
             Raw {
              content: "sendmailSetuidWrapper",
              position: (179, 19),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (179, 43),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (179, 48),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "setSendmail",
                 position: (179, 52),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "program",
                   position: (180, 7),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "sendmail",
                   position: (180, 18),
                  },
                 ],
                 position: (180, 17),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "source",
                   position: (181, 7),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Interpolation {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (181, 19),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "ssmtp",
                       position: (181, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/sendmail",
                   position: (181, 30),
                  },
                 ],
                 position: (181, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "setuid",
                   position: (182, 7),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (182, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "setgid",
                   position: (183, 7),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (183, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "owner",
                   position: (184, 7),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "root",
                   position: (184, 16),
                  },
                 ],
                 position: (184, 15),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "group",
                   position: (185, 7),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "root",
                   position: (185, 16),
                  },
                 ],
                 position: (185, 15),
                },
               },
              ],
              recursive: false,
              position: (179, 64),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (144, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (14, 1),
   },
   position: (10, 1),
  },
  position: (8, 1),
 },
 position: (6, 1),
}