---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "kernelVersion",
        position: (5, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 19),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "boot",
         position: (5, 26),
        },
        Raw {
         content: "kernelPackages",
         position: (5, 31),
        },
        Raw {
         content: "kernel",
         position: (5, 46),
        },
        Raw {
         content: "version",
         position: (5, 53),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "linuxKernelMinVersion",
        position: (6, 3),
       },
      ],
     },
     to: String {
      parts: [
       Raw {
        content: "5.8",
        position: (6, 28),
       },
      ],
      position: (6, 27),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "kernelPatch",
        position: (7, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Update,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (7, 17),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "kernelPatches",
           position: (7, 22),
          },
          Raw {
           content: "ath_regd_optional",
           position: (7, 36),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "extraConfig",
             position: (8, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "ATH_USER_REGD y\n",
             position: (9, 1),
            },
           ],
           position: (8, 19),
          },
         },
        ],
        recursive: false,
        position: (7, 57),
       },
      ],
      position: (7, 54),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (14, 3),
        },
        Raw {
         content: "networking",
         position: (14, 11),
        },
        Raw {
         content: "wireless",
         position: (14, 22),
        },
        Raw {
         content: "athUserRegulatoryDomain",
         position: (14, 31),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkOption",
        position: (14, 57),
       },
       arguments: [
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "default",
              position: (15, 5),
             },
            ],
           },
           to: Variable {
            identifier: "false",
            position: (15, 15),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "type",
              position: (16, 5),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (16, 12),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "bool",
               position: (16, 18),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "description",
              position: (17, 5),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "If enabled, sets the ATH_USER_REGD kernel config switch to true to\ndisable the enforcement of EEPROM regulatory restrictions for ath\ndrivers. Requires at least Linux ",
              position: (18, 1),
             },
             Expression {
              expression: Variable {
               identifier: "linuxKernelMinVersion",
               position: (20, 42),
              },
             },
             Raw {
              content: ".\n",
              position: (20, 64),
             },
            ],
            position: (17, 19),
           },
          },
         ],
         recursive: false,
         position: (14, 66),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (24, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (24, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (24, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "networking",
            position: (24, 24),
           },
           Raw {
            content: "wireless",
            position: (24, 35),
           },
           Raw {
            content: "athUserRegulatoryDomain",
            position: (24, 44),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (25, 5),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "singleton",
             position: (25, 18),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (26, 7),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "lessThan",
                  position: (26, 19),
                 },
                 arguments: [
                  Int {
                   value: 0,
                   position: (26, 28),
                  },
                  Parentheses {
                   expression: FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "builtins",
                      position: (26, 31),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "compareVersions",
                        position: (26, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "kernelVersion",
                      position: (26, 56),
                     },
                     Variable {
                      identifier: "linuxKernelMinVersion",
                      position: (26, 70),
                     },
                    ],
                   },
                   position: (26, 30),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (27, 7),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "ATH_USER_REGD patch for kernels older than ",
                   position: (27, 18),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "linuxKernelMinVersion",
                    position: (27, 63),
                   },
                  },
                  Raw {
                   content: " not ported yet!",
                   position: (27, 85),
                  },
                 ],
                 position: (27, 17),
                },
               },
              ],
              recursive: false,
              position: (25, 28),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (29, 5),
             },
             Raw {
              content: "kernelPatches",
              position: (29, 10),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "kernelPatch",
              position: (29, 28),
             },
            ],
            position: (29, 26),
           },
          },
         ],
         recursive: false,
         position: (24, 68),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}