---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "sanoid",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "datasetSettingsType",
        position: (8, 3),
       },
      ],
     },
     to: With {
      expression: Variable {
       identifier: "types",
       position: (8, 30),
      },
      target: BinaryOperation {
       operator: Update,
       operands: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "attrsOf",
           position: (9, 6),
          },
          arguments: [
           Parentheses {
            expression: FunctionApplication {
             function: Variable {
              identifier: "nullOr",
              position: (9, 15),
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "oneOf",
                 position: (9, 23),
                },
                arguments: [
                 List {
                  elements: [
                   Variable {
                    identifier: "str",
                    position: (9, 31),
                   },
                   Variable {
                    identifier: "int",
                    position: (9, 35),
                   },
                   Variable {
                    identifier: "bool",
                    position: (9, 39),
                   },
                   Parentheses {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "listOf",
                      position: (9, 45),
                     },
                     arguments: [
                      Variable {
                       identifier: "str",
                       position: (9, 52),
                      },
                     ],
                    },
                    position: (9, 44),
                   },
                  ],
                  position: (9, 29),
                 },
                ],
               },
               position: (9, 22),
              },
             ],
            },
            position: (9, 14),
           },
          ],
         },
         position: (9, 5),
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "description",
              position: (10, 7),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "dataset/template options",
              position: (10, 22),
             },
            ],
            position: (10, 21),
           },
          },
         ],
         recursive: false,
         position: (9, 65),
        },
       ],
       position: (9, 62),
      },
      position: (8, 25),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "commonOptions",
        position: (13, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "hourly",
           position: (14, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (14, 14),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (15, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Number of hourly snapshots.",
                position: (15, 22),
               },
              ],
              position: (15, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (16, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (16, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (16, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (16, 33),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "unsigned",
                    position: (16, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
              position: (16, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (17, 7),
               },
              ],
             },
             to: Variable {
              identifier: "null",
              position: (17, 17),
             },
            },
           ],
           recursive: false,
           position: (14, 23),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "daily",
           position: (20, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (20, 13),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (21, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Number of daily snapshots.",
                position: (21, 22),
               },
              ],
              position: (21, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (22, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (22, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (22, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (22, 33),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "unsigned",
                    position: (22, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
              position: (22, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (23, 7),
               },
              ],
             },
             to: Variable {
              identifier: "null",
              position: (23, 17),
             },
            },
           ],
           recursive: false,
           position: (20, 22),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "monthly",
           position: (26, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (26, 15),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (27, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Number of monthly snapshots.",
                position: (27, 22),
               },
              ],
              position: (27, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (28, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (28, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (28, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (28, 33),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "unsigned",
                    position: (28, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
              position: (28, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (29, 7),
               },
              ],
             },
             to: Variable {
              identifier: "null",
              position: (29, 17),
             },
            },
           ],
           recursive: false,
           position: (26, 24),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "yearly",
           position: (32, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (32, 14),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (33, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Number of yearly snapshots.",
                position: (33, 22),
               },
              ],
              position: (33, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (34, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (34, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (34, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (34, 33),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "unsigned",
                    position: (34, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
              position: (34, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (35, 7),
               },
              ],
             },
             to: Variable {
              identifier: "null",
              position: (35, 17),
             },
            },
           ],
           recursive: false,
           position: (32, 23),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "autoprune",
           position: (38, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (38, 17),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (39, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Whether to automatically prune old snapshots.",
                position: (39, 22),
               },
              ],
              position: (39, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (40, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (40, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (40, 26),
               },
               arguments: [
                Variable {
                 identifier: "bool",
                 position: (40, 33),
                },
               ],
              },
              position: (40, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (41, 7),
               },
              ],
             },
             to: Variable {
              identifier: "null",
              position: (41, 17),
             },
            },
           ],
           recursive: false,
           position: (38, 26),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "autosnap",
           position: (44, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (44, 16),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (45, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Whether to automatically take snapshots.",
                position: (45, 22),
               },
              ],
              position: (45, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (46, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (46, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (46, 26),
               },
               arguments: [
                Variable {
                 identifier: "bool",
                 position: (46, 33),
                },
               ],
              },
              position: (46, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (47, 7),
               },
              ],
             },
             to: Variable {
              identifier: "null",
              position: (47, 17),
             },
            },
           ],
           recursive: false,
           position: (44, 25),
          },
         ],
        },
       },
      ],
      recursive: false,
      position: (13, 19),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "datasetOptions",
        position: (51, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "use_template",
           position: (52, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (52, 20),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (53, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Names of the templates to use for this dataset.",
                position: (53, 22),
               },
              ],
              position: (53, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (54, 7),
               },
              ],
             },
             to: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (54, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "listOf",
                  position: (54, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Parentheses {
                expression: BinaryOperation {
                 operator: Update,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (54, 28),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "str",
                      position: (54, 34),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "check",
                        position: (55, 9),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Parentheses {
                       expression: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (55, 18),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "enum",
                            position: (55, 24),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         Parentheses {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "attrNames",
                            position: (55, 30),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (55, 40),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "templates",
                                position: (55, 44),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                          position: (55, 29),
                         },
                        ],
                       },
                       position: (55, 17),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "check",
                         position: (55, 56),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "description",
                        position: (56, 9),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "configured template name",
                        position: (56, 24),
                       },
                      ],
                      position: (56, 23),
                     },
                    },
                   ],
                   recursive: false,
                   position: (54, 41),
                  },
                 ],
                 position: (54, 38),
                },
                position: (54, 27),
               },
              ],
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (58, 7),
               },
              ],
             },
             to: List {
              elements: [],
              position: (58, 17),
             },
            },
           ],
           recursive: false,
           position: (52, 29),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "useTemplate",
           position: (60, 5),
          },
         ],
        },
        to: Variable {
         identifier: "use_template",
         position: (60, 19),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "recursive",
           position: (62, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (62, 17),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (63, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Whether to recursively snapshot dataset children.\nYou can also set this to <literal>\"zfs\"</literal> to handle datasets\nrecursively in an atomic way without the possibility to\noverride settings for child datasets.\n",
                position: (64, 1),
               },
              ],
              position: (63, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (69, 7),
               },
              ],
             },
             to: With {
              expression: Variable {
               identifier: "types",
               position: (69, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "oneOf",
                position: (69, 26),
               },
               arguments: [
                List {
                 elements: [
                  Variable {
                   identifier: "bool",
                   position: (69, 34),
                  },
                  Parentheses {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "enum",
                     position: (69, 40),
                    },
                    arguments: [
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "zfs",
                          position: (69, 48),
                         },
                        ],
                        position: (69, 47),
                       },
                      ],
                      position: (69, 45),
                     },
                    ],
                   },
                   position: (69, 39),
                  },
                 ],
                 position: (69, 32),
                },
               ],
              },
              position: (69, 14),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (70, 7),
               },
              ],
             },
             to: Variable {
              identifier: "false",
              position: (70, 17),
             },
            },
           ],
           recursive: false,
           position: (62, 26),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "process_children_only",
           position: (73, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (73, 29),
         },
         arguments: [
          Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "description",
                position: (74, 7),
               },
              ],
             },
             to: String {
              parts: [
               Raw {
                content: "Whether to only snapshot child datasets if recursing.",
                position: (74, 22),
               },
              ],
              position: (74, 21),
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "type",
                position: (75, 7),
               },
              ],
             },
             to: PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (75, 14),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "bool",
                 position: (75, 20),
                },
               ],
              },
              default: None,
             },
            },
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "default",
                position: (76, 7),
               },
              ],
             },
             to: Variable {
              identifier: "false",
              position: (76, 17),
             },
            },
           ],
           recursive: false,
           position: (73, 38),
          },
         ],
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "processChildrenOnly",
           position: (78, 5),
          },
         ],
        },
        to: Variable {
         identifier: "process_children_only",
         position: (78, 27),
        },
       },
      ],
      recursive: true,
      position: (51, 20),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "datasets",
        position: (82, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "unique",
       position: (82, 14),
      },
      arguments: [
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "attrNames",
          position: (82, 22),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (82, 32),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "datasets",
              position: (82, 36),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (82, 21),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "buildAllowCommand",
        position: (86, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "zfsAction",
      },
      definition: Function {
       argument: Simple {
        identifier: "permissions",
       },
       definition: Function {
        argument: Simple {
         identifier: "dataset",
        },
        definition: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (86, 56),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "escapeShellArgs",
             position: (86, 60),
            },
           ],
          },
          default: None,
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "-+/run/booted-system/sw/bin/zfs",
               position: (88, 6),
              },
             ],
             position: (88, 5),
            },
            Variable {
             identifier: "zfsAction",
             position: (89, 5),
            },
            String {
             parts: [
              Raw {
               content: "sanoid",
               position: (90, 6),
              },
             ],
             position: (90, 5),
            },
            Parentheses {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (91, 6),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: ",",
                  position: (91, 24),
                 },
                ],
                position: (91, 23),
               },
               Variable {
                identifier: "permissions",
                position: (91, 27),
               },
              ],
             },
             position: (91, 5),
            },
            Variable {
             identifier: "dataset",
             position: (92, 5),
            },
           ],
           position: (86, 76),
          },
         ],
        },
        position: (86, 47),
       },
       position: (86, 34),
      },
      position: (86, 23),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "configFile",
        position: (95, 3),
       },
      ],
     },
     to: LetIn {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "mkValueString",
           position: (97, 7),
          },
         ],
        },
        to: Function {
         argument: Simple {
          identifier: "v",
         },
         definition: IfThenElse {
          predicate: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "builtins",
             position: (98, 12),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "isList",
               position: (98, 21),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Variable {
             identifier: "v",
             position: (98, 28),
            },
           ],
          },
          then: FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (98, 35),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: ",",
               position: (98, 53),
              },
             ],
             position: (98, 52),
            },
            Variable {
             identifier: "v",
             position: (98, 56),
            },
           ],
          },
          else_: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "generators",
             position: (99, 14),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "mkValueStringDefault",
               position: (99, 25),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [],
             recursive: false,
             position: (99, 46),
            },
            Variable {
             identifier: "v",
             position: (99, 50),
            },
           ],
          },
          position: (98, 9),
         },
         position: (97, 23),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "mkKeyValue",
           position: (101, 7),
          },
         ],
        },
        to: Function {
         argument: Simple {
          identifier: "k",
         },
         definition: Function {
          argument: Simple {
           identifier: "v",
          },
          definition: IfThenElse {
           predicate: BinaryOperation {
            operator: EqualTo,
            operands: [
             Variable {
              identifier: "v",
              position: (102, 12),
             },
             Variable {
              identifier: "null",
              position: (102, 17),
             },
            ],
            position: (102, 14),
           },
           then: String {
            parts: [],
            position: (102, 27),
           },
           else_: IfThenElse {
            predicate: BinaryOperation {
             operator: EqualTo,
             operands: [
              Variable {
               identifier: "k",
               position: (103, 17),
              },
              String {
               parts: [
                Raw {
                 content: "processChildrenOnly",
                 position: (103, 23),
                },
               ],
               position: (103, 22),
              },
             ],
             position: (103, 19),
            },
            then: String {
             parts: [],
             position: (103, 49),
            },
            else_: IfThenElse {
             predicate: BinaryOperation {
              operator: EqualTo,
              operands: [
               Variable {
                identifier: "k",
                position: (104, 17),
               },
               String {
                parts: [
                 Raw {
                  content: "useTemplate",
                  position: (104, 23),
                 },
                ],
                position: (104, 22),
               },
              ],
              position: (104, 19),
             },
             then: String {
              parts: [],
              position: (104, 41),
             },
             else_: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "generators",
                position: (105, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "mkKeyValueDefault",
                  position: (105, 25),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Map {
                bindings: [
                 Inherit {
                  from: None,
                  attributes: [
                   Raw {
                    content: "mkValueString",
                    position: (105, 53),
                   },
                  ],
                 },
                ],
                recursive: false,
                position: (105, 43),
               },
               String {
                parts: [
                 Raw {
                  content: "=",
                  position: (105, 71),
                 },
                ],
                position: (105, 70),
               },
               Variable {
                identifier: "k",
                position: (105, 74),
               },
               Variable {
                identifier: "v",
                position: (105, 76),
               },
              ],
             },
             position: (104, 14),
            },
            position: (103, 14),
           },
           position: (102, 9),
          },
          position: (101, 23),
         },
         position: (101, 20),
        },
       },
      ],
      target: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "generators",
         position: (107, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "toINI",
           position: (107, 16),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Map {
         bindings: [
          Inherit {
           from: None,
           attributes: [
            Raw {
             content: "mkKeyValue",
             position: (107, 32),
            },
           ],
          },
         ],
         recursive: false,
         position: (107, 22),
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (107, 46),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "settings",
            position: (107, 50),
           },
          ],
         },
         default: None,
        },
       ],
      },
      position: (96, 5),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (114, 3),
        },
        Raw {
         content: "services",
         position: (114, 11),
        },
        Raw {
         content: "sanoid",
         position: (114, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (115, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (115, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Sanoid ZFS snapshotting service",
              position: (115, 30),
             },
            ],
            position: (115, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "interval",
            position: (117, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (117, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (118, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (118, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (118, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (119, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "hourly",
                 position: (119, 18),
                },
               ],
               position: (119, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (120, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "daily",
                 position: (120, 18),
                },
               ],
               position: (120, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (121, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Run sanoid at this interval. The default is to run hourly.\n\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n",
                 position: (122, 1),
                },
               ],
               position: (121, 21),
              },
             },
            ],
            recursive: false,
            position: (117, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "datasets",
            position: (130, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (130, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (131, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (131, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (131, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Parentheses {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (131, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "submodule",
                      position: (131, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Parentheses {
                    expression: Function {
                     argument: Destructured {
                      identifier: None,
                      arguments: [
                       DestructuredArgument {
                        identifier: "options",
                        default: None,
                       },
                       DestructuredArgument {
                        identifier: "config",
                        default: None,
                       },
                      ],
                      ellipsis: true,
                     },
                     definition: Map {
                      bindings: [
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "freeformType",
                           position: (132, 9),
                          },
                         ],
                        },
                        to: Variable {
                         identifier: "datasetSettingsType",
                         position: (132, 24),
                        },
                       },
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "options",
                           position: (133, 9),
                          },
                         ],
                        },
                        to: BinaryOperation {
                         operator: Update,
                         operands: [
                          Variable {
                           identifier: "commonOptions",
                           position: (133, 19),
                          },
                          Variable {
                           identifier: "datasetOptions",
                           position: (133, 36),
                          },
                         ],
                         position: (133, 33),
                        },
                       },
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "config",
                           position: (134, 9),
                          },
                          Raw {
                           content: "use_template",
                           position: (134, 16),
                          },
                         ],
                        },
                        to: FunctionApplication {
                         function: Variable {
                          identifier: "mkAliasDefinitions",
                          position: (134, 31),
                         },
                         arguments: [
                          Parentheses {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "mkDefault",
                             position: (134, 51),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "options",
                               position: (134, 61),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "useTemplate",
                                 position: (134, 69),
                                },
                               ],
                              },
                              default: Some(
                               Map {
                                bindings: [],
                                recursive: false,
                                position: (134, 84),
                               },
                              ),
                             },
                            ],
                           },
                           position: (134, 50),
                          },
                         ],
                        },
                       },
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "config",
                           position: (135, 9),
                          },
                          Raw {
                           content: "process_children_only",
                           position: (135, 16),
                          },
                         ],
                        },
                        to: FunctionApplication {
                         function: Variable {
                          identifier: "mkAliasDefinitions",
                          position: (135, 40),
                         },
                         arguments: [
                          Parentheses {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "mkDefault",
                             position: (135, 60),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "options",
                               position: (135, 70),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "processChildrenOnly",
                                 position: (135, 78),
                                },
                               ],
                              },
                              default: Some(
                               Map {
                                bindings: [],
                                recursive: false,
                                position: (135, 101),
                               },
                              ),
                             },
                            ],
                           },
                           position: (135, 59),
                          },
                         ],
                        },
                       },
                      ],
                      recursive: false,
                      position: (131, 72),
                     },
                     position: (131, 46),
                    },
                    position: (131, 45),
                   },
                  ],
                 },
                 position: (131, 28),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (137, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (137, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (138, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Datasets to snapshot.",
                 position: (138, 22),
                },
               ],
               position: (138, 21),
              },
             },
            ],
            recursive: false,
            position: (130, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "templates",
            position: (141, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (141, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (142, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (142, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (142, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Parentheses {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (142, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "submodule",
                      position: (142, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Map {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "freeformType",
                         position: (143, 9),
                        },
                       ],
                      },
                      to: Variable {
                       identifier: "datasetSettingsType",
                       position: (143, 24),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "options",
                         position: (144, 9),
                        },
                       ],
                      },
                      to: Variable {
                       identifier: "commonOptions",
                       position: (144, 19),
                      },
                     },
                    ],
                    recursive: false,
                    position: (142, 45),
                   },
                  ],
                 },
                 position: (142, 28),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (146, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (146, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (147, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Templates for datasets.",
                 position: (147, 22),
                },
               ],
               position: (147, 21),
              },
             },
            ],
            recursive: false,
            position: (141, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "settings",
            position: (150, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (150, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (151, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (151, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (151, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Variable {
                 identifier: "datasetSettingsType",
                 position: (151, 28),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (152, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Free-form settings written directly to the config file. See\n<link xlink:href=\"https://github.com/jimsalterjrs/sanoid/blob/master/sanoid.defaults.conf\"/>\nfor allowed values.\n",
                 position: (153, 1),
                },
               ],
               position: (152, 21),
              },
             },
            ],
            recursive: false,
            position: (150, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraArgs",
            position: (159, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (159, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (160, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (160, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (160, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (160, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (160, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (161, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (161, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (162, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "--verbose",
                   position: (162, 20),
                  },
                 ],
                 position: (162, 19),
                },
                String {
                 parts: [
                  Raw {
                   content: "--readonly",
                   position: (162, 32),
                  },
                 ],
                 position: (162, 31),
                },
                String {
                 parts: [
                  Raw {
                   content: "--debug",
                   position: (162, 45),
                  },
                 ],
                 position: (162, 44),
                },
               ],
               position: (162, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (163, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Extra arguments to pass to sanoid. See\n<link xlink:href=\"https://github.com/jimsalterjrs/sanoid/#sanoid-command-line-options\"/>\nfor allowed options.\n",
                 position: (164, 1),
                },
               ],
               position: (163, 21),
              },
             },
            ],
            recursive: false,
            position: (159, 26),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (114, 29),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (173, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (173, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (173, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (173, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (174, 5),
             },
             Raw {
              content: "sanoid",
              position: (174, 14),
             },
             Raw {
              content: "settings",
              position: (174, 21),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (174, 32),
            },
            arguments: [
             List {
              elements: [
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mapAttrs'",
                  position: (175, 8),
                 },
                 arguments: [
                  Parentheses {
                   expression: Function {
                    argument: Simple {
                     identifier: "d",
                    },
                    definition: Function {
                     argument: Simple {
                      identifier: "v",
                     },
                     definition: FunctionApplication {
                      function: Variable {
                       identifier: "nameValuePair",
                       position: (175, 25),
                      },
                      arguments: [
                       Parentheses {
                        expression: BinaryOperation {
                         operator: Addition,
                         operands: [
                          String {
                           parts: [
                            Raw {
                             content: "template_",
                             position: (175, 41),
                            },
                           ],
                           position: (175, 40),
                          },
                          Variable {
                           identifier: "d",
                           position: (175, 54),
                          },
                         ],
                         position: (175, 52),
                        },
                        position: (175, 39),
                       },
                       Variable {
                        identifier: "v",
                        position: (175, 57),
                       },
                      ],
                     },
                     position: (175, 22),
                    },
                    position: (175, 19),
                   },
                   position: (175, 18),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (175, 60),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "templates",
                      position: (175, 64),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
                position: (175, 7),
               },
               Parentheses {
                expression: FunctionApplication {
                 function: Variable {
                  identifier: "mapAttrs",
                  position: (176, 8),
                 },
                 arguments: [
                  Parentheses {
                   expression: Function {
                    argument: Simple {
                     identifier: "d",
                    },
                    definition: Function {
                     argument: Simple {
                      identifier: "v",
                     },
                     definition: Variable {
                      identifier: "v",
                      position: (176, 24),
                     },
                     position: (176, 21),
                    },
                    position: (176, 18),
                   },
                   position: (176, 17),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (176, 27),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "datasets",
                      position: (176, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
                position: (176, 7),
               },
              ],
              position: (174, 40),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (179, 5),
             },
             Raw {
              content: "services",
              position: (179, 13),
             },
             Raw {
              content: "sanoid",
              position: (179, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (180, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Sanoid snapshot service",
                 position: (180, 22),
                },
               ],
               position: (180, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (181, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStartPre",
                    position: (182, 9),
                   },
                  ],
                 },
                 to: Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "map",
                    position: (182, 25),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "buildAllowCommand",
                       position: (182, 30),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "allow",
                          position: (182, 49),
                         },
                        ],
                        position: (182, 48),
                       },
                       List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "snapshot",
                            position: (182, 59),
                           },
                          ],
                          position: (182, 58),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "mount",
                            position: (182, 70),
                           },
                          ],
                          position: (182, 69),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "destroy",
                            position: (182, 78),
                           },
                          ],
                          position: (182, 77),
                         },
                        ],
                        position: (182, 56),
                       },
                      ],
                     },
                     position: (182, 29),
                    },
                    Variable {
                     identifier: "datasets",
                     position: (182, 90),
                    },
                   ],
                  },
                  position: (182, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStopPost",
                    position: (183, 9),
                   },
                  ],
                 },
                 to: Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "map",
                    position: (183, 25),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "buildAllowCommand",
                       position: (183, 30),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "unallow",
                          position: (183, 49),
                         },
                        ],
                        position: (183, 48),
                       },
                       List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "snapshot",
                            position: (183, 61),
                           },
                          ],
                          position: (183, 60),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "mount",
                            position: (183, 72),
                           },
                          ],
                          position: (183, 71),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "destroy",
                            position: (183, 80),
                           },
                          ],
                          position: (183, 79),
                         },
                        ],
                        position: (183, 58),
                       },
                      ],
                     },
                     position: (183, 29),
                    },
                    Variable {
                     identifier: "datasets",
                     position: (183, 92),
                    },
                   ],
                  },
                  position: (183, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (184, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (184, 21),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "escapeShellArgs",
                      position: (184, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "pkgs",
                             position: (185, 14),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "sanoid",
                               position: (185, 19),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                          Raw {
                           content: "/bin/sanoid",
                           position: (185, 26),
                          },
                         ],
                         position: (185, 11),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "--cron",
                           position: (186, 12),
                          },
                         ],
                         position: (186, 11),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "--configdir",
                           position: (187, 12),
                          },
                         ],
                         position: (187, 11),
                        },
                        Parentheses {
                         expression: FunctionApplication {
                          function: PropertyAccess {
                           expression: Variable {
                            identifier: "pkgs",
                            position: (188, 12),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "writeTextDir",
                              position: (188, 17),
                             },
                            ],
                           },
                           default: None,
                          },
                          arguments: [
                           String {
                            parts: [
                             Raw {
                              content: "sanoid.conf",
                              position: (188, 31),
                             },
                            ],
                            position: (188, 30),
                           },
                           Variable {
                            identifier: "configFile",
                            position: (188, 44),
                           },
                          ],
                         },
                         position: (188, 11),
                        },
                       ],
                       position: (184, 42),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (189, 14),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "extraArgs",
                          position: (189, 18),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (189, 11),
                    },
                    position: (184, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (190, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (190, 17),
                   },
                  ],
                  position: (190, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Group",
                    position: (191, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (191, 18),
                   },
                  ],
                  position: (191, 17),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "DynamicUser",
                    position: (192, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (192, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RuntimeDirectory",
                    position: (193, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (193, 29),
                   },
                  ],
                  position: (193, 28),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "CacheDirectory",
                    position: (194, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (194, 27),
                   },
                  ],
                  position: (194, 26),
                 },
                },
               ],
               recursive: false,
               position: (181, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "environment",
                 position: (197, 7),
                },
                Raw {
                 content: "TZ",
                 position: (197, 19),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "UTC",
                 position: (197, 25),
                },
               ],
               position: (197, 24),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (198, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "zfs.target",
                   position: (198, 18),
                  },
                 ],
                 position: (198, 17),
                },
               ],
               position: (198, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "startAt",
                 position: (199, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (199, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "interval",
                  position: (199, 21),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (179, 31),
           },
          },
         ],
         recursive: false,
         position: (173, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (203, 3),
        },
        Raw {
         content: "maintainers",
         position: (203, 8),
        },
       ],
      },
      to: With {
       expression: Variable {
        identifier: "maintainers",
        position: (203, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "lopsided98",
          position: (203, 42),
         },
        ],
        position: (203, 40),
       },
       position: (203, 22),
      },
     },
    ],
    recursive: false,
    position: (110, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}