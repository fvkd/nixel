---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "sanoid",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "datasetSettingsType",
        position: (8, 3),
       },
      ],
     },
     With {
      expression: Variable {
       identifier: "types",
       position: (8, 30),
      },
      target: BinaryOperation {
       operator: Update,
       operands: [
        FunctionApplication {
         function: Variable {
          identifier: "attrsOf",
          position: (9, 6),
         },
         arguments: [
          FunctionApplication {
           function: Variable {
            identifier: "nullOr",
            position: (9, 15),
           },
           arguments: [
            FunctionApplication {
             function: Variable {
              identifier: "oneOf",
              position: (9, 23),
             },
             arguments: [
              List {
               elements: [
                Variable {
                 identifier: "str",
                 position: (9, 31),
                },
                Variable {
                 identifier: "int",
                 position: (9, 35),
                },
                Variable {
                 identifier: "bool",
                 position: (9, 39),
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "listOf",
                  position: (9, 45),
                 },
                 arguments: [
                  Variable {
                   identifier: "str",
                   position: (9, 52),
                  },
                 ],
                },
               ],
              },
             ],
            },
           ],
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "description",
              position: (10, 7),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "dataset/template options",
              position: (10, 22),
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "commonOptions",
        position: (13, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "hourly",
           position: (14, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (14, 14),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (15, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Number of hourly snapshots.",
                position: (15, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (16, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (16, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (16, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (16, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "unsigned",
                    position: (16, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (17, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (17, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "daily",
           position: (20, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (20, 13),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (21, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Number of daily snapshots.",
                position: (21, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (22, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (22, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (22, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (22, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "unsigned",
                    position: (22, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (23, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (23, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "monthly",
           position: (26, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (26, 15),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (27, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Number of monthly snapshots.",
                position: (27, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (28, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (28, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (28, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (28, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "unsigned",
                    position: (28, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (29, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (29, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "yearly",
           position: (32, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (32, 14),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (33, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Number of yearly snapshots.",
                position: (33, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (34, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (34, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (34, 26),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "ints",
                  position: (34, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "unsigned",
                    position: (34, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (35, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (35, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "autoprune",
           position: (38, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (38, 17),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (39, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Whether to automatically prune old snapshots.",
                position: (39, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (40, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (40, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (40, 26),
               },
               arguments: [
                Variable {
                 identifier: "bool",
                 position: (40, 33),
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (41, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (41, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "autosnap",
           position: (44, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (44, 16),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (45, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Whether to automatically take snapshots.",
                position: (45, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (46, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (46, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "nullOr",
                position: (46, 26),
               },
               arguments: [
                Variable {
                 identifier: "bool",
                 position: (46, 33),
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (47, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (47, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "datasetOptions",
        position: (51, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "use_template",
           position: (52, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (52, 20),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (53, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Names of the templates to use for this dataset.",
                position: (53, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (54, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (54, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "listOf",
                  position: (54, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               BinaryOperation {
                operator: Update,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (54, 28),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (54, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "check",
                       position: (55, 9),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (55, 18),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "enum",
                          position: (55, 24),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       FunctionApplication {
                        function: Variable {
                         identifier: "attrNames",
                         position: (55, 30),
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (55, 40),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "templates",
                             position: (55, 44),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      ],
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "check",
                        position: (55, 56),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (56, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "configured template name",
                       position: (56, 24),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (58, 7),
               },
              ],
             },
             List {
              elements: [],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "useTemplate",
           position: (60, 5),
          },
         ],
        },
        Variable {
         identifier: "use_template",
         position: (60, 19),
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "recursive",
           position: (62, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (62, 17),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (63, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Whether to recursively snapshot dataset children.\nYou can also set this to <literal>\"zfs\"</literal> to handle datasets\nrecursively in an atomic way without the possibility to\noverride settings for child datasets.\n",
                position: (64, 1),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (69, 7),
               },
              ],
             },
             With {
              expression: Variable {
               identifier: "types",
               position: (69, 19),
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "oneOf",
                position: (69, 26),
               },
               arguments: [
                List {
                 elements: [
                  Variable {
                   identifier: "bool",
                   position: (69, 34),
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "enum",
                    position: (69, 40),
                   },
                   arguments: [
                    List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "zfs",
                         position: (69, 48),
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (70, 7),
               },
              ],
             },
             Variable {
              identifier: "false",
              position: (70, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "process_children_only",
           position: (73, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (73, 29),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (74, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Whether to only snapshot child datasets if recursing.",
                position: (74, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (75, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (75, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "bool",
                 position: (75, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (76, 7),
               },
              ],
             },
             Variable {
              identifier: "false",
              position: (76, 17),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "processChildrenOnly",
           position: (78, 5),
          },
         ],
        },
        Variable {
         identifier: "process_children_only",
         position: (78, 27),
        },
       ),
      ],
      recursive: true,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "datasets",
        position: (82, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "unique",
       position: (82, 14),
      },
      arguments: [
       FunctionApplication {
        function: Variable {
         identifier: "attrNames",
         position: (82, 22),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (82, 32),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "datasets",
             position: (82, 36),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "buildAllowCommand",
        position: (86, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "zfsAction",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "permissions",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Function {
        argument: Some(
         "dataset",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (86, 56),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "escapeShellArgs",
             position: (86, 60),
            },
           ],
          },
          default: None,
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "-+/run/booted-system/sw/bin/zfs",
               position: (88, 6),
              },
             ],
            },
            Variable {
             identifier: "zfsAction",
             position: (89, 5),
            },
            String {
             parts: [
              Raw {
               content: "sanoid",
               position: (90, 6),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (91, 6),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: ",",
                 position: (91, 24),
                },
               ],
              },
              Variable {
               identifier: "permissions",
               position: (91, 27),
              },
             ],
            },
            Variable {
             identifier: "dataset",
             position: (92, 5),
            },
           ],
          },
         ],
        },
       },
      },
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configFile",
        position: (95, 3),
       },
      ],
     },
     LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "mkValueString",
           position: (97, 7),
          },
         ],
        },
        Function {
         argument: Some(
          "v",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: IfThenElse {
          predicate: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "builtins",
             position: (98, 12),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "isList",
               position: (98, 21),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Variable {
             identifier: "v",
             position: (98, 28),
            },
           ],
          },
          then: FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (98, 35),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: ",",
               position: (98, 53),
              },
             ],
            },
            Variable {
             identifier: "v",
             position: (98, 56),
            },
           ],
          },
          else_: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "generators",
             position: (99, 14),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "mkValueStringDefault",
               position: (99, 25),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [],
             recursive: false,
            },
            Variable {
             identifier: "v",
             position: (99, 50),
            },
           ],
          },
         },
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "mkKeyValue",
           position: (101, 7),
          },
         ],
        },
        Function {
         argument: Some(
          "k",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: Function {
          argument: Some(
           "v",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: IfThenElse {
           predicate: BinaryOperation {
            operator: EqualTo,
            operands: [
             Variable {
              identifier: "v",
              position: (102, 12),
             },
             Variable {
              identifier: "null",
              position: (102, 17),
             },
            ],
           },
           then: String {
            parts: [],
           },
           else_: IfThenElse {
            predicate: BinaryOperation {
             operator: EqualTo,
             operands: [
              Variable {
               identifier: "k",
               position: (103, 17),
              },
              String {
               parts: [
                Raw {
                 content: "processChildrenOnly",
                 position: (103, 23),
                },
               ],
              },
             ],
            },
            then: String {
             parts: [],
            },
            else_: IfThenElse {
             predicate: BinaryOperation {
              operator: EqualTo,
              operands: [
               Variable {
                identifier: "k",
                position: (104, 17),
               },
               String {
                parts: [
                 Raw {
                  content: "useTemplate",
                  position: (104, 23),
                 },
                ],
               },
              ],
             },
             then: String {
              parts: [],
             },
             else_: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "generators",
                position: (105, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "mkKeyValueDefault",
                  position: (105, 25),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Map {
                bindings: [
                 Inherit(
                  None,
                  [
                   Raw {
                    content: "mkValueString",
                    position: (105, 53),
                   },
                  ],
                 ),
                ],
                recursive: false,
               },
               String {
                parts: [
                 Raw {
                  content: "=",
                  position: (105, 71),
                 },
                ],
               },
               Variable {
                identifier: "k",
                position: (105, 74),
               },
               Variable {
                identifier: "v",
                position: (105, 76),
               },
              ],
             },
            },
           },
          },
         },
        },
       ),
      ],
      target: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "generators",
         position: (107, 5),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "toINI",
           position: (107, 16),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Map {
         bindings: [
          Inherit(
           None,
           [
            Raw {
             content: "mkKeyValue",
             position: (107, 32),
            },
           ],
          ),
         ],
         recursive: false,
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (107, 46),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "settings",
            position: (107, 50),
           },
          ],
         },
         default: None,
        },
       ],
      },
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (114, 3),
        },
        Raw {
         content: "services",
         position: (114, 11),
        },
        Raw {
         content: "sanoid",
         position: (114, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (115, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (115, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Sanoid ZFS snapshotting service",
              position: (115, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "interval",
            position: (117, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (117, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (118, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (118, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (118, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (119, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "hourly",
                 position: (119, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (120, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "daily",
                 position: (120, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (121, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Run sanoid at this interval. The default is to run hourly.\n\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n",
                 position: (122, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "datasets",
            position: (130, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (130, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (131, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (131, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (131, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (131, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "submodule",
                     position: (131, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Function {
                   argument: None,
                   arguments: FunctionArguments {
                    arguments: [
                     FunctionArgument {
                      identifier: "options",
                      default: None,
                     },
                     FunctionArgument {
                      identifier: "config",
                      default: None,
                     },
                    ],
                    ellipsis: true,
                   },
                   definition: Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "freeformType",
                         position: (132, 9),
                        },
                       ],
                      },
                      Variable {
                       identifier: "datasetSettingsType",
                       position: (132, 24),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "options",
                         position: (133, 9),
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Update,
                       operands: [
                        Variable {
                         identifier: "commonOptions",
                         position: (133, 19),
                        },
                        Variable {
                         identifier: "datasetOptions",
                         position: (133, 36),
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "config",
                         position: (134, 9),
                        },
                        Raw {
                         content: "use_template",
                         position: (134, 16),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkAliasDefinitions",
                        position: (134, 31),
                       },
                       arguments: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "mkDefault",
                          position: (134, 51),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "options",
                            position: (134, 61),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "useTemplate",
                              position: (134, 69),
                             },
                            ],
                           },
                           default: Some(
                            Map {
                             bindings: [],
                             recursive: false,
                            },
                           ),
                          },
                         ],
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "config",
                         position: (135, 9),
                        },
                        Raw {
                         content: "process_children_only",
                         position: (135, 16),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkAliasDefinitions",
                        position: (135, 40),
                       },
                       arguments: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "mkDefault",
                          position: (135, 60),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "options",
                            position: (135, 70),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "processChildrenOnly",
                              position: (135, 78),
                             },
                            ],
                           },
                           default: Some(
                            Map {
                             bindings: [],
                             recursive: false,
                            },
                           ),
                          },
                         ],
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (137, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (138, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Datasets to snapshot.",
                 position: (138, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "templates",
            position: (141, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (141, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (142, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (142, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (142, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (142, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "submodule",
                     position: (142, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "freeformType",
                        position: (143, 9),
                       },
                      ],
                     },
                     Variable {
                      identifier: "datasetSettingsType",
                      position: (143, 24),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "options",
                        position: (144, 9),
                       },
                      ],
                     },
                     Variable {
                      identifier: "commonOptions",
                      position: (144, 19),
                     },
                    ),
                   ],
                   recursive: false,
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (146, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (147, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Templates for datasets.",
                 position: (147, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "settings",
            position: (150, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (150, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (151, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (151, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (151, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Variable {
                 identifier: "datasetSettingsType",
                 position: (151, 28),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (152, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Free-form settings written directly to the config file. See\n<link xlink:href=\"https://github.com/jimsalterjrs/sanoid/blob/master/sanoid.defaults.conf\"/>\nfor allowed values.\n",
                 position: (153, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraArgs",
            position: (159, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (159, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (160, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (160, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (160, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (160, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (160, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (161, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (162, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "--verbose",
                   position: (162, 20),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "--readonly",
                   position: (162, 32),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "--debug",
                   position: (162, 45),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (163, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Extra arguments to pass to sanoid. See\n<link xlink:href=\"https://github.com/jimsalterjrs/sanoid/#sanoid-command-line-options\"/>\nfor allowed options.\n",
                 position: (164, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (173, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (173, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (173, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (173, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (174, 5),
             },
             Raw {
              content: "sanoid",
              position: (174, 14),
             },
             Raw {
              content: "settings",
              position: (174, 21),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (174, 32),
            },
            arguments: [
             List {
              elements: [
               FunctionApplication {
                function: Variable {
                 identifier: "mapAttrs'",
                 position: (175, 8),
                },
                arguments: [
                 Function {
                  argument: Some(
                   "d",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "v",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: FunctionApplication {
                    function: Variable {
                     identifier: "nameValuePair",
                     position: (175, 25),
                    },
                    arguments: [
                     BinaryOperation {
                      operator: Addition,
                      operands: [
                       String {
                        parts: [
                         Raw {
                          content: "template_",
                          position: (175, 41),
                         },
                        ],
                       },
                       Variable {
                        identifier: "d",
                        position: (175, 54),
                       },
                      ],
                     },
                     Variable {
                      identifier: "v",
                      position: (175, 57),
                     },
                    ],
                   },
                  },
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (175, 60),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "templates",
                     position: (175, 64),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mapAttrs",
                 position: (176, 8),
                },
                arguments: [
                 Function {
                  argument: Some(
                   "d",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "v",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Variable {
                    identifier: "v",
                    position: (176, 24),
                   },
                  },
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (176, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "datasets",
                     position: (176, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (179, 5),
             },
             Raw {
              content: "services",
              position: (179, 13),
             },
             Raw {
              content: "sanoid",
              position: (179, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (180, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Sanoid snapshot service",
                 position: (180, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (181, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStartPre",
                    position: (182, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "map",
                   position: (182, 25),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "buildAllowCommand",
                     position: (182, 30),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "allow",
                        position: (182, 49),
                       },
                      ],
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "snapshot",
                          position: (182, 59),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "mount",
                          position: (182, 70),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "destroy",
                          position: (182, 78),
                         },
                        ],
                       },
                      ],
                     },
                    ],
                   },
                   Variable {
                    identifier: "datasets",
                    position: (182, 90),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStopPost",
                    position: (183, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "map",
                   position: (183, 25),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "buildAllowCommand",
                     position: (183, 30),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "unallow",
                        position: (183, 49),
                       },
                      ],
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "snapshot",
                          position: (183, 61),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "mount",
                          position: (183, 72),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "destroy",
                          position: (183, 80),
                         },
                        ],
                       },
                      ],
                     },
                    ],
                   },
                   Variable {
                    identifier: "datasets",
                    position: (183, 92),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (184, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (184, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "escapeShellArgs",
                      position: (184, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     List {
                      elements: [
                       String {
                        parts: [
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "pkgs",
                            position: (185, 14),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "sanoid",
                              position: (185, 19),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/bin/sanoid",
                          position: (185, 26),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "--cron",
                          position: (186, 12),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "--configdir",
                          position: (187, 12),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (188, 12),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "writeTextDir",
                            position: (188, 17),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         String {
                          parts: [
                           Raw {
                            content: "sanoid.conf",
                            position: (188, 31),
                           },
                          ],
                         },
                         Variable {
                          identifier: "configFile",
                          position: (188, 44),
                         },
                        ],
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (189, 14),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "extraArgs",
                         position: (189, 18),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (190, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (190, 17),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Group",
                    position: (191, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (191, 18),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DynamicUser",
                    position: (192, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (192, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RuntimeDirectory",
                    position: (193, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (193, 29),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "CacheDirectory",
                    position: (194, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sanoid",
                    position: (194, 27),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (197, 7),
                },
                Raw {
                 content: "TZ",
                 position: (197, 19),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "UTC",
                 position: (197, 25),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (198, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "zfs.target",
                   position: (198, 18),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startAt",
                 position: (199, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (199, 17),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "interval",
                  position: (199, 21),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (203, 3),
        },
        Raw {
         content: "maintainers",
         position: (203, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (203, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "lopsided98",
          position: (203, 42),
         },
        ],
       },
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}