---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "throttled",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (8, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (9, 5),
           },
           Raw {
            content: "throttled",
            position: (9, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (10, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (10, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "fix for Intel CPU throttling",
                 position: (10, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (12, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (12, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (13, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (13, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (13, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (14, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (15, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Alternative configuration",
                    position: (15, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (20, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (20, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (20, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (20, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (21, 5),
             },
             Raw {
              content: "packages",
              position: (21, 13),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (21, 26),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "throttled",
                 position: (21, 31),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (23, 5),
             },
             Raw {
              content: "services",
              position: (23, 13),
             },
             Raw {
              content: "lenovo_fix",
              position: (23, 22),
             },
             Raw {
              content: "wantedBy",
              position: (23, 33),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "multi-user.target",
                position: (23, 47),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (25, 5),
             },
             Raw {
              content: "etc",
              position: (25, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "lenovo_fix.conf",
                 position: (25, 22),
                },
               ],
              },
             },
             Raw {
              content: "source",
              position: (25, 39),
             },
            ],
           },
           IfThenElse {
            predicate: BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (26, 10),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "extraConfig",
                  position: (26, 14),
                 },
                ],
               },
               default: None,
              },
              String {
               parts: [],
              },
             ],
            },
            then: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (27, 12),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "writeText",
                 position: (27, 17),
                },
               ],
              },
              default: None,
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "lenovo_fix.conf",
                 position: (27, 28),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (27, 45),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "extraConfig",
                  position: (27, 49),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            else_: String {
             parts: [
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (28, 15),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "throttled",
                   position: (28, 20),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/etc/lenovo_fix.conf",
               position: (28, 30),
              },
             ],
            },
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "boot",
              position: (32, 5),
             },
             Raw {
              content: "kernelParams",
              position: (32, 10),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optional",
             position: (33, 7),
            },
            arguments: [
             FunctionApplication {
              function: Variable {
               identifier: "versionAtLeast",
               position: (33, 17),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (33, 32),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "boot",
                   position: (33, 39),
                  },
                  Raw {
                   content: "kernelPackages",
                   position: (33, 44),
                  },
                  Raw {
                   content: "kernel",
                   position: (33, 59),
                  },
                  Raw {
                   content: "version",
                   position: (33, 66),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "5.9",
                  position: (33, 75),
                 },
                ],
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "msr.allow_writes=on",
                position: (34, 8),
               },
              ],
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}