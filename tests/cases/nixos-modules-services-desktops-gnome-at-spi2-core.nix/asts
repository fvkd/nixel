---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "meta",
        position: (9, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (10, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "teams",
          position: (10, 19),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "gnome",
            position: (10, 25),
           },
           Raw {
            content: "members",
            position: (10, 31),
           },
          ],
         },
         default: None,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (16, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: Variable {
         identifier: "mkRenamedOptionModule",
         position: (17, 6),
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
              position: (18, 10),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "gnome3",
              position: (18, 21),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "at-spi2-core",
              position: (18, 30),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "enable",
              position: (18, 45),
             },
            ],
           },
          ],
         },
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
              position: (19, 10),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "gnome",
              position: (19, 21),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "at-spi2-core",
              position: (19, 29),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "enable",
              position: (19, 44),
             },
            ],
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (23, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (25, 5),
          },
          Raw {
           content: "gnome",
           position: (25, 14),
          },
          Raw {
           content: "at-spi2-core",
           position: (25, 20),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (27, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (27, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (28, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (28, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bool",
                    position: (28, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (29, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (29, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (30, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Whether to enable at-spi2-core, a service for the Assistive Technologies\navailable on the GNOME platform.\n\nEnable this if you get the error or warning\n<literal>The name org.a11y.Bus was not provided by any .service files</literal>.\n",
                   position: (31, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (46, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkMerge",
       position: (46, 12),
      },
      arguments: [
       List {
        elements: [
         FunctionApplication {
          function: Variable {
           identifier: "mkIf",
           position: (47, 6),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "config",
             position: (47, 11),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "services",
               position: (47, 18),
              },
              Raw {
               content: "gnome",
               position: (47, 27),
              },
              Raw {
               content: "at-spi2-core",
               position: (47, 33),
              },
              Raw {
               content: "enable",
               position: (47, 46),
              },
             ],
            },
            default: None,
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (48, 7),
                },
                Raw {
                 content: "systemPackages",
                 position: (48, 19),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (48, 38),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "at-spi2-core",
                    position: (48, 43),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "services",
                 position: (49, 7),
                },
                Raw {
                 content: "dbus",
                 position: (49, 16),
                },
                Raw {
                 content: "packages",
                 position: (49, 21),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (49, 34),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "at-spi2-core",
                    position: (49, 39),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "systemd",
                 position: (50, 7),
                },
                Raw {
                 content: "packages",
                 position: (50, 15),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (50, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "at-spi2-core",
                    position: (50, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkIf",
           position: (53, 6),
          },
          arguments: [
           UnaryOperation {
            operator: Not,
            operand: PropertyAccess {
             expression: Variable {
              identifier: "config",
              position: (53, 13),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "services",
                position: (53, 20),
               },
               Raw {
                content: "gnome",
                position: (53, 29),
               },
               Raw {
                content: "at-spi2-core",
                position: (53, 35),
               },
               Raw {
                content: "enable",
                position: (53, 48),
               },
              ],
             },
             default: None,
            },
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (54, 7),
                },
                Raw {
                 content: "variables",
                 position: (54, 19),
                },
                Raw {
                 content: "NO_AT_BRIDGE",
                 position: (54, 29),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "1",
                 position: (54, 45),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ],
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
 },
}