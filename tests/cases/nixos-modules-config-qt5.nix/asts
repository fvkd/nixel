---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "qt5",
         position: (7, 16),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "isQGnome",
        position: (9, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: LogicalAnd,
      operands: [
       BinaryOperation {
        operator: EqualTo,
        operands: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (9, 14),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "platformTheme",
             position: (9, 18),
            },
           ],
          },
          default: None,
         },
         String {
          parts: [
           Raw {
            content: "gnome",
            position: (9, 36),
           },
          ],
          position: (9, 35),
         },
        ],
        position: (9, 32),
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "builtins",
          position: (9, 46),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "elem",
            position: (9, 55),
           },
          ],
         },
         default: None,
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (9, 60),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "style",
             position: (9, 64),
            },
           ],
          },
          default: None,
         },
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "adwaita",
              position: (9, 72),
             },
            ],
            position: (9, 71),
           },
           String {
            parts: [
             Raw {
              content: "adwaita-dark",
              position: (9, 82),
             },
            ],
            position: (9, 81),
           },
          ],
          position: (9, 70),
         },
        ],
       },
      ],
      position: (9, 43),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "isQtStyle",
        position: (10, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: LogicalAnd,
      operands: [
       BinaryOperation {
        operator: EqualTo,
        operands: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (10, 15),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "platformTheme",
             position: (10, 19),
            },
           ],
          },
          default: None,
         },
         String {
          parts: [
           Raw {
            content: "gtk2",
            position: (10, 37),
           },
          ],
          position: (10, 36),
         },
        ],
        position: (10, 33),
       },
       UnaryOperation {
        operator: Not,
        operand: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "builtins",
           position: (10, 48),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "elem",
             position: (10, 57),
            },
           ],
          },
          default: None,
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (10, 62),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "style",
              position: (10, 66),
             },
            ],
           },
           default: None,
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "adwaita",
               position: (10, 74),
              },
             ],
             position: (10, 73),
            },
            String {
             parts: [
              Raw {
               content: "adwaita-dark",
               position: (10, 84),
              },
             ],
             position: (10, 83),
            },
           ],
           position: (10, 72),
          },
         ],
        },
        position: (10, 46),
       },
      ],
      position: (10, 43),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "packages",
        position: (12, 3),
       },
      ],
     },
     to: IfThenElse {
      predicate: Variable {
       identifier: "isQGnome",
       position: (12, 17),
      },
      then: List {
       elements: [
        PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (12, 33),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "qgnomeplatform",
            position: (12, 38),
           },
          ],
         },
         default: None,
        },
        PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (12, 53),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "adwaita-qt",
            position: (12, 58),
           },
          ],
         },
         default: None,
        },
       ],
       position: (12, 31),
      },
      else_: IfThenElse {
       predicate: Variable {
        identifier: "isQtStyle",
        position: (13, 13),
       },
       then: List {
        elements: [
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (13, 30),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "libsForQt5",
             position: (13, 35),
            },
            Raw {
             content: "qtstyleplugins",
             position: (13, 46),
            },
           ],
          },
          default: None,
         },
        ],
        position: (13, 28),
       },
       else_: FunctionApplication {
        function: Variable {
         identifier: "throw",
         position: (14, 10),
        },
        arguments: [
         String {
          parts: [
           Raw {
            content: "`qt5.platformTheme` ",
            position: (14, 17),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (14, 39),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "platformTheme",
                position: (14, 43),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: " and `qt5.style` ",
            position: (14, 57),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (14, 76),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "style",
                position: (14, 80),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: " are not compatible.",
            position: (14, 86),
           },
          ],
          position: (14, 16),
         },
        ],
       },
       position: (13, 10),
      },
      position: (12, 14),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (20, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "qt5",
            position: (21, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (23, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (23, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Qt5 theming configuration",
                 position: (23, 32),
                },
               ],
               position: (23, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "platformTheme",
               position: (25, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (25, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (26, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (26, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (26, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "gtk2",
                        position: (27, 12),
                       },
                      ],
                      position: (27, 11),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "gnome",
                        position: (28, 12),
                       },
                      ],
                      position: (28, 11),
                     },
                    ],
                    position: (26, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (30, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "gnome",
                    position: (30, 20),
                   },
                  ],
                  position: (30, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "relatedPackages",
                    position: (31, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "qgnomeplatform",
                      position: (32, 12),
                     },
                    ],
                    position: (32, 11),
                   },
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "libsForQt5",
                        position: (33, 13),
                       },
                      ],
                      position: (33, 12),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "qtstyleplugins",
                        position: (33, 26),
                       },
                      ],
                      position: (33, 25),
                     },
                    ],
                    position: (33, 11),
                   },
                  ],
                  position: (31, 27),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Selects the platform theme to use for Qt5 applications.</para>\n<para>The options are\n<variablelist>\n  <varlistentry>\n    <term><literal>gtk</literal></term>\n    <listitem><para>Use GTK theme with\n      <link xlink:href=\"https://github.com/qt/qtstyleplugins\">qtstyleplugins</link>\n    </para></listitem>\n  </varlistentry>\n  <varlistentry>\n    <term><literal>gnome</literal></term>\n    <listitem><para>Use GNOME theme with\n      <link xlink:href=\"https://github.com/FedoraQt/QGnomePlatform\">qgnomeplatform</link>\n    </para></listitem>\n  </varlistentry>\n</variablelist>\n",
                    position: (36, 1),
                   },
                  ],
                  position: (35, 23),
                 },
                },
               ],
               recursive: false,
               position: (25, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "style",
               position: (55, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (55, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (56, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (56, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "adwaita",
                        position: (57, 12),
                       },
                      ],
                      position: (57, 11),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "adwaita-dark",
                        position: (58, 12),
                       },
                      ],
                      position: (58, 11),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "cleanlooks",
                        position: (59, 12),
                       },
                      ],
                      position: (59, 11),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "gtk2",
                        position: (60, 12),
                       },
                      ],
                      position: (60, 11),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "motif",
                        position: (61, 12),
                       },
                      ],
                      position: (61, 11),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "plastique",
                        position: (62, 12),
                       },
                      ],
                      position: (62, 11),
                     },
                    ],
                    position: (56, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "adwaita",
                    position: (64, 20),
                   },
                  ],
                  position: (64, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "relatedPackages",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "adwaita-qt",
                      position: (66, 12),
                     },
                    ],
                    position: (66, 11),
                   },
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "libsForQt5",
                        position: (67, 13),
                       },
                      ],
                      position: (67, 12),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "qtstyleplugins",
                        position: (67, 26),
                       },
                      ],
                      position: (67, 25),
                     },
                    ],
                    position: (67, 11),
                   },
                  ],
                  position: (65, 27),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (69, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Selects the style to use for Qt5 applications.</para>\n<para>The options are\n<variablelist>\n  <varlistentry>\n    <term><literal>adwaita</literal></term>\n    <term><literal>adwaita-dark</literal></term>\n    <listitem><para>Use Adwaita Qt style with\n      <link xlink:href=\"https://github.com/FedoraQt/adwaita-qt\">adwaita</link>\n    </para></listitem>\n  </varlistentry>\n  <varlistentry>\n    <term><literal>cleanlooks</literal></term>\n    <term><literal>gtk2</literal></term>\n    <term><literal>motif</literal></term>\n    <term><literal>plastique</literal></term>\n    <listitem><para>Use styles from\n      <link xlink:href=\"https://github.com/qt/qtstyleplugins\">qtstyleplugins</link>\n    </para></listitem>\n  </varlistentry>\n</variablelist>\n",
                    position: (70, 1),
                   },
                  ],
                  position: (69, 23),
                 },
                },
               ],
               recursive: false,
               position: (55, 24),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (21, 11),
         },
        },
       ],
       recursive: false,
       position: (20, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (95, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (95, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (95, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (95, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (97, 5),
             },
             Raw {
              content: "variables",
              position: (97, 17),
             },
             Raw {
              content: "QT_QPA_PLATFORMTHEME",
              position: (97, 27),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (97, 50),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "platformTheme",
               position: (97, 54),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (99, 5),
             },
             Raw {
              content: "variables",
              position: (99, 17),
             },
             Raw {
              content: "QT_STYLE_OVERRIDE",
              position: (99, 27),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (99, 47),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "style",
               position: (99, 51),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (101, 5),
             },
             Raw {
              content: "systemPackages",
              position: (101, 17),
             },
            ],
           },
           to: Variable {
            identifier: "packages",
            position: (101, 34),
           },
          },
         ],
         recursive: false,
         position: (95, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (18, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}