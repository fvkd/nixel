---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (7, 16),
        },
        Raw {
         content: "zsh",
         position: (7, 25),
        },
        Raw {
         content: "ohMyZsh",
         position: (7, 29),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "mkLinkFarmEntry",
        position: (9, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "name",
      },
      definition: Function {
       argument: Simple {
        identifier: "dir",
       },
       definition: LetIn {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "env",
             position: (11, 7),
            },
           ],
          },
          to: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (11, 13),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "buildEnv",
               position: (11, 18),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "name",
                  position: (12, 9),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "zsh-",
                  position: (12, 17),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "name",
                   position: (12, 23),
                  },
                 },
                 Raw {
                  content: "-env",
                  position: (12, 28),
                 },
                ],
                position: (12, 16),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "paths",
                  position: (13, 9),
                 },
                ],
               },
               to: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (13, 17),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "customPkgs",
                   position: (13, 21),
                  },
                 ],
                },
                default: None,
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "pathsToLink",
                  position: (14, 9),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "/share/zsh/",
                  position: (14, 24),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "dir",
                   position: (14, 37),
                  },
                 },
                ],
                position: (14, 23),
               },
              },
             ],
             recursive: false,
             position: (11, 27),
            },
           ],
          },
         },
        ],
        target: Map {
         bindings: [
          Inherit {
           from: None,
           attributes: [
            Raw {
             content: "name",
             position: (17, 17),
            },
           ],
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "path",
              position: (17, 23),
             },
            ],
           },
           to: String {
            parts: [
             Expression {
              expression: Variable {
               identifier: "env",
               position: (17, 33),
              },
             },
             Raw {
              content: "/share/zsh/",
              position: (17, 37),
             },
             Expression {
              expression: Variable {
               identifier: "dir",
               position: (17, 50),
              },
             },
            ],
            position: (17, 30),
           },
          },
         ],
         recursive: false,
         position: (17, 7),
        },
        position: (10, 5),
       },
       position: (9, 27),
      },
      position: (9, 21),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "mkLinkFarmEntry'",
        position: (19, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "name",
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "mkLinkFarmEntry",
        position: (19, 28),
       },
       arguments: [
        Variable {
         identifier: "name",
         position: (19, 44),
        },
        Variable {
         identifier: "name",
         position: (19, 49),
        },
       ],
      },
      position: (19, 22),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "custom",
        position: (21, 3),
       },
      ],
     },
     to: IfThenElse {
      predicate: BinaryOperation {
       operator: NotEqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (22, 8),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "custom",
            position: (22, 12),
           },
          ],
         },
         default: None,
        },
        Variable {
         identifier: "null",
         position: (22, 22),
        },
       ],
       position: (22, 19),
      },
      then: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (22, 32),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "custom",
          position: (22, 36),
         },
        ],
       },
       default: None,
      },
      else_: IfThenElse {
       predicate: BinaryOperation {
        operator: EqualTo,
        operands: [
         FunctionApplication {
          function: Variable {
           identifier: "length",
           position: (23, 13),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (23, 20),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "customPkgs",
               position: (23, 24),
              },
             ],
            },
            default: None,
           },
          ],
         },
         Int {
          value: 0,
          position: (23, 38),
         },
        ],
        position: (23, 35),
       },
       then: Variable {
        identifier: "null",
        position: (23, 45),
       },
       else_: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (24, 10),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "linkFarm",
            position: (24, 15),
           },
          ],
         },
         default: None,
        },
        arguments: [
         String {
          parts: [
           Raw {
            content: "oh-my-zsh-custom",
            position: (24, 25),
           },
          ],
          position: (24, 24),
         },
         List {
          elements: [
           FunctionApplication {
            function: Variable {
             identifier: "mkLinkFarmEntry'",
             position: (25, 8),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "themes",
                position: (25, 26),
               },
              ],
              position: (25, 25),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkLinkFarmEntry",
             position: (26, 8),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "completions",
                position: (26, 25),
               },
              ],
              position: (26, 24),
             },
             String {
              parts: [
               Raw {
                content: "site-functions",
                position: (26, 39),
               },
              ],
              position: (26, 38),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkLinkFarmEntry'",
             position: (27, 8),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "plugins",
                position: (27, 26),
               },
              ],
              position: (27, 25),
             },
            ],
           },
          ],
          position: (24, 43),
         },
        ],
       },
       position: (23, 10),
      },
      position: (22, 5),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (32, 5),
        },
       ],
      },
      to: List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (33, 8),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (33, 33),
              },
             ],
             position: (33, 32),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (33, 44),
              },
             ],
             position: (33, 43),
            },
            String {
             parts: [
              Raw {
               content: "oh-my-zsh",
               position: (33, 50),
              },
             ],
             position: (33, 49),
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (33, 62),
              },
             ],
             position: (33, 61),
            },
           ],
           position: (33, 30),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (33, 75),
              },
             ],
             position: (33, 74),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (33, 86),
              },
             ],
             position: (33, 85),
            },
            String {
             parts: [
              Raw {
               content: "ohMyZsh",
               position: (33, 92),
              },
             ],
             position: (33, 91),
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (33, 102),
              },
             ],
             position: (33, 101),
            },
           ],
           position: (33, 72),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (34, 8),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (34, 33),
              },
             ],
             position: (34, 32),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (34, 44),
              },
             ],
             position: (34, 43),
            },
            String {
             parts: [
              Raw {
               content: "oh-my-zsh",
               position: (34, 50),
              },
             ],
             position: (34, 49),
            },
            String {
             parts: [
              Raw {
               content: "theme",
               position: (34, 62),
              },
             ],
             position: (34, 61),
            },
           ],
           position: (34, 30),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (34, 74),
              },
             ],
             position: (34, 73),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (34, 85),
              },
             ],
             position: (34, 84),
            },
            String {
             parts: [
              Raw {
               content: "ohMyZsh",
               position: (34, 91),
              },
             ],
             position: (34, 90),
            },
            String {
             parts: [
              Raw {
               content: "theme",
               position: (34, 101),
              },
             ],
             position: (34, 100),
            },
           ],
           position: (34, 71),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (35, 8),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (35, 33),
              },
             ],
             position: (35, 32),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (35, 44),
              },
             ],
             position: (35, 43),
            },
            String {
             parts: [
              Raw {
               content: "oh-my-zsh",
               position: (35, 50),
              },
             ],
             position: (35, 49),
            },
            String {
             parts: [
              Raw {
               content: "custom",
               position: (35, 62),
              },
             ],
             position: (35, 61),
            },
           ],
           position: (35, 30),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (35, 75),
              },
             ],
             position: (35, 74),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (35, 86),
              },
             ],
             position: (35, 85),
            },
            String {
             parts: [
              Raw {
               content: "ohMyZsh",
               position: (35, 92),
              },
             ],
             position: (35, 91),
            },
            String {
             parts: [
              Raw {
               content: "custom",
               position: (35, 102),
              },
             ],
             position: (35, 101),
            },
           ],
           position: (35, 72),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (36, 8),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (36, 33),
              },
             ],
             position: (36, 32),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (36, 44),
              },
             ],
             position: (36, 43),
            },
            String {
             parts: [
              Raw {
               content: "oh-my-zsh",
               position: (36, 50),
              },
             ],
             position: (36, 49),
            },
            String {
             parts: [
              Raw {
               content: "plugins",
               position: (36, 62),
              },
             ],
             position: (36, 61),
            },
           ],
           position: (36, 30),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (36, 76),
              },
             ],
             position: (36, 75),
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (36, 87),
              },
             ],
             position: (36, 86),
            },
            String {
             parts: [
              Raw {
               content: "ohMyZsh",
               position: (36, 93),
              },
             ],
             position: (36, 92),
            },
            String {
             parts: [
              Raw {
               content: "plugins",
               position: (36, 103),
              },
             ],
             position: (36, 102),
            },
           ],
           position: (36, 73),
          },
         ],
        },
       ],
       position: (32, 15),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (39, 5),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "programs",
            position: (40, 7),
           },
           Raw {
            content: "zsh",
            position: (40, 16),
           },
           Raw {
            content: "ohMyZsh",
            position: (40, 20),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (41, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (41, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (42, 11),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (42, 18),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (42, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (43, 11),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (43, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (44, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Enable oh-my-zsh.\n",
                    position: (45, 1),
                   },
                  ],
                  position: (44, 25),
                 },
                },
               ],
               recursive: false,
               position: (41, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (49, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (49, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (50, 11),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (50, 21),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "oh-my-zsh",
                     position: (50, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (51, 11),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (51, 25),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.oh-my-zsh",
                      position: (51, 44),
                     },
                    ],
                    position: (51, 43),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (52, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Package to install for `oh-my-zsh` usage.\n",
                    position: (53, 1),
                   },
                  ],
                  position: (52, 25),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (56, 11),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (56, 18),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (56, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               recursive: false,
               position: (49, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "plugins",
               position: (59, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (59, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (60, 11),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (60, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (61, 11),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (61, 18),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (61, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (61, 31),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (61, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (62, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of oh-my-zsh plugins\n",
                    position: (63, 1),
                   },
                  ],
                  position: (62, 25),
                 },
                },
               ],
               recursive: false,
               position: (59, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "custom",
               position: (67, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (67, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (68, 11),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (68, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (69, 11),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (69, 23),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (69, 30),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (69, 37),
                    },
                   ],
                  },
                  position: (69, 18),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (70, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Path to a custom oh-my-zsh package to override config of oh-my-zsh.\n(Can't be used along with `customPkgs`).\n",
                    position: (71, 1),
                   },
                  ],
                  position: (70, 25),
                 },
                },
               ],
               recursive: false,
               position: (67, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "customPkgs",
               position: (76, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (76, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (77, 11),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (77, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (78, 11),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (78, 18),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (78, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (78, 31),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (78, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (79, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of custom packages that should be loaded into `oh-my-zsh`.\n",
                    position: (80, 1),
                   },
                  ],
                  position: (79, 25),
                 },
                },
               ],
               recursive: false,
               position: (76, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "theme",
               position: (84, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (84, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (85, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (85, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (86, 11),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (86, 18),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (86, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (87, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Name of the theme to be used by oh-my-zsh.\n",
                    position: (88, 1),
                   },
                  ],
                  position: (87, 25),
                 },
                },
               ],
               recursive: false,
               position: (84, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "cacheDir",
               position: (92, 9),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (92, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (93, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "$HOME/.cache/oh-my-zsh",
                    position: (93, 22),
                   },
                  ],
                  position: (93, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (94, 11),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (94, 18),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (94, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (95, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Cache directory to be used by `oh-my-zsh`.\nWithout this option it would default to the read-only nix store.\n",
                    position: (96, 1),
                   },
                  ],
                  position: (95, 25),
                 },
                },
               ],
               recursive: false,
               position: (92, 29),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (40, 30),
         },
        },
       ],
       recursive: false,
       position: (39, 15),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (103, 5),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (103, 14),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (103, 19),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (103, 23),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (106, 7),
             },
             Raw {
              content: "zsh",
              position: (106, 16),
             },
             Raw {
              content: "promptInit",
              position: (106, 20),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (106, 33),
            },
            arguments: [
             String {
              parts: [],
              position: (106, 43),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (108, 7),
             },
             Raw {
              content: "systemPackages",
              position: (108, 19),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (108, 38),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (108, 42),
                },
               ],
              },
              default: None,
             },
            ],
            position: (108, 36),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (110, 7),
             },
             Raw {
              content: "zsh",
              position: (110, 16),
             },
             Raw {
              content: "interactiveShellInit",
              position: (110, 20),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "# oh-my-zsh configuration generated by NixOS\nexport ZSH=",
              position: (111, 1),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (112, 22),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (112, 26),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "/share/oh-my-zsh\n\n",
              position: (112, 34),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (114, 11),
               },
               arguments: [
                BinaryOperation {
                 operator: GreaterThan,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "length",
                    position: (114, 27),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (114, 34),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "plugins",
                        position: (114, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  Int {
                   value: 0,
                   position: (114, 49),
                  },
                 ],
                 position: (114, 47),
                },
                String {
                 parts: [
                  Raw {
                   content: "plugins=(",
                   position: (115, 12),
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (115, 23),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: " ",
                        position: (115, 41),
                       },
                      ],
                      position: (115, 40),
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (115, 44),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "plugins",
                         position: (115, 48),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  },
                  Raw {
                   content: ")",
                   position: (115, 56),
                  },
                 ],
                 position: (115, 11),
                },
               ],
              },
             },
             Raw {
              content: "\n\n",
              position: (116, 10),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (118, 11),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  Variable {
                   identifier: "custom",
                   position: (118, 27),
                  },
                  Variable {
                   identifier: "null",
                   position: (118, 37),
                  },
                 ],
                 position: (118, 34),
                },
                String {
                 parts: [
                  Raw {
                   content: "ZSH_CUSTOM=\"",
                   position: (119, 12),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "custom",
                    position: (119, 27),
                   },
                  },
                  Raw {
                   content: "\"",
                   position: (119, 34),
                  },
                 ],
                 position: (119, 11),
                },
               ],
              },
             },
             Raw {
              content: "\n\n",
              position: (120, 10),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (122, 11),
               },
               arguments: [
                BinaryOperation {
                 operator: GreaterThan,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "stringLength",
                    position: (122, 27),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (122, 40),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "theme",
                        position: (122, 44),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  Int {
                   value: 0,
                   position: (122, 53),
                  },
                 ],
                 position: (122, 51),
                },
                String {
                 parts: [
                  Raw {
                   content: "ZSH_THEME=\"",
                   position: (123, 12),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (123, 26),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "theme",
                       position: (123, 30),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\"",
                   position: (123, 36),
                  },
                 ],
                 position: (123, 11),
                },
               ],
              },
             },
             Raw {
              content: "\n\n",
              position: (124, 10),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (126, 11),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (126, 27),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "cacheDir",
                      position: (126, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (126, 43),
                  },
                 ],
                 position: (126, 40),
                },
                String {
                 parts: [
                  Raw {
                   content: "if [[ ! -d \"",
                   position: (127, 1),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (127, 25),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "cacheDir",
                       position: (127, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\" ]]; then\n  mkdir -p \"",
                   position: (127, 38),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (128, 25),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "cacheDir",
                       position: (128, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\"\nfi\nZSH_CACHE_DIR=",
                   position: (128, 38),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (130, 27),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "cacheDir",
                       position: (130, 31),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\n",
                   position: (130, 40),
                  },
                 ],
                 position: (126, 49),
                },
               ],
              },
             },
             Raw {
              content: "\n\nsource $ZSH/oh-my-zsh.sh\n",
              position: (131, 12),
             },
            ],
            position: (110, 43),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (136, 7),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (138, 11),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (138, 23),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "custom",
                        position: (138, 27),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (138, 37),
                    },
                   ],
                   position: (138, 34),
                  },
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (138, 45),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "customPkgs",
                        position: (138, 49),
                       },
                      ],
                     },
                     default: None,
                    },
                    List {
                     elements: [],
                     position: (138, 63),
                    },
                   ],
                   position: (138, 60),
                  },
                 ],
                 position: (138, 42),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (139, 11),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "If `cfg.custom` is set for `ZSH_CUSTOM`, `customPkgs` can't be used!",
                   position: (139, 22),
                  },
                 ],
                 position: (139, 21),
                },
               },
              ],
              recursive: false,
              position: (137, 9),
             },
            ],
            position: (136, 20),
           },
          },
         ],
         recursive: false,
         position: (103, 30),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (145, 5),
        },
        Raw {
         content: "doc",
         position: (145, 10),
        },
       ],
      },
      to: Path {
       parts: [
        Raw {
         content: "./oh-my-zsh.xml",
         position: (145, 16),
        },
       ],
       position: (145, 16),
      },
     },
    ],
    recursive: false,
    position: (31, 3),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}