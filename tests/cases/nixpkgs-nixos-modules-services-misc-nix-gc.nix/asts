---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "nix",
         position: (6, 16),
        },
        Raw {
         content: "gc",
         position: (6, 20),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (13, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "nix",
            position: (15, 5),
           },
           Raw {
            content: "gc",
            position: (15, 9),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "automatic",
               position: (17, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (17, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (18, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (18, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (19, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (19, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (19, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (20, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Automatically run the garbage collector at a specific time.",
                    position: (20, 24),
                   },
                  ],
                  position: (20, 23),
                 },
                },
               ],
               recursive: false,
               position: (17, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "dates",
               position: (23, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (23, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (24, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (24, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (24, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (25, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "03:15",
                    position: (25, 20),
                   },
                  ],
                  position: (25, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (26, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "weekly",
                    position: (26, 20),
                   },
                  ],
                  position: (26, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (27, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "How often or when garbage collection is performed. For most desktop and server systems\na sufficient garbage collection is once a week.\n\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n",
                    position: (28, 1),
                   },
                  ],
                  position: (27, 23),
                 },
                },
               ],
               recursive: false,
               position: (23, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "randomizedDelaySec",
               position: (37, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (37, 28),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "0",
                    position: (38, 20),
                   },
                  ],
                  position: (38, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (39, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (39, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (39, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (40, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "45min",
                    position: (40, 20),
                   },
                  ],
                  position: (40, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (41, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Add a randomized delay before each garbage collection.\nThe delay will be chosen between zero and this value.\nThis value must be a time span in the format specified by\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>\n",
                    position: (42, 1),
                   },
                  ],
                  position: (41, 23),
                 },
                },
               ],
               recursive: false,
               position: (37, 37),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "persistent",
               position: (50, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (51, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (52, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (52, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (52, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (53, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Takes a boolean argument. If true, the time when the service\nunit was last triggered is stored on disk. When the timer is\nactivated, the service unit is triggered immediately if it\nwould have been triggered at least once during the time when\nthe timer was inactive. Such triggering is nonetheless\nsubject to the delay imposed by RandomizedDelaySec=. This is\nuseful to catch up on missed runs of the service when the\nsystem was powered down.\n",
                    position: (55, 1),
                   },
                  ],
                  position: (54, 23),
                 },
                },
               ],
               recursive: false,
               position: (50, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "options",
               position: (66, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (66, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (67, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (67, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (68, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "--max-freed $((64 * 1024**3))",
                    position: (68, 20),
                   },
                  ],
                  position: (68, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (69, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (69, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (69, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (70, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Options given to <filename>nix-collect-garbage</filename> when the\ngarbage collector is run automatically.\n",
                    position: (71, 1),
                   },
                  ],
                  position: (70, 23),
                 },
                },
               ],
               recursive: false,
               position: (66, 26),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (15, 14),
         },
        },
       ],
       recursive: false,
       position: (13, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (83, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "assertions",
            position: (84, 5),
           },
          ],
         },
         to: List {
          elements: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "assertion",
                 position: (86, 9),
                },
               ],
              },
              to: BinaryOperation {
               operator: Implication,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (86, 21),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "automatic",
                    position: (86, 25),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (86, 38),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "nix",
                    position: (86, 45),
                   },
                   Raw {
                    content: "enable",
                    position: (86, 49),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (86, 35),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "message",
                 position: (87, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "nix.gc.automatic requires nix.enable",
                 position: (87, 21),
                },
               ],
               position: (87, 19),
              },
             },
            ],
            recursive: false,
            position: (85, 7),
           },
          ],
          position: (84, 18),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "systemd",
            position: (91, 5),
           },
           Raw {
            content: "services",
            position: (91, 13),
           },
           Raw {
            content: "nix-gc",
            position: (91, 22),
           },
          ],
         },
         to: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (91, 31),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "mkIf",
              position: (91, 35),
             },
            ],
           },
           default: None,
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "config",
             position: (91, 40),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "nix",
               position: (91, 47),
              },
              Raw {
               content: "enable",
               position: (91, 51),
              },
             ],
            },
            default: None,
           },
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (92, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Nix Garbage Collector",
                 position: (92, 22),
                },
               ],
               position: (92, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "script",
                 position: (93, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "exec ",
                 position: (93, 17),
                },
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (93, 24),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nix",
                     position: (93, 31),
                    },
                    Raw {
                     content: "package",
                     position: (93, 35),
                    },
                    Raw {
                     content: "out",
                     position: (93, 43),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/nix-collect-garbage ",
                 position: (93, 47),
                },
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (93, 74),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "options",
                     position: (93, 78),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               position: (93, 16),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "startAt",
                 position: (94, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "optional",
                position: (94, 17),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (94, 26),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "automatic",
                    position: (94, 30),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (94, 40),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "dates",
                    position: (94, 44),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (91, 58),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "systemd",
            position: (97, 5),
           },
           Raw {
            content: "timers",
            position: (97, 13),
           },
           Raw {
            content: "nix-gc",
            position: (97, 20),
           },
          ],
         },
         to: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (97, 29),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "mkIf",
              position: (97, 33),
             },
            ],
           },
           default: None,
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (97, 38),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "automatic",
               position: (97, 42),
              },
             ],
            },
            default: None,
           },
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "timerConfig",
                 position: (98, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RandomizedDelaySec",
                    position: (99, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (99, 30),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "randomizedDelaySec",
                     position: (99, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Persistent",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (100, 22),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "persistent",
                     position: (100, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               recursive: false,
               position: (98, 21),
              },
             },
            ],
            recursive: false,
            position: (97, 52),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (83, 12),
      },
     },
    ],
    recursive: false,
    position: (9, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}