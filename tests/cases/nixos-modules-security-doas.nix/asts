---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "security",
         position: (5, 16),
        },
        Raw {
         content: "doas",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    ),
    Inherit(
     Some(
      Variable {
       identifier: "pkgs",
       position: (7, 12),
      },
     ),
     [
      Raw {
       content: "doas",
       position: (7, 18),
      },
     ],
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mkUsrString",
        position: (9, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "user",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "toString",
        position: (9, 23),
       },
       arguments: [
        Variable {
         identifier: "user",
         position: (9, 32),
        },
       ],
      },
      position: (9, 17),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mkGrpString",
        position: (11, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "group",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: String {
       parts: [
        Raw {
         content: ":",
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "toString",
           position: (11, 28),
          },
          arguments: [
           Variable {
            identifier: "group",
            position: (11, 37),
           },
          ],
         },
        },
       ],
       position: (11, 24),
      },
      position: (11, 17),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mkOpts",
        position: (13, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "rule",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "concatStringsSep",
        position: (13, 18),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: " ",
          },
         ],
         position: (13, 35),
        },
        List {
         elements: [
          FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (14, 6),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "rule",
              position: (14, 21),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "noPass",
                position: (14, 26),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "nopass",
              },
             ],
             position: (14, 33),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (15, 6),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "rule",
              position: (15, 21),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "noLog",
                position: (15, 26),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "nolog",
              },
             ],
             position: (15, 32),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (16, 6),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "rule",
              position: (16, 21),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "persist",
                position: (16, 26),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "persist",
              },
             ],
             position: (16, 34),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (17, 6),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "rule",
              position: (17, 21),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "keepEnv",
                position: (17, 26),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "keepenv",
              },
             ],
             position: (17, 34),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "setenv { SSH_AUTH_SOCK TERMINFO TERMINFO_DIRS ",
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (18, 54),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: " ",
                 },
                ],
                position: (18, 71),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "rule",
                 position: (18, 75),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "setEnv",
                   position: (18, 80),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: " }",
            },
           ],
           position: (18, 5),
          },
         ],
         position: (13, 39),
        },
       ],
      },
      position: (13, 12),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mkArgs",
        position: (21, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "rule",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: IfThenElse {
       predicate: FunctionApplication {
        function: Variable {
         identifier: "isNull",
         position: (22, 9),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "rule",
           position: (22, 16),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "args",
             position: (22, 21),
            },
           ],
          },
          default: None,
         },
        ],
       },
       then: String {
        parts: [],
        position: (22, 32),
       },
       else_: IfThenElse {
        predicate: BinaryOperation {
         operator: EqualTo,
         operands: [
          FunctionApplication {
           function: Variable {
            identifier: "length",
            position: (23, 14),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "rule",
              position: (23, 21),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "args",
                position: (23, 26),
               },
              ],
             },
             default: None,
            },
           ],
          },
          Int {
           value: 0,
           position: (23, 34),
          },
         ],
         position: (23, 31),
        },
        then: String {
         parts: [
          Raw {
           content: "args",
          },
         ],
         position: (23, 42),
        },
        else_: String {
         parts: [
          Raw {
           content: "args ",
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "concatStringsSep",
             position: (24, 18),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: " ",
               },
              ],
              position: (24, 35),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "rule",
               position: (24, 39),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "args",
                 position: (24, 44),
                },
               ],
              },
              default: None,
             },
            ],
           },
          },
         ],
         position: (24, 10),
        },
        position: (23, 10),
       },
       position: (22, 5),
      },
      position: (21, 12),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mkRule",
        position: (26, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "rule",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: LetIn {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "opts",
            position: (28, 7),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOpts",
           position: (28, 14),
          },
          arguments: [
           Variable {
            identifier: "rule",
            position: (28, 21),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "as",
            position: (30, 7),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (30, 12),
          },
          arguments: [
           UnaryOperation {
            operator: Not,
            operand: FunctionApplication {
             function: Variable {
              identifier: "isNull",
              position: (30, 29),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "rule",
                position: (30, 36),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "runAs",
                  position: (30, 41),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            position: (30, 28),
           },
           String {
            parts: [
             Raw {
              content: "as ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "rule",
                position: (30, 54),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "runAs",
                  position: (30, 59),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (30, 48),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "cmd",
            position: (32, 7),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (32, 13),
          },
          arguments: [
           UnaryOperation {
            operator: Not,
            operand: FunctionApplication {
             function: Variable {
              identifier: "isNull",
              position: (32, 30),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "rule",
                position: (32, 37),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "cmd",
                  position: (32, 42),
                 },
                ],
               },
               default: None,
              },
             ],
            },
            position: (32, 29),
           },
           String {
            parts: [
             Raw {
              content: "cmd ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "rule",
                position: (32, 54),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "cmd",
                  position: (32, 59),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (32, 47),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "args",
            position: (34, 7),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkArgs",
           position: (34, 14),
          },
          arguments: [
           Variable {
            identifier: "rule",
            position: (34, 21),
           },
          ],
         },
        ),
       ],
       target: FunctionApplication {
        function: Variable {
         identifier: "optionals",
         position: (36, 5),
        },
        arguments: [
         BinaryOperation {
          operator: GreaterThan,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "length",
             position: (36, 16),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (36, 23),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "extraRules",
                 position: (36, 27),
                },
               ],
              },
              default: None,
             },
            ],
           },
           Int {
            value: 0,
            position: (36, 40),
           },
          ],
          position: (36, 38),
         },
         List {
          elements: [
           FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (38, 9),
            },
            arguments: [
             BinaryOperation {
              operator: GreaterThan,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "length",
                 position: (38, 25),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "rule",
                   position: (38, 32),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "users",
                     position: (38, 37),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               Int {
                value: 0,
                position: (38, 45),
               },
              ],
              position: (38, 43),
             },
             FunctionApplication {
              function: Variable {
               identifier: "map",
               position: (39, 12),
              },
              arguments: [
               Function {
                argument: Some(
                 "usr",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: String {
                 parts: [
                  Raw {
                   content: "permit ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "opts",
                    position: (39, 32),
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "mkUsrString",
                     position: (39, 40),
                    },
                    arguments: [
                     Variable {
                      identifier: "usr",
                      position: (39, 52),
                     },
                    ],
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "as",
                    position: (39, 59),
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "cmd",
                    position: (39, 65),
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "args",
                    position: (39, 72),
                   },
                  },
                 ],
                 position: (39, 22),
                },
                position: (39, 17),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "rule",
                 position: (39, 80),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "users",
                   position: (39, 85),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (42, 9),
            },
            arguments: [
             BinaryOperation {
              operator: GreaterThan,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "length",
                 position: (42, 25),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "rule",
                   position: (42, 32),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "groups",
                     position: (42, 37),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               Int {
                value: 0,
                position: (42, 46),
               },
              ],
              position: (42, 44),
             },
             FunctionApplication {
              function: Variable {
               identifier: "map",
               position: (43, 12),
              },
              arguments: [
               Function {
                argument: Some(
                 "grp",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: String {
                 parts: [
                  Raw {
                   content: "permit ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "opts",
                    position: (43, 32),
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "mkGrpString",
                     position: (43, 40),
                    },
                    arguments: [
                     Variable {
                      identifier: "grp",
                      position: (43, 52),
                     },
                    ],
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "as",
                    position: (43, 59),
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "cmd",
                    position: (43, 65),
                   },
                  },
                  Raw {
                   content: " ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "args",
                    position: (43, 72),
                   },
                  },
                 ],
                 position: (43, 22),
                },
                position: (43, 17),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "rule",
                 position: (43, 80),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "groups",
                   position: (43, 85),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ],
           },
          ],
          position: (36, 43),
         },
        ],
       },
       position: (27, 5),
      },
      position: (26, 12),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (51, 3),
        },
        Raw {
         content: "security",
         position: (51, 11),
        },
        Raw {
         content: "doas",
         position: (51, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (53, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (53, 14),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (54, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (54, 19),
               },
               target: Variable {
                identifier: "bool",
                position: (54, 26),
               },
               position: (54, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (55, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (55, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (56, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Whether to enable the <command>doas</command> command, which allows\nnon-root users to execute commands as root.\n",
                },
               ],
               position: (56, 21),
              },
             ),
            ],
            recursive: false,
            position: (53, 23),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "wheelNeedsPassword",
            position: (62, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (62, 26),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (63, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (63, 19),
               },
               target: Variable {
                identifier: "bool",
                position: (63, 26),
               },
               position: (63, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (64, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (64, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (65, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Whether users of the <code>wheel</code> group must provide a password to\nrun commands as super user via <command>doas</command>.\n",
                },
               ],
               position: (65, 21),
              },
             ),
            ],
            recursive: false,
            position: (62, 35),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraRules",
            position: (71, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (71, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (72, 7),
                },
               ],
              },
              List {
               elements: [],
               position: (72, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (73, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Define specific rules to be set in the\n<filename>/etc/doas.conf</filename> file. More specific rules should\ncome after more general ones in order to yield the expected behavior.\nYou can use <code>mkBefore</code> and/or <code>mkAfter</code> to ensure\nthis is the case when configuration options are merged.\n",
                },
               ],
               position: (73, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (80, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (80, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[\n  # Allow execution of any command by any user in group doas, requiring\n  # a password and keeping any previously-defined environment variables.\n  { groups = [ \"doas\" ]; noPass = false; keepEnv = true; }\n\n  # Allow execution of \"/home/root/secret.sh\" by user `backup` OR user\n  # `database` OR any member of the group with GID `1006`, without a\n  # password.\n  { users = [ \"backup\" \"database\" ]; groups = [ 1006 ];\n    cmd = \"/home/root/secret.sh\"; noPass = true; }\n\n  # Allow any member of group `bar` to run `/home/baz/cmd1.sh` as user\n  # `foo` with argument `hello-doas`.\n  { groups = [ \"bar\" ]; runAs = \"foo\";\n    cmd = \"/home/baz/cmd1.sh\"; args = [ \"hello-doas\" ]; }\n\n  # Allow any member of group `bar` to run `/home/baz/cmd2.sh` as user\n  # `foo` with no arguments.\n  { groups = [ \"bar\" ]; runAs = \"foo\";\n    cmd = \"/home/baz/cmd2.sh\"; args = [ ]; }\n\n  # Allow user `abusers` to execute \"nano\" and unset the value of\n  # SSH_AUTH_SOCK, override the value of ALPHA to 1, and inherit the\n  # value of BETA from the current environment.\n  { users = [ \"abusers\" ]; cmd = \"nano\";\n    setEnv = [ \"-SSH_AUTH_SOCK\" \"ALPHA=1\" \"BETA\" ]; }\n]\n",
                  },
                 ],
                 position: (80, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (109, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (109, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (109, 26),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "submodule",
                   position: (110, 9),
                  },
                  arguments: [
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "options",
                         position: (111, 11),
                        },
                       ],
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "noPass",
                            position: (113, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (113, 22),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (114, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (114, 27),
                               },
                               target: Variable {
                                identifier: "bool",
                                position: (114, 34),
                               },
                               position: (114, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (115, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "false",
                               position: (115, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (116, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "If <code>true</code>, the user is not required to enter a\npassword.\n",
                                },
                               ],
                               position: (116, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (113, 31),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "noLog",
                            position: (122, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (122, 21),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (123, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (123, 27),
                               },
                               target: Variable {
                                identifier: "bool",
                                position: (123, 34),
                               },
                               position: (123, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (124, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "false",
                               position: (124, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (125, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "If <code>true</code>, successful executions will not be logged\nto\n<citerefentry><refentrytitle>syslogd</refentrytitle><manvolnum>8</manvolnum></citerefentry>.\n",
                                },
                               ],
                               position: (125, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (122, 30),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "persist",
                            position: (132, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (132, 23),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (133, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (133, 27),
                               },
                               target: Variable {
                                identifier: "bool",
                                position: (133, 34),
                               },
                               position: (133, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (134, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "false",
                               position: (134, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (135, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "If <code>true</code>, do not ask for a password again for some\ntime after the user successfully authenticates.\n",
                                },
                               ],
                               position: (135, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (132, 32),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "keepEnv",
                            position: (141, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (141, 23),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (142, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (142, 27),
                               },
                               target: Variable {
                                identifier: "bool",
                                position: (142, 34),
                               },
                               position: (142, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (143, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "false",
                               position: (143, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (144, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "If <code>true</code>, environment variables other than those\nlisted in\n<citerefentry><refentrytitle>doas</refentrytitle><manvolnum>1</manvolnum></citerefentry>\nare kept when creating the environment for the new process.\n",
                                },
                               ],
                               position: (144, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (141, 32),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "setEnv",
                            position: (152, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (152, 22),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (153, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (153, 27),
                               },
                               target: FunctionApplication {
                                function: Variable {
                                 identifier: "listOf",
                                 position: (153, 34),
                                },
                                arguments: [
                                 Variable {
                                  identifier: "str",
                                  position: (153, 41),
                                 },
                                ],
                               },
                               position: (153, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (154, 15),
                                },
                               ],
                              },
                              List {
                               elements: [],
                               position: (154, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (155, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "Keep or set the specified variables. Variables may also be\nremoved with a leading '-' or set using\n<code>variable=value</code>. If the first character of\n<code>value</code> is a ",
                                },
                                Raw {
                                 content: "'",
                                },
                                Raw {
                                 content: "$",
                                },
                                Raw {
                                 content: "', the value to be set is taken from\nthe existing environment variable of the indicated name. This\noption is processed after the default environment has been\ncreated.\n\nNOTE: All rules have <code>setenv { SSH_AUTH_SOCK }</code> by\ndefault. To prevent <code>SSH_AUTH_SOCK</code> from being\ninherited, add <code>\"-SSH_AUTH_SOCK\"</code> anywhere in this\nlist.\n",
                                },
                               ],
                               position: (155, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (152, 31),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "users",
                            position: (171, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (171, 21),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (172, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (172, 27),
                               },
                               target: FunctionApplication {
                                function: Variable {
                                 identifier: "listOf",
                                 position: (172, 34),
                                },
                                arguments: [
                                 FunctionApplication {
                                  function: Variable {
                                   identifier: "either",
                                   position: (172, 42),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "str",
                                    position: (172, 49),
                                   },
                                   Variable {
                                    identifier: "int",
                                    position: (172, 53),
                                   },
                                  ],
                                 },
                                ],
                               },
                               position: (172, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (173, 15),
                                },
                               ],
                              },
                              List {
                               elements: [],
                               position: (173, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (174, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "The usernames / UIDs this rule should apply for.",
                                },
                               ],
                               position: (174, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (171, 30),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "groups",
                            position: (177, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (177, 22),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (178, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (178, 27),
                               },
                               target: FunctionApplication {
                                function: Variable {
                                 identifier: "listOf",
                                 position: (178, 34),
                                },
                                arguments: [
                                 FunctionApplication {
                                  function: Variable {
                                   identifier: "either",
                                   position: (178, 42),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "str",
                                    position: (178, 49),
                                   },
                                   Variable {
                                    identifier: "int",
                                    position: (178, 53),
                                   },
                                  ],
                                 },
                                ],
                               },
                               position: (178, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (179, 15),
                                },
                               ],
                              },
                              List {
                               elements: [],
                               position: (179, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (180, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "The groups / GIDs this rule should apply for.",
                                },
                               ],
                               position: (180, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (177, 31),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "runAs",
                            position: (183, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (183, 21),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (184, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (184, 27),
                               },
                               target: FunctionApplication {
                                function: Variable {
                                 identifier: "nullOr",
                                 position: (184, 34),
                                },
                                arguments: [
                                 Variable {
                                  identifier: "str",
                                  position: (184, 41),
                                 },
                                ],
                               },
                               position: (184, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (185, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "null",
                               position: (185, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (186, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "Which user or group the specified command is allowed to run as.\nWhen set to <code>null</code> (the default), all users are\nallowed.\n\nA user can be specified using just the username:\n<code>\"foo\"</code>. It is also possible to only allow running as\na specific group with <code>\":bar\"</code>.\n",
                                },
                               ],
                               position: (186, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (183, 30),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "cmd",
                            position: (197, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (197, 19),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (198, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (198, 27),
                               },
                               target: FunctionApplication {
                                function: Variable {
                                 identifier: "nullOr",
                                 position: (198, 34),
                                },
                                arguments: [
                                 Variable {
                                  identifier: "str",
                                  position: (198, 41),
                                 },
                                ],
                               },
                               position: (198, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (199, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "null",
                               position: (199, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (200, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "The command the user is allowed to run. When set to\n<code>null</code> (the default), all commands are allowed.\n\nNOTE: It is best practice to specify absolute paths. If a\nrelative path is specified, only a restricted PATH will be\nsearched.\n",
                                },
                               ],
                               position: (200, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (197, 28),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "args",
                            position: (210, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mkOption",
                           position: (210, 20),
                          },
                          arguments: [
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "type",
                                 position: (211, 15),
                                },
                               ],
                              },
                              With {
                               expression: Variable {
                                identifier: "types",
                                position: (211, 27),
                               },
                               target: FunctionApplication {
                                function: Variable {
                                 identifier: "nullOr",
                                 position: (211, 34),
                                },
                                arguments: [
                                 FunctionApplication {
                                  function: Variable {
                                   identifier: "listOf",
                                   position: (211, 42),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "str",
                                    position: (211, 49),
                                   },
                                  ],
                                 },
                                ],
                               },
                               position: (211, 22),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "default",
                                 position: (212, 15),
                                },
                               ],
                              },
                              Variable {
                               identifier: "null",
                               position: (212, 25),
                              },
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "description",
                                 position: (213, 15),
                                },
                               ],
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "Arguments that must be provided to the command. When set to\n<code>[]</code>, the command must be run without any arguments.\n",
                                },
                               ],
                               position: (213, 29),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (210, 29),
                           },
                          ],
                         },
                        ),
                       ],
                       recursive: false,
                       position: (111, 21),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (110, 19),
                   },
                  ],
                 },
                ],
               },
               position: (109, 14),
              },
             ),
            ],
            recursive: false,
            position: (71, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraConfig",
            position: (223, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (223, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (224, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (224, 19),
               },
               target: Variable {
                identifier: "lines",
                position: (224, 26),
               },
               position: (224, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (225, 7),
                },
               ],
              },
              String {
               parts: [],
               position: (225, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (226, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Extra configuration text appended to <filename>doas.conf</filename>.\n",
                },
               ],
               position: (226, 21),
              },
             ),
            ],
            recursive: false,
            position: (223, 28),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (51, 27),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (235, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (235, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (235, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (235, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (237, 5),
             },
             Raw {
              content: "doas",
              position: (237, 14),
             },
             Raw {
              content: "extraRules",
              position: (237, 19),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOrder",
             position: (237, 32),
            },
            arguments: [
             Int {
              value: 600,
              position: (237, 40),
             },
             List {
              elements: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "groups",
                     position: (239, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "wheel",
                      },
                     ],
                     position: (239, 20),
                    },
                   ],
                   position: (239, 18),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "noPass",
                     position: (240, 9),
                    },
                   ],
                  },
                  UnaryOperation {
                   operator: Not,
                   operand: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (240, 19),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "wheelNeedsPassword",
                       position: (240, 23),
                      },
                     ],
                    },
                    default: None,
                   },
                   position: (240, 18),
                  },
                 ),
                ],
                recursive: false,
                position: (238, 7),
               },
              ],
              position: (237, 44),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (244, 5),
             },
             Raw {
              content: "wrappers",
              position: (244, 14),
             },
             Raw {
              content: "doas",
              position: (244, 23),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "setuid",
                 position: (245, 9),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (245, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "owner",
                 position: (246, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "root",
                },
               ],
               position: (246, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (247, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "root",
                },
               ],
               position: (247, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "source",
                 position: (248, 9),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "doas",
                  position: (248, 21),
                 },
                },
                Raw {
                 content: "/bin/doas",
                },
               ],
               position: (248, 18),
              },
             ),
            ],
            recursive: false,
            position: (245, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (251, 5),
             },
             Raw {
              content: "systemPackages",
              position: (251, 17),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "doas",
              position: (252, 7),
             },
            ],
            position: (251, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (255, 5),
             },
             Raw {
              content: "pam",
              position: (255, 14),
             },
             Raw {
              content: "services",
              position: (255, 18),
             },
             Raw {
              content: "doas",
              position: (255, 27),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "allowNullPassword",
                 position: (256, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (256, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "sshAgentAuth",
                 position: (257, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (257, 22),
              },
             ),
            ],
            recursive: false,
            position: (255, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (260, 5),
             },
             Raw {
              content: "etc",
              position: (260, 17),
             },
             Expression {
              expression: __StringParts(
               [
                Raw {
                 content: "doas.conf",
                },
               ],
              ),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "source",
                 position: (261, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (261, 16),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "runCommand",
                   position: (261, 21),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "doas-conf",
                  },
                 ],
                 position: (261, 32),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "src",
                      position: (263, 11),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (263, 17),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "writeText",
                        position: (263, 22),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "doas-conf-in",
                       },
                      ],
                      position: (263, 32),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "# To modify this file, set the NixOS options\n# `security.doas.extraRules` or `security.doas.extraConfig`. To\n# completely replace the contents of this file, use\n# `environment.etc.\"doas.conf\"`.\n\n# \"root\" is allowed to do anything.\npermit nopass keepenv root\n\n# extraRules\n",
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "concatStringsSep",
                          position: (273, 15),
                         },
                         arguments: [
                          String {
                           parts: [
                            Raw {
                             content: "\n",
                            },
                           ],
                           position: (273, 32),
                          },
                          FunctionApplication {
                           function: PropertyAccess {
                            expression: Variable {
                             identifier: "lists",
                             position: (273, 38),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "flatten",
                               position: (273, 44),
                              },
                             ],
                            },
                            default: None,
                           },
                           arguments: [
                            FunctionApplication {
                             function: Variable {
                              identifier: "map",
                              position: (273, 53),
                             },
                             arguments: [
                              Variable {
                               identifier: "mkRule",
                               position: (273, 57),
                              },
                              PropertyAccess {
                               expression: Variable {
                                identifier: "cfg",
                                position: (273, 64),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "extraRules",
                                  position: (273, 68),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: "\n\n# extraConfig\n",
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (276, 15),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "extraConfig",
                            position: (276, 19),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\n",
                       },
                      ],
                      position: (263, 47),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "preferLocalBuild",
                      position: (278, 11),
                     },
                    ],
                   },
                   Variable {
                    identifier: "true",
                    position: (278, 30),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (262, 9),
                },
                String {
                 parts: [
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (281, 12),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "buildPackages",
                       position: (281, 17),
                      },
                      Raw {
                       content: "doas",
                       position: (281, 31),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/doas -C $src && cp $src $out",
                  },
                 ],
                 position: (281, 9),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "mode",
                 position: (282, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "0440",
                },
               ],
               position: (282, 14),
              },
             ),
            ],
            recursive: false,
            position: (260, 35),
           },
          ),
         ],
         recursive: false,
         position: (235, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (287, 3),
        },
        Raw {
         content: "maintainers",
         position: (287, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (287, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "cole-h",
          position: (287, 42),
         },
        ],
        position: (287, 40),
       },
       position: (287, 22),
      },
     ),
    ],
    recursive: false,
    position: (47, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}