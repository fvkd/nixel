---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "mysql",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "isMariaDB",
        position: (9, 3),
       },
      ],
     },
     BinaryOperation {
      operator: EqualTo,
      operands: [
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (9, 15),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "getName",
            position: (9, 19),
           },
          ],
         },
         default: None,
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (9, 27),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "package",
             position: (9, 31),
            },
           ],
          },
          default: None,
         },
        ],
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (9, 42),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "getName",
            position: (9, 46),
           },
          ],
         },
         default: None,
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (9, 54),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mariadb",
             position: (9, 59),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mysqldOptions",
        position: (11, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "--user=",
        position: (12, 6),
       },
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (12, 15),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "user",
            position: (12, 19),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: " --datadir=",
        position: (12, 24),
       },
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (12, 37),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "dataDir",
            position: (12, 41),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: " --basedir=",
        position: (12, 49),
       },
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (12, 62),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (12, 66),
           },
          ],
         },
         default: None,
        },
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "format",
        position: (14, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (14, 12),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "formats",
          position: (14, 17),
         },
         Raw {
          content: "ini",
          position: (14, 25),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "listsAsDuplicateKeys",
             position: (14, 31),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (14, 54),
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configFile",
        position: (15, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "format",
        position: (15, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "generate",
          position: (15, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "my.cnf",
          position: (15, 33),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (15, 41),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "settings",
           position: (15, 45),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (20, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (21, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (21, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "mysql",
               position: (21, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "pidDir",
               position: (21, 50),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Don't wait for pidfiles, describe dependencies through systemd.",
             position: (21, 61),
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (22, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (22, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "mysql",
               position: (22, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "rootPassword",
               position: (22, 50),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Use socket authentication or set the password outside of the nix store.",
             position: (22, 67),
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (23, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (23, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "mysql",
               position: (23, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "extraOptions",
               position: (23, 50),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Use services.mysql.settings.mysqld instead.",
             position: (23, 67),
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (24, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (24, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "mysql",
               position: (24, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "bind",
               position: (24, 50),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Use services.mysql.settings.mysqld.bind-address instead.",
             position: (24, 59),
            },
           ],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (25, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (25, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "mysql",
               position: (25, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "port",
               position: (25, 50),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Use services.mysql.settings.mysqld.port instead.",
             position: (25, 59),
            },
           ],
          },
         ],
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (30, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (32, 5),
           },
           Raw {
            content: "mysql",
            position: (32, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (34, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (34, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "MySQL server",
                 position: (34, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (36, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (36, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (37, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (37, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (37, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (38, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (38, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.mariadb",
                      position: (38, 38),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (39, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "\n          Which MySQL derivation to use. MariaDB packages are supported too.\n        ",
                    position: (39, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "user",
               position: (44, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (44, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (45, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (45, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (45, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (46, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mysql",
                    position: (46, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (47, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "User account under which MySQL runs.\n\n<note><para>\nIf left as the default value this user will automatically be created\non system activation, otherwise you are responsible for\nensuring the user exists before the MySQL service starts.\n</para></note>\n",
                    position: (48, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "group",
               position: (58, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (58, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (59, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (59, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (59, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (60, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mysql",
                    position: (60, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (61, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Group account under which MySQL runs.\n\n<note><para>\nIf left as the default value this group will automatically be created\non system activation, otherwise you are responsible for\nensuring the user exists before the MySQL service starts.\n</para></note>\n",
                    position: (62, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "dataDir",
               position: (72, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (72, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (73, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (73, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (73, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (74, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/lib/mysql",
                    position: (74, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (75, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The data directory for MySQL.\n\n<note><para>\nIf left as the default value of <literal>/var/lib/mysql</literal> this directory will automatically be created before the MySQL\nserver starts, otherwise you are responsible for ensuring the directory exists with appropriate ownership and permissions.\n</para></note>\n",
                    position: (76, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "configFile",
               position: (85, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (85, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (86, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (86, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (86, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (87, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "configFile",
                  position: (87, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (88, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A configuration file automatically generated by NixOS.\n",
                    position: (89, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (91, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Override the configuration file used by MySQL. By default,\nNixOS generates one automatically from <option>services.mysql.settings</option>.\n",
                    position: (92, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (95, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (95, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.writeText \"my.cnf\" ",
                      position: (96, 1),
                     },
                     Raw {
                      content: "''",
                      position: (96, 35),
                     },
                     Raw {
                      content: "\n  [mysqld]\n  datadir = /var/lib/mysql\n  bind-address = 127.0.0.1\n  port = 3336\n\n  !includedir /etc/mysql/conf.d/\n",
                      position: (96, 38),
                     },
                     Raw {
                      content: "''",
                      position: (103, 11),
                     },
                     Raw {
                      content: ";\n",
                      position: (103, 14),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "settings",
               position: (107, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (107, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (108, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "format",
                   position: (108, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (108, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (109, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (110, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "MySQL configuration. Refer to\n<link xlink:href=\"https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html\"/>,\n<link xlink:href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html\"/>,\nand <link xlink:href=\"https://mariadb.com/kb/en/server-system-variables/\"/>\nfor details on supported values.\n\n<note>\n  <para>\n    MySQL configuration options such as <literal>--quick</literal> should be treated as\n    boolean options and provided values such as <literal>true</literal>, <literal>false</literal>,\n    <literal>1</literal>, or <literal>0</literal>. See the provided example below.\n  </para>\n</note>\n",
                    position: (111, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (125, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (125, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  mysqld = {\n    key_buffer_size = \"6G\";\n    table_cache = 1600;\n    log-error = \"/var/log/mysql_err.log\";\n    plugin-load-add = [ \"server_audit\" \"ed25519=auth_ed25519\" ];\n  };\n  mysqldump = {\n    quick = true;\n    max_allowed_packet = \"16M\";\n  };\n}\n",
                      position: (126, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "initialDatabases",
               position: (141, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (141, 26),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (142, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (142, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (142, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (142, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "submodule",
                        position: (142, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "options",
                           position: (143, 11),
                          },
                         ],
                        },
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "name",
                              position: (144, 13),
                             },
                            ],
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "mkOption",
                             position: (144, 20),
                            },
                            arguments: [
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "type",
                                   position: (145, 15),
                                  },
                                 ],
                                },
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "types",
                                  position: (145, 22),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "str",
                                    position: (145, 28),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "description",
                                   position: (146, 15),
                                  },
                                 ],
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "The name of the database to create.\n",
                                   position: (147, 1),
                                  },
                                 ],
                                },
                               ),
                              ],
                              recursive: false,
                             },
                            ],
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "schema",
                              position: (150, 13),
                             },
                            ],
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "mkOption",
                             position: (150, 22),
                            },
                            arguments: [
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "type",
                                   position: (151, 15),
                                  },
                                 ],
                                },
                                FunctionApplication {
                                 function: PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (151, 22),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "nullOr",
                                     position: (151, 28),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (151, 35),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "path",
                                      position: (151, 41),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                 ],
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "default",
                                   position: (152, 15),
                                  },
                                 ],
                                },
                                Variable {
                                 identifier: "null",
                                 position: (152, 25),
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "description",
                                   position: (153, 15),
                                  },
                                 ],
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "The initial schema of the database; if null (the default),\nan empty database is created.\n",
                                   position: (154, 1),
                                  },
                                 ],
                                },
                               ),
                              ],
                              recursive: false,
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                        },
                       ),
                      ],
                      recursive: false,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (160, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (161, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of database names and their initial schemas that should be used to create databases on the first startup\nof MySQL. The schema attribute is optional: If not specified, an empty database is created.\n",
                    position: (162, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (165, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "name",
                         position: (166, 13),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "foodatabase",
                         position: (166, 21),
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "schema",
                         position: (166, 35),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "literalExpression",
                        position: (166, 44),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "./foodatabase.sql",
                           position: (166, 63),
                          },
                         ],
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "name",
                         position: (167, 13),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "bardatabase",
                         position: (167, 21),
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "initialScript",
               position: (171, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (171, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (172, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (172, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (172, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (172, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (172, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (173, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (173, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (174, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A file containing SQL statements to be executed on the first startup. Can be used for granting certain permissions on the database.",
                    position: (174, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "ensureDatabases",
               position: (177, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (177, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (178, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (178, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (178, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (178, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (178, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (179, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (180, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Ensures that the specified databases exist.\nThis option will never delete existing databases, especially not when the value of this\noption is changed. This means that databases created once through this option or\notherwise have to be removed manually.\n",
                    position: (181, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (186, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "nextcloud",
                      position: (187, 12),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "matomo",
                      position: (188, 12),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "ensureUsers",
               position: (192, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (192, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (193, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (193, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (193, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (193, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "submodule",
                        position: (193, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "options",
                           position: (194, 11),
                          },
                         ],
                        },
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "name",
                              position: (195, 13),
                             },
                            ],
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "mkOption",
                             position: (195, 20),
                            },
                            arguments: [
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "type",
                                   position: (196, 15),
                                  },
                                 ],
                                },
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "types",
                                  position: (196, 22),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "str",
                                    position: (196, 28),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "description",
                                   position: (197, 15),
                                  },
                                 ],
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "Name of the user to ensure.\n",
                                   position: (198, 1),
                                  },
                                 ],
                                },
                               ),
                              ],
                              recursive: false,
                             },
                            ],
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "ensurePermissions",
                              position: (201, 13),
                             },
                            ],
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "mkOption",
                             position: (201, 33),
                            },
                            arguments: [
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "type",
                                   position: (202, 15),
                                  },
                                 ],
                                },
                                FunctionApplication {
                                 function: PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (202, 22),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "attrsOf",
                                     position: (202, 28),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (202, 36),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "str",
                                      position: (202, 42),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                 ],
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "default",
                                   position: (203, 15),
                                  },
                                 ],
                                },
                                Map {
                                 bindings: [],
                                 recursive: false,
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "description",
                                   position: (204, 15),
                                  },
                                 ],
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "Permissions to ensure for the user, specified as attribute set.\nThe attribute names specify the database and tables to grant the permissions for,\nseparated by a dot. You may use wildcards here.\nThe attribute values specfiy the permissions to grant.\nYou may specify one or multiple comma-separated SQL privileges here.\n\nFor more information on how to specify the target\nand on which privileges exist, see the\n<link xlink:href=\"https://mariadb.com/kb/en/library/grant/\">GRANT syntax</link>.\nThe attributes are used as <code>GRANT ",
                                   position: (205, 1),
                                  },
                                  Raw {
                                   content: "$",
                                   position: (214, 56),
                                  },
                                  Raw {
                                   content: "{attrName} ON ",
                                   position: (214, 59),
                                  },
                                  Raw {
                                   content: "$",
                                   position: (214, 73),
                                  },
                                  Raw {
                                   content: "{attrValue}</code>.\n",
                                   position: (214, 76),
                                  },
                                 ],
                                },
                               ),
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "example",
                                   position: (216, 15),
                                  },
                                 ],
                                },
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "literalExpression",
                                  position: (216, 25),
                                 },
                                 arguments: [
                                  String {
                                   parts: [
                                    Raw {
                                     content: "{\n  \"database.*\" = \"ALL PRIVILEGES\";\n  \"*.*\" = \"SELECT, LOCK TABLES\";\n}\n",
                                     position: (217, 1),
                                    },
                                   ],
                                  },
                                 ],
                                },
                               ),
                              ],
                              recursive: false,
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                        },
                       ),
                      ],
                      recursive: false,
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (225, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (226, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Ensures that the specified users exist and have at least the ensured permissions.\nThe MySQL users will be identified using Unix socket authentication. This authenticates the Unix user with the\nsame name only, and that without the need for a password.\nThis option will never delete existing users or remove permissions, especially not when the value of this\noption is changed. This means that users created and permissions assigned once through this option or\notherwise have to be removed manually.\n",
                    position: (227, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (234, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (234, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[\n  {\n    name = \"nextcloud\";\n    ensurePermissions = {\n      \"nextcloud.*\" = \"ALL PRIVILEGES\";\n    };\n  }\n  {\n    name = \"backup\";\n    ensurePermissions = {\n      \"*.*\" = \"SELECT, LOCK TABLES\";\n    };\n  }\n]\n",
                      position: (235, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "replication",
               position: (252, 7),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "role",
                  position: (253, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (253, 16),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (254, 11),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (254, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "enum",
                         position: (254, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "master",
                           position: (254, 32),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "slave",
                           position: (254, 41),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "none",
                           position: (254, 49),
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (255, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "none",
                       position: (255, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (256, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Role of the MySQL server instance.",
                       position: (256, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "serverId",
                  position: (259, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (259, 20),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (260, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (260, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "int",
                        position: (260, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (261, 11),
                      },
                     ],
                    },
                    Int {
                     value: 1,
                     position: (261, 21),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (262, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Id of the MySQL server instance. This number must be unique for each instance.",
                       position: (262, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "masterHost",
                  position: (265, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (265, 22),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (266, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (266, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (266, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (267, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Hostname of the MySQL master server.",
                       position: (267, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "slaveHost",
                  position: (270, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (270, 21),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (271, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (271, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (271, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (272, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Hostname of the MySQL slave server.",
                       position: (272, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "masterUser",
                  position: (275, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (275, 22),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (276, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (276, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (276, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (277, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Username of the MySQL replication user.",
                       position: (277, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "masterPassword",
                  position: (280, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (280, 26),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (281, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (281, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "str",
                        position: (281, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (282, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Password of the MySQL replication user.",
                       position: (282, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "masterPort",
                  position: (285, 9),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (285, 22),
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "type",
                       position: (286, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (286, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "port",
                        position: (286, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "default",
                       position: (287, 11),
                      },
                     ],
                    },
                    Int {
                     value: 3306,
                     position: (287, 21),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (288, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "Port number on which the MySQL master server runs.",
                       position: (288, 26),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (298, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (298, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (298, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (298, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (300, 5),
             },
             Raw {
              content: "mysql",
              position: (300, 14),
             },
             Raw {
              content: "dataDir",
              position: (300, 20),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (301, 7),
            },
            arguments: [
             IfThenElse {
              predicate: FunctionApplication {
               function: Variable {
                identifier: "versionAtLeast",
                position: (301, 21),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (301, 36),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "system",
                    position: (301, 43),
                   },
                   Raw {
                    content: "stateVersion",
                    position: (301, 50),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "17.09",
                   position: (301, 64),
                  },
                 ],
                },
               ],
              },
              then: String {
               parts: [
                Raw {
                 content: "/var/lib/mysql",
                 position: (301, 77),
                },
               ],
              },
              else_: String {
               parts: [
                Raw {
                 content: "/var/mysql",
                 position: (302, 24),
                },
               ],
              },
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (304, 5),
             },
             Raw {
              content: "mysql",
              position: (304, 14),
             },
             Raw {
              content: "settings",
              position: (304, 20),
             },
             Raw {
              content: "mysqld",
              position: (304, 29),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (304, 38),
            },
            arguments: [
             List {
              elements: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "datadir",
                     position: (306, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (306, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (306, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "port",
                     position: (307, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (307, 16),
                   },
                   arguments: [
                    Int {
                     value: 3306,
                     position: (307, 26),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (309, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: LogicalOr,
                  operands: [
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (309, 14),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "replication",
                         position: (309, 18),
                        },
                        Raw {
                         content: "role",
                         position: (309, 30),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "master",
                        position: (309, 39),
                       },
                      ],
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (309, 50),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "replication",
                         position: (309, 54),
                        },
                        Raw {
                         content: "role",
                         position: (309, 66),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "slave",
                        position: (309, 75),
                       },
                      ],
                     },
                    ],
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "log-bin",
                       position: (310, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "mysql-bin-",
                       position: (310, 20),
                      },
                      Expression {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "toString",
                         position: (310, 32),
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (310, 41),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "replication",
                             position: (310, 45),
                            },
                            Raw {
                             content: "serverId",
                             position: (310, 57),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "log-bin-index",
                       position: (311, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "mysql-bin-",
                       position: (311, 26),
                      },
                      Expression {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "toString",
                         position: (311, 38),
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (311, 47),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "replication",
                             position: (311, 51),
                            },
                            Raw {
                             content: "serverId",
                             position: (311, 63),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Raw {
                       content: ".index",
                       position: (311, 72),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "relay-log",
                       position: (312, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "mysql-relay-bin",
                       position: (312, 22),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "server-id",
                       position: (313, 9),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (313, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "replication",
                        position: (313, 25),
                       },
                       Raw {
                        content: "serverId",
                        position: (313, 37),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "binlog-ignore-db",
                       position: (314, 9),
                      },
                     ],
                    },
                    List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "information_schema",
                         position: (314, 31),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "performance_schema",
                         position: (314, 52),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "mysql",
                         position: (314, 73),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (316, 8),
                },
                arguments: [
                 UnaryOperation {
                  operator: Not,
                  operand: Variable {
                   identifier: "isMariaDB",
                   position: (316, 15),
                  },
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "plugin-load-add",
                       position: (317, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "auth_socket.so",
                       position: (317, 28),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (321, 5),
             },
             Raw {
              content: "users",
              position: (321, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (321, 19),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (321, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "user",
                   position: (321, 38),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "mysql",
                  position: (321, 47),
                 },
                ],
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "mysql",
                   position: (322, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (323, 9),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "MySQL server user",
                      position: (323, 24),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (324, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (324, 17),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "group",
                       position: (324, 21),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "uid",
                      position: (325, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (325, 15),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "ids",
                       position: (325, 22),
                      },
                      Raw {
                       content: "uids",
                       position: (325, 26),
                      },
                      Raw {
                       content: "mysql",
                       position: (325, 31),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 ],
                 recursive: false,
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (329, 5),
             },
             Raw {
              content: "groups",
              position: (329, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (329, 20),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (329, 35),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "group",
                   position: (329, 39),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "mysql",
                  position: (329, 49),
                 },
                ],
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "mysql",
                   position: (330, 7),
                  },
                  Raw {
                   content: "gid",
                   position: (330, 13),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (330, 19),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "ids",
                    position: (330, 26),
                   },
                   Raw {
                    content: "gids",
                    position: (330, 30),
                   },
                   Raw {
                    content: "mysql",
                    position: (330, 35),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (333, 5),
             },
             Raw {
              content: "systemPackages",
              position: (333, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (333, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (333, 40),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (335, 5),
             },
             Raw {
              content: "etc",
              position: (335, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "my.cnf",
                 position: (335, 22),
                },
               ],
              },
             },
             Raw {
              content: "source",
              position: (335, 30),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (335, 39),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "configFile",
               position: (335, 43),
              },
             ],
            },
            default: None,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (337, 5),
             },
             Raw {
              content: "services",
              position: (337, 13),
             },
             Raw {
              content: "mysql",
              position: (337, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (338, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "MySQL Server",
                 position: (338, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (340, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (340, 18),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (341, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (341, 21),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (342, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (342, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "configFile",
                    position: (342, 31),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "unitConfig",
                 position: (344, 7),
                },
                Raw {
                 content: "RequiresMountsFor",
                 position: (344, 18),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (344, 38),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "dataDir",
                  position: (344, 42),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (346, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (349, 9),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "nettools",
                    position: (349, 14),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "preStart",
                 position: (352, 7),
                },
               ],
              },
              IfThenElse {
               predicate: Variable {
                identifier: "isMariaDB",
                position: (352, 21),
               },
               then: String {
                parts: [
                 Raw {
                  content: "if ! test -e ",
                  position: (353, 1),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (353, 24),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (353, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/mysql; then\n  ",
                  position: (353, 36),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (354, 13),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (354, 17),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/bin/mysql_install_db --defaults-file=/etc/my.cnf ",
                  position: (354, 25),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "mysqldOptions",
                   position: (354, 77),
                  },
                 },
                 Raw {
                  content: "\n  touch ",
                  position: (354, 91),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (355, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (355, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/mysql_init\nfi\n",
                  position: (355, 31),
                 },
                ],
               },
               else_: String {
                parts: [
                 Raw {
                  content: "if ! test -e ",
                  position: (358, 1),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (358, 24),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (358, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/mysql; then\n  ",
                  position: (358, 36),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (359, 13),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (359, 17),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/bin/mysqld --defaults-file=/etc/my.cnf ",
                  position: (359, 25),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "mysqldOptions",
                   position: (359, 67),
                  },
                 },
                 Raw {
                  content: " --initialize-insecure\n  touch ",
                  position: (359, 81),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (360, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (360, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/mysql_init\nfi\n",
                  position: (360, 31),
                 },
                ],
               },
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "script",
                 position: (364, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "# https://mariadb.com/kb/en/getting-started-with-mariadb-galera-cluster/#systemd-and-galera-recovery\nif test -n \"",
                 position: (365, 1),
                },
                Raw {
                 content: "$",
                 position: (366, 21),
                },
                Raw {
                 content: "{_WSREP_START_POSITION}\"; then\n  if test -e \"",
                 position: (366, 24),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (367, 25),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (367, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/galera_recovery\"; then\n    VAR=$(cd ",
                 position: (367, 37),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (368, 24),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (368, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/..; ",
                 position: (368, 36),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (368, 47),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (368, 51),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/galera_recovery); [[ $? -eq 0 ]] && export _WSREP_START_POSITION=$VAR || exit 1\n  fi\nfi\n\n# The last two environment variables are used for starting Galera clusters\nexec ",
                 position: (368, 59),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (373, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (373, 20),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/mysqld --defaults-file=/etc/my.cnf ",
                 position: (373, 28),
                },
                Expression {
                 expression: Variable {
                  identifier: "mysqldOptions",
                  position: (373, 70),
                 },
                },
                Raw {
                 content: " $_WSREP_NEW_CLUSTER $_WSREP_START_POSITION\n",
                 position: (373, 84),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "postStart",
                 position: (376, 7),
                },
               ],
              },
              LetIn {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "superUser",
                    position: (378, 9),
                   },
                  ],
                 },
                 IfThenElse {
                  predicate: Variable {
                   identifier: "isMariaDB",
                   position: (378, 24),
                  },
                  then: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (378, 39),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "user",
                      position: (378, 43),
                     },
                    ],
                   },
                   default: None,
                  },
                  else_: String {
                   parts: [
                    Raw {
                     content: "root",
                     position: (378, 54),
                    },
                   ],
                  },
                 },
                ),
               ],
               target: String {
                parts: [
                 Raw {
                  content: "",
                  position: (380, 1),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (380, 11),
                   },
                   arguments: [
                    UnaryOperation {
                     operator: Not,
                     operand: Variable {
                      identifier: "isMariaDB",
                      position: (380, 28),
                     },
                    },
                    String {
                     parts: [
                      Raw {
                       content: "# Wait until the MySQL server is available for use\ncount=0\nwhile [ ! -e /run/mysqld/mysqld.sock ]\ndo\n    if [ $count -eq 30 ]\n    then\n        echo \"Tried 30 times, giving up...\"\n        exit 1\n    fi\n\n    echo \"MySQL daemon not yet started. Waiting for 1 second...\"\n    count=$((count++))\n    sleep 1\ndone\n",
                       position: (381, 1),
                      },
                     ],
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n\nif [ -f ",
                  position: (395, 12),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (397, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (397, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/mysql_init ]\nthen\n    # While MariaDB comes with a 'mysql' super user account since 10.4.x, MySQL does not\n    # Since we don't want to run this service as 'root' we need to ensure the account exists on first run\n    ( echo \"CREATE USER IF NOT EXISTS ",
                  position: (397, 31),
                 },
                 Raw {
                  content: "'",
                  position: (401, 47),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (401, 50),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "user",
                      position: (401, 54),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "'@'localhost' IDENTIFIED WITH ",
                  position: (401, 59),
                 },
                 Expression {
                  expression: IfThenElse {
                   predicate: Variable {
                    identifier: "isMariaDB",
                    position: (401, 94),
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: "unix_socket",
                      position: (401, 110),
                     },
                    ],
                   },
                   else_: String {
                    parts: [
                     Raw {
                      content: "auth_socket",
                      position: (401, 129),
                     },
                    ],
                   },
                  },
                 },
                 Raw {
                  content: ";\"\n      echo \"GRANT ALL PRIVILEGES ON *.* TO ",
                  position: (401, 142),
                 },
                 Raw {
                  content: "'",
                  position: (402, 52),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (402, 55),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "user",
                      position: (402, 59),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "'@'localhost' WITH GRANT OPTION;\"\n    ) | ",
                  position: (402, 64),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (403, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (403, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/bin/mysql -u ",
                  position: (403, 31),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "superUser",
                   position: (403, 47),
                  },
                 },
                 Raw {
                  content: " -N\n\n    ",
                  position: (403, 57),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "concatMapStrings",
                    position: (405, 15),
                   },
                   arguments: [
                    Function {
                     argument: Some(
                      "database",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: String {
                      parts: [
                       Raw {
                        content: "# Create initial databases\nif ! test -e \"",
                        position: (406, 1),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (407, 31),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "dataDir",
                            position: (407, 35),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/",
                        position: (407, 43),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "database",
                          position: (407, 46),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "name",
                            position: (407, 55),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\"; then\n    echo \"Creating initial database: ",
                        position: (407, 60),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "database",
                          position: (408, 54),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "name",
                            position: (408, 63),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\"\n    ( echo 'create database `",
                        position: (408, 68),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "database",
                          position: (409, 46),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "name",
                            position: (409, 55),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "`;'\n\n      ",
                        position: (409, 60),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (411, 23),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "database",
                              position: (411, 39),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "schema",
                                position: (411, 48),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (411, 58),
                            },
                           ],
                          },
                          String {
                           parts: [
                            Raw {
                             content: "echo 'use `",
                             position: (412, 1),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "database",
                               position: (412, 34),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "name",
                                 position: (412, 43),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: "`;'\n\n# TODO: this silently falls through if database.schema does not exist,\n# we should catch this somehow and exit, but can't do it here because we're in a subshell.\nif [ -f \"",
                             position: (412, 48),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "database",
                               position: (416, 32),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "schema",
                                 position: (416, 41),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: "\" ]\nthen\n    cat ",
                             position: (416, 48),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "database",
                               position: (418, 31),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "schema",
                                 position: (418, 40),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: "\nelif [ -d \"",
                             position: (418, 47),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "database",
                               position: (419, 34),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "schema",
                                 position: (419, 43),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: "\" ]\nthen\n    cat ",
                             position: (419, 50),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "database",
                               position: (421, 31),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "schema",
                                 position: (421, 40),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: "/mysql-databases/*.sql\nfi\n",
                             position: (421, 47),
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: "\n    ) | ",
                        position: (423, 24),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (424, 25),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (424, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/mysql -u ",
                        position: (424, 37),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "superUser",
                         position: (424, 53),
                        },
                       },
                       Raw {
                        content: " -N\nfi\n",
                        position: (424, 63),
                       },
                      ],
                     },
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (426, 17),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "initialDatabases",
                        position: (426, 21),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n\n    ",
                  position: (426, 38),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (428, 15),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (428, 31),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "replication",
                          position: (428, 35),
                         },
                         Raw {
                          content: "role",
                          position: (428, 47),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "master",
                         position: (428, 56),
                        },
                       ],
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "# Set up the replication master\n\n( echo \"use mysql;\"\n  echo \"CREATE USER ",
                       position: (430, 1),
                      },
                      Raw {
                       content: "'",
                       position: (433, 37),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (433, 40),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (433, 44),
                          },
                          Raw {
                           content: "masterUser",
                           position: (433, 56),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "'@",
                       position: (433, 67),
                      },
                      Raw {
                       content: "'",
                       position: (433, 69),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (433, 72),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (433, 76),
                          },
                          Raw {
                           content: "slaveHost",
                           position: (433, 88),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "' IDENTIFIED WITH mysql_native_password;\"\n  echo \"SET PASSWORD FOR ",
                       position: (433, 98),
                      },
                      Raw {
                       content: "'",
                       position: (434, 42),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (434, 45),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (434, 49),
                          },
                          Raw {
                           content: "masterUser",
                           position: (434, 61),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "'@",
                       position: (434, 72),
                      },
                      Raw {
                       content: "'",
                       position: (434, 74),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (434, 77),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (434, 81),
                          },
                          Raw {
                           content: "slaveHost",
                           position: (434, 93),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "' = PASSWORD(",
                       position: (434, 103),
                      },
                      Raw {
                       content: "'",
                       position: (434, 116),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (434, 119),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (434, 123),
                          },
                          Raw {
                           content: "masterPassword",
                           position: (434, 135),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "');\"\n  echo \"GRANT REPLICATION SLAVE ON *.* TO ",
                       position: (434, 150),
                      },
                      Raw {
                       content: "'",
                       position: (435, 59),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (435, 62),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (435, 66),
                          },
                          Raw {
                           content: "masterUser",
                           position: (435, 78),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "'@",
                       position: (435, 89),
                      },
                      Raw {
                       content: "'",
                       position: (435, 91),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (435, 94),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (435, 98),
                          },
                          Raw {
                           content: "slaveHost",
                           position: (435, 110),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "';\"\n) | ",
                       position: (435, 120),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (436, 23),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "package",
                           position: (436, 27),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/mysql -u ",
                       position: (436, 35),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "superUser",
                        position: (436, 51),
                       },
                      },
                      Raw {
                       content: " -N\n",
                       position: (436, 61),
                      },
                     ],
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n\n    ",
                  position: (437, 18),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (439, 15),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (439, 31),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "replication",
                          position: (439, 35),
                         },
                         Raw {
                          content: "role",
                          position: (439, 47),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "slave",
                         position: (439, 56),
                        },
                       ],
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "# Set up the replication slave\n\n( echo \"stop slave;\"\n  echo \"change master to master_host=",
                       position: (441, 1),
                      },
                      Raw {
                       content: "'",
                       position: (444, 54),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (444, 57),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (444, 61),
                          },
                          Raw {
                           content: "masterHost",
                           position: (444, 73),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "', master_user=",
                       position: (444, 84),
                      },
                      Raw {
                       content: "'",
                       position: (444, 99),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (444, 102),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (444, 106),
                          },
                          Raw {
                           content: "masterUser",
                           position: (444, 118),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "', master_password=",
                       position: (444, 129),
                      },
                      Raw {
                       content: "'",
                       position: (444, 148),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (444, 151),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "replication",
                           position: (444, 155),
                          },
                          Raw {
                           content: "masterPassword",
                           position: (444, 167),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "';\"\n  echo \"start slave;\"\n) | ",
                       position: (444, 182),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (446, 23),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "package",
                           position: (446, 27),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/mysql -u ",
                       position: (446, 35),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "superUser",
                        position: (446, 51),
                       },
                      },
                      Raw {
                       content: " -N\n",
                       position: (446, 61),
                      },
                     ],
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n\n    ",
                  position: (447, 18),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (449, 15),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (449, 31),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "initialScript",
                          position: (449, 35),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (449, 52),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "# Execute initial script\n# using toString to avoid copying the file to nix store if given as path instead of string,\n# as it might contain credentials\ncat ",
                       position: (451, 1),
                      },
                      Expression {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "toString",
                         position: (454, 23),
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (454, 32),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "initialScript",
                             position: (454, 36),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Raw {
                       content: " | ",
                       position: (454, 50),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (454, 55),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "package",
                           position: (454, 59),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/mysql -u ",
                       position: (454, 67),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "superUser",
                        position: (454, 83),
                       },
                      },
                      Raw {
                       content: " -N\n",
                       position: (454, 93),
                      },
                     ],
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n\n    rm ",
                  position: (455, 18),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (457, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "dataDir",
                      position: (457, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/mysql_init\nfi\n\n",
                  position: (457, 30),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (460, 11),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (460, 27),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "ensureDatabases",
                          position: (460, 31),
                         },
                        ],
                       },
                       default: None,
                      },
                      List {
                       elements: [],
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "(\n",
                       position: (461, 1),
                      },
                      Expression {
                       expression: FunctionApplication {
                        function: Variable {
                         identifier: "concatMapStrings",
                         position: (462, 13),
                        },
                        arguments: [
                         Function {
                          argument: Some(
                           "database",
                          ),
                          arguments: FunctionArguments {
                           arguments: [],
                           ellipsis: false,
                          },
                          definition: String {
                           parts: [
                            Raw {
                             content: "echo \"CREATE DATABASE IF NOT EXISTS \\`",
                             position: (463, 1),
                            },
                            Expression {
                             expression: Variable {
                              identifier: "database",
                              position: (463, 53),
                             },
                            },
                            Raw {
                             content: "\\`;\"\n",
                             position: (463, 62),
                            },
                           ],
                          },
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (464, 15),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "ensureDatabases",
                             position: (464, 19),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "\n) | ",
                       position: (464, 35),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (465, 17),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "package",
                           position: (465, 21),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/mysql -N\n",
                       position: (465, 29),
                      },
                     ],
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n\n",
                  position: (466, 12),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "concatMapStrings",
                    position: (468, 11),
                   },
                   arguments: [
                    Function {
                     argument: Some(
                      "user",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: String {
                      parts: [
                       Raw {
                        content: "( echo \"CREATE USER IF NOT EXISTS ",
                        position: (470, 1),
                       },
                       Raw {
                        content: "'",
                        position: (470, 47),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "user",
                          position: (470, 50),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "name",
                            position: (470, 55),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "'@'localhost' IDENTIFIED WITH ",
                        position: (470, 60),
                       },
                       Expression {
                        expression: IfThenElse {
                         predicate: Variable {
                          identifier: "isMariaDB",
                          position: (470, 95),
                         },
                         then: String {
                          parts: [
                           Raw {
                            content: "unix_socket",
                            position: (470, 111),
                           },
                          ],
                         },
                         else_: String {
                          parts: [
                           Raw {
                            content: "auth_socket",
                            position: (470, 130),
                           },
                          ],
                         },
                        },
                       },
                       Raw {
                        content: ";\"\n  ",
                        position: (470, 143),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "concatStringsSep",
                          position: (471, 17),
                         },
                         arguments: [
                          String {
                           parts: [
                            Raw {
                             content: "\n",
                             position: (471, 35),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mapAttrsToList",
                            position: (471, 40),
                           },
                           arguments: [
                            Function {
                             argument: Some(
                              "database",
                             ),
                             arguments: FunctionArguments {
                              arguments: [],
                              ellipsis: false,
                             },
                             definition: Function {
                              argument: Some(
                               "permission",
                              ),
                              arguments: FunctionArguments {
                               arguments: [],
                               ellipsis: false,
                              },
                              definition: String {
                               parts: [
                                Raw {
                                 content: "echo \"GRANT ",
                                 position: (472, 1),
                                },
                                Expression {
                                 expression: Variable {
                                  identifier: "permission",
                                  position: (472, 31),
                                 },
                                },
                                Raw {
                                 content: " ON ",
                                 position: (472, 42),
                                },
                                Expression {
                                 expression: Variable {
                                  identifier: "database",
                                  position: (472, 48),
                                 },
                                },
                                Raw {
                                 content: " TO ",
                                 position: (472, 57),
                                },
                                Raw {
                                 content: "'",
                                 position: (472, 61),
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "user",
                                   position: (472, 64),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "name",
                                     position: (472, 69),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: "'@'localhost';\"\n",
                                 position: (472, 74),
                                },
                               ],
                              },
                             },
                            },
                            PropertyAccess {
                             expression: Variable {
                              identifier: "user",
                              position: (473, 19),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "ensurePermissions",
                                position: (473, 24),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: "\n) | ",
                        position: (473, 43),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (474, 19),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (474, 23),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/mysql -N\n",
                        position: (474, 31),
                       },
                      ],
                     },
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (475, 15),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ensureUsers",
                        position: (475, 19),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n",
                  position: (475, 31),
                 },
                ],
               },
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (478, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkMerge",
                position: (478, 23),
               },
               arguments: [
                List {
                 elements: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Type",
                        position: (480, 11),
                       },
                      ],
                     },
                     IfThenElse {
                      predicate: Variable {
                       identifier: "isMariaDB",
                       position: (480, 21),
                      },
                      then: String {
                       parts: [
                        Raw {
                         content: "notify",
                         position: (480, 37),
                        },
                       ],
                      },
                      else_: String {
                       parts: [
                        Raw {
                         content: "simple",
                         position: (480, 51),
                        },
                       ],
                      },
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Restart",
                        position: (481, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "on-abort",
                        position: (481, 22),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RestartSec",
                        position: (482, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "5s",
                        position: (482, 25),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "User",
                        position: (485, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (485, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "user",
                         position: (485, 22),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Group",
                        position: (486, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (486, 19),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "group",
                         position: (486, 23),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RuntimeDirectory",
                        position: (488, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "mysqld",
                        position: (488, 31),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RuntimeDirectoryMode",
                        position: (489, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "0755",
                        position: (489, 35),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ReadWritePaths",
                        position: (491, 11),
                       },
                      ],
                     },
                     List {
                      elements: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (491, 30),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "dataDir",
                           position: (491, 34),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "CapabilityBoundingSet",
                        position: (493, 11),
                       },
                      ],
                     },
                     String {
                      parts: [],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "NoNewPrivileges",
                        position: (495, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (495, 29),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ProtectSystem",
                        position: (497, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "strict",
                        position: (497, 28),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ProtectHome",
                        position: (498, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (498, 25),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "PrivateTmp",
                        position: (499, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (499, 24),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "PrivateDevices",
                        position: (500, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (500, 28),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ProtectHostname",
                        position: (501, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (501, 29),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ProtectKernelTunables",
                        position: (502, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (502, 35),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ProtectKernelModules",
                        position: (503, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (503, 34),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ProtectControlGroups",
                        position: (504, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (504, 34),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RestrictAddressFamilies",
                        position: (505, 11),
                       },
                      ],
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "AF_UNIX",
                          position: (505, 40),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "AF_INET",
                          position: (505, 50),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "AF_INET6",
                          position: (505, 60),
                         },
                        ],
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "LockPersonality",
                        position: (506, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (506, 29),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "MemoryDenyWriteExecute",
                        position: (507, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (507, 36),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RestrictRealtime",
                        position: (508, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (508, 30),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RestrictSUIDSGID",
                        position: (509, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (509, 30),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "PrivateMounts",
                        position: (510, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (510, 27),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "SystemCallArchitectures",
                        position: (512, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "native",
                        position: (512, 38),
                       },
                      ],
                     },
                    ),
                   ],
                   recursive: false,
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkIf",
                    position: (514, 10),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (514, 16),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "dataDir",
                          position: (514, 20),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "/var/lib/mysql",
                         position: (514, 32),
                        },
                       ],
                      },
                     ],
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "StateDirectory",
                          position: (515, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "mysql",
                          position: (515, 29),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "StateDirectoryMode",
                          position: (516, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "0700",
                          position: (516, 33),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}