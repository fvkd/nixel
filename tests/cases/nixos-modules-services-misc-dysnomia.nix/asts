---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "config",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "dysnomia",
         position: (6, 16),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "printProperties",
        position: (8, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "properties",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: FunctionApplication {
       function: Variable {
        identifier: "concatMapStrings",
        position: (9, 5),
       },
       arguments: [
        Function {
         argument: Some(
          "propertyName",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: LetIn {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "property",
               position: (11, 9),
              },
             ],
            },
            PropertyAccess {
             expression: Variable {
              identifier: "properties",
              position: (11, 20),
             },
             attribute_path: AttributePath {
              attributes: [
               Expression {
                expression: Variable {
                 identifier: "propertyName",
                 position: (11, 33),
                },
               },
              ],
             },
             default: None,
            },
           ),
          ],
          target: IfThenElse {
           predicate: FunctionApplication {
            function: Variable {
             identifier: "isList",
             position: (13, 10),
            },
            arguments: [
             Variable {
              identifier: "property",
              position: (13, 17),
             },
            ],
           },
           then: String {
            parts: [
             Expression {
              expression: Variable {
               identifier: "propertyName",
               position: (13, 34),
              },
             },
             Raw {
              content: "=(",
              position: (13, 47),
             },
             Expression {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (13, 51),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "concatMapStrings",
                   position: (13, 55),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Function {
                 argument: Some(
                  "elem",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: String {
                  parts: [
                   Raw {
                    content: "\"",
                    position: (13, 80),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (13, 84),
                     },
                     arguments: [
                      Variable {
                       identifier: "elem",
                       position: (13, 93),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\" ",
                    position: (13, 98),
                   },
                  ],
                 },
                 position: (13, 73),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "properties",
                  position: (13, 105),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Expression {
                    expression: Variable {
                     identifier: "propertyName",
                     position: (13, 118),
                    },
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: ")\n",
              position: (13, 133),
             },
            ],
           },
           else_: String {
            parts: [
             Expression {
              expression: Variable {
               identifier: "propertyName",
               position: (14, 15),
              },
             },
             Raw {
              content: "=\"",
              position: (14, 28),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (14, 33),
               },
               arguments: [
                Variable {
                 identifier: "property",
                 position: (14, 42),
                },
               ],
              },
             },
             Raw {
              content: "\"\n",
              position: (14, 51),
             },
            ],
           },
           position: (13, 7),
          },
          position: (10, 7),
         },
         position: (9, 23),
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "builtins",
           position: (15, 8),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "attrNames",
             position: (15, 17),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "properties",
           position: (15, 27),
          },
         ],
        },
       ],
      },
      position: (8, 21),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "properties",
        position: (17, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (17, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "stdenv",
          position: (17, 21),
         },
         Raw {
          content: "mkDerivation",
          position: (17, 28),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (18, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "dysnomia-properties",
             position: (18, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "buildCommand",
             position: (19, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "cat > $out << \"EOF\"\n",
             position: (20, 1),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "printProperties",
               position: (21, 9),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (21, 25),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "properties",
                   position: (21, 29),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: "\nEOF\n",
             position: (21, 40),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "containersDir",
        position: (26, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (26, 19),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "stdenv",
          position: (26, 24),
         },
         Raw {
          content: "mkDerivation",
          position: (26, 31),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (27, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "dysnomia-containers",
             position: (27, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "buildCommand",
             position: (28, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mkdir -p $out\ncd $out\n\n",
             position: (29, 1),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatMapStrings",
               position: (32, 9),
              },
              arguments: [
               Function {
                argument: Some(
                 "containerName",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: LetIn {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "containerProperties",
                      position: (34, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (34, 33),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "containers",
                       position: (34, 37),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "containerName",
                        position: (34, 50),
                       },
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 ],
                 target: String {
                  parts: [
                   Raw {
                    content: "cat > ",
                    position: (37, 1),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "containerName",
                     position: (37, 19),
                    },
                   },
                   Raw {
                    content: " <<EOF\n",
                    position: (37, 33),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "printProperties",
                      position: (38, 13),
                     },
                     arguments: [
                      Variable {
                       identifier: "containerProperties",
                       position: (38, 29),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\ntype=",
                    position: (38, 49),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "containerName",
                     position: (39, 18),
                    },
                   },
                   Raw {
                    content: "\nEOF\n",
                    position: (39, 32),
                   },
                  ],
                 },
                 position: (33, 9),
                },
                position: (32, 27),
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "builtins",
                  position: (42, 10),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "attrNames",
                    position: (42, 19),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (42, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "containers",
                     position: (42, 33),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            },
            Raw {
             content: "\n",
             position: (42, 45),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "linkMutableComponents",
        position: (46, 3),
       },
      ],
     },
     Function {
      argument: None,
      arguments: FunctionArguments {
       arguments: [
        FunctionArgument {
         identifier: "containerName",
         default: None,
        },
       ],
       ellipsis: false,
      },
      definition: String {
       parts: [
        Raw {
         content: "mkdir ",
         position: (48, 1),
        },
        Expression {
         expression: Variable {
          identifier: "containerName",
          position: (48, 15),
         },
        },
        Raw {
         content: "\n\n",
         position: (48, 29),
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "concatMapStrings",
           position: (50, 9),
          },
          arguments: [
           Function {
            argument: Some(
             "componentName",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: LetIn {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "component",
                  position: (52, 11),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (52, 23),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "components",
                   position: (52, 27),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "containerName",
                    position: (52, 40),
                   },
                  },
                  Expression {
                   expression: Variable {
                    identifier: "componentName",
                    position: (52, 57),
                   },
                  },
                 ],
                },
                default: None,
               },
              ),
             ],
             target: String {
              parts: [
               Raw {
                content: "ln -s ",
                position: (54, 10),
               },
               Expression {
                expression: Variable {
                 identifier: "component",
                 position: (54, 18),
                },
               },
               Raw {
                content: " ",
                position: (54, 28),
               },
               Expression {
                expression: Variable {
                 identifier: "containerName",
                 position: (54, 31),
                },
               },
               Raw {
                content: "/",
                position: (54, 45),
               },
               Expression {
                expression: Variable {
                 identifier: "componentName",
                 position: (54, 48),
                },
               },
               Raw {
                content: "\n",
                position: (54, 62),
               },
              ],
             },
             position: (51, 9),
            },
            position: (50, 27),
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (55, 10),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "attrNames",
                position: (55, 19),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (55, 30),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "components",
                 position: (55, 34),
                },
                Expression {
                 expression: Variable {
                  identifier: "containerName",
                  position: (55, 47),
                 },
                },
               ],
              },
              default: Some(
               Map {
                bindings: [],
                recursive: false,
               },
              ),
             },
            ],
           },
          ],
         },
        },
        Raw {
         content: "\n",
         position: (55, 70),
        },
       ],
      },
      position: (46, 27),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "componentsDir",
        position: (58, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (58, 19),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "stdenv",
          position: (58, 24),
         },
         Raw {
          content: "mkDerivation",
          position: (58, 31),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (59, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "dysnomia-components",
             position: (59, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "buildCommand",
             position: (60, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "mkdir -p $out\ncd $out\n\n",
             position: (61, 1),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatMapStrings",
               position: (64, 9),
              },
              arguments: [
               Function {
                argument: Some(
                 "containerName",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: FunctionApplication {
                 function: Variable {
                  identifier: "linkMutableComponents",
                  position: (65, 9),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    Inherit(
                     None,
                     [
                      Raw {
                       content: "containerName",
                       position: (65, 41),
                      },
                     ],
                    ),
                   ],
                   recursive: false,
                  },
                 ],
                },
                position: (64, 27),
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "builtins",
                  position: (66, 10),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "attrNames",
                    position: (66, 19),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (66, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "components",
                     position: (66, 33),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            },
            Raw {
             content: "\n",
             position: (66, 45),
            },
           ],
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "dysnomiaFlags",
        position: (70, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableApacheWebApplication",
           position: (71, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (71, 34),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (71, 41),
           },
           Raw {
            content: "httpd",
            position: (71, 50),
           },
           Raw {
            content: "enable",
            position: (71, 56),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableAxis2WebService",
           position: (72, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (72, 29),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (72, 36),
           },
           Raw {
            content: "tomcat",
            position: (72, 45),
           },
           Raw {
            content: "axis2",
            position: (72, 52),
           },
           Raw {
            content: "enable",
            position: (72, 58),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableDockerContainer",
           position: (73, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (73, 29),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "virtualisation",
            position: (73, 36),
           },
           Raw {
            content: "docker",
            position: (73, 51),
           },
           Raw {
            content: "enable",
            position: (73, 58),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableEjabberdDump",
           position: (74, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (74, 26),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (74, 33),
           },
           Raw {
            content: "ejabberd",
            position: (74, 42),
           },
           Raw {
            content: "enable",
            position: (74, 51),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableMySQLDatabase",
           position: (75, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (75, 27),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (75, 34),
           },
           Raw {
            content: "mysql",
            position: (75, 43),
           },
           Raw {
            content: "enable",
            position: (75, 49),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enablePostgreSQLDatabase",
           position: (76, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (76, 32),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (76, 39),
           },
           Raw {
            content: "postgresql",
            position: (76, 48),
           },
           Raw {
            content: "enable",
            position: (76, 59),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableTomcatWebApplication",
           position: (77, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (77, 34),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (77, 41),
           },
           Raw {
            content: "tomcat",
            position: (77, 50),
           },
           Raw {
            content: "enable",
            position: (77, 57),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableMongoDatabase",
           position: (78, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (78, 27),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (78, 34),
           },
           Raw {
            content: "mongodb",
            position: (78, 43),
           },
           Raw {
            content: "enable",
            position: (78, 51),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableSubversionRepository",
           position: (79, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (79, 34),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (79, 41),
           },
           Raw {
            content: "svnserve",
            position: (79, 50),
           },
           Raw {
            content: "enable",
            position: (79, 59),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableInfluxDatabase",
           position: (80, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (80, 28),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (80, 35),
           },
           Raw {
            content: "influxdb",
            position: (80, 44),
           },
           Raw {
            content: "enable",
            position: (80, 53),
           },
          ],
         },
         default: None,
        },
       ),
      ],
      recursive: false,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (84, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "dysnomia",
            position: (85, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (87, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (87, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (88, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (88, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (88, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (89, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (89, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (90, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to enable Dysnomia",
                    position: (90, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enableAuthentication",
               position: (93, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (94, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (94, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (94, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (95, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (96, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to publish privacy-sensitive authentication credentials",
                    position: (96, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (99, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (99, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (100, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (100, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (100, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (101, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The Dysnomia package",
                    position: (101, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "properties",
               position: (104, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (104, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "An attribute set in which each attribute represents a machine property. Optionally, these values can be shell substitutions.",
                    position: (105, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (106, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (107, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (107, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrs",
                     position: (107, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "containers",
               position: (110, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (110, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (111, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "An attribute set in which each key represents a container and each value an attribute set providing its configuration properties",
                    position: (111, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (112, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (113, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (113, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (113, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (113, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrs",
                       position: (113, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "components",
               position: (116, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (116, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (117, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "An atttribute set in which each key represents a container and each value an attribute set in which each key represents a component and each value a derivation constructing its initial state",
                    position: (117, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (118, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (119, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (119, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (119, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (119, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "attrs",
                       position: (119, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraContainerProperties",
               position: (122, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (122, 34),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (123, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "An attribute set providing additional container settings in addition to the default properties",
                    position: (123, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (124, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (125, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (125, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrs",
                     position: (125, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraContainerPaths",
               position: (128, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (128, 29),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (129, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of paths containing additional container configurations that are added to the search folders",
                    position: (129, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (130, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (131, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (131, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (131, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (131, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (131, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraModulePaths",
               position: (134, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (134, 26),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (135, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of paths containing additional modules that are added to the search folders",
                    position: (135, 24),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (136, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (137, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (137, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (137, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (137, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (137, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enableLegacyModules",
               position: (140, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (140, 29),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (141, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (141, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (141, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (142, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (142, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (143, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to enable Dysnomia legacy process and wrapper modules",
                    position: (143, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (148, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (148, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (148, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (148, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (150, 5),
             },
             Raw {
              content: "etc",
              position: (150, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "dysnomia/containers",
                    position: (151, 8),
                   },
                  ],
                 },
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "source",
                    position: (152, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "containersDir",
                  position: (152, 18),
                 },
                ),
               ],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "dysnomia/components",
                    position: (154, 8),
                   },
                  ],
                 },
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "source",
                    position: (155, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "componentsDir",
                  position: (155, 18),
                 },
                ),
               ],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "dysnomia/properties",
                    position: (157, 8),
                   },
                  ],
                 },
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "source",
                    position: (158, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "properties",
                  position: (158, 18),
                 },
                ),
               ],
               recursive: false,
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (162, 5),
             },
             Raw {
              content: "variables",
              position: (162, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "DYSNOMIA_STATEDIR",
                 position: (163, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/var/state/dysnomia-nixos",
                 position: (163, 28),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "DYSNOMIA_CONTAINERS_PATH",
                 position: (164, 7),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (164, 37),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "concatMapStrings",
                      position: (164, 41),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "containerPath",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: String {
                     parts: [
                      Expression {
                       expression: Variable {
                        identifier: "containerPath",
                        position: (164, 77),
                       },
                      },
                      Raw {
                       content: ":",
                       position: (164, 91),
                      },
                     ],
                    },
                    position: (164, 59),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (164, 95),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "extraContainerPaths",
                       position: (164, 99),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "/etc/dysnomia/containers",
                 position: (164, 119),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "DYSNOMIA_MODULES_PATH",
                 position: (165, 7),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (165, 34),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "concatMapStrings",
                      position: (165, 38),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "modulePath",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: String {
                     parts: [
                      Expression {
                       expression: Variable {
                        identifier: "modulePath",
                        position: (165, 71),
                       },
                      },
                      Raw {
                       content: ":",
                       position: (165, 82),
                      },
                     ],
                    },
                    position: (165, 56),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (165, 86),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "extraModulePaths",
                       position: (165, 90),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "/etc/dysnomia/modules",
                 position: (165, 107),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (168, 5),
             },
             Raw {
              content: "systemPackages",
              position: (168, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (168, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (168, 40),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "dysnomia",
              position: (170, 5),
             },
             Raw {
              content: "package",
              position: (170, 14),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (170, 24),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "dysnomia",
                position: (170, 29),
               },
               Raw {
                content: "override",
                position: (170, 38),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Function {
              argument: Some(
               "origArgs",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "dysnomiaFlags",
                 position: (170, 58),
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (170, 75),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "optionalAttrs",
                     position: (170, 79),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (170, 94),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enableLegacyModules",
                      position: (170, 98),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "enableLegacy",
                        position: (171, 7),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "builtins",
                        position: (171, 22),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "trace",
                          position: (171, 31),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "WARNING: Dysnomia has been configured to use the legacy 'process' and 'wrapper'\nmodules for compatibility reasons! If you rely on these modules, consider\nmigrating to better alternatives.\n\nMore information: https://raw.githubusercontent.com/svanderburg/dysnomia/f65a9a84827bcc4024d6b16527098b33b02e4054/README-legacy.md\n\nIf you have migrated already or don't rely on these Dysnomia modules, you can\ndisable legacy mode with the following NixOS configuration option:\n\ndysnomia.enableLegacyModules = false;\n\nIn a future version of Dysnomia (and NixOS) the legacy option will go away!\n",
                          position: (172, 1),
                         },
                        ],
                       },
                       Variable {
                        identifier: "true",
                        position: (184, 10),
                       },
                      ],
                     },
                    ),
                   ],
                   recursive: false,
                  },
                 ],
                },
               ],
               position: (170, 72),
              },
              position: (170, 48),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "dysnomia",
              position: (187, 5),
             },
             Raw {
              content: "properties",
              position: (187, 14),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "hostname",
                 position: (188, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (188, 18),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "networking",
                  position: (188, 25),
                 },
                 Raw {
                  content: "hostName",
                  position: (188, 36),
                 },
                ],
               },
               default: None,
              },
             ),
             Inherit(
              Some(
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (189, 16),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nixpkgs",
                   position: (189, 23),
                  },
                  Raw {
                   content: "localSystem",
                   position: (189, 31),
                  },
                 ],
                },
                default: None,
               },
              ),
              [
               Raw {
                content: "system",
                position: (189, 44),
               },
              ],
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "supportedTypes",
                 position: (191, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "echo",
                     position: (192, 10),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "fileset",
                     position: (193, 10),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "process",
                     position: (194, 10),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "wrapper",
                     position: (195, 10),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "systemd-unit",
                     position: (198, 10),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "sysvinit-script",
                     position: (199, 10),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "nixos-configuration",
                     position: (200, 10),
                    },
                   ],
                  },
                 ],
                },
                BinaryOperation {
                 operator: Concatenation,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "optional",
                    position: (202, 10),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "dysnomiaFlags",
                      position: (202, 20),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "enableApacheWebApplication",
                        position: (202, 34),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "apache-webapplication",
                       position: (202, 63),
                      },
                     ],
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "optional",
                      position: (203, 10),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "dysnomiaFlags",
                        position: (203, 20),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "enableAxis2WebService",
                          position: (203, 34),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "axis2-webservice",
                         position: (203, 58),
                        },
                       ],
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optional",
                        position: (204, 10),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "dysnomiaFlags",
                          position: (204, 20),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "enableDockerContainer",
                            position: (204, 34),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "docker-container",
                           position: (204, 58),
                          },
                         ],
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Concatenation,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (205, 10),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "dysnomiaFlags",
                            position: (205, 20),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "enableEjabberdDump",
                              position: (205, 34),
                             },
                            ],
                           },
                           default: None,
                          },
                          String {
                           parts: [
                            Raw {
                             content: "ejabberd-dump",
                             position: (205, 55),
                            },
                           ],
                          },
                         ],
                        },
                        BinaryOperation {
                         operator: Concatenation,
                         operands: [
                          FunctionApplication {
                           function: Variable {
                            identifier: "optional",
                            position: (206, 10),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "dysnomiaFlags",
                              position: (206, 20),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "enableInfluxDatabase",
                                position: (206, 34),
                               },
                              ],
                             },
                             default: None,
                            },
                            String {
                             parts: [
                              Raw {
                               content: "influx-database",
                               position: (206, 57),
                              },
                             ],
                            },
                           ],
                          },
                          BinaryOperation {
                           operator: Concatenation,
                           operands: [
                            FunctionApplication {
                             function: Variable {
                              identifier: "optional",
                              position: (207, 10),
                             },
                             arguments: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "dysnomiaFlags",
                                position: (207, 20),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "enableMySQLDatabase",
                                  position: (207, 34),
                                 },
                                ],
                               },
                               default: None,
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "mysql-database",
                                 position: (207, 56),
                                },
                               ],
                              },
                             ],
                            },
                            BinaryOperation {
                             operator: Concatenation,
                             operands: [
                              FunctionApplication {
                               function: Variable {
                                identifier: "optional",
                                position: (208, 10),
                               },
                               arguments: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "dysnomiaFlags",
                                  position: (208, 20),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "enablePostgreSQLDatabase",
                                    position: (208, 34),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "postgresql-database",
                                   position: (208, 61),
                                  },
                                 ],
                                },
                               ],
                              },
                              BinaryOperation {
                               operator: Concatenation,
                               operands: [
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "optional",
                                  position: (209, 10),
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "dysnomiaFlags",
                                    position: (209, 20),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "enableTomcatWebApplication",
                                      position: (209, 34),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  String {
                                   parts: [
                                    Raw {
                                     content: "tomcat-webapplication",
                                     position: (209, 63),
                                    },
                                   ],
                                  },
                                 ],
                                },
                                BinaryOperation {
                                 operator: Concatenation,
                                 operands: [
                                  FunctionApplication {
                                   function: Variable {
                                    identifier: "optional",
                                    position: (210, 10),
                                   },
                                   arguments: [
                                    PropertyAccess {
                                     expression: Variable {
                                      identifier: "dysnomiaFlags",
                                      position: (210, 20),
                                     },
                                     attribute_path: AttributePath {
                                      attributes: [
                                       Raw {
                                        content: "enableMongoDatabase",
                                        position: (210, 34),
                                       },
                                      ],
                                     },
                                     default: None,
                                    },
                                    String {
                                     parts: [
                                      Raw {
                                       content: "mongo-database",
                                       position: (210, 56),
                                      },
                                     ],
                                    },
                                   ],
                                  },
                                  FunctionApplication {
                                   function: Variable {
                                    identifier: "optional",
                                    position: (211, 10),
                                   },
                                   arguments: [
                                    PropertyAccess {
                                     expression: Variable {
                                      identifier: "dysnomiaFlags",
                                      position: (211, 20),
                                     },
                                     attribute_path: AttributePath {
                                      attributes: [
                                       Raw {
                                        content: "enableSubversionRepository",
                                        position: (211, 34),
                                       },
                                      ],
                                     },
                                     default: None,
                                    },
                                    String {
                                     parts: [
                                      Raw {
                                       content: "subversion-repository",
                                       position: (211, 63),
                                      },
                                     ],
                                    },
                                   ],
                                  },
                                 ],
                                 position: (211, 7),
                                },
                               ],
                               position: (210, 7),
                              },
                             ],
                             position: (209, 7),
                            },
                           ],
                           position: (208, 7),
                          },
                         ],
                         position: (207, 7),
                        },
                       ],
                       position: (206, 7),
                      },
                     ],
                     position: (205, 7),
                    },
                   ],
                   position: (204, 7),
                  },
                 ],
                 position: (203, 7),
                },
               ],
               position: (202, 7),
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "dysnomia",
              position: (214, 5),
             },
             Raw {
              content: "containers",
              position: (214, 14),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (214, 27),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "recursiveUpdate",
                position: (214, 31),
               },
              ],
             },
             default: None,
            },
            arguments: [
             BinaryOperation {
              operator: Update,
              operands: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "process",
                     position: (215, 7),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "wrapper",
                     position: (216, 7),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                  },
                 ),
                ],
                recursive: false,
               },
               BinaryOperation {
                operator: Update,
                operands: [
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (218, 8),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "optionalAttrs",
                      position: (218, 12),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (218, 27),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "services",
                       position: (218, 34),
                      },
                      Raw {
                       content: "httpd",
                       position: (218, 43),
                      },
                      Raw {
                       content: "enable",
                       position: (218, 49),
                      },
                     ],
                    },
                    default: None,
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "apache-webapplication",
                         position: (218, 59),
                        },
                       ],
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "documentRoot",
                            position: (219, 7),
                           },
                          ],
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "config",
                           position: (219, 22),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "services",
                             position: (219, 29),
                            },
                            Raw {
                             content: "httpd",
                             position: (219, 38),
                            },
                            Raw {
                             content: "virtualHosts",
                             position: (219, 44),
                            },
                            Raw {
                             content: "localhost",
                             position: (219, 57),
                            },
                            Raw {
                             content: "documentRoot",
                             position: (219, 67),
                            },
                           ],
                          },
                          default: None,
                         },
                        ),
                       ],
                       recursive: false,
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Update,
                  operands: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "lib",
                      position: (221, 8),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "optionalAttrs",
                        position: (221, 12),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "config",
                       position: (221, 27),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "services",
                         position: (221, 34),
                        },
                        Raw {
                         content: "tomcat",
                         position: (221, 43),
                        },
                        Raw {
                         content: "axis2",
                         position: (221, 50),
                        },
                        Raw {
                         content: "enable",
                         position: (221, 56),
                        },
                       ],
                      },
                      default: None,
                     },
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "axis2-webservice",
                           position: (221, 66),
                          },
                         ],
                        },
                        Map {
                         bindings: [],
                         recursive: false,
                        },
                       ),
                      ],
                      recursive: false,
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: Update,
                    operands: [
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "lib",
                        position: (222, 8),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "optionalAttrs",
                          position: (222, 12),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "config",
                         position: (222, 27),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "services",
                           position: (222, 34),
                          },
                          Raw {
                           content: "ejabberd",
                           position: (222, 43),
                          },
                          Raw {
                           content: "enable",
                           position: (222, 52),
                          },
                         ],
                        },
                        default: None,
                       },
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "ejabberd-dump",
                             position: (222, 62),
                            },
                           ],
                          },
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "ejabberdUser",
                                position: (223, 7),
                               },
                              ],
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (223, 22),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "services",
                                 position: (223, 29),
                                },
                                Raw {
                                 content: "ejabberd",
                                 position: (223, 38),
                                },
                                Raw {
                                 content: "user",
                                 position: (223, 47),
                                },
                               ],
                              },
                              default: None,
                             },
                            ),
                           ],
                           recursive: false,
                          },
                         ),
                        ],
                        recursive: false,
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: Update,
                      operands: [
                       FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "lib",
                          position: (225, 8),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "optionalAttrs",
                            position: (225, 12),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "config",
                           position: (225, 27),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "services",
                             position: (225, 34),
                            },
                            Raw {
                             content: "mysql",
                             position: (225, 43),
                            },
                            Raw {
                             content: "enable",
                             position: (225, 49),
                            },
                           ],
                          },
                          default: None,
                         },
                         Map {
                          bindings: [
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "mysql-database",
                               position: (225, 59),
                              },
                             ],
                            },
                            BinaryOperation {
                             operator: Update,
                             operands: [
                              Map {
                               bindings: [
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "mysqlPort",
                                    position: (226, 9),
                                   },
                                  ],
                                 },
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (226, 21),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "services",
                                     position: (226, 28),
                                    },
                                    Raw {
                                     content: "mysql",
                                     position: (226, 37),
                                    },
                                    Raw {
                                     content: "port",
                                     position: (226, 43),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ),
                                KeyValue(
                                 AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "mysqlSocket",
                                    position: (227, 9),
                                   },
                                  ],
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "/run/mysqld/mysqld.sock",
                                    position: (227, 24),
                                   },
                                  ],
                                 },
                                ),
                               ],
                               recursive: false,
                              },
                              FunctionApplication {
                               function: PropertyAccess {
                                expression: Variable {
                                 identifier: "lib",
                                 position: (228, 12),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "optionalAttrs",
                                   position: (228, 16),
                                  },
                                 ],
                                },
                                default: None,
                               },
                               arguments: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "cfg",
                                  position: (228, 30),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "enableAuthentication",
                                    position: (228, 34),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                Map {
                                 bindings: [
                                  KeyValue(
                                   AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "mysqlUsername",
                                      position: (229, 9),
                                     },
                                    ],
                                   },
                                   String {
                                    parts: [
                                     Raw {
                                      content: "root",
                                      position: (229, 26),
                                     },
                                    ],
                                   },
                                  ),
                                 ],
                                 recursive: false,
                                },
                               ],
                              },
                             ],
                             position: (228, 9),
                            },
                           ),
                          ],
                          recursive: false,
                         },
                        ],
                       },
                       BinaryOperation {
                        operator: Update,
                        operands: [
                         FunctionApplication {
                          function: PropertyAccess {
                           expression: Variable {
                            identifier: "lib",
                            position: (232, 8),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "optionalAttrs",
                              position: (232, 12),
                             },
                            ],
                           },
                           default: None,
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "config",
                             position: (232, 27),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "services",
                               position: (232, 34),
                              },
                              Raw {
                               content: "postgresql",
                               position: (232, 43),
                              },
                              Raw {
                               content: "enable",
                               position: (232, 54),
                              },
                             ],
                            },
                            default: None,
                           },
                           Map {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "postgresql-database",
                                 position: (232, 64),
                                },
                               ],
                              },
                              BinaryOperation {
                               operator: Update,
                               operands: [
                                Map {
                                 bindings: [],
                                 recursive: false,
                                },
                                FunctionApplication {
                                 function: PropertyAccess {
                                  expression: Variable {
                                   identifier: "lib",
                                   position: (233, 12),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "optionalAttrs",
                                     position: (233, 16),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "cfg",
                                    position: (233, 31),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "enableAuthentication",
                                      position: (233, 35),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  Map {
                                   bindings: [
                                    KeyValue(
                                     AttributePath {
                                      attributes: [
                                       Raw {
                                        content: "postgresqlUsername",
                                        position: (234, 9),
                                       },
                                      ],
                                     },
                                     String {
                                      parts: [
                                       Raw {
                                        content: "postgres",
                                        position: (234, 31),
                                       },
                                      ],
                                     },
                                    ),
                                   ],
                                   recursive: false,
                                  },
                                 ],
                                },
                               ],
                               position: (233, 9),
                              },
                             ),
                            ],
                            recursive: false,
                           },
                          ],
                         },
                         BinaryOperation {
                          operator: Update,
                          operands: [
                           FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "lib",
                              position: (237, 8),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "optionalAttrs",
                                position: (237, 12),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (237, 27),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "services",
                                 position: (237, 34),
                                },
                                Raw {
                                 content: "tomcat",
                                 position: (237, 43),
                                },
                                Raw {
                                 content: "enable",
                                 position: (237, 50),
                                },
                               ],
                              },
                              default: None,
                             },
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "tomcat-webapplication",
                                   position: (237, 60),
                                  },
                                 ],
                                },
                                Map {
                                 bindings: [
                                  KeyValue(
                                   AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "tomcatPort",
                                      position: (238, 7),
                                     },
                                    ],
                                   },
                                   Int {
                                    value: 8080,
                                    position: (238, 20),
                                   },
                                  ),
                                 ],
                                 recursive: false,
                                },
                               ),
                              ],
                              recursive: false,
                             },
                            ],
                           },
                           BinaryOperation {
                            operator: Update,
                            operands: [
                             FunctionApplication {
                              function: PropertyAccess {
                               expression: Variable {
                                identifier: "lib",
                                position: (240, 8),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "optionalAttrs",
                                  position: (240, 12),
                                 },
                                ],
                               },
                               default: None,
                              },
                              arguments: [
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "config",
                                 position: (240, 27),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "services",
                                   position: (240, 34),
                                  },
                                  Raw {
                                   content: "mongodb",
                                   position: (240, 43),
                                  },
                                  Raw {
                                   content: "enable",
                                   position: (240, 51),
                                  },
                                 ],
                                },
                                default: None,
                               },
                               Map {
                                bindings: [
                                 KeyValue(
                                  AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "mongo-database",
                                     position: (240, 61),
                                    },
                                   ],
                                  },
                                  Map {
                                   bindings: [],
                                   recursive: false,
                                  },
                                 ),
                                ],
                                recursive: false,
                               },
                              ],
                             },
                             BinaryOperation {
                              operator: Update,
                              operands: [
                               FunctionApplication {
                                function: PropertyAccess {
                                 expression: Variable {
                                  identifier: "lib",
                                  position: (241, 8),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "optionalAttrs",
                                    position: (241, 12),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (241, 27),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "services",
                                     position: (241, 34),
                                    },
                                    Raw {
                                     content: "influxdb",
                                     position: (241, 43),
                                    },
                                    Raw {
                                     content: "enable",
                                     position: (241, 52),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 Map {
                                  bindings: [
                                   KeyValue(
                                    AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "influx-database",
                                       position: (242, 7),
                                      },
                                     ],
                                    },
                                    Map {
                                     bindings: [
                                      KeyValue(
                                       AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "influxdbUsername",
                                          position: (243, 9),
                                         },
                                        ],
                                       },
                                       PropertyAccess {
                                        expression: Variable {
                                         identifier: "config",
                                         position: (243, 28),
                                        },
                                        attribute_path: AttributePath {
                                         attributes: [
                                          Raw {
                                           content: "services",
                                           position: (243, 35),
                                          },
                                          Raw {
                                           content: "influxdb",
                                           position: (243, 44),
                                          },
                                          Raw {
                                           content: "user",
                                           position: (243, 53),
                                          },
                                         ],
                                        },
                                        default: None,
                                       },
                                      ),
                                      KeyValue(
                                       AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "influxdbDataDir",
                                          position: (244, 9),
                                         },
                                        ],
                                       },
                                       String {
                                        parts: [
                                         Expression {
                                          expression: PropertyAccess {
                                           expression: Variable {
                                            identifier: "config",
                                            position: (244, 30),
                                           },
                                           attribute_path: AttributePath {
                                            attributes: [
                                             Raw {
                                              content: "services",
                                              position: (244, 37),
                                             },
                                             Raw {
                                              content: "influxdb",
                                              position: (244, 46),
                                             },
                                             Raw {
                                              content: "dataDir",
                                              position: (244, 55),
                                             },
                                            ],
                                           },
                                           default: None,
                                          },
                                         },
                                         Raw {
                                          content: "/data",
                                          position: (244, 63),
                                         },
                                        ],
                                       },
                                      ),
                                      KeyValue(
                                       AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "influxdbMetaDir",
                                          position: (245, 9),
                                         },
                                        ],
                                       },
                                       String {
                                        parts: [
                                         Expression {
                                          expression: PropertyAccess {
                                           expression: Variable {
                                            identifier: "config",
                                            position: (245, 30),
                                           },
                                           attribute_path: AttributePath {
                                            attributes: [
                                             Raw {
                                              content: "services",
                                              position: (245, 37),
                                             },
                                             Raw {
                                              content: "influxdb",
                                              position: (245, 46),
                                             },
                                             Raw {
                                              content: "dataDir",
                                              position: (245, 55),
                                             },
                                            ],
                                           },
                                           default: None,
                                          },
                                         },
                                         Raw {
                                          content: "/meta",
                                          position: (245, 63),
                                         },
                                        ],
                                       },
                                      ),
                                     ],
                                     recursive: false,
                                    },
                                   ),
                                  ],
                                  recursive: false,
                                 },
                                ],
                               },
                               FunctionApplication {
                                function: PropertyAccess {
                                 expression: Variable {
                                  identifier: "lib",
                                  position: (248, 8),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "optionalAttrs",
                                    position: (248, 12),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (248, 27),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "services",
                                     position: (248, 34),
                                    },
                                    Raw {
                                     content: "svnserve",
                                     position: (248, 43),
                                    },
                                    Raw {
                                     content: "enable",
                                     position: (248, 52),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 Map {
                                  bindings: [
                                   KeyValue(
                                    AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "subversion-repository",
                                       position: (248, 62),
                                      },
                                     ],
                                    },
                                    Map {
                                     bindings: [
                                      KeyValue(
                                       AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "svnBaseDir",
                                          position: (249, 7),
                                         },
                                        ],
                                       },
                                       PropertyAccess {
                                        expression: Variable {
                                         identifier: "config",
                                         position: (249, 20),
                                        },
                                        attribute_path: AttributePath {
                                         attributes: [
                                          Raw {
                                           content: "services",
                                           position: (249, 27),
                                          },
                                          Raw {
                                           content: "svnserve",
                                           position: (249, 36),
                                          },
                                          Raw {
                                           content: "svnBaseDir",
                                           position: (249, 45),
                                          },
                                         ],
                                        },
                                        default: None,
                                       },
                                      ),
                                     ],
                                     recursive: false,
                                    },
                                   ),
                                  ],
                                  recursive: false,
                                 },
                                ],
                               },
                              ],
                              position: (248, 5),
                             },
                            ],
                            position: (241, 5),
                           },
                          ],
                          position: (240, 5),
                         },
                        ],
                        position: (237, 5),
                       },
                      ],
                      position: (232, 5),
                     },
                    ],
                    position: (225, 5),
                   },
                  ],
                  position: (222, 5),
                 },
                ],
                position: (221, 5),
               },
              ],
              position: (218, 5),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (250, 11),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "extraContainerProperties",
                 position: (250, 15),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "boot",
              position: (252, 5),
             },
             Raw {
              content: "extraSystemdUnitPaths",
              position: (252, 10),
             },
            ],
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "/etc/systemd-mutable/system",
                position: (252, 37),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "system",
              position: (254, 5),
             },
             Raw {
              content: "activationScripts",
              position: (254, 12),
             },
             Raw {
              content: "dysnomia",
              position: (254, 30),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "mkdir -p /etc/systemd-mutable/system\nif [ ! -f /etc/systemd-mutable/system/dysnomia.target ]\nthen\n    ( echo \"[Unit]\"\n      echo \"Description=Services that are activated and deactivated by Dysnomia\"\n      echo \"After=final.target\"\n    ) > /etc/systemd-mutable/system/dysnomia.target\nfi\n",
              position: (255, 1),
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}