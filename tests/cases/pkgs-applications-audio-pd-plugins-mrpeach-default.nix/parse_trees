---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (1, 16)
            , := lexemes ","
              , "," (1, 24)
            formals := rules "formal"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "puredata" (1, 26)
      } := lexemes "}"
        } "}" (1, 35)
      : := lexemes ":"
        : ":" (1, 36)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (3, 1)
                  . := lexemes "."
                    . "." (3, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (3, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "{" "binds" "}"
                  { := lexemes "{"
                    { "{" (3, 21)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules 
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "pname" (4, 3)
                                      = := lexemes "="
                                        = "=" (4, 9)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (4, 11)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "mrpeach" (4, 12)
                                                    " := lexemes "\""
                                                      " "\"" (4, 19)
                                      ; := lexemes ";"
                                        ; ";" (4, 20)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "version" (5, 3)
                                    = := lexemes "="
                                      = "=" (5, 11)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (5, 13)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "1.1" (5, 14)
                                                  " := lexemes "\""
                                                    " "\"" (5, 17)
                                    ; := lexemes ";"
                                      ; ";" (5, 18)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "src" (12, 3)
                                  = := lexemes "="
                                    = "=" (12, 7)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_app" "expr_select"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "fetchurl" (12, 9)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "{" "binds" "}"
                                                { := lexemes "{"
                                                  { "{" (12, 18)
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                                    binds := rules 
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "url" (13, 5)
                                                    = := lexemes "="
                                                      = "=" (13, 9)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (13, 11)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR "http://slackonly.com/pub/korgie/sources/pd_mrpeach-2011.10.21.tar.gz" (13, 12)
                                                                  " := lexemes "\""
                                                                    " "\"" (13, 80)
                                                    ; := lexemes ";"
                                                      ; ";" (13, 81)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "sha256" (14, 5)
                                                  = := lexemes "="
                                                    = "=" (14, 12)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "\"" "string_parts" "\""
                                                                " := lexemes "\""
                                                                  " "\"" (14, 14)
                                                                string_parts := rules "STR"
                                                                  STR := lexemes "STR"
                                                                    STR "12jqba3jsdrk20ib9wc2wiivki88ypcd4mkzgsri9siywbbz9w8x" (14, 15)
                                                                " := lexemes "\""
                                                                  " "\"" (14, 67)
                                                  ; := lexemes ";"
                                                    ; ";" (14, 68)
                                                } := lexemes "}"
                                                  } "}" (15, 3)
                                  ; := lexemes ";"
                                    ; ";" (15, 4)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "buildInputs" (17, 3)
                                = := lexemes "="
                                  = "=" (17, 15)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "[" "expr_list" "]"
                                              [ := lexemes "["
                                                [ "[" (17, 17)
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules 
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "puredata" (17, 19)
                                              ] := lexemes "]"
                                                ] "]" (17, 28)
                                ; := lexemes ";"
                                  ; ";" (17, 29)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "hardeningDisable" (19, 3)
                              = := lexemes "="
                                = "=" (19, 20)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "[" "expr_list" "]"
                                            [ := lexemes "["
                                              [ "[" (19, 22)
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules 
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (19, 24)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "format" (19, 25)
                                                  " := lexemes "\""
                                                    " "\"" (19, 31)
                                            ] := lexemes "]"
                                              ] "]" (19, 33)
                              ; := lexemes ";"
                                ; ";" (19, 34)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "patchPhase" (21, 3)
                            = := lexemes "="
                              = "=" (21, 14)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                          IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                            IND_STRING_OPEN "''\n" (21, 16)
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                              ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                ind_string_parts := rules 
                                                IND_STR := lexemes "IND_STR"
                                                  IND_STR "    for D in net osc\n    do\n      sed -i \"s@prefix = /usr/local@prefix = $out@g\" $D/Makefile\n      for i in " (22, 1)
                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                DOLLAR_CURLY "${" (25, 16)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "puredata" (25, 18)
                                              } := lexemes "}"
                                                } "}" (25, 26)
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "/include/pd/*; do\n        ln -s $i $D/\n      done\n    done\n  " (25, 27)
                                          IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                            IND_STRING_CLOSE "''" (29, 3)
                            ; := lexemes ";"
                              ; ";" (29, 5)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "buildPhase" (31, 3)
                          = := lexemes "="
                            = "=" (31, 14)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                        IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                          IND_STRING_OPEN "''\n" (31, 16)
                                        ind_string_parts := rules "ind_string_parts" "IND_STR"
                                          ind_string_parts := rules 
                                          IND_STR := lexemes "IND_STR"
                                            IND_STR "    for D in net osc\n    do\n      cd $D\n      make\n      cd ..\n    done\n  " (32, 1)
                                        IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                          IND_STRING_CLOSE "''" (38, 3)
                          ; := lexemes ";"
                            ; ";" (38, 5)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "installPhase" (40, 3)
                        = := lexemes "="
                          = "=" (40, 16)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (40, 18)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    for D in net osc\n    do\n      cd $D\n      make install\n      cd ..\n    done\n  " (41, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (47, 3)
                        ; := lexemes ";"
                          ; ";" (47, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "fixupPhase" (49, 3)
                      = := lexemes "="
                        = "=" (49, 14)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (49, 16)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules 
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "    mv $out/lib/pd-externals/net $out\n    mv $out/lib/pd-externals/osc $out\n    rm -rf $out/lib\n  " (50, 1)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (53, 3)
                      ; := lexemes ";"
                        ; ";" (53, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (55, 3)
                    = := lexemes "="
                      = "=" (55, 8)
                    expr := rules "expr_function"
                      expr_function := rules "expr_if"
                        expr_if := rules "expr_op"
                          expr_op := rules "expr_app"
                            expr_app := rules "expr_select"
                              expr_select := rules "expr_simple"
                                expr_simple := rules "{" "binds" "}"
                                  { := lexemes "{"
                                    { "{" (55, 10)
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "description" (56, 5)
                                            = := lexemes "="
                                              = "=" (56, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (56, 19)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "A collection of Pd objectclasses for OSC-messages" (56, 20)
                                                          " := lexemes "\""
                                                            " "\"" (56, 69)
                                            ; := lexemes ";"
                                              ; ";" (56, 70)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (57, 5)
                                          = := lexemes "="
                                            = "=" (57, 14)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (57, 16)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "http://puredata.info/downloads/osc" (57, 17)
                                                        " := lexemes "\""
                                                          " "\"" (57, 51)
                                          ; := lexemes ";"
                                            ; ";" (57, 52)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (58, 5)
                                        = := lexemes "="
                                          = "=" (58, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "lib" (58, 15)
                                                    . := lexemes "."
                                                      . "." (58, 18)
                                                    attrpath := rules "attrpath" "." "attr"
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "licenses" (58, 19)
                                                      . := lexemes "."
                                                        . "." (58, 27)
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "gpl2" (58, 28)
                                        ; := lexemes ";"
                                          ; ";" (58, 32)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (59, 5)
                                      = := lexemes "="
                                        = "=" (59, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "[" "expr_list" "]"
                                                    [ := lexemes "["
                                                      [ "[" (59, 19)
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules 
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "lib" (59, 21)
                                                        . := lexemes "."
                                                          . "." (59, 24)
                                                        attrpath := rules "attrpath" "." "attr"
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "maintainers" (59, 25)
                                                          . := lexemes "."
                                                            . "." (59, 36)
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "magnetophon" (59, 37)
                                                    ] := lexemes "]"
                                                      ] "]" (59, 49)
                                      ; := lexemes ";"
                                        ; ";" (59, 50)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "platforms" (60, 5)
                                    = := lexemes "="
                                      = "=" (60, 15)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple" "." "attrpath"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "lib" (60, 17)
                                                . := lexemes "."
                                                  . "." (60, 20)
                                                attrpath := rules "attrpath" "." "attr"
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "platforms" (60, 21)
                                                  . := lexemes "."
                                                    . "." (60, 30)
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "linux" (60, 31)
                                    ; := lexemes ";"
                                      ; ";" (60, 36)
                                  } := lexemes "}"
                                    } "}" (61, 3)
                    ; := lexemes ";"
                      ; ";" (61, 4)
                  } := lexemes "}"
                    } "}" (62, 1)