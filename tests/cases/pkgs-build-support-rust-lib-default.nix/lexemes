{ "{" (1, 1)
ID "lib" (1, 3)
} "}" (1, 7)
: ":" (1, 8)
REC "rec" (3, 1)
{ "{" (3, 5)
ID "toTargetArch" (5, 3)
= "=" (5, 16)
ID "platform" (5, 18)
: ":" (5, 26)
IF "if" (6, 5)
ID "platform" (6, 8)
. "." (6, 16)
ID "isAarch32" (6, 17)
THEN "then" (6, 27)
" "\"" (6, 32)
STR "arm" (6, 33)
" "\"" (6, 36)
ELSE "else" (7, 5)
ID "platform" (7, 10)
. "." (7, 18)
ID "parsed" (7, 19)
. "." (7, 25)
ID "cpu" (7, 26)
. "." (7, 29)
ID "name" (7, 30)
; ";" (7, 34)
ID "toTargetOs" (10, 3)
= "=" (10, 14)
ID "platform" (10, 16)
: ":" (10, 24)
IF "if" (11, 5)
ID "platform" (11, 8)
. "." (11, 16)
ID "isDarwin" (11, 17)
THEN "then" (11, 26)
" "\"" (11, 31)
STR "macos" (11, 32)
" "\"" (11, 37)
ELSE "else" (12, 5)
ID "platform" (12, 10)
. "." (12, 18)
ID "parsed" (12, 19)
. "." (12, 25)
ID "kernel" (12, 26)
. "." (12, 32)
ID "name" (12, 33)
; ";" (12, 37)
ID "toRustTarget" (16, 3)
= "=" (16, 16)
ID "platform" (16, 18)
: ":" (16, 26)
LET "let" (16, 28)
INHERIT "inherit" (17, 5)
( "(" (17, 13)
ID "platform" (17, 14)
. "." (17, 22)
ID "parsed" (17, 23)
) ")" (17, 29)
ID "cpu" (17, 31)
ID "vendor" (17, 35)
ID "kernel" (17, 42)
ID "abi" (17, 49)
; ";" (17, 52)
ID "cpu_" (18, 5)
= "=" (18, 10)
ID "platform" (18, 12)
. "." (18, 20)
ID "rustc" (18, 21)
. "." (18, 26)
ID "platform" (18, 27)
. "." (18, 35)
ID "arch" (18, 36)
OR_KW "or" (18, 41)
{ "{" (18, 44)
" "\"" (19, 7)
STR "armv7a" (19, 8)
" "\"" (19, 14)
= "=" (19, 16)
" "\"" (19, 18)
STR "armv7" (19, 19)
" "\"" (19, 24)
; ";" (19, 25)
" "\"" (20, 7)
STR "armv7l" (20, 8)
" "\"" (20, 14)
= "=" (20, 16)
" "\"" (20, 18)
STR "armv7" (20, 19)
" "\"" (20, 24)
; ";" (20, 25)
" "\"" (21, 7)
STR "armv6l" (21, 8)
" "\"" (21, 14)
= "=" (21, 16)
" "\"" (21, 18)
STR "arm" (21, 19)
" "\"" (21, 22)
; ";" (21, 23)
" "\"" (22, 7)
STR "armv5tel" (22, 8)
" "\"" (22, 16)
= "=" (22, 18)
" "\"" (22, 20)
STR "armv5te" (22, 21)
" "\"" (22, 28)
; ";" (22, 29)
" "\"" (23, 7)
STR "riscv64" (23, 8)
" "\"" (23, 15)
= "=" (23, 17)
" "\"" (23, 19)
STR "riscv64gc" (23, 20)
" "\"" (23, 29)
; ";" (23, 30)
} "}" (24, 5)
. "." (24, 6)
DOLLAR_CURLY "${" (24, 7)
ID "cpu" (24, 9)
. "." (24, 12)
ID "name" (24, 13)
} "}" (24, 17)
OR_KW "or" (24, 19)
ID "cpu" (24, 22)
. "." (24, 25)
ID "name" (24, 26)
; ";" (24, 30)
ID "vendor_" (25, 5)
= "=" (25, 13)
ID "platform" (25, 15)
. "." (25, 23)
ID "rustc" (25, 24)
. "." (25, 29)
ID "platform" (25, 30)
. "." (25, 38)
ID "vendor" (25, 39)
OR_KW "or" (25, 46)
{ "{" (25, 49)
" "\"" (26, 7)
STR "w64" (26, 8)
" "\"" (26, 11)
= "=" (26, 13)
" "\"" (26, 15)
STR "pc" (26, 16)
" "\"" (26, 18)
; ";" (26, 19)
} "}" (27, 5)
. "." (27, 6)
DOLLAR_CURLY "${" (27, 7)
ID "vendor" (27, 9)
. "." (27, 15)
ID "name" (27, 16)
} "}" (27, 20)
OR_KW "or" (27, 22)
ID "vendor" (27, 25)
. "." (27, 31)
ID "name" (27, 32)
; ";" (27, 36)
IN "in" (28, 3)
ID "platform" (28, 6)
. "." (28, 14)
ID "rustc" (28, 15)
. "." (28, 20)
ID "config" (28, 21)
OR_KW "or" (29, 5)
" "\"" (29, 8)
DOLLAR_CURLY "${" (29, 9)
ID "cpu_" (29, 11)
} "}" (29, 15)
STR "-" (29, 16)
DOLLAR_CURLY "${" (29, 17)
ID "vendor_" (29, 19)
} "}" (29, 26)
STR "-" (29, 27)
DOLLAR_CURLY "${" (29, 28)
ID "kernel" (29, 30)
. "." (29, 36)
ID "name" (29, 37)
} "}" (29, 41)
DOLLAR_CURLY "${" (29, 42)
ID "lib" (29, 44)
. "." (29, 47)
ID "optionalString" (29, 48)
( "(" (29, 63)
ID "abi" (29, 64)
. "." (29, 67)
ID "name" (29, 68)
NEQ "!=" (29, 73)
" "\"" (29, 76)
STR "unknown" (29, 77)
" "\"" (29, 84)
) ")" (29, 85)
" "\"" (29, 87)
STR "-" (29, 88)
DOLLAR_CURLY "${" (29, 89)
ID "abi" (29, 91)
. "." (29, 94)
ID "name" (29, 95)
} "}" (29, 99)
" "\"" (29, 100)
} "}" (29, 101)
" "\"" (29, 102)
; ";" (29, 103)
ID "toRustTargetSpec" (33, 3)
= "=" (33, 20)
ID "platform" (33, 22)
: ":" (33, 30)
IF "if" (34, 5)
( "(" (34, 8)
ID "platform" (34, 9)
. "." (34, 17)
ID "rustc" (34, 18)
OR_KW "or" (34, 24)
{ "{" (34, 27)
} "}" (34, 28)
) ")" (34, 29)
? "?" (34, 31)
ID "platform" (34, 33)
THEN "then" (35, 5)
ID "builtins" (35, 10)
. "." (35, 18)
ID "toFile" (35, 19)
( "(" (35, 26)
ID "toRustTarget" (35, 27)
ID "platform" (35, 40)
+ "+" (35, 49)
" "\"" (35, 51)
STR ".json" (35, 52)
" "\"" (35, 57)
) ")" (35, 58)
( "(" (35, 60)
ID "builtins" (35, 61)
. "." (35, 69)
ID "toJSON" (35, 70)
ID "platform" (35, 77)
. "." (35, 85)
ID "rustc" (35, 86)
. "." (35, 91)
ID "platform" (35, 92)
) ")" (35, 100)
ELSE "else" (36, 5)
ID "toRustTarget" (36, 10)
ID "platform" (36, 23)
; ";" (36, 31)
} "}" (37, 1)