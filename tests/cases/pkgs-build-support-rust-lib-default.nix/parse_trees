---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
      } := lexemes "}"
        } "}" (1, 7)
      : := lexemes ":"
        : ":" (1, 8)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_select"
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 1)
                  { := lexemes "{"
                    { "{" (3, 5)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules 
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "toTargetArch" (5, 3)
                          = := lexemes "="
                            = "=" (5, 16)
                          expr := rules "expr_function"
                            expr_function := rules "ID" ":" "expr_function"
                              ID := lexemes "ID"
                                ID "platform" (5, 18)
                              : := lexemes ":"
                                : ":" (5, 26)
                              expr_function := rules "expr_if"
                                expr_if := rules "IF" "expr" "THEN" "expr" "ELSE" "expr"
                                  IF := lexemes "IF"
                                    IF "if" (6, 5)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple" "." "attrpath"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "platform" (6, 8)
                                              . := lexemes "."
                                                . "." (6, 16)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "isAarch32" (6, 17)
                                  THEN := lexemes "THEN"
                                    THEN "then" (6, 27)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (6, 32)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "arm" (6, 33)
                                                " := lexemes "\""
                                                  " "\"" (6, 36)
                                  ELSE := lexemes "ELSE"
                                    ELSE "else" (7, 5)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple" "." "attrpath"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "platform" (7, 10)
                                              . := lexemes "."
                                                . "." (7, 18)
                                              attrpath := rules "attrpath" "." "attr"
                                                attrpath := rules "attrpath" "." "attr"
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "parsed" (7, 19)
                                                  . := lexemes "."
                                                    . "." (7, 25)
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "cpu" (7, 26)
                                                . := lexemes "."
                                                  . "." (7, 29)
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "name" (7, 30)
                          ; := lexemes ";"
                            ; ";" (7, 34)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "toTargetOs" (10, 3)
                        = := lexemes "="
                          = "=" (10, 14)
                        expr := rules "expr_function"
                          expr_function := rules "ID" ":" "expr_function"
                            ID := lexemes "ID"
                              ID "platform" (10, 16)
                            : := lexemes ":"
                              : ":" (10, 24)
                            expr_function := rules "expr_if"
                              expr_if := rules "IF" "expr" "THEN" "expr" "ELSE" "expr"
                                IF := lexemes "IF"
                                  IF "if" (11, 5)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "platform" (11, 8)
                                            . := lexemes "."
                                              . "." (11, 16)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "isDarwin" (11, 17)
                                THEN := lexemes "THEN"
                                  THEN "then" (11, 26)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (11, 31)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "macos" (11, 32)
                                              " := lexemes "\""
                                                " "\"" (11, 37)
                                ELSE := lexemes "ELSE"
                                  ELSE "else" (12, 5)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "platform" (12, 10)
                                            . := lexemes "."
                                              . "." (12, 18)
                                            attrpath := rules "attrpath" "." "attr"
                                              attrpath := rules "attrpath" "." "attr"
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "parsed" (12, 19)
                                                . := lexemes "."
                                                  . "." (12, 25)
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "kernel" (12, 26)
                                              . := lexemes "."
                                                . "." (12, 32)
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "name" (12, 33)
                        ; := lexemes ";"
                          ; ";" (12, 37)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "toRustTarget" (16, 3)
                      = := lexemes "="
                        = "=" (16, 16)
                      expr := rules "expr_function"
                        expr_function := rules "ID" ":" "expr_function"
                          ID := lexemes "ID"
                            ID "platform" (16, 18)
                          : := lexemes ":"
                            : ":" (16, 26)
                          expr_function := rules "LET" "binds" "IN" "expr_function"
                            LET := lexemes "LET"
                              LET "let" (16, 28)
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "INHERIT" "(" "expr" ")" "attrs" ";"
                                  binds := rules 
                                  INHERIT := lexemes "INHERIT"
                                    INHERIT "inherit" (17, 5)
                                  ( := lexemes "("
                                    ( "(" (17, 13)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple" "." "attrpath"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "platform" (17, 14)
                                              . := lexemes "."
                                                . "." (17, 22)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "parsed" (17, 23)
                                  ) := lexemes ")"
                                    ) ")" (17, 29)
                                  attrs := rules "attrs" "attr"
                                    attrs := rules "attrs" "attr"
                                      attrs := rules "attrs" "attr"
                                        attrs := rules "attrs" "attr"
                                          attrs := rules 
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "cpu" (17, 31)
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "vendor" (17, 35)
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "kernel" (17, 42)
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "abi" (17, 49)
                                  ; := lexemes ";"
                                    ; ";" (17, 52)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "cpu_" (18, 5)
                                = := lexemes "="
                                  = "=" (18, 10)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath" "OR_KW" "expr_select"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "platform" (18, 12)
                                            . := lexemes "."
                                              . "." (18, 20)
                                            attrpath := rules "attrpath" "." "attr"
                                              attrpath := rules "attrpath" "." "attr"
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "rustc" (18, 21)
                                                . := lexemes "."
                                                  . "." (18, 26)
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "platform" (18, 27)
                                              . := lexemes "."
                                                . "." (18, 35)
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "arch" (18, 36)
                                            OR_KW := lexemes "OR_KW"
                                              OR_KW "or" (18, 41)
                                            expr_select := rules "expr_simple" "." "attrpath" "OR_KW" "expr_select"
                                              expr_simple := rules "{" "binds" "}"
                                                { := lexemes "{"
                                                  { "{" (18, 44)
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                                          binds := rules 
                                                          attrpath := rules "string_attr"
                                                            string_attr := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (19, 7)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "armv7a" (19, 8)
                                                              " := lexemes "\""
                                                                " "\"" (19, 14)
                                                          = := lexemes "="
                                                            = "=" (19, 16)
                                                          expr := rules "expr_function"
                                                            expr_function := rules "expr_if"
                                                              expr_if := rules "expr_op"
                                                                expr_op := rules "expr_app"
                                                                  expr_app := rules "expr_select"
                                                                    expr_select := rules "expr_simple"
                                                                      expr_simple := rules "\"" "string_parts" "\""
                                                                        " := lexemes "\""
                                                                          " "\"" (19, 18)
                                                                        string_parts := rules "STR"
                                                                          STR := lexemes "STR"
                                                                            STR "armv7" (19, 19)
                                                                        " := lexemes "\""
                                                                          " "\"" (19, 24)
                                                          ; := lexemes ";"
                                                            ; ";" (19, 25)
                                                        attrpath := rules "string_attr"
                                                          string_attr := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (20, 7)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "armv7l" (20, 8)
                                                            " := lexemes "\""
                                                              " "\"" (20, 14)
                                                        = := lexemes "="
                                                          = "=" (20, 16)
                                                        expr := rules "expr_function"
                                                          expr_function := rules "expr_if"
                                                            expr_if := rules "expr_op"
                                                              expr_op := rules "expr_app"
                                                                expr_app := rules "expr_select"
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "\"" "string_parts" "\""
                                                                      " := lexemes "\""
                                                                        " "\"" (20, 18)
                                                                      string_parts := rules "STR"
                                                                        STR := lexemes "STR"
                                                                          STR "armv7" (20, 19)
                                                                      " := lexemes "\""
                                                                        " "\"" (20, 24)
                                                        ; := lexemes ";"
                                                          ; ";" (20, 25)
                                                      attrpath := rules "string_attr"
                                                        string_attr := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (21, 7)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "armv6l" (21, 8)
                                                          " := lexemes "\""
                                                            " "\"" (21, 14)
                                                      = := lexemes "="
                                                        = "=" (21, 16)
                                                      expr := rules "expr_function"
                                                        expr_function := rules "expr_if"
                                                          expr_if := rules "expr_op"
                                                            expr_op := rules "expr_app"
                                                              expr_app := rules "expr_select"
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "\"" "string_parts" "\""
                                                                    " := lexemes "\""
                                                                      " "\"" (21, 18)
                                                                    string_parts := rules "STR"
                                                                      STR := lexemes "STR"
                                                                        STR "arm" (21, 19)
                                                                    " := lexemes "\""
                                                                      " "\"" (21, 22)
                                                      ; := lexemes ";"
                                                        ; ";" (21, 23)
                                                    attrpath := rules "string_attr"
                                                      string_attr := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (22, 7)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "armv5tel" (22, 8)
                                                        " := lexemes "\""
                                                          " "\"" (22, 16)
                                                    = := lexemes "="
                                                      = "=" (22, 18)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (22, 20)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR "armv5te" (22, 21)
                                                                  " := lexemes "\""
                                                                    " "\"" (22, 28)
                                                    ; := lexemes ";"
                                                      ; ";" (22, 29)
                                                  attrpath := rules "string_attr"
                                                    string_attr := rules "\"" "string_parts" "\""
                                                      " := lexemes "\""
                                                        " "\"" (23, 7)
                                                      string_parts := rules "STR"
                                                        STR := lexemes "STR"
                                                          STR "riscv64" (23, 8)
                                                      " := lexemes "\""
                                                        " "\"" (23, 15)
                                                  = := lexemes "="
                                                    = "=" (23, 17)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "\"" "string_parts" "\""
                                                                " := lexemes "\""
                                                                  " "\"" (23, 19)
                                                                string_parts := rules "STR"
                                                                  STR := lexemes "STR"
                                                                    STR "riscv64gc" (23, 20)
                                                                " := lexemes "\""
                                                                  " "\"" (23, 29)
                                                  ; := lexemes ";"
                                                    ; ";" (23, 30)
                                                } := lexemes "}"
                                                  } "}" (24, 5)
                                              . := lexemes "."
                                                . "." (24, 6)
                                              attrpath := rules "string_attr"
                                                string_attr := rules "DOLLAR_CURLY" "expr" "}"
                                                  DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                    DOLLAR_CURLY "${" (24, 7)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple" "." "attrpath"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "cpu" (24, 9)
                                                              . := lexemes "."
                                                                . "." (24, 12)
                                                              attrpath := rules "attr"
                                                                attr := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "name" (24, 13)
                                                  } := lexemes "}"
                                                    } "}" (24, 17)
                                              OR_KW := lexemes "OR_KW"
                                                OR_KW "or" (24, 19)
                                              expr_select := rules "expr_simple" "." "attrpath"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "cpu" (24, 22)
                                                . := lexemes "."
                                                  . "." (24, 25)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "name" (24, 26)
                                ; := lexemes ";"
                                  ; ";" (24, 30)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "vendor_" (25, 5)
                              = := lexemes "="
                                = "=" (25, 13)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple" "." "attrpath" "OR_KW" "expr_select"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "platform" (25, 15)
                                          . := lexemes "."
                                            . "." (25, 23)
                                          attrpath := rules "attrpath" "." "attr"
                                            attrpath := rules "attrpath" "." "attr"
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "rustc" (25, 24)
                                              . := lexemes "."
                                                . "." (25, 29)
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "platform" (25, 30)
                                            . := lexemes "."
                                              . "." (25, 38)
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "vendor" (25, 39)
                                          OR_KW := lexemes "OR_KW"
                                            OR_KW "or" (25, 46)
                                          expr_select := rules "expr_simple" "." "attrpath" "OR_KW" "expr_select"
                                            expr_simple := rules "{" "binds" "}"
                                              { := lexemes "{"
                                                { "{" (25, 49)
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "string_attr"
                                                  string_attr := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (26, 7)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "w64" (26, 8)
                                                    " := lexemes "\""
                                                      " "\"" (26, 11)
                                                = := lexemes "="
                                                  = "=" (26, 13)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (26, 15)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "pc" (26, 16)
                                                              " := lexemes "\""
                                                                " "\"" (26, 18)
                                                ; := lexemes ";"
                                                  ; ";" (26, 19)
                                              } := lexemes "}"
                                                } "}" (27, 5)
                                            . := lexemes "."
                                              . "." (27, 6)
                                            attrpath := rules "string_attr"
                                              string_attr := rules "DOLLAR_CURLY" "expr" "}"
                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                  DOLLAR_CURLY "${" (27, 7)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "vendor" (27, 9)
                                                            . := lexemes "."
                                                              . "." (27, 15)
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "name" (27, 16)
                                                } := lexemes "}"
                                                  } "}" (27, 20)
                                            OR_KW := lexemes "OR_KW"
                                              OR_KW "or" (27, 22)
                                            expr_select := rules "expr_simple" "." "attrpath"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "vendor" (27, 25)
                                              . := lexemes "."
                                                . "." (27, 31)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "name" (27, 32)
                              ; := lexemes ";"
                                ; ";" (27, 36)
                            IN := lexemes "IN"
                              IN "in" (28, 3)
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple" "." "attrpath" "OR_KW" "expr_select"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "platform" (28, 6)
                                      . := lexemes "."
                                        . "." (28, 14)
                                      attrpath := rules "attrpath" "." "attr"
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "rustc" (28, 15)
                                        . := lexemes "."
                                          . "." (28, 20)
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "config" (28, 21)
                                      OR_KW := lexemes "OR_KW"
                                        OR_KW "or" (29, 5)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (29, 8)
                                          string_parts := rules "string_parts_interpolated"
                                            string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                              string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                  string_parts_interpolated := rules "string_parts_interpolated" "DOLLAR_CURLY" "expr" "}"
                                                    string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                      string_parts_interpolated := rules "DOLLAR_CURLY" "expr" "}"
                                                        DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                          DOLLAR_CURLY "${" (29, 9)
                                                        expr := rules "expr_function"
                                                          expr_function := rules "expr_if"
                                                            expr_if := rules "expr_op"
                                                              expr_op := rules "expr_app"
                                                                expr_app := rules "expr_select"
                                                                  expr_select := rules "expr_simple"
                                                                    expr_simple := rules "ID"
                                                                      ID := lexemes "ID"
                                                                        ID "cpu_" (29, 11)
                                                        } := lexemes "}"
                                                          } "}" (29, 15)
                                                      STR := lexemes "STR"
                                                        STR "-" (29, 16)
                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                      DOLLAR_CURLY "${" (29, 17)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "vendor_" (29, 19)
                                                    } := lexemes "}"
                                                      } "}" (29, 26)
                                                  STR := lexemes "STR"
                                                    STR "-" (29, 27)
                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                  DOLLAR_CURLY "${" (29, 28)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "kernel" (29, 30)
                                                            . := lexemes "."
                                                              . "." (29, 36)
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "name" (29, 37)
                                                } := lexemes "}"
                                                  } "}" (29, 41)
                                              DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                DOLLAR_CURLY "${" (29, 42)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_app" "expr_select"
                                                        expr_app := rules "expr_app" "expr_select"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple" "." "attrpath"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "lib" (29, 44)
                                                              . := lexemes "."
                                                                . "." (29, 47)
                                                              attrpath := rules "attr"
                                                                attr := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "optionalString" (29, 48)
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "(" "expr" ")"
                                                              ( := lexemes "("
                                                                ( "(" (29, 63)
                                                              expr := rules "expr_function"
                                                                expr_function := rules "expr_if"
                                                                  expr_if := rules "expr_op"
                                                                    expr_op := rules "expr_op" "NEQ" "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "abi" (29, 64)
                                                                            . := lexemes "."
                                                                              . "." (29, 67)
                                                                            attrpath := rules "attr"
                                                                              attr := rules "ID"
                                                                                ID := lexemes "ID"
                                                                                  ID "name" (29, 68)
                                                                      NEQ := lexemes "NEQ"
                                                                        NEQ "!=" (29, 73)
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple"
                                                                            expr_simple := rules "\"" "string_parts" "\""
                                                                              " := lexemes "\""
                                                                                " "\"" (29, 76)
                                                                              string_parts := rules "STR"
                                                                                STR := lexemes "STR"
                                                                                  STR "unknown" (29, 77)
                                                                              " := lexemes "\""
                                                                                " "\"" (29, 84)
                                                              ) := lexemes ")"
                                                                ) ")" (29, 85)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (29, 87)
                                                            string_parts := rules "string_parts_interpolated"
                                                              string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                STR := lexemes "STR"
                                                                  STR "-" (29, 88)
                                                                DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                  DOLLAR_CURLY "${" (29, 89)
                                                                expr := rules "expr_function"
                                                                  expr_function := rules "expr_if"
                                                                    expr_if := rules "expr_op"
                                                                      expr_op := rules "expr_app"
                                                                        expr_app := rules "expr_select"
                                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                                            expr_simple := rules "ID"
                                                                              ID := lexemes "ID"
                                                                                ID "abi" (29, 91)
                                                                            . := lexemes "."
                                                                              . "." (29, 94)
                                                                            attrpath := rules "attr"
                                                                              attr := rules "ID"
                                                                                ID := lexemes "ID"
                                                                                  ID "name" (29, 95)
                                                                } := lexemes "}"
                                                                  } "}" (29, 99)
                                                            " := lexemes "\""
                                                              " "\"" (29, 100)
                                              } := lexemes "}"
                                                } "}" (29, 101)
                                          " := lexemes "\""
                                            " "\"" (29, 102)
                      ; := lexemes ";"
                        ; ";" (29, 103)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "toRustTargetSpec" (33, 3)
                    = := lexemes "="
                      = "=" (33, 20)
                    expr := rules "expr_function"
                      expr_function := rules "ID" ":" "expr_function"
                        ID := lexemes "ID"
                          ID "platform" (33, 22)
                        : := lexemes ":"
                          : ":" (33, 30)
                        expr_function := rules "expr_if"
                          expr_if := rules "IF" "expr" "THEN" "expr" "ELSE" "expr"
                            IF := lexemes "IF"
                              IF "if" (34, 5)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_op" "?" "attrpath"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "(" "expr" ")"
                                            ( := lexemes "("
                                              ( "(" (34, 8)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath" "OR_KW" "expr_select"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "platform" (34, 9)
                                                        . := lexemes "."
                                                          . "." (34, 17)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "rustc" (34, 18)
                                                        OR_KW := lexemes "OR_KW"
                                                          OR_KW "or" (34, 24)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "{" "binds" "}"
                                                            { := lexemes "{"
                                                              { "{" (34, 27)
                                                            binds := rules 
                                                            } := lexemes "}"
                                                              } "}" (34, 28)
                                            ) := lexemes ")"
                                              ) ")" (34, 29)
                                    ? := lexemes "?"
                                      ? "?" (34, 31)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "platform" (34, 33)
                            THEN := lexemes "THEN"
                              THEN "then" (35, 5)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple" "." "attrpath"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "builtins" (35, 10)
                                            . := lexemes "."
                                              . "." (35, 18)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "toFile" (35, 19)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "(" "expr" ")"
                                            ( := lexemes "("
                                              ( "(" (35, 26)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_op" "+" "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_app" "expr_select"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "toRustTarget" (35, 27)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "platform" (35, 40)
                                                    + := lexemes "+"
                                                      + "+" (35, 49)
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (35, 51)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR ".json" (35, 52)
                                                            " := lexemes "\""
                                                              " "\"" (35, 57)
                                            ) := lexemes ")"
                                              ) ")" (35, 58)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "(" "expr" ")"
                                          ( := lexemes "("
                                            ( "(" (35, 60)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_app" "expr_select"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple" "." "attrpath"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "builtins" (35, 61)
                                                        . := lexemes "."
                                                          . "." (35, 69)
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "toJSON" (35, 70)
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "platform" (35, 77)
                                                      . := lexemes "."
                                                        . "." (35, 85)
                                                      attrpath := rules "attrpath" "." "attr"
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "rustc" (35, 86)
                                                        . := lexemes "."
                                                          . "." (35, 91)
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "platform" (35, 92)
                                          ) := lexemes ")"
                                            ) ")" (35, 100)
                            ELSE := lexemes "ELSE"
                              ELSE "else" (36, 5)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "toRustTarget" (36, 10)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "platform" (36, 23)
                    ; := lexemes ";"
                      ; ";" (36, 31)
                  } := lexemes "}"
                    } "}" (37, 1)