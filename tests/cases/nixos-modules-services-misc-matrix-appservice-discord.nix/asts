---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "dataDir",
        position: (6, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "/var/lib/matrix-appservice-discord",
       },
      ],
      position: (6, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "registrationFile",
        position: (7, 3),
       },
      ],
     },
     String {
      parts: [
       Expression {
        expression: Variable {
         identifier: "dataDir",
         position: (7, 25),
        },
       },
       Raw {
        content: "/discord-registration.yaml",
       },
      ],
      position: (7, 22),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "appDir",
        position: (8, 3),
       },
      ],
     },
     String {
      parts: [
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (8, 15),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "matrix-appservice-discord",
            position: (8, 20),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "/",
       },
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (8, 49),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "matrix-appservice-discord",
            position: (8, 54),
           },
           Raw {
            content: "passthru",
            position: (8, 80),
           },
           Raw {
            content: "nodeAppDir",
            position: (8, 89),
           },
          ],
         },
         default: None,
        },
       },
      ],
      position: (8, 12),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (9, 16),
        },
        Raw {
         content: "matrix-appservice-discord",
         position: (9, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "opt",
        position: (10, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "options",
       position: (10, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (10, 17),
        },
        Raw {
         content: "matrix-appservice-discord",
         position: (10, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "settingsFile",
        position: (12, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (12, 18),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (12, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "matrix-appservice-discord-settings.json",
         },
        ],
        position: (12, 33),
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "builtins",
          position: (12, 76),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "toJSON",
            position: (12, 85),
           },
          ],
         },
         default: None,
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (12, 92),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "settings",
             position: (12, 96),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (15, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (16, 5),
           },
           Raw {
            content: "matrix-appservice-discord",
            position: (16, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (17, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (17, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "a bridge between Matrix and Discord",
                },
               ],
               position: (17, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "settings",
               position: (19, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (19, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (21, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (21, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrs",
                     position: (21, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "apply",
                    position: (22, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "recursiveUpdate",
                   position: (22, 17),
                  },
                  arguments: [
                   Variable {
                    identifier: "default",
                    position: (22, 33),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (23, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (24, 11),
                      },
                     ],
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "filename",
                          position: (25, 13),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Expression {
                          expression: Variable {
                           identifier: "dataDir",
                           position: (25, 27),
                          },
                         },
                         Raw {
                          content: "/discord.db",
                         },
                        ],
                        position: (25, 24),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (24, 22),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "auth",
                       position: (30, 11),
                      },
                     ],
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "clientID",
                          position: (31, 13),
                         },
                        ],
                       },
                       String {
                        parts: [],
                        position: (31, 24),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "botToken",
                          position: (32, 13),
                         },
                        ],
                       },
                       String {
                        parts: [],
                        position: (32, 24),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (30, 18),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (23, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (35, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (35, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  bridge = {\n    domain = \"public-domain.tld\";\n    homeserverUrl = \"http://public-domain.tld:8008\";\n  };\n}\n",
                     },
                    ],
                    position: (35, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (43, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "<filename>config.yaml</filename> configuration as a Nix attribute set.\n</para>\n\n<para>\nConfiguration options should match those described in\n<link xlink:href=\"https://github.com/Half-Shot/matrix-appservice-discord/blob/master/config/config.sample.yaml\">\nconfig.sample.yaml</link>.\n</para>\n\n<para>\n<option>config.bridge.domain</option> and <option>config.bridge.homeserverUrl</option>\nshould be set to match the public host name of the Matrix homeserver for webhooks and avatars to work.\n</para>\n\n<para>\nSecret tokens should be specified using <option>environmentFile</option>\ninstead of this world-readable attribute set.\n",
                   },
                  ],
                  position: (43, 23),
                 },
                ),
               ],
               recursive: true,
               position: (19, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "environmentFile",
               position: (64, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (64, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (65, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (65, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (65, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (65, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (65, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (66, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (66, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (67, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "File containing environment variables to be passed to the matrix-appservice-discord service,\nin which secret tokens can be specified securely by defining values for\n<literal>APPSERVICE_DISCORD_AUTH_CLIENT_I_D</literal> and\n<literal>APPSERVICE_DISCORD_AUTH_BOT_TOKEN</literal>.\n",
                   },
                  ],
                  position: (67, 23),
                 },
                ),
               ],
               recursive: false,
               position: (64, 34),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "url",
               position: (75, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (75, 13),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (76, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (76, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (77, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "http://localhost:",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (77, 39),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (77, 48),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "port",
                          position: (77, 52),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                  ],
                  position: (77, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (78, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (78, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"http://localhost:",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{toString config.",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "opt",
                        position: (78, 83),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "port",
                          position: (78, 87),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "}\"",
                     },
                    ],
                    position: (78, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (79, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The URL where the application service is listening for HS requests.\n",
                   },
                  ],
                  position: (79, 23),
                 },
                ),
               ],
               recursive: false,
               position: (75, 22),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "port",
               position: (84, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (84, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (85, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (85, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "port",
                     position: (85, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (86, 9),
                   },
                  ],
                 },
                 Int {
                  value: 9005,
                  position: (86, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (87, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Port number on which the bridge should listen for internal communication with the Matrix homeserver.\n",
                   },
                  ],
                  position: (87, 23),
                 },
                ),
               ],
               recursive: false,
               position: (84, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "localpart",
               position: (92, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (92, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (93, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (93, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (93, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (93, 35),
                    },
                   ],
                  },
                  position: (93, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (94, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (94, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (95, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The user_id localpart to assign to the AS.\n",
                   },
                  ],
                  position: (95, 23),
                 },
                ),
               ],
               recursive: false,
               position: (92, 28),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "serviceDependencies",
               position: (100, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (100, 29),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (101, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (101, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (101, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (101, 35),
                    },
                   ],
                  },
                  position: (101, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (102, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optional",
                   position: (102, 19),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (102, 28),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "services",
                       position: (102, 35),
                      },
                      Raw {
                       content: "matrix-synapse",
                       position: (102, 44),
                      },
                      Raw {
                       content: "enable",
                       position: (102, 59),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "matrix-synapse.service",
                     },
                    ],
                    position: (102, 66),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (103, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (103, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "optional config.services.matrix-synapse.enable \"matrix-synapse.service\"\n",
                     },
                    ],
                    position: (103, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (106, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of Systemd services to require and wait for when starting the application service,\nsuch as the Matrix homeserver if it's running on the same host.\n",
                   },
                  ],
                  position: (106, 23),
                 },
                ),
               ],
               recursive: false,
               position: (100, 38),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (16, 42),
         },
        ),
       ],
       recursive: false,
       position: (15, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (114, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (114, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (114, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (114, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (115, 5),
             },
             Raw {
              content: "services",
              position: (115, 13),
             },
             Raw {
              content: "matrix-appservice-discord",
              position: (115, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (116, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "A bridge between Matrix and Discord.",
                },
               ],
               position: (116, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (118, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (118, 20),
                },
               ],
               position: (118, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wants",
                 position: (119, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "network-online.target",
                    },
                   ],
                   position: (119, 17),
                  },
                 ],
                 position: (119, 15),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (119, 46),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "serviceDependencies",
                    position: (119, 50),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (119, 43),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (120, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "network-online.target",
                    },
                   ],
                   position: (120, 17),
                  },
                 ],
                 position: (120, 15),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (120, 46),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "serviceDependencies",
                    position: (120, 50),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (120, 43),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "preStart",
                 position: (122, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "if [ ! -f ",
                },
                Raw {
                 content: "'",
                },
                Expression {
                 expression: Variable {
                  identifier: "registrationFile",
                  position: (123, 22),
                 },
                },
                Raw {
                 content: "' ]; then\n  ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (124, 13),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "matrix-appservice-discord",
                     position: (124, 18),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/matrix-appservice-discord \\\n    --generate-registration \\\n    --url=",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "escapeShellArg",
                   position: (126, 21),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (126, 36),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "url",
                       position: (126, 40),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " \\\n    ",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (127, 15),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (127, 31),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "localpart",
                         position: (127, 35),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (127, 48),
                     },
                    ],
                    position: (127, 45),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "--localpart=",
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "escapeShellArg",
                        position: (127, 69),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (127, 84),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "localpart",
                            position: (127, 88),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                    ],
                    position: (127, 54),
                   },
                  ],
                 },
                },
                Raw {
                 content: " \\\n    --config=",
                },
                Raw {
                 content: "'",
                },
                Expression {
                 expression: Variable {
                  identifier: "settingsFile",
                  position: (128, 25),
                 },
                },
                Raw {
                 content: "' \\\n    --file=",
                },
                Raw {
                 content: "'",
                },
                Expression {
                 expression: Variable {
                  identifier: "registrationFile",
                  position: (129, 23),
                 },
                },
                Raw {
                 content: "'\nfi\n",
                },
               ],
               position: (122, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (133, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (134, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "simple",
                   },
                  ],
                  position: (134, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (135, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                   },
                  ],
                  position: (135, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectSystem",
                    position: (137, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "strict",
                   },
                  ],
                  position: (137, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectHome",
                    position: (138, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (138, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectKernelTunables",
                    position: (139, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (139, 33),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectKernelModules",
                    position: (140, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (140, 32),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectControlGroups",
                    position: (141, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (141, 32),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DynamicUser",
                    position: (143, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (143, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "PrivateTmp",
                    position: (144, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (144, 22),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "WorkingDirectory",
                    position: (145, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "appDir",
                  position: (145, 28),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StateDirectory",
                    position: (146, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "baseNameOf",
                   position: (146, 26),
                  },
                  arguments: [
                   Variable {
                    identifier: "dataDir",
                    position: (146, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "UMask",
                    position: (147, 9),
                   },
                  ],
                 },
                 Int {
                  value: 27,
                  position: (147, 17),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "EnvironmentFile",
                    position: (148, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (148, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "environmentFile",
                     position: (148, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (150, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (151, 13),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "matrix-appservice-discord",
                        position: (151, 18),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/matrix-appservice-discord \\\n  --file=",
                   },
                   Raw {
                    content: "'",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "registrationFile",
                     position: (152, 23),
                    },
                   },
                   Raw {
                    content: "' \\\n  --config=",
                   },
                   Raw {
                    content: "'",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "settingsFile",
                     position: (153, 25),
                    },
                   },
                   Raw {
                    content: "' \\\n  --port=",
                   },
                   Raw {
                    content: "'",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (154, 23),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (154, 32),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "port",
                          position: (154, 36),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "'\n",
                   },
                  ],
                  position: (150, 21),
                 },
                ),
               ],
               recursive: false,
               position: (133, 23),
              },
             ),
            ],
            recursive: false,
            position: (115, 50),
           },
          ),
         ],
         recursive: false,
         position: (114, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (160, 3),
        },
        Raw {
         content: "maintainers",
         position: (160, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (160, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "pacien",
          position: (160, 42),
         },
        ],
        position: (160, 40),
       },
       position: (160, 22),
      },
     ),
    ],
    recursive: false,
    position: (14, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}