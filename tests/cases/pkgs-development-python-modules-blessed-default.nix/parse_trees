---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "buildPythonPackage" (1, 8)
          , := lexemes ","
            , "," (1, 26)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchPypi" (1, 28)
            , := lexemes ","
              , "," (1, 37)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "six" (1, 39)
              , := lexemes ","
                , "," (2, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "wcwidth" (2, 3)
                , := lexemes ","
                  , "," (2, 10)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "pytest" (2, 12)
                  , := lexemes ","
                    , "," (2, 18)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "mock" (2, 20)
                    , := lexemes ","
                      , "," (2, 24)
                    formals := rules "formal"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "glibcLocales" (2, 26)
      } := lexemes "}"
        } "}" (3, 1)
      : := lexemes ":"
        : ":" (3, 2)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildPythonPackage" (5, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (5, 20)
                  { := lexemes "{"
                    { "{" (5, 24)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules 
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "pname" (6, 3)
                                = := lexemes "="
                                  = "=" (6, 9)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (6, 11)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "blessed" (6, 12)
                                              " := lexemes "\""
                                                " "\"" (6, 19)
                                ; := lexemes ";"
                                  ; ";" (6, 20)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "version" (7, 3)
                              = := lexemes "="
                                = "=" (7, 11)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (7, 13)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "1.19.0" (7, 14)
                                            " := lexemes "\""
                                              " "\"" (7, 20)
                              ; := lexemes ";"
                                ; ";" (7, 21)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "src" (9, 3)
                            = := lexemes "="
                              = "=" (9, 7)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "fetchPypi" (9, 9)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "{" "binds" "}"
                                          { := lexemes "{"
                                            { "{" (9, 19)
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "INHERIT" "attrs" ";"
                                              binds := rules 
                                              INHERIT := lexemes "INHERIT"
                                                INHERIT "inherit" (10, 5)
                                              attrs := rules "attrs" "attr"
                                                attrs := rules "attrs" "attr"
                                                  attrs := rules 
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "pname" (10, 13)
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "version" (10, 19)
                                              ; := lexemes ";"
                                                ; ";" (10, 26)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "sha256" (11, 5)
                                            = := lexemes "="
                                              = "=" (11, 12)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (11, 14)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "4db0f94e5761aea330b528e84a250027ffe996b5a94bf03e502600c9a5ad7a61" (11, 15)
                                                          " := lexemes "\""
                                                            " "\"" (11, 79)
                                            ; := lexemes ";"
                                              ; ";" (11, 80)
                                          } := lexemes "}"
                                            } "}" (12, 3)
                            ; := lexemes ";"
                              ; ";" (12, 4)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "checkInputs" (14, 3)
                          = := lexemes "="
                            = "=" (14, 15)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (14, 17)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules 
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "pytest" (14, 19)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "mock" (14, 26)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "glibcLocales" (14, 31)
                                        ] := lexemes "]"
                                          ] "]" (14, 44)
                          ; := lexemes ";"
                            ; ";" (14, 45)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "checkPhase" (17, 3)
                        = := lexemes "="
                          = "=" (17, 14)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (17, 16)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    rm tox.ini\n    pytest\n  " (18, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (20, 3)
                        ; := lexemes ";"
                          ; ";" (20, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "propagatedBuildInputs" (22, 3)
                      = := lexemes "="
                        = "=" (22, 25)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "[" "expr_list" "]"
                                    [ := lexemes "["
                                      [ "[" (22, 27)
                                    expr_list := rules "expr_list" "expr_select"
                                      expr_list := rules "expr_list" "expr_select"
                                        expr_list := rules 
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "wcwidth" (22, 29)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "six" (22, 37)
                                    ] := lexemes "]"
                                      ] "]" (22, 41)
                      ; := lexemes ";"
                        ; ";" (22, 42)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (24, 3)
                    = := lexemes "="
                      = "=" (24, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (24, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (24, 15)
                        ; := lexemes ";"
                          ; ";" (24, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (24, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (25, 5)
                                            = := lexemes "="
                                              = "=" (25, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (25, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "https://github.com/jquast/blessed" (25, 17)
                                                          " := lexemes "\""
                                                            " "\"" (25, 50)
                                            ; := lexemes ";"
                                              ; ";" (25, 51)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "description" (26, 5)
                                          = := lexemes "="
                                            = "=" (26, 17)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (26, 19)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "A thin, practical wrapper around terminal capabilities in Python." (26, 20)
                                                        " := lexemes "\""
                                                          " "\"" (26, 85)
                                          ; := lexemes ";"
                                            ; ";" (26, 86)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "maintainers" (27, 5)
                                        = := lexemes "="
                                          = "=" (27, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "WITH" "expr" ";" "expr_function"
                                            WITH := lexemes "WITH"
                                              WITH "with" (27, 19)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "maintainers" (27, 24)
                                            ; := lexemes ";"
                                              ; ";" (27, 35)
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "[" "expr_list" "]"
                                                        [ := lexemes "["
                                                          [ "[" (27, 37)
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "eqyiel" (27, 39)
                                                        ] := lexemes "]"
                                                          ] "]" (27, 46)
                                        ; := lexemes ";"
                                          ; ";" (27, 47)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "license" (28, 5)
                                      = := lexemes "="
                                        = "=" (28, 13)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "licenses" (28, 15)
                                                  . := lexemes "."
                                                    . "." (28, 23)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "mit" (28, 24)
                                      ; := lexemes ";"
                                        ; ";" (28, 27)
                                    } := lexemes "}"
                                      } "}" (29, 3)
                    ; := lexemes ";"
                      ; ";" (29, 4)
                  } := lexemes "}"
                    } "}" (30, 1)