---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: Map {
  bindings: [
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "assertMsg",
       position: (19, 3),
      },
     ],
    },
    to: Function {
     argument: Simple {
      identifier: "pred",
     },
     definition: Function {
      argument: Simple {
       identifier: "msg",
      },
      definition: BinaryOperation {
       operator: LogicalOr,
       operands: [
        Variable {
         identifier: "pred",
         position: (20, 5),
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "builtins",
           position: (20, 13),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "throw",
             position: (20, 22),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "msg",
           position: (20, 28),
          },
         ],
        },
       ],
       position: (20, 10),
      },
      position: (19, 21),
     },
     position: (19, 15),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "assertOneOf",
       position: (36, 3),
      },
     ],
    },
    to: Function {
     argument: Simple {
      identifier: "name",
     },
     definition: Function {
      argument: Simple {
       identifier: "val",
      },
      definition: Function {
       argument: Simple {
        identifier: "xs",
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "assertMsg",
         position: (36, 32),
        },
        arguments: [
         FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (37, 6),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "elem",
              position: (37, 10),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Variable {
            identifier: "val",
            position: (37, 15),
           },
           Variable {
            identifier: "xs",
            position: (37, 19),
           },
          ],
         },
         String {
          parts: [
           Expression {
            expression: Variable {
             identifier: "name",
             position: (38, 8),
            },
           },
           Raw {
            content: " must be one of ",
            position: (38, 13),
           },
           Expression {
            expression: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (39, 7),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "generators",
                 position: (39, 11),
                },
                Raw {
                 content: "toPretty",
                 position: (39, 22),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [],
               recursive: false,
               position: (39, 31),
              },
              Variable {
               identifier: "xs",
               position: (39, 34),
              },
             ],
            },
           },
           Raw {
            content: ", but is: ",
            position: (39, 37),
           },
           Expression {
            expression: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (40, 9),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "generators",
                 position: (40, 13),
                },
                Raw {
                 content: "toPretty",
                 position: (40, 24),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [],
               recursive: false,
               position: (40, 33),
              },
              Variable {
               identifier: "val",
               position: (40, 36),
              },
             ],
            },
           },
          ],
          position: (38, 5),
         },
        ],
       },
       position: (36, 28),
      },
      position: (36, 23),
     },
     position: (36, 17),
    },
   },
  ],
  recursive: true,
  position: (3, 1),
 },
 position: (1, 1),
}