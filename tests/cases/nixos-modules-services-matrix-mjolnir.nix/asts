---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (5, 16),
        },
        Raw {
         content: "mjolnir",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "yamlConfig",
        position: (7, 3),
       },
      ],
     },
     Map {
      bindings: [
       Inherit(
        Some(
         Variable {
          identifier: "cfg",
          position: (8, 14),
         },
        ),
        [
         Raw {
          content: "dataPath",
          position: (8, 19),
         },
         Raw {
          content: "managementRoom",
          position: (8, 28),
         },
         Raw {
          content: "protectedRooms",
          position: (8, 43),
         },
        ],
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "accessToken",
           position: (10, 5),
          },
         ],
        },
        String {
         parts: [
          Raw {
           content: "@ACCESS_TOKEN@",
           position: (10, 20),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "homeserverUrl",
           position: (11, 5),
          },
         ],
        },
        IfThenElse {
         predicate: PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (12, 10),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "pantalaimon",
             position: (12, 14),
            },
            Raw {
             content: "enable",
             position: (12, 26),
            },
           ],
          },
          default: None,
         },
         then: String {
          parts: [
           Raw {
            content: "http://",
            position: (13, 10),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (13, 19),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "pantalaimon",
                position: (13, 23),
               },
               Raw {
                content: "options",
                position: (13, 35),
               },
               Raw {
                content: "listenAddress",
                position: (13, 43),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: ":",
            position: (13, 57),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (13, 60),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (13, 69),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "pantalaimon",
                  position: (13, 73),
                 },
                 Raw {
                  content: "options",
                  position: (13, 85),
                 },
                 Raw {
                  content: "listenPort",
                  position: (13, 93),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
          ],
         },
         else_: PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (15, 9),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "homeserverUrl",
             position: (15, 13),
            },
           ],
          },
          default: None,
         },
         position: (12, 7),
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "rawHomeserverUrl",
           position: (17, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (17, 24),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "homeserverUrl",
            position: (17, 28),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "pantalaimon",
           position: (19, 5),
          },
         ],
        },
        Map {
         bindings: [
          Inherit(
           Some(
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (20, 16),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "pantalaimon",
                position: (20, 20),
               },
              ],
             },
             default: None,
            },
           ),
           [
            Raw {
             content: "username",
             position: (20, 33),
            },
           ],
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "use",
              position: (22, 7),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (22, 13),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "pantalaimon",
               position: (22, 17),
              },
              Raw {
               content: "enable",
               position: (22, 29),
              },
             ],
            },
            default: None,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "password",
              position: (23, 7),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "@PANTALAIMON_PASSWORD@",
              position: (23, 19),
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "moduleConfigFile",
        position: (27, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (27, 22),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (27, 27),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "module-config.yaml",
          position: (27, 38),
         },
        ],
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "generators",
          position: (28, 5),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "toYAML",
            position: (28, 16),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Map {
          bindings: [],
          recursive: false,
         },
         FunctionApplication {
          function: Variable {
           identifier: "filterAttrs",
           position: (28, 28),
          },
          arguments: [
           Function {
            argument: Some(
             "_",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Function {
             argument: Some(
              "v",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: BinaryOperation {
              operator: NotEqualTo,
              operands: [
               Variable {
                identifier: "v",
                position: (28, 47),
               },
               Variable {
                identifier: "null",
                position: (28, 52),
               },
              ],
              position: (28, 49),
             },
             position: (28, 44),
            },
            position: (28, 41),
           },
           FunctionApplication {
            function: Variable {
             identifier: "fold",
             position: (29, 8),
            },
            arguments: [
             Variable {
              identifier: "recursiveUpdate",
              position: (29, 13),
             },
             Map {
              bindings: [],
              recursive: false,
             },
             List {
              elements: [
               Variable {
                identifier: "yamlConfig",
                position: (29, 35),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (29, 46),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "settings",
                   position: (29, 50),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ],
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configFiles",
        position: (32, 3),
       },
      ],
     },
     List {
      elements: [
       String {
        parts: [
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (33, 8),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "mjolnir",
              position: (33, 13),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/share/mjolnir/config/default.yaml",
          position: (33, 21),
         },
        ],
       },
       Variable {
        identifier: "moduleConfigFile",
        position: (34, 5),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "generateConfig",
        position: (39, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (39, 20),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeShellScript",
          position: (39, 25),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "mjolnir-generate-config",
          position: (39, 43),
         },
        ],
       },
       LetIn {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "yqEvalStr",
             position: (41, 7),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "concatImapStringsSep",
            position: (41, 19),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: " * ",
               position: (41, 41),
              },
             ],
            },
            Function {
             argument: Some(
              "pos",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Function {
              argument: Some(
               "_",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: String {
               parts: [
                Raw {
                 content: "select(fileIndex == ",
                 position: (41, 56),
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (41, 78),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: Subtraction,
                    operands: [
                     Variable {
                      identifier: "pos",
                      position: (41, 88),
                     },
                     Int {
                      value: 1,
                      position: (41, 94),
                     },
                    ],
                    position: (41, 92),
                   },
                  ],
                 },
                },
                Raw {
                 content: ")",
                 position: (41, 97),
                },
               ],
              },
              position: (41, 52),
             },
             position: (41, 47),
            },
            Variable {
             identifier: "configFiles",
             position: (41, 101),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "yqEvalArgs",
             position: (42, 7),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (42, 20),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: " ",
               position: (42, 38),
              },
             ],
            },
            Variable {
             identifier: "configFiles",
             position: (42, 41),
            },
           ],
          },
         ),
        ],
        target: String {
         parts: [
          Raw {
           content: "set -euo pipefail\n\numask 077\n\n# mjolnir will try to load a config from \"./config/default.yaml\" in the working directory\n# -> let's place the generated config there\nmkdir -p ",
           position: (45, 1),
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (51, 18),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "dataPath",
               position: (51, 22),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "/config\n\n# merge all config files into one, overriding settings of the previous one with the next config\n# e.g. \"eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' filea.yaml fileb.yaml\" will merge filea.yaml with fileb.yaml\n",
           position: (51, 31),
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (55, 9),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "yq-go",
               position: (55, 14),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "/bin/yq eval-all -P ",
           position: (55, 20),
          },
          Raw {
           content: "'",
           position: (55, 40),
          },
          Expression {
           expression: Variable {
            identifier: "yqEvalStr",
            position: (55, 43),
           },
          },
          Raw {
           content: "' ",
           position: (55, 53),
          },
          Expression {
           expression: Variable {
            identifier: "yqEvalArgs",
            position: (55, 57),
           },
          },
          Raw {
           content: " > ",
           position: (55, 68),
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (55, 73),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "dataPath",
               position: (55, 77),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "/config/default.yaml\n\n",
           position: (55, 86),
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (57, 9),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (57, 25),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "accessTokenFile",
                   position: (57, 29),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (57, 48),
               },
              ],
              position: (57, 45),
             },
             String {
              parts: [
               Raw {
                content: "",
                position: (58, 1),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (58, 11),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "replace-secret",
                    position: (58, 16),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "/bin/replace-secret '@ACCESS_TOKEN@' ",
                position: (58, 31),
               },
               Raw {
                content: "'",
                position: (58, 68),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (58, 71),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "accessTokenFile",
                    position: (58, 75),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' ",
                position: (58, 91),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (58, 95),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "dataPath",
                    position: (58, 99),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "/config/default.yaml\n",
                position: (58, 108),
               },
              ],
             },
            ],
           },
          },
          Raw {
           content: "\n",
           position: (59, 10),
          },
          Expression {
           expression: FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (60, 9),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (60, 25),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "pantalaimon",
                   position: (60, 29),
                  },
                  Raw {
                   content: "passwordFile",
                   position: (60, 41),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (60, 57),
               },
              ],
              position: (60, 54),
             },
             String {
              parts: [
               Raw {
                content: "",
                position: (61, 1),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (61, 11),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "replace-secret",
                    position: (61, 16),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "/bin/replace-secret '@PANTALAIMON_PASSWORD@' ",
                position: (61, 31),
               },
               Raw {
                content: "'",
                position: (61, 76),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (61, 79),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "pantalaimon",
                    position: (61, 83),
                   },
                   Raw {
                    content: "passwordFile",
                    position: (61, 95),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' ",
                position: (61, 108),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (61, 112),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "dataPath",
                    position: (61, 116),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "/config/default.yaml\n",
                position: (61, 125),
               },
              ],
             },
            ],
           },
          },
          Raw {
           content: "\n",
           position: (62, 10),
          },
         ],
        },
        position: (40, 5),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (67, 3),
        },
        Raw {
         content: "services",
         position: (67, 11),
        },
        Raw {
         content: "mjolnir",
         position: (67, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (68, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (68, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Mjolnir, a moderation tool for Matrix",
              position: (68, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "homeserverUrl",
            position: (70, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (70, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (71, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (71, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (71, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (72, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "https://matrix.org",
                 position: (72, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (73, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Where the homeserver is located (client-server URL).\n\nIf <literal>pantalaimon.enable</literal> is <literal>true</literal>, this option will become the homeserver to which <literal>pantalaimon</literal> connects.\nThe listen address of <literal>pantalaimon</literal> will then become the <literal>homeserverUrl</literal> of <literal>mjolnir</literal>.\n",
                 position: (74, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "accessTokenFile",
            position: (81, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (81, 23),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (82, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (82, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (82, 26),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (82, 33),
                 },
                ],
               },
               position: (82, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (83, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (83, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (84, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "File containing the matrix access token for the <literal>mjolnir</literal> user.\n",
                 position: (85, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "pantalaimon",
            position: (89, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (89, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (90, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "<literal>pantalaimon</literal> options (enables E2E Encryption support).\n\nThis will create a <literal>pantalaimon</literal> instance with the name \"mjolnir\".\n",
                 position: (91, 1),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (95, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (96, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (96, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "submodule",
                   position: (96, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "options",
                      position: (97, 9),
                     },
                    ],
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "enable",
                         position: (98, 11),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkEnableOption",
                        position: (98, 20),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "If true, accessToken is ignored and the username/password below will be\nused instead. The access token of the bot will be stored in the dataPath.\n",
                           position: (99, 1),
                          },
                         ],
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "username",
                         position: (103, 11),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (103, 22),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "type",
                              position: (104, 13),
                             },
                            ],
                           },
                           PropertyAccess {
                            expression: Variable {
                             identifier: "types",
                             position: (104, 20),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "str",
                               position: (104, 26),
                              },
                             ],
                            },
                            default: None,
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "description",
                              position: (105, 13),
                             },
                            ],
                           },
                           String {
                            parts: [
                             Raw {
                              content: "The username to login with.",
                              position: (105, 28),
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "passwordFile",
                         position: (108, 11),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (108, 26),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "type",
                              position: (109, 13),
                             },
                            ],
                           },
                           With {
                            expression: Variable {
                             identifier: "types",
                             position: (109, 25),
                            },
                            target: FunctionApplication {
                             function: Variable {
                              identifier: "nullOr",
                              position: (109, 32),
                             },
                             arguments: [
                              Variable {
                               identifier: "path",
                               position: (109, 39),
                              },
                             ],
                            },
                            position: (109, 20),
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "default",
                              position: (110, 13),
                             },
                            ],
                           },
                           Variable {
                            identifier: "null",
                            position: (110, 23),
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "description",
                              position: (111, 13),
                             },
                            ],
                           },
                           String {
                            parts: [
                             Raw {
                              content: "File containing the matrix password for the <literal>mjolnir</literal> user.\n",
                              position: (112, 1),
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "options",
                         position: (116, 11),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkOption",
                        position: (116, 21),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "type",
                              position: (117, 13),
                             },
                            ],
                           },
                           FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (117, 20),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "submodule",
                                position: (117, 26),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             FunctionApplication {
                              function: Variable {
                               identifier: "import",
                               position: (117, 37),
                              },
                              arguments: [
                               Path {
                                parts: [
                                 Raw {
                                  content: "./pantalaimon-options.nix",
                                  position: (117, 44),
                                 },
                                ],
                               },
                              ],
                             },
                            ],
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "default",
                              position: (118, 13),
                             },
                            ],
                           },
                           Map {
                            bindings: [],
                            recursive: false,
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "description",
                              position: (119, 13),
                             },
                            ],
                           },
                           String {
                            parts: [
                             Raw {
                              content: "passthrough additional options to the <literal>pantalaimon</literal> service.\n",
                              position: (120, 1),
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "dataPath",
            position: (127, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (127, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (128, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (128, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "path",
                  position: (128, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (129, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/var/lib/mjolnir",
                 position: (129, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (130, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The directory the bot should store various bits of information in.\n",
                 position: (131, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "managementRoom",
            position: (135, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (135, 22),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (136, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (136, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (136, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (137, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "#moderators:example.org",
                 position: (137, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (138, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The room ID where people can use the bot. The bot has no access controls, so\nanyone in this room can use the bot - secure your room!\nThis should be a room alias or room ID - not a matrix.to URL.\nNote: <literal>mjolnir</literal> is fairly verbose - expect a lot of messages from it.\n",
                 position: (139, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "protectedRooms",
            position: (146, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (146, 22),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (147, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (147, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (147, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (147, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (147, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (148, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (149, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (149, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[\n  \"https://matrix.to/#/#yourroom:example.org\"\n  \"https://matrix.to/#/#anotherroom:example.org\"\n]\n",
                   position: (150, 1),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (155, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "A list of rooms to protect (matrix.to URLs).\n",
                 position: (156, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "settings",
            position: (160, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (160, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (161, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (162, 7),
                },
               ],
              },
              PropertyAccess {
               expression: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (162, 15),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "formats",
                    position: (162, 20),
                   },
                   Raw {
                    content: "yaml",
                    position: (162, 28),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ],
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (162, 38),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (163, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (163, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  autojoinOnlyIfManager = true;\n  automaticallyRedactForReasons = [ \"spam\" \"advertising\" ];\n}\n",
                   position: (164, 1),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (169, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional settings (see <link xlink:href=\"https://github.com/matrix-org/mjolnir/blob/main/config/default.yaml\">mjolnir default config</link> for available settings). These settings will override settings made by the module config.\n",
                 position: (170, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (175, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (175, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (175, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (175, 24),
           },
           Raw {
            content: "mjolnir",
            position: (175, 33),
           },
           Raw {
            content: "enable",
            position: (175, 41),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (176, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (178, 9),
                  },
                 ],
                },
                UnaryOperation {
                 operator: Not,
                 operand: BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (178, 23),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "pantalaimon",
                       position: (178, 27),
                      },
                      Raw {
                       content: "enable",
                       position: (178, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (178, 49),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "pantalaimon",
                         position: (178, 53),
                        },
                        Raw {
                         content: "passwordFile",
                         position: (178, 65),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (178, 81),
                     },
                    ],
                    position: (178, 78),
                   },
                  ],
                  position: (178, 46),
                 },
                 position: (178, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (179, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Specify pantalaimon.passwordFile",
                   position: (179, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (182, 9),
                  },
                 ],
                },
                UnaryOperation {
                 operator: Not,
                 operand: BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (182, 23),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "pantalaimon",
                       position: (182, 27),
                      },
                      Raw {
                       content: "enable",
                       position: (182, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (182, 49),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "accessTokenFile",
                         position: (182, 53),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (182, 72),
                     },
                    ],
                    position: (182, 69),
                   },
                  ],
                  position: (182, 46),
                 },
                 position: (182, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (183, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Do not specify accessTokenFile when using pantalaimon",
                   position: (183, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (186, 9),
                  },
                 ],
                },
                UnaryOperation {
                 operator: Not,
                 operand: BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   UnaryOperation {
                    operator: Not,
                    operand: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (186, 24),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "pantalaimon",
                        position: (186, 28),
                       },
                       Raw {
                        content: "enable",
                        position: (186, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                    position: (186, 23),
                   },
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (186, 50),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "accessTokenFile",
                         position: (186, 54),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (186, 73),
                     },
                    ],
                    position: (186, 70),
                   },
                  ],
                  position: (186, 47),
                 },
                 position: (186, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (187, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Specify accessTokenFile when not using pantalaimon",
                   position: (187, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (191, 5),
             },
             Raw {
              content: "pantalaimon-headless",
              position: (191, 14),
             },
             Raw {
              content: "instances",
              position: (191, 35),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "mjolnir",
                 position: (191, 46),
                },
               ],
              },
             },
            ],
           },
           BinaryOperation {
            operator: Update,
            operands: [
             FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (191, 57),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (191, 62),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "pantalaimon",
                   position: (191, 66),
                  },
                  Raw {
                   content: "enable",
                   position: (191, 78),
                  },
                 ],
                },
                default: None,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "homeserver",
                     position: (193, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (193, 22),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "homeserverUrl",
                      position: (193, 26),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (194, 12),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "pantalaimon",
                 position: (194, 16),
                },
                Raw {
                 content: "options",
                 position: (194, 28),
                },
               ],
              },
              default: None,
             },
            ],
            position: (194, 9),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (196, 5),
             },
             Raw {
              content: "services",
              position: (196, 13),
             },
             Raw {
              content: "mjolnir",
              position: (196, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (197, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "mjolnir - a moderation tool for Matrix",
                 position: (197, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wants",
                 position: (198, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "network-online.target",
                     position: (198, 18),
                    },
                   ],
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optionals",
                  position: (198, 46),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (198, 57),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "pantalaimon",
                      position: (198, 61),
                     },
                     Raw {
                      content: "enable",
                      position: (198, 73),
                     },
                    ],
                   },
                   default: None,
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "pantalaimon-mjolnir.service",
                       position: (198, 84),
                      },
                     ],
                    },
                   ],
                  },
                 ],
                },
               ],
               position: (198, 43),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (199, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "network-online.target",
                     position: (199, 18),
                    },
                   ],
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optionals",
                  position: (199, 46),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (199, 57),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "pantalaimon",
                      position: (199, 61),
                     },
                     Raw {
                      content: "enable",
                      position: (199, 73),
                     },
                    ],
                   },
                   default: None,
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "pantalaimon-mjolnir.service",
                       position: (199, 84),
                      },
                     ],
                    },
                   ],
                  },
                 ],
                },
               ],
               position: (199, 43),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (200, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (200, 21),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (202, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (203, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (203, 25),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mjolnir",
                        position: (203, 30),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/mjolnir",
                    position: (203, 38),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStartPre",
                    position: (204, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   Variable {
                    identifier: "generateConfig",
                    position: (204, 26),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "WorkingDirectory",
                    position: (205, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (205, 28),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "dataPath",
                     position: (205, 32),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StateDirectory",
                    position: (206, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mjolnir",
                    position: (206, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "StateDirectoryMode",
                    position: (207, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0700",
                    position: (207, 31),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectSystem",
                    position: (208, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "strict",
                    position: (208, 26),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ProtectHome",
                    position: (209, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (209, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "PrivateTmp",
                    position: (210, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (210, 22),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "NoNewPrivileges",
                    position: (211, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (211, 27),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "PrivateDevices",
                    position: (212, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (212, 26),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (213, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mjolnir",
                    position: (213, 17),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (214, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "on-failure",
                    position: (214, 20),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (229, 5),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "users",
                 position: (230, 7),
                },
                Raw {
                 content: "mjolnir",
                 position: (230, 13),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "group",
                    position: (231, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mjolnir",
                    position: (231, 18),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "isSystemUser",
                    position: (232, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (232, 24),
                 },
                ),
               ],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "groups",
                 position: (234, 7),
                },
                Raw {
                 content: "mjolnir",
                 position: (234, 14),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
              },
             ),
            ],
            recursive: false,
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (238, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "doc",
            position: (239, 5),
           },
          ],
         },
         Path {
          parts: [
           Raw {
            content: "./mjolnir.xml",
            position: (239, 11),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "maintainers",
            position: (240, 5),
           },
          ],
         },
         With {
          expression: Variable {
           identifier: "maintainers",
           position: (240, 24),
          },
          target: List {
           elements: [
            Variable {
             identifier: "jojosch",
             position: (240, 39),
            },
           ],
          },
          position: (240, 19),
         },
        ),
       ],
       recursive: false,
      },
     ),
    ],
    recursive: false,
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}