---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "boinc",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "allowRemoteGuiRpcFlag",
        position: (7, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "optionalString",
       position: (7, 27),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (7, 42),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "allowRemoteGuiRpc",
           position: (7, 46),
          },
         ],
        },
        default: None,
       },
       String {
        parts: [
         Raw {
          content: "--allow_remote_gui_rpc",
          position: (7, 65),
         },
        ],
        position: (7, 64),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fhsEnv",
        position: (9, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (9, 12),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "buildFHSUserEnv",
          position: (9, 17),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (10, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "boinc-fhs-env",
             position: (10, 13),
            },
           ],
           position: (10, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "targetPkgs",
             position: (11, 5),
            },
           ],
          },
          to: Function {
           argument: Simple {
            identifier: "pkgs'",
           },
           definition: BinaryOperation {
            operator: Concatenation,
            operands: [
             List {
              elements: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (11, 27),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "package",
                   position: (11, 31),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (11, 25),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (11, 44),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "extraEnvPackages",
                 position: (11, 48),
                },
               ],
              },
              default: None,
             },
            ],
            position: (11, 41),
           },
           position: (11, 18),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "runScript",
             position: (12, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "/bin/boinc_client",
             position: (12, 18),
            },
           ],
           position: (12, 17),
          },
         },
        ],
        recursive: false,
        position: (9, 33),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fhsEnvExecutable",
        position: (14, 3),
       },
      ],
     },
     to: String {
      parts: [
       Interpolation {
        expression: Variable {
         identifier: "fhsEnv",
         position: (14, 25),
        },
       },
       Raw {
        content: "/bin/",
        position: (14, 32),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "fhsEnv",
          position: (14, 39),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "name",
            position: (14, 46),
           },
          ],
         },
         default: None,
        },
       },
      ],
      position: (14, 22),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (18, 5),
        },
        Raw {
         content: "services",
         position: (18, 13),
        },
        Raw {
         content: "boinc",
         position: (18, 22),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (19, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (19, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (20, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (20, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (20, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (21, 9),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (21, 19),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (22, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to enable the BOINC distributed computing client. If this\noption is set to true, the boinc_client daemon will be run as a\nbackground service. The boinccmd command can be used to control the\ndaemon.\n",
                 position: (23, 1),
                },
               ],
               position: (22, 23),
              },
             },
            ],
            recursive: false,
            position: (19, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "package",
            position: (30, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (30, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (31, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (31, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (31, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (32, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (32, 19),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "boinc",
                  position: (32, 24),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (33, 9),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (33, 23),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.boinc",
                   position: (33, 42),
                  },
                 ],
                 position: (33, 41),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (34, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Which BOINC package to use.\n",
                 position: (35, 1),
                },
               ],
               position: (34, 23),
              },
             },
            ],
            recursive: false,
            position: (30, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "dataDir",
            position: (39, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (39, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (40, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (40, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (40, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (41, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/var/lib/boinc",
                 position: (41, 20),
                },
               ],
               position: (41, 19),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (42, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The directory in which to store BOINC's configuration and data files.\n",
                 position: (43, 1),
                },
               ],
               position: (42, 23),
              },
             },
            ],
            recursive: false,
            position: (39, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "allowRemoteGuiRpc",
            position: (47, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (47, 27),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (48, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (48, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (48, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (49, 9),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (49, 19),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (50, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "If set to true, any remote host can connect to and control this BOINC\nclient (subject to password authentication). If instead set to false,\nonly the hosts listed in <varname>dataDir</varname>/remote_hosts.cfg will be allowed to\nconnect.\n\nSee also: <link xlink:href=\"http://boinc.berkeley.edu/wiki/Controlling_BOINC_remotely#Remote_access\"/>\n",
                 position: (51, 1),
                },
               ],
               position: (50, 23),
              },
             },
            ],
            recursive: false,
            position: (47, 36),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraEnvPackages",
            position: (60, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (60, 26),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (61, 9),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (61, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (61, 22),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (61, 29),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "package",
                    position: (61, 35),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (62, 9),
                },
               ],
              },
              to: List {
               elements: [],
               position: (62, 19),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (63, 9),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (63, 19),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[ pkgs.virtualbox ]",
                   position: (63, 38),
                  },
                 ],
                 position: (63, 37),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (64, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Additional packages to make available in the environment in which\nBOINC will run. Common choices are:\n<variablelist>\n  <varlistentry>\n    <term><varname>pkgs.virtualbox</varname></term>\n    <listitem><para>\n      The VirtualBox virtual machine framework. Required by some BOINC\n      projects, such as ATLAS@home.\n    </para></listitem>\n  </varlistentry>\n  <varlistentry>\n    <term><varname>pkgs.ocl-icd</varname></term>\n    <listitem><para>\n      OpenCL infrastructure library. Required by BOINC projects that\n      use OpenCL, in addition to a device-specific OpenCL driver.\n    </para></listitem>\n  </varlistentry>\n  <varlistentry>\n    <term><varname>pkgs.linuxPackages.nvidia_x11</varname></term>\n    <listitem><para>\n      Provides CUDA libraries. Required by BOINC projects that use\n      CUDA. Note that this requires an NVIDIA graphics device to be\n      present on the system.\n    </para><para>\n      Also provides OpenCL drivers for NVIDIA GPUs;\n      <varname>pkgs.ocl-icd</varname> is also needed in this case.\n    </para></listitem>\n  </varlistentry>\n</variablelist>\n",
                 position: (65, 1),
                },
               ],
               position: (64, 23),
              },
             },
            ],
            recursive: false,
            position: (60, 35),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (18, 30),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (98, 5),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (98, 14),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (98, 19),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (98, 23),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (99, 7),
             },
             Raw {
              content: "systemPackages",
              position: (99, 19),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (99, 37),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (99, 41),
                },
               ],
              },
              default: None,
             },
            ],
            position: (99, 36),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (101, 7),
             },
             Raw {
              content: "users",
              position: (101, 13),
             },
             Raw {
              content: "boinc",
              position: (101, 19),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (102, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "boinc",
                 position: (102, 18),
                },
               ],
               position: (102, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "createHome",
                 position: (103, 9),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (103, 22),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (104, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "BOINC Client",
                 position: (104, 24),
                },
               ],
               position: (104, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "home",
                 position: (105, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (105, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "dataDir",
                  position: (105, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "isSystemUser",
                 position: (106, 9),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (106, 24),
              },
             },
            ],
            recursive: false,
            position: (101, 27),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (108, 7),
             },
             Raw {
              content: "groups",
              position: (108, 13),
             },
             Raw {
              content: "boinc",
              position: (108, 20),
             },
            ],
           },
           to: Map {
            bindings: [],
            recursive: false,
            position: (108, 28),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (110, 7),
             },
             Raw {
              content: "tmpfiles",
              position: (110, 15),
             },
             Raw {
              content: "rules",
              position: (110, 24),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "d '",
                position: (111, 10),
               },
               Interpolation {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (111, 15),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "dataDir",
                    position: (111, 19),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "' - boinc boinc - -",
                position: (111, 27),
               },
              ],
              position: (111, 9),
             },
            ],
            position: (110, 32),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (114, 7),
             },
             Raw {
              content: "services",
              position: (114, 15),
             },
             Raw {
              content: "boinc",
              position: (114, 24),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (115, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "BOINC Client",
                 position: (115, 24),
                },
               ],
               position: (115, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (116, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (116, 19),
                  },
                 ],
                 position: (116, 18),
                },
               ],
               position: (116, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (117, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (117, 22),
                  },
                 ],
                 position: (117, 21),
                },
               ],
               position: (117, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "script",
                 position: (118, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "",
                 position: (119, 1),
                },
                Interpolation {
                 expression: Variable {
                  identifier: "fhsEnvExecutable",
                  position: (119, 13),
                 },
                },
                Raw {
                 content: " --dir ",
                 position: (119, 30),
                },
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (119, 39),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dataDir",
                     position: (119, 43),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: " ",
                 position: (119, 51),
                },
                Interpolation {
                 expression: Variable {
                  identifier: "allowRemoteGuiRpcFlag",
                  position: (119, 54),
                 },
                },
                Raw {
                 content: "\n",
                 position: (119, 76),
                },
               ],
               position: (118, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (121, 9),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (122, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "boinc",
                    position: (122, 19),
                   },
                  ],
                  position: (122, 18),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Nice",
                    position: (123, 11),
                   },
                  ],
                 },
                 to: Int {
                  value: 10,
                  position: (123, 18),
                 },
                },
               ],
               recursive: false,
               position: (121, 25),
              },
             },
            ],
            recursive: false,
            position: (114, 32),
           },
          },
         ],
         recursive: false,
         position: (98, 30),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (128, 5),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (129, 7),
           },
          ],
         },
         to: With {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (129, 26),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "maintainers",
              position: (129, 30),
             },
            ],
           },
           default: None,
          },
          target: List {
           elements: [
            Variable {
             identifier: "kierdavis",
             position: (129, 44),
            },
           ],
           position: (129, 43),
          },
          position: (129, 21),
         },
        },
       ],
       recursive: false,
       position: (128, 12),
      },
     },
    ],
    recursive: false,
    position: (17, 3),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}