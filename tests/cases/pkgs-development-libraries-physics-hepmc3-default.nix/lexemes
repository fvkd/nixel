{ "{" (1, 1)
ID "lib" (1, 3)
, "," (1, 6)
ID "stdenv" (1, 8)
, "," (1, 14)
ID "fetchurl" (1, 16)
, "," (1, 24)
ID "cmake" (1, 26)
, "," (1, 31)
ID "coreutils" (1, 33)
, "," (1, 42)
ID "python" (1, 44)
, "," (1, 50)
ID "root" (1, 52)
} "}" (1, 57)
: ":" (1, 58)
LET "let" (3, 1)
ID "pythonVersion" (4, 3)
= "=" (4, 17)
WITH "with" (4, 19)
ID "lib" (4, 24)
. "." (4, 27)
ID "versions" (4, 28)
; ";" (4, 36)
" "\"" (4, 38)
DOLLAR_CURLY "${" (4, 39)
ID "major" (4, 41)
ID "python" (4, 47)
. "." (4, 53)
ID "version" (4, 54)
} "}" (4, 61)
DOLLAR_CURLY "${" (4, 62)
ID "minor" (4, 64)
ID "python" (4, 70)
. "." (4, 76)
ID "version" (4, 77)
} "}" (4, 84)
" "\"" (4, 85)
; ";" (4, 86)
ID "withPython" (5, 3)
= "=" (5, 14)
ID "python" (5, 16)
NEQ "!=" (5, 23)
ID "null" (5, 26)
; ";" (5, 30)
ID "root_py" (7, 3)
= "=" (7, 11)
IF "if" (7, 13)
ID "withPython" (7, 16)
THEN "then" (7, 27)
ID "root" (7, 32)
. "." (7, 36)
ID "override" (7, 37)
{ "{" (7, 46)
INHERIT "inherit" (7, 48)
ID "python" (7, 56)
; ";" (7, 62)
} "}" (7, 64)
ELSE "else" (7, 66)
ID "root" (7, 71)
; ";" (7, 75)
IN "in" (8, 1)
ID "stdenv" (10, 1)
. "." (10, 7)
ID "mkDerivation" (10, 8)
REC "rec" (10, 21)
{ "{" (10, 25)
ID "pname" (11, 3)
= "=" (11, 9)
" "\"" (11, 11)
STR "hepmc3" (11, 12)
" "\"" (11, 18)
; ";" (11, 19)
ID "version" (12, 3)
= "=" (12, 11)
" "\"" (12, 13)
STR "3.2.5" (12, 14)
" "\"" (12, 19)
; ";" (12, 20)
ID "src" (14, 3)
= "=" (14, 7)
ID "fetchurl" (14, 9)
{ "{" (14, 18)
ID "url" (15, 5)
= "=" (15, 9)
" "\"" (15, 11)
STR "http://hepmc.web.cern.ch/hepmc/releases/HepMC3-" (15, 12)
DOLLAR_CURLY "${" (15, 59)
ID "version" (15, 61)
} "}" (15, 68)
STR ".tar.gz" (15, 69)
" "\"" (15, 76)
; ";" (15, 77)
ID "sha256" (16, 5)
= "=" (16, 12)
" "\"" (16, 14)
STR "sha256-zQ91yA91VJxZzCqCns52Acd96Xyypat1eQysjh1YUDI=" (16, 15)
" "\"" (16, 66)
; ";" (16, 67)
} "}" (17, 3)
; ";" (17, 4)
ID "nativeBuildInputs" (19, 3)
= "=" (19, 21)
[ "[" (19, 23)
ID "cmake" (19, 25)
] "]" (19, 31)
; ";" (19, 32)
ID "buildInputs" (20, 3)
= "=" (20, 15)
[ "[" (20, 17)
ID "root_py" (20, 19)
] "]" (20, 27)
CONCAT "++" (21, 5)
ID "lib" (21, 8)
. "." (21, 11)
ID "optional" (21, 12)
ID "withPython" (21, 21)
ID "python" (21, 32)
; ";" (21, 38)
ID "cmakeFlags" (23, 3)
= "=" (23, 14)
[ "[" (23, 16)
" "\"" (24, 5)
STR "-DHEPMC3_ENABLE_PYTHON=" (24, 6)
DOLLAR_CURLY "${" (24, 29)
IF "if" (24, 31)
ID "withPython" (24, 34)
THEN "then" (24, 45)
" "\"" (24, 50)
STR "ON" (24, 51)
" "\"" (24, 53)
ELSE "else" (24, 55)
" "\"" (24, 60)
STR "OFF" (24, 61)
" "\"" (24, 64)
} "}" (24, 65)
" "\"" (24, 66)
] "]" (25, 3)
CONCAT "++" (25, 5)
ID "lib" (25, 8)
. "." (25, 11)
ID "optionals" (25, 12)
ID "withPython" (25, 22)
[ "[" (25, 33)
" "\"" (26, 5)
STR "-DHEPMC3_PYTHON_VERSIONS=" (26, 6)
DOLLAR_CURLY "${" (26, 31)
IF "if" (26, 33)
ID "python" (26, 36)
. "." (26, 42)
ID "isPy3k" (26, 43)
THEN "then" (26, 50)
" "\"" (26, 55)
STR "3.X" (26, 56)
" "\"" (26, 59)
ELSE "else" (26, 61)
" "\"" (26, 66)
STR "2.X" (26, 67)
" "\"" (26, 70)
} "}" (26, 71)
" "\"" (26, 72)
" "\"" (27, 5)
STR "-DHEPMC3_Python_SITEARCH" (27, 6)
DOLLAR_CURLY "${" (27, 30)
ID "pythonVersion" (27, 32)
} "}" (27, 45)
STR "=" (27, 46)
DOLLAR_CURLY "${" (27, 47)
ID "placeholder" (27, 49)
" "\"" (27, 61)
STR "out" (27, 62)
" "\"" (27, 65)
} "}" (27, 66)
STR "/" (27, 67)
DOLLAR_CURLY "${" (27, 68)
ID "python" (27, 70)
. "." (27, 76)
ID "sitePackages" (27, 77)
} "}" (27, 89)
" "\"" (27, 90)
] "]" (28, 3)
; ";" (28, 4)
ID "postInstall" (30, 3)
= "=" (30, 15)
IND_STRING_OPEN "''\n" (30, 17)
IND_STR "    substituteInPlace \"$out\"/bin/HepMC3-config \\\n      --replace 'greadlink' " (31, 1)
IND_STR "'" (32, 29)
DOLLAR_CURLY "${" (32, 30)
ID "coreutils" (32, 32)
} "}" (32, 41)
IND_STR "/bin/readlink' \\\n      --replace 'readlink' " (32, 42)
IND_STR "'" (33, 28)
DOLLAR_CURLY "${" (33, 29)
ID "coreutils" (33, 31)
} "}" (33, 40)
IND_STR "/bin/readlink'\n  " (33, 41)
IND_STRING_CLOSE "''" (34, 3)
; ";" (34, 5)
ID "doInstallCheck" (36, 3)
= "=" (36, 18)
ID "withPython" (36, 20)
; ";" (36, 30)
ID "installCheckPhase" (38, 3)
= "=" (38, 21)
ID "lib" (38, 23)
. "." (38, 26)
ID "optionalString" (38, 27)
ID "withPython" (38, 42)
IND_STRING_OPEN "''\n" (38, 53)
IND_STR "    PYTHONPATH=" (39, 1)
DOLLAR_CURLY "${" (39, 16)
ID "placeholder" (39, 18)
" "\"" (39, 30)
STR "out" (39, 31)
" "\"" (39, 34)
} "}" (39, 35)
IND_STR "/" (39, 36)
DOLLAR_CURLY "${" (39, 37)
ID "python" (39, 39)
. "." (39, 45)
ID "sitePackages" (39, 46)
} "}" (39, 58)
IND_STR " python -c 'import pyHepMC3'\n  " (39, 59)
IND_STRING_CLOSE "''" (40, 3)
; ";" (40, 5)
ID "meta" (42, 3)
= "=" (42, 8)
WITH "with" (42, 10)
ID "lib" (42, 15)
; ";" (42, 18)
{ "{" (42, 20)
ID "description" (43, 5)
= "=" (43, 17)
" "\"" (43, 19)
STR "The HepMC package is an object oriented, C++ event record for High Energy Physics Monte Carlo generators and simulation" (43, 20)
" "\"" (43, 139)
; ";" (43, 140)
ID "license" (44, 5)
= "=" (44, 13)
ID "licenses" (44, 15)
. "." (44, 23)
ID "gpl3" (44, 24)
; ";" (44, 28)
ID "homepage" (45, 5)
= "=" (45, 14)
" "\"" (45, 16)
STR "http://hepmc.web.cern.ch/hepmc/" (45, 17)
" "\"" (45, 48)
; ";" (45, 49)
ID "platforms" (46, 5)
= "=" (46, 15)
ID "platforms" (46, 17)
. "." (46, 26)
ID "unix" (46, 27)
; ";" (46, 31)
ID "maintainers" (47, 5)
= "=" (47, 17)
WITH "with" (47, 19)
ID "maintainers" (47, 24)
; ";" (47, 35)
[ "[" (47, 37)
ID "veprbl" (47, 39)
] "]" (47, 46)
; ";" (47, 47)
} "}" (48, 3)
; ";" (48, 4)
} "}" (49, 1)