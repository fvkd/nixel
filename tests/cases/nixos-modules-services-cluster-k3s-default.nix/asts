---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (5, 16),
        },
        Raw {
         content: "k3s",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (9, 3),
        },
        Raw {
         content: "services",
         position: (9, 11),
        },
        Raw {
         content: "k3s",
         position: (9, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (10, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (10, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "k3s",
              position: (10, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (12, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (12, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (13, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (13, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (13, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (14, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (14, 17),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "k3s",
                  position: (14, 22),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (15, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (15, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.k3s",
                   position: (15, 40),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (16, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Package that should be used for k3s",
                 position: (16, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (12, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "role",
            position: (19, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (19, 12),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (20, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Whether k3s should run as a server or agent.\nNote that the server, by default, also runs as an agent.\n",
                 position: (21, 1),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (24, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "server",
                 position: (24, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (25, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (25, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "enum",
                   position: (25, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "server",
                     position: (25, 28),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "agent",
                     position: (25, 37),
                    },
                   ],
                  },
                 ],
                 position: (25, 25),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (19, 21),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "serverAddr",
            position: (28, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (28, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (29, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (29, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (29, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (30, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The k3s server to connect to. This option only makes sense for an agent.",
                 position: (30, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (31, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "https://10.0.0.10:6443",
                 position: (31, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (32, 7),
                },
               ],
              },
              String {
               parts: [],
              },
             ),
            ],
            recursive: false,
            position: (28, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "token",
            position: (35, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (35, 13),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (36, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (36, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (36, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (37, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The k3s token to use when connecting to the server. This option only makes sense for an agent.\nWARNING: This option will expose store your token unencrypted world-readable in the nix store.\nIf this is undesired use the tokenFile option instead.\n",
                 position: (38, 1),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (42, 7),
                },
               ],
              },
              String {
               parts: [],
              },
             ),
            ],
            recursive: false,
            position: (35, 22),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "tokenFile",
            position: (45, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (45, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (46, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (46, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (46, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (46, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (46, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (47, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "File path containing k3s token to use when connecting to the server. This option only makes sense for an agent.",
                 position: (47, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (48, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (48, 17),
              },
             ),
            ],
            recursive: false,
            position: (45, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "docker",
            position: (51, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (51, 14),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (52, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (52, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (52, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (53, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (53, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (54, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Use docker to run containers rather than the built-in containerd.",
                 position: (54, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (51, 23),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraFlags",
            position: (57, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (57, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (58, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Extra flags to pass to the k3s command.",
                 position: (58, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (59, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (59, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (59, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (60, 7),
                },
               ],
              },
              String {
               parts: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (61, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "--no-deploy traefik --cluster-cidr 10.24.0.0/16",
                 position: (61, 18),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (57, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "disableAgent",
            position: (64, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (64, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (65, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (65, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (65, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (66, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (66, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (67, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Only run the server. This option only makes sense for a server.",
                 position: (67, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (64, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configPath",
            position: (70, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (70, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (71, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (71, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (71, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (71, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (71, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (72, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (72, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (73, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "File path containing the k3s YAML config. This is useful when the config is generated (for example on boot).",
                 position: (73, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (70, 27),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (9, 26),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (79, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (79, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (79, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (79, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (80, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (82, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (82, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "role",
                        position: (82, 25),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "agent",
                       position: (82, 34),
                      },
                     ],
                    },
                   ],
                   position: (82, 30),
                  },
                  BinaryOperation {
                   operator: LogicalOr,
                   operands: [
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (82, 45),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "configPath",
                          position: (82, 49),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (82, 63),
                      },
                     ],
                     position: (82, 60),
                    },
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (82, 71),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "serverAddr",
                          position: (82, 75),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [],
                      },
                     ],
                     position: (82, 86),
                    },
                   ],
                   position: (82, 68),
                  },
                 ],
                 position: (82, 41),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (83, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "serverAddr or configPath (with 'server' key) should be set if role is 'agent'",
                   position: (83, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (81, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (86, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (86, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "role",
                        position: (86, 25),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "agent",
                       position: (86, 34),
                      },
                     ],
                    },
                   ],
                   position: (86, 30),
                  },
                  BinaryOperation {
                   operator: LogicalOr,
                   operands: [
                    BinaryOperation {
                     operator: LogicalOr,
                     operands: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (86, 44),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "configPath",
                            position: (86, 48),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (86, 62),
                        },
                       ],
                       position: (86, 59),
                      },
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (86, 70),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "tokenFile",
                            position: (86, 74),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (86, 87),
                        },
                       ],
                       position: (86, 84),
                      },
                     ],
                     position: (86, 67),
                    },
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (86, 95),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "token",
                          position: (86, 99),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [],
                      },
                     ],
                     position: (86, 105),
                    },
                   ],
                   position: (86, 92),
                  },
                 ],
                 position: (86, 41),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (87, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "token or tokenFile or configPath (with 'token' or 'token-file' keys) should be set if role is 'agent'",
                   position: (87, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (85, 7),
             },
            ],
            position: (80, 18),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "virtualisation",
              position: (91, 5),
             },
             Raw {
              content: "docker",
              position: (91, 20),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (91, 29),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (91, 34),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "docker",
                 position: (91, 38),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "enable",
                   position: (92, 7),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mkDefault",
                  position: (92, 16),
                 },
                 arguments: [
                  Variable {
                   identifier: "true",
                   position: (92, 26),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (91, 45),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (94, 5),
             },
             Raw {
              content: "systemPackages",
              position: (94, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (94, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "services",
                 position: (94, 43),
                },
                Raw {
                 content: "k3s",
                 position: (94, 52),
                },
                Raw {
                 content: "package",
                 position: (94, 56),
                },
               ],
              },
              default: None,
             },
            ],
            position: (94, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (96, 5),
             },
             Raw {
              content: "services",
              position: (96, 13),
             },
             Raw {
              content: "k3s",
              position: (96, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (97, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "k3s service",
                 position: (97, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (98, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "network.service",
                     position: (98, 18),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "firewall.service",
                     position: (98, 36),
                    },
                   ],
                  },
                 ],
                 position: (98, 15),
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optional",
                  position: (98, 60),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (98, 69),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "docker",
                      position: (98, 73),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [
                    Raw {
                     content: "docker.service",
                     position: (98, 81),
                    },
                   ],
                  },
                 ],
                },
               ],
               position: (98, 56),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wants",
                 position: (99, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.service",
                   position: (99, 18),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "firewall.service",
                   position: (99, 36),
                  },
                 ],
                },
               ],
               position: (99, 15),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (100, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (100, 21),
                  },
                 ],
                },
               ],
               position: (100, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (101, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "optional",
                position: (101, 14),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (101, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "boot",
                    position: (101, 30),
                   },
                   Raw {
                    content: "zfs",
                    position: (101, 35),
                   },
                   Raw {
                    content: "enabled",
                    position: (101, 39),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (101, 47),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "boot",
                    position: (101, 54),
                   },
                   Raw {
                    content: "zfs",
                    position: (101, 59),
                   },
                   Raw {
                    content: "package",
                    position: (101, 63),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (102, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (104, 9),
                   },
                  ],
                 },
                 IfThenElse {
                  predicate: BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (104, 19),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "role",
                        position: (104, 23),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "agent",
                       position: (104, 32),
                      },
                     ],
                    },
                   ],
                   position: (104, 28),
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: "exec",
                     position: (104, 45),
                    },
                   ],
                  },
                  else_: String {
                   parts: [
                    Raw {
                     content: "notify",
                     position: (104, 57),
                    },
                   ],
                  },
                  position: (104, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "KillMode",
                    position: (105, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "process",
                    position: (105, 21),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Delegate",
                    position: (106, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "yes",
                    position: (106, 21),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (107, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (107, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RestartSec",
                    position: (108, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "5s",
                    position: (108, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LimitNOFILE",
                    position: (109, 9),
                   },
                  ],
                 },
                 Int {
                  value: 1048576,
                  position: (109, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LimitNPROC",
                    position: (110, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "infinity",
                    position: (110, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LimitCORE",
                    position: (111, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "infinity",
                    position: (111, 22),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "TasksMax",
                    position: (112, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "infinity",
                    position: (112, 21),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (113, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (113, 21),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: " \\\n ",
                      position: (113, 39),
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     List {
                      elements: [
                       String {
                        parts: [
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (115, 16),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "package",
                              position: (115, 20),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/bin/k3s ",
                          position: (115, 28),
                         },
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (115, 39),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "role",
                              position: (115, 43),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                        ],
                       },
                      ],
                      position: (114, 11),
                     },
                     BinaryOperation {
                      operator: Concatenation,
                      operands: [
                       FunctionApplication {
                        function: Variable {
                         identifier: "optional",
                         position: (116, 17),
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (116, 26),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "docker",
                             position: (116, 30),
                            },
                           ],
                          },
                          default: None,
                         },
                         String {
                          parts: [
                           Raw {
                            content: "--docker",
                            position: (116, 38),
                           },
                          ],
                         },
                        ],
                       },
                       BinaryOperation {
                        operator: Concatenation,
                        operands: [
                         FunctionApplication {
                          function: Variable {
                           identifier: "optional",
                           position: (117, 15),
                          },
                          arguments: [
                           BinaryOperation {
                            operator: LogicalAnd,
                            operands: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (117, 25),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "docker",
                                 position: (117, 29),
                                },
                               ],
                              },
                              default: None,
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "config",
                               position: (117, 39),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "systemd",
                                 position: (117, 46),
                                },
                                Raw {
                                 content: "enableUnifiedCgroupHierarchy",
                                 position: (117, 54),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                            position: (117, 36),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "--kubelet-arg=cgroup-driver=systemd",
                              position: (117, 85),
                             },
                            ],
                           },
                          ],
                         },
                         BinaryOperation {
                          operator: Concatenation,
                          operands: [
                           FunctionApplication {
                            function: Variable {
                             identifier: "optional",
                             position: (118, 15),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (118, 24),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "disableAgent",
                                 position: (118, 28),
                                },
                               ],
                              },
                              default: None,
                             },
                             String {
                              parts: [
                               Raw {
                                content: "--disable-agent",
                                position: (118, 42),
                               },
                              ],
                             },
                            ],
                           },
                           BinaryOperation {
                            operator: Concatenation,
                            operands: [
                             FunctionApplication {
                              function: Variable {
                               identifier: "optional",
                               position: (119, 15),
                              },
                              arguments: [
                               BinaryOperation {
                                operator: NotEqualTo,
                                operands: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "cfg",
                                   position: (119, 25),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "serverAddr",
                                     position: (119, 29),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 String {
                                  parts: [],
                                 },
                                ],
                                position: (119, 40),
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "--server ",
                                  position: (119, 48),
                                 },
                                 Expression {
                                  expression: PropertyAccess {
                                   expression: Variable {
                                    identifier: "cfg",
                                    position: (119, 59),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "serverAddr",
                                      position: (119, 63),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                 },
                                ],
                               },
                              ],
                             },
                             BinaryOperation {
                              operator: Concatenation,
                              operands: [
                               FunctionApplication {
                                function: Variable {
                                 identifier: "optional",
                                 position: (120, 15),
                                },
                                arguments: [
                                 BinaryOperation {
                                  operator: NotEqualTo,
                                  operands: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "cfg",
                                     position: (120, 25),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "token",
                                       position: (120, 29),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                   String {
                                    parts: [],
                                   },
                                  ],
                                  position: (120, 35),
                                 },
                                 String {
                                  parts: [
                                   Raw {
                                    content: "--token ",
                                    position: (120, 43),
                                   },
                                   Expression {
                                    expression: PropertyAccess {
                                     expression: Variable {
                                      identifier: "cfg",
                                      position: (120, 53),
                                     },
                                     attribute_path: AttributePath {
                                      attributes: [
                                       Raw {
                                        content: "token",
                                        position: (120, 57),
                                       },
                                      ],
                                     },
                                     default: None,
                                    },
                                   },
                                  ],
                                 },
                                ],
                               },
                               BinaryOperation {
                                operator: Concatenation,
                                operands: [
                                 FunctionApplication {
                                  function: Variable {
                                   identifier: "optional",
                                   position: (121, 15),
                                  },
                                  arguments: [
                                   BinaryOperation {
                                    operator: NotEqualTo,
                                    operands: [
                                     PropertyAccess {
                                      expression: Variable {
                                       identifier: "cfg",
                                       position: (121, 25),
                                      },
                                      attribute_path: AttributePath {
                                       attributes: [
                                        Raw {
                                         content: "tokenFile",
                                         position: (121, 29),
                                        },
                                       ],
                                      },
                                      default: None,
                                     },
                                     Variable {
                                      identifier: "null",
                                      position: (121, 42),
                                     },
                                    ],
                                    position: (121, 39),
                                   },
                                   String {
                                    parts: [
                                     Raw {
                                      content: "--token-file ",
                                      position: (121, 49),
                                     },
                                     Expression {
                                      expression: PropertyAccess {
                                       expression: Variable {
                                        identifier: "cfg",
                                        position: (121, 64),
                                       },
                                       attribute_path: AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "tokenFile",
                                          position: (121, 68),
                                         },
                                        ],
                                       },
                                       default: None,
                                      },
                                     },
                                    ],
                                   },
                                  ],
                                 },
                                 BinaryOperation {
                                  operator: Concatenation,
                                  operands: [
                                   FunctionApplication {
                                    function: Variable {
                                     identifier: "optional",
                                     position: (122, 15),
                                    },
                                    arguments: [
                                     BinaryOperation {
                                      operator: NotEqualTo,
                                      operands: [
                                       PropertyAccess {
                                        expression: Variable {
                                         identifier: "cfg",
                                         position: (122, 25),
                                        },
                                        attribute_path: AttributePath {
                                         attributes: [
                                          Raw {
                                           content: "configPath",
                                           position: (122, 29),
                                          },
                                         ],
                                        },
                                        default: None,
                                       },
                                       Variable {
                                        identifier: "null",
                                        position: (122, 43),
                                       },
                                      ],
                                      position: (122, 40),
                                     },
                                     String {
                                      parts: [
                                       Raw {
                                        content: "--config ",
                                        position: (122, 50),
                                       },
                                       Expression {
                                        expression: PropertyAccess {
                                         expression: Variable {
                                          identifier: "cfg",
                                          position: (122, 61),
                                         },
                                         attribute_path: AttributePath {
                                          attributes: [
                                           Raw {
                                            content: "configPath",
                                            position: (122, 65),
                                           },
                                          ],
                                         },
                                         default: None,
                                        },
                                       },
                                      ],
                                     },
                                    ],
                                   },
                                   List {
                                    elements: [
                                     PropertyAccess {
                                      expression: Variable {
                                       identifier: "cfg",
                                       position: (123, 16),
                                      },
                                      attribute_path: AttributePath {
                                       attributes: [
                                        Raw {
                                         content: "extraFlags",
                                         position: (123, 20),
                                        },
                                       ],
                                      },
                                      default: None,
                                     },
                                    ],
                                    position: (123, 14),
                                   },
                                  ],
                                  position: (123, 11),
                                 },
                                ],
                                position: (122, 11),
                               },
                              ],
                              position: (121, 11),
                             },
                            ],
                            position: (120, 11),
                           },
                          ],
                          position: (119, 11),
                         },
                        ],
                        position: (118, 11),
                       },
                      ],
                      position: (117, 11),
                     },
                    ],
                    position: (116, 13),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (102, 23),
              },
             ),
            ],
            recursive: false,
            position: (96, 28),
           },
          ),
         ],
         recursive: false,
         position: (79, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (7, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}