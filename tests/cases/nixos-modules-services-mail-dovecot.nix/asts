---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "dovecot2",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "dovecotPkg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (7, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "dovecot",
         position: (7, 21),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "baseDir",
        position: (9, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "/run/dovecot2",
        position: (9, 14),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "stateDir",
        position: (10, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "/var/lib/dovecot",
        position: (10, 15),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "dovecotConf",
        position: (12, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "concatStrings",
       position: (12, 17),
      },
      arguments: [
       List {
        elements: [
         String {
          parts: [
           Raw {
            content: "base_dir = ",
            position: (14, 1),
           },
           Expression {
            expression: Variable {
             identifier: "baseDir",
             position: (14, 20),
            },
           },
           Raw {
            content: "\nprotocols = ",
            position: (14, 28),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (15, 21),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: " ",
                 position: (15, 39),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (15, 42),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "protocols",
                  position: (15, 46),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "\nsendmail_path = /run/wrappers/bin/sendmail\n# defining mail_plugins must be done before the first protocol {} filter because of https://doc.dovecot.org/configuration_manual/config_file/config_file_syntax/#variable-expansion\nmail_plugins = $mail_plugins ",
            position: (15, 56),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (18, 38),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: " ",
                 position: (18, 56),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (18, 59),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "mailPlugins",
                  position: (18, 63),
                 },
                 Raw {
                  content: "globally",
                  position: (18, 75),
                 },
                 Raw {
                  content: "enable",
                  position: (18, 84),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "\n",
            position: (18, 91),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "concatStringsSep",
           position: (22, 7),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
              position: (22, 25),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrsToList",
             position: (23, 9),
            },
            arguments: [
             Function {
              argument: Some(
               "protocol",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "plugins",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: String {
                parts: [
                 Raw {
                  content: "protocol ",
                  position: (25, 1),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "protocol",
                   position: (25, 24),
                  },
                 },
                 Raw {
                  content: " {\n  mail_plugins = $mail_plugins ",
                  position: (25, 33),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "concatStringsSep",
                    position: (26, 46),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: " ",
                       position: (26, 64),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "plugins",
                      position: (26, 67),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "enable",
                        position: (26, 75),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n}\n",
                  position: (26, 82),
                 },
                ],
               },
               position: (24, 21),
              },
              position: (24, 11),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (29, 11),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "mailPlugins",
                 position: (29, 15),
                },
                Raw {
                 content: "perProtocol",
                 position: (29, 27),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ],
         },
         IfThenElse {
          predicate: BinaryOperation {
           operator: EqualTo,
           operands: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (34, 10),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "sslServerCert",
                position: (34, 14),
               },
              ],
             },
             default: None,
            },
            Variable {
             identifier: "null",
             position: (34, 31),
            },
           ],
           position: (34, 28),
          },
          then: String {
           parts: [
            Raw {
             content: "ssl = no\ndisable_plaintext_auth = no\n",
             position: (35, 1),
            },
           ],
          },
          else_: String {
           parts: [
            Raw {
             content: "ssl_cert = <",
             position: (38, 1),
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (38, 23),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "sslServerCert",
                 position: (38, 27),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "\nssl_key = <",
             position: (38, 41),
            },
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (39, 22),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "sslServerKey",
                 position: (39, 26),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "\n",
             position: (39, 39),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "optionalString",
               position: (40, 11),
              },
              arguments: [
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (40, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "sslCACert",
                     position: (40, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (40, 44),
                 },
                ],
                position: (40, 41),
               },
               BinaryOperation {
                operator: Addition,
                operands: [
                 String {
                  parts: [
                   Raw {
                    content: "ssl_ca = <",
                    position: (40, 52),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (40, 66),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "sslCACert",
                     position: (40, 70),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
                position: (40, 64),
               },
              ],
             },
            },
            Raw {
             content: "\n",
             position: (40, 81),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "optionalString",
               position: (41, 11),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (41, 26),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "enableDHE",
                   position: (41, 30),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "ssl_dh = <",
                  position: (41, 42),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (41, 54),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "security",
                      position: (41, 61),
                     },
                     Raw {
                      content: "dhparams",
                      position: (41, 70),
                     },
                     Raw {
                      content: "params",
                      position: (41, 79),
                     },
                     Raw {
                      content: "dovecot2",
                      position: (41, 86),
                     },
                     Raw {
                      content: "path",
                      position: (41, 95),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                ],
               },
              ],
             },
            },
            Raw {
             content: "\ndisable_plaintext_auth = yes\n",
             position: (41, 103),
            },
           ],
          },
          position: (34, 7),
         },
         String {
          parts: [
           Raw {
            content: "default_internal_user = ",
            position: (47, 1),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (47, 33),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "user",
                position: (47, 37),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "\ndefault_internal_group = ",
            position: (47, 42),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (48, 34),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "group",
                position: (48, 38),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "\n",
            position: (48, 44),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (49, 9),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (49, 25),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "mailUser",
                    position: (49, 29),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (49, 41),
                },
               ],
               position: (49, 38),
              },
              String {
               parts: [
                Raw {
                 content: "mail_uid = ",
                 position: (49, 48),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (49, 61),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "mailUser",
                     position: (49, 65),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
              },
             ],
            },
           },
           Raw {
            content: "\n",
            position: (49, 76),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (50, 9),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (50, 25),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "mailGroup",
                    position: (50, 29),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (50, 42),
                },
               ],
               position: (50, 39),
              },
              String {
               parts: [
                Raw {
                 content: "mail_gid = ",
                 position: (50, 49),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (50, 62),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "mailGroup",
                     position: (50, 66),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
              },
             ],
            },
           },
           Raw {
            content: "\n\nmail_location = ",
            position: (50, 78),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (52, 25),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mailLocation",
                position: (52, 29),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "\n\nmaildir_copy_with_hardlinks = yes\npop3_uidl_format = %08Xv%08Xu\n\nauth_mechanisms = plain login\n\nservice auth {\n  user = root\n}\n",
            position: (52, 42),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (65, 7),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (65, 22),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "enablePAM",
               position: (65, 26),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "userdb {\n  driver = passwd\n}\n\npassdb {\n  driver = pam\n  args = ",
              position: (66, 1),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (72, 20),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (72, 35),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "showPAMFailure",
                    position: (72, 39),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "failure_show_msg=yes",
                   position: (72, 55),
                  },
                 ],
                },
               ],
              },
             },
             Raw {
              content: " dovecot2\n}\n",
              position: (72, 77),
             },
            ],
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (78, 7),
          },
          arguments: [
           BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (78, 23),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "sieveScripts",
                 position: (78, 27),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [],
              recursive: false,
              position: (78, 43),
             },
            ],
            position: (78, 40),
           },
           String {
            parts: [
             Raw {
              content: "plugin {\n  ",
              position: (79, 1),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatStringsSep",
                position: (80, 13),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\n",
                   position: (80, 31),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mapAttrsToList",
                  position: (80, 36),
                 },
                 arguments: [
                  Function {
                   argument: Some(
                    "to",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Function {
                    argument: Some(
                     "from",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: String {
                     parts: [
                      Raw {
                       content: "sieve_",
                       position: (80, 63),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "to",
                        position: (80, 71),
                       },
                      },
                      Raw {
                       content: " = ",
                       position: (80, 74),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "stateDir",
                        position: (80, 79),
                       },
                      },
                      Raw {
                       content: "/sieve/",
                       position: (80, 88),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "to",
                        position: (80, 97),
                       },
                      },
                     ],
                    },
                    position: (80, 56),
                   },
                   position: (80, 52),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (80, 103),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "sieveScripts",
                      position: (80, 107),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ],
              },
             },
             Raw {
              content: "\n}\n",
              position: (80, 121),
             },
            ],
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (86, 7),
          },
          arguments: [
           BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (86, 23),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "mailboxes",
                 position: (86, 27),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [],
              recursive: false,
              position: (86, 40),
             },
            ],
            position: (86, 37),
           },
           String {
            parts: [
             Raw {
              content: "namespace inbox {\n  inbox=yes\n  ",
              position: (87, 1),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatStringsSep",
                position: (89, 13),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\n",
                   position: (89, 31),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "map",
                  position: (89, 36),
                 },
                 arguments: [
                  Variable {
                   identifier: "mailboxConfig",
                   position: (89, 40),
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "attrValues",
                    position: (89, 55),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (89, 66),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mailboxes",
                        position: (89, 70),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             },
             Raw {
              content: "\n}\n",
              position: (89, 82),
             },
            ],
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (95, 7),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (95, 22),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "enableQuota",
               position: (95, 26),
              },
             ],
            },
            default: None,
           },
           String {
            parts: [
             Raw {
              content: "service quota-status {\n  executable = ",
              position: (96, 1),
             },
             Expression {
              expression: Variable {
               identifier: "dovecotPkg",
               position: (97, 26),
              },
             },
             Raw {
              content: "/libexec/dovecot/quota-status -p postfix\n  inet_listener {\n    port = ",
              position: (97, 37),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (99, 22),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "quotaPort",
                  position: (99, 26),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\n  }\n  client_limit = 1\n}\n\nplugin {\n  quota_rule = *:storage=",
              position: (99, 36),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (105, 36),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "quotaGlobalPerUser",
                  position: (105, 40),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\n  quota = count:User quota # per virtual mail user quota\n  quota_status_success = DUNNO\n  quota_status_nouser = DUNNO\n  quota_status_overquota = \"552 5.2.2 Mailbox is full\"\n  quota_grace = 10%%\n  quota_vsizes = yes\n}\n",
              position: (105, 59),
             },
            ],
           },
          ],
         },
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (116, 5),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "extraConfig",
             position: (116, 9),
            },
           ],
          },
          default: None,
         },
        ],
        position: (12, 31),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "modulesDir",
        position: (119, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (119, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "symlinkJoin",
          position: (119, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (120, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "dovecot-modules",
             position: (120, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "paths",
             position: (121, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "map",
            position: (121, 13),
           },
           arguments: [
            Function {
             argument: Some(
              "pkg",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: String {
              parts: [
               Expression {
                expression: Variable {
                 identifier: "pkg",
                 position: (121, 26),
                },
               },
               Raw {
                content: "/lib/dovecot",
                position: (121, 30),
               },
              ],
             },
             position: (121, 18),
            },
            BinaryOperation {
             operator: Concatenation,
             operands: [
              List {
               elements: [
                Variable {
                 identifier: "dovecotPkg",
                 position: (121, 48),
                },
               ],
               position: (121, 46),
              },
              FunctionApplication {
               function: Variable {
                identifier: "map",
                position: (121, 64),
               },
               arguments: [
                Function {
                 argument: Some(
                  "module",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "module",
                    position: (121, 77),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "override",
                      position: (121, 84),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "dovecot",
                         position: (121, 95),
                        },
                       ],
                      },
                      Variable {
                       identifier: "dovecotPkg",
                       position: (121, 105),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (121, 93),
                   },
                  ],
                 },
                 position: (121, 69),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (121, 120),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "modules",
                    position: (121, 124),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ],
             position: (121, 61),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (119, 33),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mailboxConfig",
        position: (124, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "mailbox",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: BinaryOperation {
       operator: Addition,
       operands: [
        BinaryOperation {
         operator: Addition,
         operands: [
          BinaryOperation {
           operator: Addition,
           operands: [
            String {
             parts: [
              Raw {
               content: "mailbox \"",
               position: (125, 1),
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "mailbox",
                 position: (125, 16),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (125, 24),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\" {\n  auto = ",
               position: (125, 29),
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (126, 16),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "mailbox",
                   position: (126, 25),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "auto",
                     position: (126, 33),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: "\n",
               position: (126, 38),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (127, 8),
             },
             arguments: [
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "mailbox",
                  position: (127, 24),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "autoexpunge",
                    position: (127, 32),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "null",
                 position: (127, 47),
                },
               ],
               position: (127, 44),
              },
              String {
               parts: [
                Raw {
                 content: "autoexpunge = ",
                 position: (128, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "mailbox",
                   position: (128, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "autoexpunge",
                     position: (128, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\n",
                 position: (128, 41),
                },
               ],
              },
             ],
            },
           ],
           position: (127, 6),
          },
          FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (129, 8),
           },
           arguments: [
            BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "mailbox",
                position: (129, 24),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "specialUse",
                  position: (129, 32),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (129, 46),
              },
             ],
             position: (129, 43),
            },
            String {
             parts: [
              Raw {
               content: "special_use = \\",
               position: (130, 1),
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (130, 22),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "mailbox",
                   position: (130, 31),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "specialUse",
                     position: (130, 39),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: "\n",
               position: (130, 50),
              },
             ],
            },
           ],
          },
         ],
         position: (129, 6),
        },
        String {
         parts: [
          Raw {
           content: "}",
           position: (131, 9),
          },
         ],
        },
       ],
       position: (131, 6),
      },
      position: (124, 19),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mailboxes",
        position: (133, 3),
       },
      ],
     },
     Function {
      argument: None,
      arguments: FunctionArguments {
       arguments: [
        FunctionArgument {
         identifier: "name",
         default: None,
        },
       ],
       ellipsis: true,
      },
      definition: Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "options",
            position: (134, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "name",
               position: (135, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (135, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (136, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (136, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "strMatching",
                      position: (136, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[^\"]+",
                      position: (136, 36),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (137, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Spam",
                    position: (137, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (138, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "name",
                  position: (138, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "readOnly",
                    position: (139, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (139, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (140, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The name of the mailbox.",
                    position: (140, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (135, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "auto",
               position: (142, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (142, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (143, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (143, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enum",
                      position: (143, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "no",
                        position: (143, 30),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "create",
                        position: (143, 35),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "subscribe",
                        position: (143, 44),
                       },
                      ],
                     },
                    ],
                    position: (143, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (144, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "no",
                    position: (144, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (145, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "subscribe",
                    position: (145, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (146, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to automatically create or create and subscribe to the mailbox or not.",
                    position: (146, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (142, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "specialUse",
               position: (148, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (148, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (149, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (149, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (149, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (149, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "enum",
                        position: (149, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "All",
                          position: (149, 44),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Archive",
                          position: (149, 50),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Drafts",
                          position: (149, 60),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Flagged",
                          position: (149, 69),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Junk",
                          position: (149, 79),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Sent",
                          position: (149, 86),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Trash",
                          position: (149, 93),
                         },
                        ],
                       },
                      ],
                      position: (149, 41),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (150, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (150, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (151, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Junk",
                    position: (151, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (152, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Null if no special use flag is set. Other than that every use flag mentioned in the RFC is valid.",
                    position: (152, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (148, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "autoexpunge",
               position: (154, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (154, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (155, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (155, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (155, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (155, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (155, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (156, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (156, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (157, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "60d",
                    position: (157, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (158, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "To automatically remove all email from the mailbox which is older than the\nspecified time.\n",
                    position: (159, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (154, 30),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (134, 15),
         },
        ),
       ],
       recursive: false,
       position: (133, 30),
      },
      position: (133, 15),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (167, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (168, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (168, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "dovecot2",
               position: (168, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "package",
               position: (168, 53),
              },
             ],
            },
           ],
           position: (168, 28),
          },
          String {
           parts: [],
          },
         ],
        },
       ],
       position: (167, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (171, 3),
        },
        Raw {
         content: "services",
         position: (171, 11),
        },
        Raw {
         content: "dovecot2",
         position: (171, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (172, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (172, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "the dovecot 2.x POP3/IMAP server",
              position: (172, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enablePop3",
            position: (174, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (174, 18),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "starting the POP3 listener (when Dovecot is enabled).",
              position: (174, 34),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enableImap",
            position: (176, 5),
           },
          ],
         },
         BinaryOperation {
          operator: Update,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (176, 18),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "starting the IMAP listener (when Dovecot is enabled).",
                position: (176, 34),
               },
              ],
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (176, 94),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (176, 104),
              },
             ),
            ],
            recursive: false,
            position: (176, 92),
           },
          ],
          position: (176, 89),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enableLmtp",
            position: (178, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (178, 18),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "starting the LMTP listener (when Dovecot is enabled).",
              position: (178, 34),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "protocols",
            position: (180, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (180, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (181, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (181, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (181, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (181, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (181, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (182, 7),
                },
               ],
              },
              List {
               elements: [],
               position: (182, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (183, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional listeners to start when Dovecot is enabled.",
                 position: (183, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (180, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "user",
            position: (186, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (186, 12),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (187, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (187, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (187, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (188, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "dovecot2",
                 position: (188, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (189, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Dovecot user name.",
                 position: (189, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (186, 21),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "group",
            position: (192, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (192, 13),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (193, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (193, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (193, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (194, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "dovecot2",
                 position: (194, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (195, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Dovecot group name.",
                 position: (195, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (192, 22),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraConfig",
            position: (198, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (198, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (199, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (199, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lines",
                  position: (199, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (200, 7),
                },
               ],
              },
              String {
               parts: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (201, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "mail_debug = yes",
                 position: (201, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (202, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional entries to put verbatim into Dovecot's config file.",
                 position: (202, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (198, 28),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mailPlugins",
            position: (205, 5),
           },
          ],
         },
         LetIn {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "plugins",
               position: (207, 9),
              },
             ],
            },
            Function {
             argument: Some(
              "hint",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (207, 25),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "submodule",
                  position: (207, 31),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "options",
                     position: (208, 11),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "enable",
                        position: (209, 13),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "mkOption",
                       position: (209, 22),
                      },
                      arguments: [
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "type",
                             position: (210, 15),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: PropertyAccess {
                            expression: Variable {
                             identifier: "types",
                             position: (210, 22),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "listOf",
                               position: (210, 28),
                              },
                             ],
                            },
                            default: None,
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (210, 35),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "str",
                                position: (210, 41),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "default",
                             position: (211, 15),
                            },
                           ],
                          },
                          List {
                           elements: [],
                           position: (211, 25),
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "description",
                             position: (212, 15),
                            },
                           ],
                          },
                          String {
                           parts: [
                            Raw {
                             content: "mail plugins to enable as a list of strings to append to the ",
                             position: (212, 30),
                            },
                            Expression {
                             expression: Variable {
                              identifier: "hint",
                              position: (212, 93),
                             },
                            },
                            Raw {
                             content: " <literal>$mail_plugins</literal> configuration variable",
                             position: (212, 98),
                            },
                           ],
                          },
                         ),
                        ],
                        recursive: false,
                        position: (209, 31),
                       },
                      ],
                     },
                    ),
                   ],
                   recursive: false,
                   position: (208, 21),
                  },
                 ),
                ],
                recursive: false,
                position: (207, 41),
               },
              ],
             },
             position: (207, 19),
            },
           ),
          ],
          target: FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (217, 9),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (218, 11),
                 },
                ],
               },
               With {
                expression: Variable {
                 identifier: "types",
                 position: (218, 23),
                },
                target: FunctionApplication {
                 function: Variable {
                  identifier: "submodule",
                  position: (218, 30),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "options",
                        position: (219, 13),
                       },
                      ],
                     },
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "globally",
                           position: (220, 15),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "mkOption",
                          position: (220, 26),
                         },
                         arguments: [
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "description",
                                position: (221, 17),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "Additional entries to add to the mail_plugins variable for all protocols",
                                position: (221, 32),
                               },
                              ],
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "type",
                                position: (222, 17),
                               },
                              ],
                             },
                             FunctionApplication {
                              function: Variable {
                               identifier: "plugins",
                               position: (222, 24),
                              },
                              arguments: [
                               String {
                                parts: [
                                 Raw {
                                  content: "top-level",
                                  position: (222, 33),
                                 },
                                ],
                               },
                              ],
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "example",
                                position: (223, 17),
                               },
                              ],
                             },
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "enable",
                                   position: (223, 29),
                                  },
                                 ],
                                },
                                List {
                                 elements: [
                                  String {
                                   parts: [
                                    Raw {
                                     content: "virtual",
                                     position: (223, 41),
                                    },
                                   ],
                                  },
                                 ],
                                 position: (223, 38),
                                },
                               ),
                              ],
                              recursive: false,
                              position: (223, 27),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "default",
                                position: (224, 17),
                               },
                              ],
                             },
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "enable",
                                   position: (224, 29),
                                  },
                                 ],
                                },
                                List {
                                 elements: [],
                                 position: (224, 38),
                                },
                               ),
                              ],
                              recursive: false,
                              position: (224, 27),
                             },
                            ),
                           ],
                           recursive: false,
                           position: (220, 35),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "perProtocol",
                           position: (226, 15),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "mkOption",
                          position: (226, 29),
                         },
                         arguments: [
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "description",
                                position: (227, 17),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "Additional entries to add to the mail_plugins variable, per protocol",
                                position: (227, 32),
                               },
                              ],
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "type",
                                position: (228, 17),
                               },
                              ],
                             },
                             FunctionApplication {
                              function: Variable {
                               identifier: "attrsOf",
                               position: (228, 24),
                              },
                              arguments: [
                               FunctionApplication {
                                function: Variable {
                                 identifier: "plugins",
                                 position: (228, 33),
                                },
                                arguments: [
                                 String {
                                  parts: [
                                   Raw {
                                    content: "corresponding per-protocol",
                                    position: (228, 42),
                                   },
                                  ],
                                 },
                                ],
                               },
                              ],
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "default",
                                position: (229, 17),
                               },
                              ],
                             },
                             Map {
                              bindings: [],
                              recursive: false,
                              position: (229, 27),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "example",
                                position: (230, 17),
                               },
                              ],
                             },
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "imap",
                                   position: (230, 29),
                                  },
                                 ],
                                },
                                List {
                                 elements: [
                                  String {
                                   parts: [
                                    Raw {
                                     content: "imap_acl",
                                     position: (230, 39),
                                    },
                                   ],
                                  },
                                 ],
                                 position: (230, 36),
                                },
                               ),
                              ],
                              recursive: false,
                              position: (230, 27),
                             },
                            ),
                           ],
                           recursive: false,
                           position: (226, 38),
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                      position: (219, 23),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (218, 40),
                  },
                 ],
                },
                position: (218, 18),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (234, 11),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Additional entries to add to the mail_plugins variable, globally and per protocol",
                  position: (234, 26),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "example",
                  position: (235, 11),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "globally",
                     position: (236, 13),
                    },
                    Raw {
                     content: "enable",
                     position: (236, 22),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "acl",
                       position: (236, 34),
                      },
                     ],
                    },
                   ],
                   position: (236, 31),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "perProtocol",
                     position: (237, 13),
                    },
                    Raw {
                     content: "imap",
                     position: (237, 25),
                    },
                    Raw {
                     content: "enable",
                     position: (237, 30),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "imap_acl",
                       position: (237, 42),
                      },
                     ],
                    },
                   ],
                   position: (237, 39),
                  },
                 ),
                ],
                recursive: false,
                position: (235, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (239, 11),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "globally",
                     position: (239, 23),
                    },
                    Raw {
                     content: "enable",
                     position: (239, 32),
                    },
                   ],
                  },
                  List {
                   elements: [],
                   position: (239, 41),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "perProtocol",
                     position: (239, 45),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (239, 59),
                  },
                 ),
                ],
                recursive: false,
                position: (239, 21),
               },
              ),
             ],
             recursive: false,
             position: (217, 18),
            },
           ],
          },
          position: (206, 7),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configFile",
            position: (242, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (242, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (243, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (243, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (243, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (243, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (243, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (244, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (244, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (245, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Config file used for the whole dovecot configuration.",
                 position: (245, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "apply",
                 position: (246, 7),
                },
               ],
              },
              Function {
               argument: Some(
                "v",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: IfThenElse {
                predicate: BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  Variable {
                   identifier: "v",
                   position: (246, 21),
                  },
                  Variable {
                   identifier: "null",
                   position: (246, 26),
                  },
                 ],
                 position: (246, 23),
                },
                then: Variable {
                 identifier: "v",
                 position: (246, 36),
                },
                else_: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (246, 43),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "writeText",
                     position: (246, 48),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "dovecot.conf",
                     position: (246, 59),
                    },
                   ],
                  },
                  Variable {
                   identifier: "dovecotConf",
                   position: (246, 73),
                  },
                 ],
                },
                position: (246, 18),
               },
               position: (246, 15),
              },
             ),
            ],
            recursive: false,
            position: (242, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mailLocation",
            position: (249, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (249, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (250, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (250, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (250, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (251, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "maildir:/var/spool/mail/%u",
                 position: (251, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (252, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "maildir:~/mail:INBOX=/var/spool/mail/%u",
                 position: (252, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (253, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Location that dovecot will use for mail folders. Dovecot mail_location option.\n",
                 position: (254, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (249, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mailUser",
            position: (258, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (258, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (259, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (259, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (259, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (259, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (259, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (260, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (260, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (261, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Default user to store mail for virtual users.",
                 position: (261, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (258, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mailGroup",
            position: (264, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (264, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (265, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (265, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (265, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (265, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (265, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (266, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (266, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (267, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Default group to store mail for virtual users.",
                 position: (267, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (264, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "createMailUser",
            position: (270, 5),
           },
          ],
         },
         BinaryOperation {
          operator: Update,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (270, 22),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "automatically creating the user\n      given in <option>services.dovecot.user</option> and the group\n      given in <option>services.dovecot.group</option>.",
                position: (270, 39),
               },
              ],
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (272, 64),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (272, 74),
              },
             ),
            ],
            recursive: false,
            position: (272, 62),
           },
          ],
          position: (272, 59),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "modules",
            position: (274, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (274, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (275, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (275, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (275, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (275, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (275, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (276, 7),
                },
               ],
              },
              List {
               elements: [],
               position: (276, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (277, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (277, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[ pkgs.dovecot_pigeonhole ]",
                   position: (277, 36),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (278, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Symlinks the contents of lib/dovecot of every given package into\n/etc/dovecot/modules. This will make the given modules available\nif a dovecot package with the module_dir patch applied is being used.\n",
                 position: (279, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (274, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "sslCACert",
            position: (285, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (285, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (286, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (286, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (286, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (286, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (286, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (287, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (287, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (288, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Path to the server's CA certificate key.",
                 position: (288, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (285, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "sslServerCert",
            position: (291, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (291, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (292, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (292, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (292, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (292, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (292, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (293, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (293, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (294, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Path to the server's public key.",
                 position: (294, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (291, 30),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "sslServerKey",
            position: (297, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (297, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (298, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (298, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "nullOr",
                   position: (298, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (298, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (298, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (299, 7),
                },
               ],
              },
              Variable {
               identifier: "null",
               position: (299, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (300, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Path to the server's private key.",
                 position: (300, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (297, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enablePAM",
            position: (303, 5),
           },
          ],
         },
         BinaryOperation {
          operator: Update,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (303, 17),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "creating a own Dovecot PAM service and configure PAM user logins.",
                position: (303, 33),
               },
              ],
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (303, 105),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (303, 115),
              },
             ),
            ],
            recursive: false,
            position: (303, 103),
           },
          ],
          position: (303, 100),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enableDHE",
            position: (305, 5),
           },
          ],
         },
         BinaryOperation {
          operator: Update,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (305, 17),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "enable ssl_dh and generation of primes for the key exchange.",
                position: (305, 33),
               },
              ],
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (305, 100),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (305, 110),
              },
             ),
            ],
            recursive: false,
            position: (305, 98),
           },
          ],
          position: (305, 95),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "sieveScripts",
            position: (307, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (307, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (308, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (308, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (308, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (308, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (308, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (309, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (309, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (310, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Sieve scripts to be executed. Key is a sequence, e.g. 'before2', 'after' etc.",
                 position: (310, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (307, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "showPAMFailure",
            position: (313, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (313, 22),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "showing the PAM failure message on authentication error (useful for OTPW).",
              position: (313, 38),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mailboxes",
            position: (315, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (315, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (316, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (316, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "coercedTo",
                 position: (316, 26),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (317, 10),
                  },
                  arguments: [
                   Variable {
                    identifier: "unspecified",
                    position: (317, 17),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "list",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "listToAttrs",
                    position: (318, 16),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "map",
                      position: (318, 29),
                     },
                     arguments: [
                      Function {
                       argument: Some(
                        "entry",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "name",
                             position: (318, 43),
                            },
                           ],
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "entry",
                            position: (318, 50),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "name",
                              position: (318, 56),
                             },
                            ],
                           },
                           default: None,
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "value",
                             position: (318, 62),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "removeAttrs",
                            position: (318, 70),
                           },
                           arguments: [
                            Variable {
                             identifier: "entry",
                             position: (318, 82),
                            },
                            List {
                             elements: [
                              String {
                               parts: [
                                Raw {
                                 content: "name",
                                 position: (318, 90),
                                },
                               ],
                              },
                             ],
                             position: (318, 88),
                            },
                           ],
                          },
                         ),
                        ],
                        recursive: false,
                        position: (318, 41),
                       },
                       position: (318, 34),
                      },
                      Variable {
                       identifier: "list",
                       position: (318, 101),
                      },
                     ],
                    },
                   ],
                  },
                  position: (318, 10),
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (319, 10),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "submodule",
                     position: (319, 19),
                    },
                    arguments: [
                     Variable {
                      identifier: "mailboxes",
                      position: (319, 29),
                     },
                    ],
                   },
                  ],
                 },
                ],
               },
               position: (316, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (320, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (320, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (321, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (321, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  Spam = { specialUse = \"Junk\"; auto = \"create\"; };\n}\n",
                   position: (322, 1),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (326, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Configure mailboxes and auto create or subscribe them.",
                 position: (326, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (315, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enableQuota",
            position: (329, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (329, 19),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "the dovecot quota service.",
              position: (329, 35),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "quotaPort",
            position: (331, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (331, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (332, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (332, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (332, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (333, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "12340",
                 position: (333, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (334, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The Port the dovecot quota service binds to.\nIf using postfix, add check_policy_service inet:localhost:12340 to your smtpd_recipient_restrictions in your postfix config.\n",
                 position: (335, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (331, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "quotaGlobalPerUser",
            position: (339, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (339, 26),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (340, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (340, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (340, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (341, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "100G",
                 position: (341, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (342, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "10G",
                 position: (342, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (343, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Quota limit for the user in bytes. Supports suffixes b, k, M, G, T and %.",
                 position: (343, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (339, 35),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (171, 31),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (349, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (349, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (349, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (349, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (350, 5),
             },
             Raw {
              content: "pam",
              position: (350, 14),
             },
             Raw {
              content: "services",
              position: (350, 18),
             },
             Raw {
              content: "dovecot2",
              position: (350, 27),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (350, 38),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (350, 43),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "enablePAM",
                 position: (350, 47),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [],
              recursive: false,
              position: (350, 57),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (352, 5),
             },
             Raw {
              content: "dhparams",
              position: (352, 14),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (352, 25),
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (352, 31),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "sslServerCert",
                     position: (352, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (352, 52),
                 },
                ],
                position: (352, 49),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (352, 60),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "enableDHE",
                   position: (352, 64),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (352, 57),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "enable",
                   position: (353, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (353, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "params",
                   position: (354, 7),
                  },
                  Raw {
                   content: "dovecot2",
                   position: (354, 14),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                 position: (354, 25),
                },
               ),
              ],
              recursive: false,
              position: (352, 75),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (356, 5),
             },
             Raw {
              content: "dovecot2",
              position: (356, 14),
             },
             Raw {
              content: "protocols",
              position: (356, 23),
             },
            ],
           },
           BinaryOperation {
            operator: Concatenation,
            operands: [
             FunctionApplication {
              function: Variable {
               identifier: "optional",
               position: (357, 7),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (357, 16),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "enableImap",
                   position: (357, 20),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "imap",
                  position: (357, 32),
                 },
                ],
               },
              ],
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (358, 10),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (358, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "enablePop3",
                     position: (358, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 String {
                  parts: [
                   Raw {
                    content: "pop3",
                    position: (358, 35),
                   },
                  ],
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (359, 10),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (359, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "enableLmtp",
                     position: (359, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 String {
                  parts: [
                   Raw {
                    content: "lmtp",
                    position: (359, 35),
                   },
                  ],
                 },
                ],
               },
              ],
              position: (359, 7),
             },
            ],
            position: (358, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (361, 5),
             },
             Raw {
              content: "dovecot2",
              position: (361, 14),
             },
             Raw {
              content: "mailPlugins",
              position: (361, 23),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (361, 37),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (361, 42),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "enableQuota",
                 position: (361, 46),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "globally",
                   position: (362, 7),
                  },
                  Raw {
                   content: "enable",
                   position: (362, 16),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "quota",
                     position: (362, 28),
                    },
                   ],
                  },
                 ],
                 position: (362, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "perProtocol",
                   position: (363, 7),
                  },
                  Raw {
                   content: "imap",
                   position: (363, 19),
                  },
                  Raw {
                   content: "enable",
                   position: (363, 24),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "imap_quota",
                     position: (363, 36),
                    },
                   ],
                  },
                 ],
                 position: (363, 33),
                },
               ),
              ],
              recursive: false,
              position: (361, 58),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (366, 5),
             },
             Raw {
              content: "users",
              position: (366, 11),
             },
            ],
           },
           BinaryOperation {
            operator: Update,
            operands: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "dovenull",
                   position: (367, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "uid",
                      position: (369, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (369, 17),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "ids",
                       position: (369, 24),
                      },
                      Raw {
                       content: "uids",
                       position: (369, 28),
                      },
                      Raw {
                       content: "dovenull2",
                       position: (369, 33),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (370, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Dovecot user for untrusted logins",
                      position: (370, 26),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (371, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "dovenull",
                      position: (371, 20),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                 position: (368, 9),
                },
               ),
              ],
              recursive: false,
              position: (366, 19),
             },
             BinaryOperation {
              operator: Update,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optionalAttrs",
                 position: (373, 10),
                },
                arguments: [
                 BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (373, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "user",
                       position: (373, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "dovecot2",
                      position: (373, 38),
                     },
                    ],
                   },
                  ],
                  position: (373, 34),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "dovecot2",
                       position: (374, 7),
                      },
                     ],
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "uid",
                          position: (376, 11),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "config",
                         position: (376, 17),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "ids",
                           position: (376, 24),
                          },
                          Raw {
                           content: "uids",
                           position: (376, 28),
                          },
                          Raw {
                           content: "dovecot2",
                           position: (376, 33),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (377, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Dovecot user",
                          position: (377, 26),
                         },
                        ],
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "group",
                          position: (378, 11),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (378, 19),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "group",
                           position: (378, 23),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                     ],
                     recursive: false,
                     position: (375, 9),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (373, 49),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optionalAttrs",
                 position: (380, 10),
                },
                arguments: [
                 BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (380, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "createMailUser",
                       position: (380, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (380, 47),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "mailUser",
                         position: (380, 51),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (380, 63),
                     },
                    ],
                    position: (380, 60),
                   },
                  ],
                  position: (380, 44),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (381, 9),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mailUser",
                           position: (381, 13),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Update,
                     operands: [
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "description",
                            position: (382, 11),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "Virtual Mail User",
                            position: (382, 26),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "isSystemUser",
                            position: (382, 46),
                           },
                          ],
                         },
                         Variable {
                          identifier: "true",
                          position: (382, 61),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (382, 9),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionalAttrs",
                        position: (382, 72),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (382, 87),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "mailGroup",
                              position: (382, 91),
                             },
                            ],
                           },
                           default: None,
                          },
                          Variable {
                           identifier: "null",
                           position: (382, 104),
                          },
                         ],
                         position: (382, 101),
                        },
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "group",
                              position: (383, 13),
                             },
                            ],
                           },
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (383, 21),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mailGroup",
                               position: (383, 25),
                              },
                             ],
                            },
                            default: None,
                           },
                          ),
                         ],
                         recursive: false,
                         position: (383, 11),
                        },
                       ],
                      },
                     ],
                     position: (382, 69),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (380, 69),
                 },
                ],
               },
              ],
              position: (380, 7),
             },
            ],
            position: (373, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (386, 5),
             },
             Raw {
              content: "groups",
              position: (386, 11),
             },
            ],
           },
           BinaryOperation {
            operator: Update,
            operands: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "dovenull",
                   position: (387, 7),
                  },
                  Raw {
                   content: "gid",
                   position: (387, 16),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (387, 22),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "ids",
                    position: (387, 29),
                   },
                   Raw {
                    content: "gids",
                    position: (387, 33),
                   },
                   Raw {
                    content: "dovenull2",
                    position: (387, 38),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
              position: (386, 20),
             },
             BinaryOperation {
              operator: Update,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optionalAttrs",
                 position: (388, 10),
                },
                arguments: [
                 BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (388, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "group",
                       position: (388, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "dovecot2",
                      position: (388, 39),
                     },
                    ],
                   },
                  ],
                  position: (388, 35),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "dovecot2",
                       position: (389, 7),
                      },
                      Raw {
                       content: "gid",
                       position: (389, 16),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (389, 22),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ids",
                        position: (389, 29),
                       },
                       Raw {
                        content: "gids",
                        position: (389, 33),
                       },
                       Raw {
                        content: "dovecot2",
                        position: (389, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                  position: (388, 50),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optionalAttrs",
                 position: (390, 10),
                },
                arguments: [
                 BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (390, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "createMailUser",
                       position: (390, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (390, 47),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "mailGroup",
                         position: (390, 51),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "null",
                      position: (390, 64),
                     },
                    ],
                    position: (390, 61),
                   },
                  ],
                  position: (390, 44),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (391, 9),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mailGroup",
                           position: (391, 13),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                     ],
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (391, 26),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (390, 70),
                 },
                ],
               },
              ],
              position: (390, 7),
             },
            ],
            position: (388, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (394, 5),
             },
             Raw {
              content: "etc",
              position: (394, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "dovecot/modules",
                 position: (394, 22),
                },
               ],
              },
             },
             Raw {
              content: "source",
              position: (394, 39),
             },
            ],
           },
           Variable {
            identifier: "modulesDir",
            position: (394, 48),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (395, 5),
             },
             Raw {
              content: "etc",
              position: (395, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "dovecot/dovecot.conf",
                 position: (395, 22),
                },
               ],
              },
             },
             Raw {
              content: "source",
              position: (395, 44),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (395, 53),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "configFile",
               position: (395, 57),
              },
             ],
            },
            default: None,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (397, 5),
             },
             Raw {
              content: "services",
              position: (397, 13),
             },
             Raw {
              content: "dovecot2",
              position: (397, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (398, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Dovecot IMAP/POP3 server",
                 position: (398, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (400, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (400, 18),
                  },
                 ],
                },
               ],
               position: (400, 15),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (401, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (401, 21),
                  },
                 ],
                },
               ],
               position: (401, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (402, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (402, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "configFile",
                    position: (402, 31),
                   },
                  ],
                 },
                 default: None,
                },
                Variable {
                 identifier: "modulesDir",
                 position: (402, 42),
                },
               ],
               position: (402, 25),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startLimitIntervalSec",
                 position: (404, 7),
                },
               ],
              },
              Int {
               value: 60,
               position: (404, 31),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (405, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (406, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "notify",
                    position: (406, 17),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (407, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "dovecotPkg",
                     position: (407, 24),
                    },
                   },
                   Raw {
                    content: "/sbin/dovecot -F",
                    position: (407, 35),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecReload",
                    position: (408, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "dovecotPkg",
                     position: (408, 25),
                    },
                   },
                   Raw {
                    content: "/sbin/doveadm reload",
                    position: (408, 36),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (409, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "on-failure",
                    position: (409, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RestartSec",
                    position: (410, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "1s",
                    position: (410, 23),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RuntimeDirectory",
                    position: (411, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "dovecot2",
                      position: (411, 31),
                     },
                    ],
                   },
                  ],
                  position: (411, 28),
                 },
                ),
               ],
               recursive: false,
               position: (405, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "preStart",
                 position: (417, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Addition,
               operands: [
                String {
                 parts: [
                  Raw {
                   content: "rm -rf ",
                   position: (418, 1),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "stateDir",
                    position: (418, 18),
                   },
                  },
                  Raw {
                   content: "/sieve\n",
                   position: (418, 27),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optionalString",
                  position: (419, 12),
                 },
                 arguments: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (419, 28),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "sieveScripts",
                        position: (419, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (419, 48),
                    },
                   ],
                   position: (419, 45),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "mkdir -p ",
                     position: (420, 1),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "stateDir",
                      position: (420, 20),
                     },
                    },
                    Raw {
                     content: "/sieve\n",
                     position: (420, 29),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "concatStringsSep",
                       position: (421, 11),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "\n",
                          position: (421, 29),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "mapAttrsToList",
                         position: (422, 9),
                        },
                        arguments: [
                         Function {
                          argument: Some(
                           "to",
                          ),
                          arguments: FunctionArguments {
                           arguments: [],
                           ellipsis: false,
                          },
                          definition: Function {
                           argument: Some(
                            "from",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: String {
                            parts: [
                             Raw {
                              content: "if [ -d ",
                              position: (424, 1),
                             },
                             Raw {
                              content: "'",
                              position: (424, 21),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "from",
                               position: (424, 24),
                              },
                             },
                             Raw {
                              content: "' ]; then\n  mkdir ",
                              position: (424, 29),
                             },
                             Raw {
                              content: "'",
                              position: (425, 21),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "stateDir",
                               position: (425, 24),
                              },
                             },
                             Raw {
                              content: "/sieve/",
                              position: (425, 33),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "to",
                               position: (425, 42),
                              },
                             },
                             Raw {
                              content: "'\n  cp -p \"",
                              position: (425, 45),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "from",
                               position: (426, 24),
                              },
                             },
                             Raw {
                              content: "/\"*.sieve ",
                              position: (426, 29),
                             },
                             Raw {
                              content: "'",
                              position: (426, 39),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "stateDir",
                               position: (426, 42),
                              },
                             },
                             Raw {
                              content: "/sieve/",
                              position: (426, 51),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "to",
                               position: (426, 60),
                              },
                             },
                             Raw {
                              content: "'\nelse\n  cp -p ",
                              position: (426, 63),
                             },
                             Raw {
                              content: "'",
                              position: (428, 21),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "from",
                               position: (428, 24),
                              },
                             },
                             Raw {
                              content: "' ",
                              position: (428, 29),
                             },
                             Raw {
                              content: "'",
                              position: (428, 31),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "stateDir",
                               position: (428, 34),
                              },
                             },
                             Raw {
                              content: "/sieve/",
                              position: (428, 43),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "to",
                               position: (428, 52),
                              },
                             },
                             Raw {
                              content: "'\nfi\n",
                              position: (428, 55),
                             },
                             Expression {
                              expression: PropertyAccess {
                               expression: Variable {
                                identifier: "pkgs",
                                position: (430, 15),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "dovecot_pigeonhole",
                                  position: (430, 20),
                                 },
                                ],
                               },
                               default: None,
                              },
                             },
                             Raw {
                              content: "/bin/sievec ",
                              position: (430, 39),
                             },
                             Raw {
                              content: "'",
                              position: (430, 51),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "stateDir",
                               position: (430, 54),
                              },
                             },
                             Raw {
                              content: "/sieve/",
                              position: (430, 63),
                             },
                             Expression {
                              expression: Variable {
                               identifier: "to",
                               position: (430, 72),
                              },
                             },
                             Raw {
                              content: "'\n",
                              position: (430, 75),
                             },
                            ],
                           },
                           position: (423, 15),
                          },
                          position: (423, 11),
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (432, 11),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "sieveScripts",
                             position: (432, 15),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\nchown -R ",
                     position: (433, 9),
                    },
                    Raw {
                     content: "'",
                     position: (434, 18),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (434, 21),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "mailUser",
                         position: (434, 25),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: ":",
                     position: (434, 34),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (434, 37),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "mailGroup",
                         position: (434, 41),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "' ",
                     position: (434, 51),
                    },
                    Raw {
                     content: "'",
                     position: (434, 53),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "stateDir",
                      position: (434, 56),
                     },
                    },
                    Raw {
                     content: "/sieve'\n",
                     position: (434, 65),
                    },
                   ],
                  },
                 ],
                },
               ],
               position: (419, 10),
              },
             ),
            ],
            recursive: false,
            position: (397, 33),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (438, 5),
             },
             Raw {
              content: "systemPackages",
              position: (438, 17),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "dovecotPkg",
              position: (438, 36),
             },
            ],
            position: (438, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "warnings",
              position: (440, 5),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (440, 16),
            },
            arguments: [
             FunctionApplication {
              function: Variable {
               identifier: "any",
               position: (440, 22),
              },
              arguments: [
               Variable {
                identifier: "isList",
                position: (440, 26),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "options",
                 position: (440, 33),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "services",
                   position: (440, 41),
                  },
                  Raw {
                   content: "dovecot2",
                   position: (440, 50),
                  },
                  Raw {
                   content: "mailboxes",
                   position: (440, 59),
                  },
                  Raw {
                   content: "definitions",
                   position: (440, 69),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "Declaring `services.dovecot2.mailboxes' as a list is deprecated and will break eval in 21.05! See the release notes for more info for migration.",
                  position: (441, 8),
                 },
                ],
               },
              ],
              position: (440, 82),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (444, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (446, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: LogicalAnd,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (446, 22),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sslServerCert",
                          position: (446, 26),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (446, 43),
                      },
                     ],
                     position: (446, 40),
                    },
                    BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (446, 53),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sslServerKey",
                          position: (446, 57),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (446, 73),
                      },
                     ],
                     position: (446, 70),
                    },
                   ],
                   position: (446, 49),
                  },
                  BinaryOperation {
                   operator: Implication,
                   operands: [
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (447, 13),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sslCACert",
                          position: (447, 17),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (447, 30),
                      },
                     ],
                     position: (447, 27),
                    },
                    UnaryOperation {
                     operator: Not,
                     operand: BinaryOperation {
                      operator: LogicalOr,
                      operands: [
                       BinaryOperation {
                        operator: EqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (447, 40),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "sslServerCert",
                             position: (447, 44),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "null",
                          position: (447, 61),
                         },
                        ],
                        position: (447, 58),
                       },
                       BinaryOperation {
                        operator: EqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (447, 69),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "sslServerKey",
                             position: (447, 73),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "null",
                          position: (447, 89),
                         },
                        ],
                        position: (447, 86),
                       },
                      ],
                      position: (447, 66),
                     },
                     position: (447, 38),
                    },
                   ],
                   position: (447, 35),
                  },
                 ],
                 position: (447, 9),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (448, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "dovecot needs both sslServerCert and sslServerKey defined for working crypto",
                   position: (448, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (445, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (451, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (451, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "showPAMFailure",
                      position: (451, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (451, 43),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enablePAM",
                      position: (451, 47),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (451, 40),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (452, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "dovecot is configured with showPAMFailure while enablePAM is disabled",
                   position: (452, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (450, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (455, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (455, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "sieveScripts",
                        position: (455, 25),
                       },
                      ],
                     },
                     default: None,
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (455, 41),
                    },
                   ],
                   position: (455, 38),
                  },
                  BinaryOperation {
                   operator: LogicalAnd,
                   operands: [
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (455, 48),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mailUser",
                          position: (455, 52),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (455, 64),
                      },
                     ],
                     position: (455, 61),
                    },
                    BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (455, 72),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mailGroup",
                          position: (455, 76),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (455, 89),
                      },
                     ],
                     position: (455, 86),
                    },
                   ],
                   position: (455, 69),
                  },
                 ],
                 position: (455, 44),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (456, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "dovecot requires mailUser and mailGroup to be set when sieveScripts is set",
                   position: (456, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (454, 7),
             },
            ],
            position: (444, 18),
           },
          ),
         ],
         recursive: false,
         position: (349, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (166, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}