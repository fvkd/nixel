---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "crossfire-server",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "serverPort",
        position: (7, 3),
       },
      ],
     },
     to: Int {
      value: 13327,
      position: (7, 16),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (9, 3),
        },
        Raw {
         content: "services",
         position: (9, 11),
        },
        Raw {
         content: "crossfire-server",
         position: (9, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (10, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (10, 14),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (11, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (11, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (11, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (12, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (12, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (13, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "If enabled, the Crossfire game server will be started at boot.\n",
                 position: (14, 1),
                },
               ],
               position: (13, 21),
              },
             },
            ],
            recursive: false,
            position: (10, 23),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "package",
            position: (18, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (18, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (19, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (19, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (19, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (20, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (20, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "crossfire-server",
                  position: (20, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (21, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (21, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.crossfire-server",
                   position: (21, 40),
                  },
                 ],
                 position: (21, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (22, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The package to use for the Crossfire server (and map/arch data, if you\ndon't change dataDir).\n",
                 position: (23, 1),
                },
               ],
               position: (22, 21),
              },
             },
            ],
            recursive: false,
            position: (18, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "dataDir",
            position: (28, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (28, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (29, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (29, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (29, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (30, 7),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (30, 20),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (30, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/share/crossfire",
                 position: (30, 32),
                },
               ],
               position: (30, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (31, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (31, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (31, 41),
                  },
                  Raw {
                   content: "$",
                   position: (31, 42),
                  },
                  Raw {
                   content: "{config.services.crossfire.package}/share/crossfire\"",
                   position: (31, 45),
                  },
                 ],
                 position: (31, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (32, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Where to load readonly data from -- maps, archetypes, treasure tables,\nand the like. If you plan to edit the data on the live server (rather\nthan overlaying the crossfire-maps and crossfire-arch packages and\nnixos-rebuilding), point this somewhere read-write and copy the data\nthere before starting the server.\n",
                 position: (33, 1),
                },
               ],
               position: (32, 21),
              },
             },
            ],
            recursive: false,
            position: (28, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "stateDir",
            position: (41, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (41, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (42, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (42, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (42, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (43, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/var/lib/crossfire",
                 position: (43, 18),
                },
               ],
               position: (43, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (44, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Where to store runtime data (save files, persistent items, etc).\n\nIf left at the default, this will be automatically created on server\nstartup if it does not already exist. If changed, it is the admin's\nresponsibility to make sure that the directory exists and is writeable\nby the `crossfire` user.\n",
                 position: (45, 1),
                },
               ],
               position: (44, 21),
              },
             },
            ],
            recursive: false,
            position: (41, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "openFirewall",
            position: (54, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (54, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (55, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (55, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (55, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (56, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (56, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (57, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to open ports in the firewall for the server.\n",
                 position: (58, 1),
                },
               ],
               position: (57, 21),
              },
             },
            ],
            recursive: false,
            position: (54, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "configFiles",
            position: (62, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (62, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (63, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (63, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (63, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (63, 28),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (63, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (64, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Text to append to the corresponding configuration files. Note that the\nfiles given in the example are *not* the complete set of files available\nto customize; look in /etc/crossfire after enabling the server to see\nthe available files, and read the comments in each file for detailed\ndocumentation on the format and what settings are available.\n\nNote that the motd, rules, and news files, if configured here, will\noverwrite the example files that come with the server, rather than being\nappended to them as the other configuration files are.\n",
                 position: (65, 1),
                },
               ],
               position: (64, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (75, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (75, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  dm_file = ",
                   position: (76, 1),
                  },
                  Raw {
                   content: "''",
                   position: (77, 21),
                  },
                  Raw {
                   content: "\n    admin:secret_password:localhost\n    jane:xyzzy:*\n  ",
                   position: (77, 24),
                  },
                  Raw {
                   content: "''",
                   position: (80, 11),
                  },
                  Raw {
                   content: ";\n  ban_file = ",
                   position: (80, 14),
                  },
                  Raw {
                   content: "''",
                   position: (81, 22),
                  },
                  Raw {
                   content: "\n    # Bob is a jerk\n    bob@*\n    # So is everyone on 192.168.86.255/24\n    *@192.168.86.\n  ",
                   position: (81, 25),
                  },
                  Raw {
                   content: "''",
                   position: (86, 11),
                  },
                  Raw {
                   content: ";\n  metaserver2 = ",
                   position: (86, 14),
                  },
                  Raw {
                   content: "''",
                   position: (87, 25),
                  },
                  Raw {
                   content: "\n    metaserver2_notification on\n    localhostname crossfire.example.net\n  ",
                   position: (87, 28),
                  },
                  Raw {
                   content: "''",
                   position: (90, 11),
                  },
                  Raw {
                   content: ";\n  motd = \"Welcome to CrossFire!\";\n  news = \"No news yet.\";\n  rules = \"Don't be a jerk.\";\n  settings = ",
                   position: (90, 14),
                  },
                  Raw {
                   content: "''",
                   position: (94, 22),
                  },
                  Raw {
                   content: "\n    # be nicer to newbies and harsher to experienced players\n    balanced_stat_loss true\n    # don't let players pick up and use admin-created items\n    real_wiz false\n  ",
                   position: (94, 25),
                  },
                  Raw {
                   content: "''",
                   position: (99, 11),
                  },
                  Raw {
                   content: ";\n}\n",
                   position: (99, 14),
                  },
                 ],
                 position: (75, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (102, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (102, 17),
              },
             },
            ],
            recursive: false,
            position: (62, 28),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (9, 39),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (106, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (106, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (106, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (106, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (107, 5),
             },
             Raw {
              content: "users",
              position: (107, 11),
             },
             Raw {
              content: "crossfire",
              position: (107, 17),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (108, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Crossfire server daemon user",
                 position: (108, 26),
                },
               ],
               position: (108, 25),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "home",
                 position: (109, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (109, 25),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "stateDir",
                  position: (109, 29),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "createHome",
                 position: (110, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (110, 25),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "isSystemUser",
                 position: (111, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (111, 25),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (112, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "crossfire",
                 position: (112, 26),
                },
               ],
               position: (112, 25),
              },
             },
            ],
            recursive: false,
            position: (107, 29),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (114, 5),
             },
             Raw {
              content: "groups",
              position: (114, 11),
             },
             Raw {
              content: "crossfire",
              position: (114, 18),
             },
            ],
           },
           to: Map {
            bindings: [],
            recursive: false,
            position: (114, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (121, 5),
             },
             Raw {
              content: "etc",
              position: (121, 17),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (121, 23),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "attrsets",
                position: (121, 27),
               },
               Raw {
                content: "mapAttrs'",
                position: (121, 36),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Parentheses {
              expression: Function {
               argument: Simple {
                identifier: "name",
               },
               definition: Function {
                argument: Simple {
                 identifier: "value",
                },
                definition: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (122, 21),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "attrsets",
                     position: (122, 25),
                    },
                    Raw {
                     content: "nameValuePair",
                     position: (122, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "crossfire/",
                     position: (122, 49),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "name",
                      position: (122, 61),
                     },
                    },
                   ],
                   position: (122, 48),
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "mode",
                        position: (123, 9),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "0644",
                        position: (123, 17),
                       },
                      ],
                      position: (123, 16),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "text",
                        position: (124, 9),
                       },
                      ],
                     },
                     to: BinaryOperation {
                      operator: Addition,
                      operands: [
                       Parentheses {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (125, 12),
                         },
                         arguments: [
                          Parentheses {
                           expression: UnaryOperation {
                            operator: Not,
                            operand: FunctionApplication {
                             function: Variable {
                              identifier: "elem",
                              position: (125, 29),
                             },
                             arguments: [
                              Variable {
                               identifier: "name",
                               position: (125, 34),
                              },
                              List {
                               elements: [
                                String {
                                 parts: [
                                  Raw {
                                   content: "motd",
                                   position: (125, 41),
                                  },
                                 ],
                                 position: (125, 40),
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "news",
                                   position: (125, 48),
                                  },
                                 ],
                                 position: (125, 47),
                                },
                                String {
                                 parts: [
                                  Raw {
                                   content: "rules",
                                   position: (125, 55),
                                  },
                                 ],
                                 position: (125, 54),
                                },
                               ],
                               position: (125, 39),
                              },
                             ],
                            },
                            position: (125, 28),
                           },
                           position: (125, 27),
                          },
                          Parentheses {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "fileContents",
                             position: (126, 14),
                            },
                            arguments: [
                             String {
                              parts: [
                               Expression {
                                expression: PropertyAccess {
                                 expression: Variable {
                                  identifier: "cfg",
                                  position: (126, 30),
                                 },
                                 attribute_path: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "package",
                                    position: (126, 34),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                               },
                               Raw {
                                content: "/etc/crossfire/",
                                position: (126, 42),
                               },
                               Expression {
                                expression: Variable {
                                 identifier: "name",
                                 position: (126, 59),
                                },
                               },
                              ],
                              position: (126, 27),
                             },
                            ],
                           },
                           position: (126, 13),
                          },
                         ],
                        },
                        position: (125, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "\n",
                          position: (127, 14),
                         },
                         Expression {
                          expression: Variable {
                           identifier: "value",
                           position: (127, 18),
                          },
                         },
                        ],
                        position: (127, 13),
                       },
                      ],
                      position: (127, 11),
                     },
                    },
                   ],
                   recursive: false,
                   position: (122, 68),
                  },
                 ],
                },
                position: (122, 14),
               },
               position: (122, 8),
              },
              position: (122, 7),
             },
             Parentheses {
              expression: BinaryOperation {
               operator: Update,
               operands: [
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "ban_file",
                      position: (129, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (129, 20),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "dm_file",
                      position: (130, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (130, 19),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "exp_table",
                      position: (131, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (131, 21),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "forbid",
                      position: (132, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (132, 18),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "metaserver2",
                      position: (133, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (133, 23),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "motd",
                      position: (134, 9),
                     },
                    ],
                   },
                   to: Parentheses {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "fileContents",
                      position: (134, 17),
                     },
                     arguments: [
                      String {
                       parts: [
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (134, 33),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "package",
                             position: (134, 37),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "/etc/crossfire/motd",
                         position: (134, 45),
                        },
                       ],
                       position: (134, 30),
                      },
                     ],
                    },
                    position: (134, 16),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "news",
                      position: (135, 9),
                     },
                    ],
                   },
                   to: Parentheses {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "fileContents",
                      position: (135, 17),
                     },
                     arguments: [
                      String {
                       parts: [
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (135, 33),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "package",
                             position: (135, 37),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "/etc/crossfire/news",
                         position: (135, 45),
                        },
                       ],
                       position: (135, 30),
                      },
                     ],
                    },
                    position: (135, 16),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "rules",
                      position: (136, 9),
                     },
                    ],
                   },
                   to: Parentheses {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "fileContents",
                      position: (136, 18),
                     },
                     arguments: [
                      String {
                       parts: [
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (136, 34),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "package",
                             position: (136, 38),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "/etc/crossfire/rules",
                         position: (136, 46),
                        },
                       ],
                       position: (136, 31),
                      },
                     ],
                    },
                    position: (136, 17),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "settings",
                      position: (137, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (137, 20),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "stat_bonus",
                      position: (138, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [],
                    position: (138, 22),
                   },
                  },
                 ],
                 recursive: false,
                 position: (128, 11),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (139, 12),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "configFiles",
                    position: (139, 16),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (139, 9),
              },
              position: (128, 10),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (141, 5),
             },
             Raw {
              content: "services",
              position: (141, 13),
             },
             Raw {
              content: "crossfire-server",
              position: (141, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (142, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Crossfire Server Daemon",
                 position: (142, 24),
                },
               ],
               position: (142, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (143, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (143, 26),
                  },
                 ],
                 position: (143, 25),
                },
               ],
               position: (143, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (144, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (144, 26),
                  },
                 ],
                 position: (144, 25),
                },
               ],
               position: (144, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (146, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mkMerge",
                position: (146, 23),
               },
               arguments: [
                List {
                 elements: [
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "ExecStart",
                        position: (148, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (148, 26),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "package",
                            position: (148, 30),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/crossfire-server -conf /etc/crossfire -local '",
                        position: (148, 38),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (148, 91),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "stateDir",
                            position: (148, 95),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "' -data '",
                        position: (148, 104),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (148, 115),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "dataDir",
                            position: (148, 119),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "'",
                        position: (148, 127),
                       },
                      ],
                      position: (148, 23),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "Restart",
                        position: (149, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "always",
                        position: (149, 22),
                       },
                      ],
                      position: (149, 21),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "User",
                        position: (150, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "crossfire",
                        position: (150, 19),
                       },
                      ],
                      position: (150, 18),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "Group",
                        position: (151, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "crossfire",
                        position: (151, 20),
                       },
                      ],
                      position: (151, 19),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "WorkingDirectory",
                        position: (152, 11),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (152, 30),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "stateDir",
                         position: (152, 34),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   recursive: false,
                   position: (147, 9),
                  },
                  Parentheses {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "mkIf",
                     position: (154, 10),
                    },
                    arguments: [
                     Parentheses {
                      expression: BinaryOperation {
                       operator: EqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (154, 16),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "stateDir",
                            position: (154, 20),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "/var/lib/crossfire",
                           position: (154, 33),
                          },
                         ],
                         position: (154, 32),
                        },
                       ],
                       position: (154, 29),
                      },
                      position: (154, 15),
                     },
                     Map {
                      bindings: [
                       Binding {
                        from: AttributePath {
                         parts: [
                          Raw {
                           content: "StateDirectory",
                           position: (155, 11),
                          },
                         ],
                        },
                        to: String {
                         parts: [
                          Raw {
                           content: "crossfire",
                           position: (155, 29),
                          },
                         ],
                         position: (155, 28),
                        },
                       },
                      ],
                      recursive: false,
                      position: (154, 54),
                     },
                    ],
                   },
                   position: (154, 9),
                  },
                 ],
                 position: (146, 31),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "preStart",
                 position: (167, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "if [ ! -e \"",
                 position: (168, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (168, 22),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "stateDir",
                     position: (168, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\"/bookarch ]; then\n  ",
                 position: (168, 35),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (169, 13),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "rsync",
                     position: (169, 18),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/rsync -a --chmod=u=rwX,go=rX \\\n    \"",
                 position: (169, 24),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (170, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (170, 20),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/var/crossfire/\" \"",
                 position: (170, 28),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (170, 48),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "stateDir",
                     position: (170, 52),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/\"\nfi\n",
                 position: (170, 61),
                },
               ],
               position: (167, 18),
              },
             },
            ],
            recursive: false,
            position: (141, 41),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "networking",
              position: (175, 5),
             },
             Raw {
              content: "firewall",
              position: (175, 16),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (175, 27),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (175, 32),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "openFirewall",
                 position: (175, 36),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "allowedTCPPorts",
                   position: (176, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  Variable {
                   identifier: "serverPort",
                   position: (176, 27),
                  },
                 ],
                 position: (176, 25),
                },
               },
              ],
              recursive: false,
              position: (175, 49),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (106, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (8, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}