---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: LetIn {
  bindings: [
   Inherit {
    from: Some(
     Variable {
      identifier: "lib",
      position: (9, 12),
     },
    ),
    attributes: [
     Raw {
      content: "types",
      position: (9, 17),
     },
    ],
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "maintainerModule",
       position: (11, 3),
      },
     ],
    },
    to: Function {
     argument: Destructured {
      identifier: None,
      arguments: [
       DestructuredArgument {
        identifier: "config",
        default: None,
       },
      ],
      ellipsis: true,
     },
     definition: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "options",
           position: (12, 5),
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "name",
              position: (13, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (13, 14),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkOption",
                position: (13, 18),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (14, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (14, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (14, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              recursive: false,
              position: (13, 27),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "email",
              position: (16, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (16, 15),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkOption",
                position: (16, 19),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (17, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (17, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (17, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              recursive: false,
              position: (16, 28),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "matrix",
              position: (19, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (19, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkOption",
                position: (19, 20),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (20, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (20, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nullOr",
                     position: (20, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (20, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "str",
                      position: (20, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (21, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "null",
                 position: (21, 19),
                },
               },
              ],
              recursive: false,
              position: (19, 29),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "github",
              position: (23, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (23, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkOption",
                position: (23, 20),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (24, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (24, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nullOr",
                     position: (24, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (24, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "str",
                      position: (24, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (25, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "null",
                 position: (25, 19),
                },
               },
              ],
              recursive: false,
              position: (23, 29),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "githubId",
              position: (27, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (27, 18),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkOption",
                position: (27, 22),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (28, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (28, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nullOr",
                     position: (28, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (28, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "ints",
                      position: (28, 35),
                     },
                     Raw {
                      content: "unsigned",
                      position: (28, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (29, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "null",
                 position: (29, 19),
                },
               },
              ],
              recursive: false,
              position: (27, 31),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "keys",
              position: (31, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (31, 14),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "mkOption",
                position: (31, 18),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (32, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (32, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "listOf",
                     position: (32, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (32, 30),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "submodule",
                       position: (32, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "options",
                          position: (33, 11),
                         },
                         Raw {
                          content: "longkeyid",
                          position: (33, 19),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "lib",
                          position: (33, 31),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "mkOption",
                            position: (33, 35),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         Map {
                          bindings: [
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "type",
                               position: (33, 46),
                              },
                             ],
                            },
                            to: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (33, 53),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "str",
                                position: (33, 59),
                               },
                              ],
                             },
                             default: None,
                            },
                           },
                          ],
                          recursive: false,
                          position: (33, 44),
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "options",
                          position: (34, 11),
                         },
                         Raw {
                          content: "fingerprint",
                          position: (34, 19),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "lib",
                          position: (34, 33),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "mkOption",
                            position: (34, 37),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         Map {
                          bindings: [
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "type",
                               position: (34, 48),
                              },
                             ],
                            },
                            to: PropertyAccess {
                             expression: Variable {
                              identifier: "types",
                              position: (34, 55),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "str",
                                position: (34, 61),
                               },
                              ],
                             },
                             default: None,
                            },
                           },
                          ],
                          recursive: false,
                          position: (34, 46),
                         },
                        ],
                       },
                      },
                     ],
                     recursive: false,
                     position: (32, 46),
                    },
                   ],
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (36, 9),
                  },
                 ],
                },
                to: List {
                 elements: [],
                 position: (36, 19),
                },
               },
              ],
              recursive: false,
              position: (31, 27),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (12, 15),
        },
       },
      ],
      recursive: false,
      position: (11, 39),
     },
     position: (11, 22),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "checkMaintainer",
       position: (41, 3),
      },
     ],
    },
    to: Function {
     argument: Simple {
      identifier: "handle",
     },
     definition: Function {
      argument: Simple {
       identifier: "uncheckedAttrs",
      },
      definition: LetIn {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "prefix",
            position: (43, 7),
           },
          ],
         },
         to: List {
          elements: [
           String {
            parts: [
             Raw {
              content: "lib",
              position: (43, 19),
             },
            ],
            position: (43, 18),
           },
           String {
            parts: [
             Raw {
              content: "maintainers",
              position: (43, 25),
             },
            ],
            position: (43, 24),
           },
           Variable {
            identifier: "handle",
            position: (43, 38),
           },
          ],
          position: (43, 16),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "checkedAttrs",
            position: (44, 7),
           },
          ],
         },
         to: PropertyAccess {
          expression: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (44, 23),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "modules",
               position: (44, 27),
              },
              Raw {
               content: "evalModules",
               position: (44, 35),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [
              Inherit {
               from: None,
               attributes: [
                Raw {
                 content: "prefix",
                 position: (45, 17),
                },
               ],
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "modules",
                  position: (46, 9),
                 },
                ],
               },
               to: List {
                elements: [
                 Variable {
                  identifier: "maintainerModule",
                  position: (47, 11),
                 },
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "_file",
                       position: (49, 13),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (49, 21),
                     },
                     arguments: [
                      Path {
                       parts: [
                        Raw {
                         content: "../../maintainers/maintainer-list.nix",
                         position: (49, 30),
                        },
                       ],
                       position: (49, 30),
                      },
                     ],
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "config",
                       position: (50, 13),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "uncheckedAttrs",
                     position: (50, 22),
                    },
                   },
                  ],
                  recursive: false,
                  position: (48, 11),
                 },
                ],
                position: (46, 19),
               },
              },
             ],
             recursive: false,
             position: (44, 47),
            },
           ],
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "config",
             position: (53, 10),
            },
           ],
          },
          default: None,
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "checkGithubId",
            position: (55, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (55, 23),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "optional",
              position: (55, 27),
             },
            ],
           },
           default: None,
          },
          arguments: [
           BinaryOperation {
            operator: LogicalAnd,
            operands: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "checkedAttrs",
                 position: (55, 37),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "github",
                   position: (55, 50),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (55, 60),
               },
              ],
              position: (55, 57),
             },
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "checkedAttrs",
                 position: (55, 68),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "githubId",
                   position: (55, 81),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (55, 93),
               },
              ],
              position: (55, 90),
             },
            ],
            position: (55, 65),
           },
           String {
            parts: [
             Raw {
              content: "echo ",
              position: (56, 1),
             },
             Expression {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (56, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "escapeShellArg",
                   position: (56, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (56, 36),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "showOption",
                     position: (56, 40),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "prefix",
                   position: (56, 51),
                  },
                 ],
                },
               ],
              },
             },
             Raw {
              content: "': If `github` is specified, `githubId` must be too.'\n# Calling this too often would hit non-authenticated API limits, but this\n# shouldn't happen since such errors will get fixed rather quickly\ninfo=$(curl -sS https://api.github.com/users/",
              position: (56, 59),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "checkedAttrs",
                position: (59, 56),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "github",
                  position: (59, 69),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: ")\nid=$(jq -r '.id' <<< \"$info\")\necho \"The GitHub ID for GitHub user ",
              position: (59, 76),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "checkedAttrs",
                position: (61, 47),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "github",
                  position: (61, 60),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: " is $id:\"\necho -e \"    githubId = $id;\\n\"\n",
              position: (61, 67),
             },
            ],
            position: (55, 99),
           },
          ],
         },
        },
       ],
       target: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (64, 8),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "deepSeq",
            position: (64, 12),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Variable {
          identifier: "checkedAttrs",
          position: (64, 20),
         },
         Variable {
          identifier: "checkGithubId",
          position: (64, 33),
         },
        ],
       },
       position: (42, 3),
      },
      position: (41, 29),
     },
     position: (41, 21),
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "missingGithubIds",
       position: (66, 3),
      },
     ],
    },
    to: FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (66, 22),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "concatLists",
         position: (66, 26),
        },
       ],
      },
      default: None,
     },
     arguments: [
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (66, 39),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "mapAttrsToList",
           position: (66, 43),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Variable {
         identifier: "checkMaintainer",
         position: (66, 58),
        },
        PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (66, 74),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (66, 78),
           },
          ],
         },
         default: None,
        },
       ],
      },
     ],
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "success",
       position: (68, 3),
      },
     ],
    },
    to: FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (68, 13),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "runCommand",
         position: (68, 18),
        },
       ],
      },
      default: None,
     },
     arguments: [
      String {
       parts: [
        Raw {
         content: "checked-maintainers-success",
         position: (68, 30),
        },
       ],
       position: (68, 29),
      },
      Map {
       bindings: [],
       recursive: false,
       position: (68, 59),
      },
      String {
       parts: [
        Raw {
         content: ">$out",
         position: (68, 63),
        },
       ],
       position: (68, 62),
      },
     ],
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "failure",
       position: (70, 3),
      },
     ],
    },
    to: FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (70, 13),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "runCommand",
         position: (70, 18),
        },
       ],
      },
      default: None,
     },
     arguments: [
      String {
       parts: [
        Raw {
         content: "checked-maintainers-failure",
         position: (70, 30),
        },
       ],
       position: (70, 29),
      },
      Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "nativeBuildInputs",
            position: (71, 5),
           },
          ],
         },
         to: List {
          elements: [
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (71, 27),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "curl",
               position: (71, 32),
              },
             ],
            },
            default: None,
           },
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (71, 37),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "jq",
               position: (71, 42),
              },
             ],
            },
            default: None,
           },
          ],
          position: (71, 25),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "outputHash",
            position: (72, 5),
           },
          ],
         },
         to: String {
          parts: [
           Raw {
            content: "sha256:",
            position: (72, 19),
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (72, 28),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "fakeSha256",
                position: (72, 32),
               },
              ],
             },
             default: None,
            },
           },
          ],
          position: (72, 18),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "outputHAlgo",
            position: (73, 5),
           },
          ],
         },
         to: String {
          parts: [
           Raw {
            content: "sha256",
            position: (73, 20),
           },
          ],
          position: (73, 19),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "outputHashMode",
            position: (74, 5),
           },
          ],
         },
         to: String {
          parts: [
           Raw {
            content: "flat",
            position: (74, 23),
           },
          ],
          position: (74, 22),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "SSL_CERT_FILE",
            position: (75, 5),
           },
          ],
         },
         to: String {
          parts: [
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (75, 24),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "cacert",
                position: (75, 29),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "/etc/ssl/certs/ca-bundle.crt",
            position: (75, 36),
           },
          ],
          position: (75, 21),
         },
        },
       ],
       recursive: false,
       position: (70, 59),
      },
      String {
       parts: [
        Raw {
         content: "",
         position: (77, 1),
        },
        Expression {
         expression: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (77, 7),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "concatStringsSep",
              position: (77, 11),
             },
            ],
           },
           default: None,
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
              position: (77, 29),
             },
            ],
            position: (77, 28),
           },
           Variable {
            identifier: "missingGithubIds",
            position: (77, 33),
           },
          ],
         },
        },
        Raw {
         content: "\nexit 1\n",
         position: (77, 50),
        },
       ],
       position: (76, 5),
      },
     ],
    },
   },
  ],
  target: IfThenElse {
   predicate: BinaryOperation {
    operator: EqualTo,
    operands: [
     Variable {
      identifier: "missingGithubIds",
      position: (80, 7),
     },
     List {
      elements: [],
      position: (80, 27),
     },
    ],
    position: (80, 24),
   },
   then: Variable {
    identifier: "success",
    position: (80, 35),
   },
   else_: Variable {
    identifier: "failure",
    position: (80, 48),
   },
   position: (80, 4),
  },
  position: (8, 1),
 },
 position: (3, 1),
}