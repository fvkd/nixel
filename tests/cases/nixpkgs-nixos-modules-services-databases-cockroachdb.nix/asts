---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "cockroachdb",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "crdb",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (7, 10),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "package",
         position: (7, 14),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "escape",
        position: (9, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "builtins",
        position: (9, 15),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "replaceStrings",
          position: (9, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       List {
        elements: [
         String {
          parts: [
           Raw {
            content: "%",
            position: (9, 41),
           },
          ],
          position: (9, 40),
         },
        ],
        position: (9, 39),
       },
       List {
        elements: [
         String {
          parts: [
           Raw {
            content: "%%",
            position: (9, 47),
           },
          ],
          position: (9, 46),
         },
        ],
        position: (9, 45),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "ifNotNull",
        position: (10, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "v",
      },
      definition: Function {
       argument: Simple {
        identifier: "s",
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "optionalString",
         position: (10, 21),
        },
        arguments: [
         Parentheses {
          expression: BinaryOperation {
           operator: NotEqualTo,
           operands: [
            Variable {
             identifier: "v",
             position: (10, 37),
            },
            Variable {
             identifier: "null",
             position: (10, 42),
            },
           ],
           position: (10, 39),
          },
          position: (10, 36),
         },
         Variable {
          identifier: "s",
          position: (10, 48),
         },
        ],
       },
       position: (10, 18),
      },
      position: (10, 15),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "startupCommand",
        position: (12, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (12, 20),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "concatStringsSep",
          position: (12, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: " ",
          position: (12, 42),
         },
        ],
        position: (12, 41),
       },
       List {
        elements: [
         String {
          parts: [
           Interpolation {
            expression: Variable {
             identifier: "crdb",
             position: (14, 10),
            },
           },
           Raw {
            content: "/bin/cockroach start",
            position: (14, 15),
           },
          ],
          position: (14, 7),
         },
         String {
          parts: [
           Raw {
            content: "--logtostderr",
            position: (15, 8),
           },
          ],
          position: (15, 7),
         },
         String {
          parts: [
           Raw {
            content: "--store=/var/lib/cockroachdb",
            position: (16, 8),
           },
          ],
          position: (16, 7),
         },
         Parentheses {
          expression: FunctionApplication {
           function: Variable {
            identifier: "ifNotNull",
            position: (17, 8),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (17, 18),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "locality",
                position: (17, 22),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "--locality='",
               position: (17, 32),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (17, 46),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "locality",
                   position: (17, 50),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "'",
               position: (17, 59),
              },
             ],
             position: (17, 31),
            },
           ],
          },
          position: (17, 7),
         },
         String {
          parts: [
           Raw {
            content: "--http-addr='",
            position: (20, 8),
           },
           Interpolation {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (20, 23),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "http",
                position: (20, 27),
               },
               Raw {
                content: "address",
                position: (20, 32),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: ":",
            position: (20, 40),
           },
           Interpolation {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (20, 43),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (20, 52),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "http",
                  position: (20, 56),
                 },
                 Raw {
                  content: "port",
                  position: (20, 61),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "'",
            position: (20, 66),
           },
          ],
          position: (20, 7),
         },
         String {
          parts: [
           Raw {
            content: "--listen-addr='",
            position: (23, 8),
           },
           Interpolation {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (23, 25),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "listen",
                position: (23, 29),
               },
               Raw {
                content: "address",
                position: (23, 36),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: ":",
            position: (23, 44),
           },
           Interpolation {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (23, 47),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (23, 56),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "listen",
                  position: (23, 60),
                 },
                 Raw {
                  content: "port",
                  position: (23, 67),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "'",
            position: (23, 72),
           },
          ],
          position: (23, 7),
         },
         Parentheses {
          expression: FunctionApplication {
           function: Variable {
            identifier: "ifNotNull",
            position: (26, 8),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (26, 18),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "join",
                position: (26, 22),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "--join=",
               position: (26, 28),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (26, 37),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "join",
                   position: (26, 41),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             position: (26, 27),
            },
           ],
          },
          position: (26, 7),
         },
         String {
          parts: [
           Raw {
            content: "--cache='",
            position: (29, 8),
           },
           Interpolation {
            expression: FunctionApplication {
             function: Variable {
              identifier: "escape",
              position: (29, 19),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (29, 26),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "cache",
                  position: (29, 30),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "'",
            position: (29, 36),
           },
          ],
          position: (29, 7),
         },
         String {
          parts: [
           Raw {
            content: "--max-sql-memory='",
            position: (30, 8),
           },
           Interpolation {
            expression: FunctionApplication {
             function: Variable {
              identifier: "escape",
              position: (30, 28),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (30, 35),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "maxSqlMemory",
                  position: (30, 39),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "'",
            position: (30, 52),
           },
          ],
          position: (30, 7),
         },
         Parentheses {
          expression: IfThenElse {
           predicate: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (33, 11),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "insecure",
               position: (33, 15),
              },
             ],
            },
            default: None,
           },
           then: String {
            parts: [
             Raw {
              content: "--insecure",
              position: (33, 30),
             },
            ],
            position: (33, 29),
           },
           else_: String {
            parts: [
             Raw {
              content: "--certs-dir=",
              position: (33, 48),
             },
             Interpolation {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (33, 62),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "certsDir",
                  position: (33, 66),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (33, 47),
           },
           position: (33, 8),
          },
          position: (33, 7),
         },
        ],
        position: (13, 5),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "addressOption",
        position: (36, 5),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "descr",
      },
      definition: Function {
       argument: Simple {
        identifier: "defaultPort",
       },
       definition: Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "address",
             position: (37, 7),
            },
           ],
          },
          to: FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (37, 17),
           },
           arguments: [
            Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "type",
                  position: (38, 9),
                 },
                ],
               },
               to: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (38, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "str",
                   position: (38, 22),
                  },
                 ],
                },
                default: None,
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "default",
                  position: (39, 9),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "localhost",
                  position: (39, 20),
                 },
                ],
                position: (39, 19),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "description",
                  position: (40, 9),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "Address to bind to for ",
                  position: (40, 24),
                 },
                 Interpolation {
                  expression: Variable {
                   identifier: "descr",
                   position: (40, 49),
                  },
                 },
                ],
                position: (40, 23),
               },
              },
             ],
             recursive: false,
             position: (37, 26),
            },
           ],
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "port",
             position: (43, 7),
            },
           ],
          },
          to: FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (43, 14),
           },
           arguments: [
            Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "type",
                  position: (44, 9),
                 },
                ],
               },
               to: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (44, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "port",
                   position: (44, 22),
                  },
                 ],
                },
                default: None,
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "default",
                  position: (45, 9),
                 },
                ],
               },
               to: Variable {
                identifier: "defaultPort",
                position: (45, 19),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "description",
                  position: (46, 9),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "Port to bind to for ",
                  position: (46, 24),
                 },
                 Interpolation {
                  expression: Variable {
                   identifier: "descr",
                   position: (46, 46),
                  },
                 },
                ],
                position: (46, 23),
               },
              },
             ],
             recursive: false,
             position: (43, 23),
            },
           ],
          },
         },
        ],
        recursive: false,
        position: (36, 41),
       },
       position: (36, 28),
      },
      position: (36, 21),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (52, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (53, 5),
           },
           Raw {
            content: "cockroachdb",
            position: (53, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (54, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (54, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "CockroachDB Server",
                 position: (54, 32),
                },
               ],
               position: (54, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "listen",
               position: (56, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "addressOption",
              position: (56, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "intra-cluster communication",
                 position: (56, 31),
                },
               ],
               position: (56, 30),
              },
              Int {
               value: 26257,
               position: (56, 60),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "http",
               position: (58, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "addressOption",
              position: (58, 14),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "http-based Admin UI",
                 position: (58, 29),
                },
               ],
               position: (58, 28),
              },
              Int {
               value: 8080,
               position: (58, 50),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "locality",
               position: (60, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (60, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (61, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (61, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (61, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (61, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (62, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "An ordered, comma-separated list of key-value pairs that describe the\ntopography of the machine. Topography might include country,\ndatacenter or rack designations. Data is automatically replicated to\nmaximize diversities of each tier. The order of tiers is used to\ndetermine the priority of the diversity, so the more inclusive\nlocalities like country should come before less inclusive localities\nlike datacenter.  The tiers and order must be the same on all nodes.\nIncluding more tiers is better than including fewer. For example:\n\n<literal>\n    country=us,region=us-west,datacenter=us-west-1b,rack=12\n    country=ca,region=ca-east,datacenter=ca-east-2,rack=4\n\n    planet=earth,province=manitoba,colo=secondary,power=3\n</literal>\n",
                    position: (64, 1),
                   },
                  ],
                  position: (63, 23),
                 },
                },
               ],
               recursive: false,
               position: (60, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "join",
               position: (82, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (82, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (83, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (83, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (83, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (83, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (83, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (84, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (84, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (85, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The addresses for connecting the node to a cluster.",
                    position: (85, 24),
                   },
                  ],
                  position: (85, 23),
                 },
                },
               ],
               recursive: false,
               position: (82, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "insecure",
               position: (88, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (88, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (89, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (89, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (89, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (90, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Run in insecure mode.",
                    position: (91, 24),
                   },
                  ],
                  position: (91, 23),
                 },
                },
               ],
               recursive: false,
               position: (88, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "certsDir",
               position: (94, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (94, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (95, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (95, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (95, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (95, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (95, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (96, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (96, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (97, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The path to the certificate directory.",
                    position: (97, 24),
                   },
                  ],
                  position: (97, 23),
                 },
                },
               ],
               recursive: false,
               position: (94, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "user",
               position: (100, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (100, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (101, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (101, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (102, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "cockroachdb",
                    position: (102, 20),
                   },
                  ],
                  position: (102, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (103, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "User account under which CockroachDB runs",
                    position: (103, 24),
                   },
                  ],
                  position: (103, 23),
                 },
                },
               ],
               recursive: false,
               position: (100, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "group",
               position: (106, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (106, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (107, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (107, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (107, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (108, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "cockroachdb",
                    position: (108, 20),
                   },
                  ],
                  position: (108, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (109, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "User account under which CockroachDB runs",
                    position: (109, 24),
                   },
                  ],
                  position: (109, 23),
                 },
                },
               ],
               recursive: false,
               position: (106, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "openPorts",
               position: (112, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (112, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (113, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (113, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (113, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (114, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (114, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (115, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Open firewall ports for cluster communication by default",
                    position: (115, 24),
                   },
                  ],
                  position: (115, 23),
                 },
                },
               ],
               recursive: false,
               position: (112, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "cache",
               position: (118, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (118, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (119, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (119, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (119, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (120, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "25%",
                    position: (120, 20),
                   },
                  ],
                  position: (120, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (121, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The total size for caches.\n\nThis can be a percentage, expressed with a fraction sign or as a\ndecimal-point number, or any bytes-based unit. For example,\n<literal>\"25%\"</literal>, <literal>\"0.25\"</literal> both represent\n25% of the available system memory. The values\n<literal>\"1000000000\"</literal> and <literal>\"1GB\"</literal> both\nrepresent 1 gigabyte of memory.\n\n",
                    position: (122, 1),
                   },
                  ],
                  position: (121, 23),
                 },
                },
               ],
               recursive: false,
               position: (118, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "maxSqlMemory",
               position: (134, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (134, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (135, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (135, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (135, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (136, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "25%",
                    position: (136, 20),
                   },
                  ],
                  position: (136, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (137, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The maximum in-memory storage capacity available to store temporary\ndata for SQL queries.\n\nThis can be a percentage, expressed with a fraction sign or as a\ndecimal-point number, or any bytes-based unit. For example,\n<literal>\"25%\"</literal>, <literal>\"0.25\"</literal> both represent\n25% of the available system memory. The values\n<literal>\"1000000000\"</literal> and <literal>\"1GB\"</literal> both\nrepresent 1 gigabyte of memory.\n",
                    position: (138, 1),
                   },
                  ],
                  position: (137, 23),
                 },
                },
               ],
               recursive: false,
               position: (134, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (150, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (150, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (151, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (151, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (151, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (152, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (152, 19),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "cockroachdb",
                     position: (152, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (153, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (153, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.cockroachdb",
                      position: (153, 42),
                     },
                    ],
                    position: (153, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (154, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The CockroachDB derivation to use for running the service.\n\nThis would primarily be useful to enable Enterprise Edition features\nin your own custom CockroachDB build (Nixpkgs CockroachDB binaries\nonly contain open source features and open source code).\n",
                    position: (155, 1),
                   },
                  ],
                  position: (154, 23),
                 },
                },
               ],
               recursive: false,
               position: (150, 26),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (53, 28),
         },
        },
       ],
       recursive: false,
       position: (52, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (165, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (165, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (165, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (165, 24),
           },
           Raw {
            content: "cockroachdb",
            position: (165, 33),
           },
           Raw {
            content: "enable",
            position: (165, 45),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (166, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (167, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  UnaryOperation {
                   operator: Not,
                   operand: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (167, 22),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "insecure",
                       position: (167, 26),
                      },
                     ],
                    },
                    default: None,
                   },
                   position: (167, 21),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (167, 38),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "certsDir",
                        position: (167, 42),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (167, 54),
                    },
                   ],
                   position: (167, 51),
                  },
                 ],
                 position: (167, 35),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (168, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "CockroachDB must have a set of SSL certificates (.certsDir), or run in Insecure Mode (.insecure = true)",
                   position: (168, 20),
                  },
                 ],
                 position: (168, 19),
                },
               },
              ],
              recursive: false,
              position: (167, 7),
             },
            ],
            position: (166, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (172, 5),
             },
             Raw {
              content: "systemPackages",
              position: (172, 17),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "crdb",
              position: (172, 36),
             },
            ],
            position: (172, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (174, 5),
             },
             Raw {
              content: "users",
              position: (174, 11),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (174, 19),
            },
            arguments: [
             Parentheses {
              expression: BinaryOperation {
               operator: EqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (174, 34),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "user",
                    position: (174, 38),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "cockroachdb",
                   position: (174, 47),
                  },
                 ],
                 position: (174, 46),
                },
               ],
               position: (174, 43),
              },
              position: (174, 33),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "cockroachdb",
                   position: (175, 7),
                  },
                 ],
                },
                to: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "description",
                      position: (176, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "CockroachDB Server User",
                      position: (176, 24),
                     },
                    ],
                    position: (176, 23),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "uid",
                      position: (177, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (177, 23),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "ids",
                       position: (177, 30),
                      },
                      Raw {
                       content: "uids",
                       position: (177, 34),
                      },
                      Raw {
                       content: "cockroachdb",
                       position: (177, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "group",
                      position: (178, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (178, 23),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "group",
                       position: (178, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 recursive: false,
                 position: (175, 21),
                },
               },
              ],
              recursive: false,
              position: (174, 61),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (182, 5),
             },
             Raw {
              content: "groups",
              position: (182, 11),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "optionalAttrs",
             position: (182, 20),
            },
            arguments: [
             Parentheses {
              expression: BinaryOperation {
               operator: EqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (182, 35),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "group",
                    position: (182, 39),
                   },
                  ],
                 },
                 default: None,
                },
                String {
                 parts: [
                  Raw {
                   content: "cockroachdb",
                   position: (182, 49),
                  },
                 ],
                 position: (182, 48),
                },
               ],
               position: (182, 45),
              },
              position: (182, 34),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "cockroachdb",
                   position: (183, 7),
                  },
                  Raw {
                   content: "gid",
                   position: (183, 19),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (183, 25),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "ids",
                    position: (183, 32),
                   },
                   Raw {
                    content: "gids",
                    position: (183, 36),
                   },
                   Raw {
                    content: "cockroachdb",
                    position: (183, 41),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              recursive: false,
              position: (182, 63),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "networking",
              position: (186, 5),
             },
             Raw {
              content: "firewall",
              position: (186, 16),
             },
             Raw {
              content: "allowedTCPPorts",
              position: (186, 25),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (186, 43),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "optionals",
                position: (186, 47),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (186, 57),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "openPorts",
                 position: (186, 61),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (187, 9),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "http",
                   position: (187, 13),
                  },
                  Raw {
                   content: "port",
                   position: (187, 18),
                  },
                 ],
                },
                default: None,
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (187, 23),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listen",
                   position: (187, 27),
                  },
                  Raw {
                   content: "port",
                   position: (187, 34),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (187, 7),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (189, 5),
             },
             Raw {
              content: "services",
              position: (189, 13),
             },
             Raw {
              content: "cockroachdb",
              position: (189, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (190, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "CockroachDB Server",
                 position: (190, 26),
                },
               ],
               position: (190, 25),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "documentation",
                 position: (191, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "man:cockroach(1)",
                   position: (191, 28),
                  },
                 ],
                 position: (191, 27),
                },
                String {
                 parts: [
                  Raw {
                   content: "https://www.cockroachlabs.com",
                   position: (191, 47),
                  },
                 ],
                 position: (191, 46),
                },
               ],
               position: (191, 25),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (193, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (193, 23),
                  },
                 ],
                 position: (193, 22),
                },
                String {
                 parts: [
                  Raw {
                   content: "time-sync.target",
                   position: (193, 40),
                  },
                 ],
                 position: (193, 39),
                },
               ],
               position: (193, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "requires",
                 position: (194, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "time-sync.target",
                   position: (194, 23),
                  },
                 ],
                 position: (194, 22),
                },
               ],
               position: (194, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (195, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (195, 23),
                  },
                 ],
                 position: (195, 22),
                },
               ],
               position: (195, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "unitConfig",
                 position: (197, 9),
                },
                Raw {
                 content: "RequiresMountsFor",
                 position: (197, 20),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/var/lib/cockroachdb",
                 position: (197, 41),
                },
               ],
               position: (197, 40),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (199, 9),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (200, 13),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "startupCommand",
                  position: (200, 25),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Type",
                    position: (201, 13),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "notify",
                    position: (201, 21),
                   },
                  ],
                  position: (201, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (202, 13),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (202, 20),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "user",
                     position: (202, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "StateDirectory",
                    position: (203, 13),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "cockroachdb",
                    position: (203, 31),
                   },
                  ],
                  position: (203, 30),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "StateDirectoryMode",
                    position: (204, 13),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "0700",
                    position: (204, 35),
                   },
                  ],
                  position: (204, 34),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (206, 13),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (206, 24),
                   },
                  ],
                  position: (206, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "TimeoutStopSec",
                    position: (210, 13),
                   },
                  ],
                 },
                 to: Int {
                  value: 60,
                  position: (210, 30),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RestartSec",
                    position: (211, 13),
                   },
                  ],
                 },
                 to: Int {
                  value: 10,
                  position: (211, 26),
                 },
                },
               ],
               recursive: false,
               position: (200, 11),
              },
             },
            ],
            recursive: false,
            position: (190, 7),
           },
          },
         ],
         recursive: false,
         position: (165, 52),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (216, 3),
        },
        Raw {
         content: "maintainers",
         position: (216, 8),
        },
       ],
      },
      to: With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (216, 27),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "maintainers",
           position: (216, 31),
          },
         ],
        },
        default: None,
       },
       target: List {
        elements: [
         Variable {
          identifier: "thoughtpolice",
          position: (216, 46),
         },
        ],
        position: (216, 44),
       },
       position: (216, 22),
      },
     },
    ],
    recursive: false,
    position: (51, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}