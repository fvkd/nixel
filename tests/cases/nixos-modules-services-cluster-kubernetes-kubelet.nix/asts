---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "top",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "kubernetes",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "otop",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "options",
       position: (7, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (7, 18),
        },
        Raw {
         content: "kubernetes",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "top",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "kubelet",
         position: (8, 13),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cniConfig",
        position: (10, 3),
       },
      ],
     },
     IfThenElse {
      predicate: BinaryOperation {
       operator: LogicalAnd,
       operands: [
        BinaryOperation {
         operator: NotEqualTo,
         operands: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (11, 8),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "cni",
              position: (11, 12),
             },
             Raw {
              content: "config",
              position: (11, 16),
             },
            ],
           },
           default: None,
          },
          List {
           elements: [],
           position: (11, 26),
          },
         ],
         position: (11, 23),
        },
        BinaryOperation {
         operator: NotEqualTo,
         operands: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (11, 32),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "cni",
              position: (11, 36),
             },
             Raw {
              content: "configDir",
              position: (11, 40),
             },
            ],
           },
           default: None,
          },
          Variable {
           identifier: "null",
           position: (11, 53),
          },
         ],
         position: (11, 50),
        },
       ],
       position: (11, 29),
      },
      then: FunctionApplication {
       function: Variable {
        identifier: "throw",
        position: (12, 7),
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "Verbatim CNI-config and CNI configDir cannot both be set.",
           position: (12, 14),
          },
         ],
        },
       ],
      },
      else_: IfThenElse {
       predicate: BinaryOperation {
        operator: NotEqualTo,
        operands: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (13, 13),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "cni",
             position: (13, 17),
            },
            Raw {
             content: "configDir",
             position: (13, 21),
            },
           ],
          },
          default: None,
         },
         Variable {
          identifier: "null",
          position: (13, 34),
         },
        ],
        position: (13, 31),
       },
       then: PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (14, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "cni",
           position: (14, 11),
          },
          Raw {
           content: "configDir",
           position: (14, 15),
          },
         ],
        },
        default: None,
       },
       else_: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (16, 8),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "buildEnv",
            position: (16, 13),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "name",
               position: (17, 9),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubernetes-cni-config",
               position: (17, 17),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "paths",
               position: (18, 9),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "imap",
              position: (18, 17),
             },
             arguments: [
              Function {
               argument: Some(
                "i",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Function {
                argument: Some(
                 "entry",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (19, 11),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "writeTextDir",
                     position: (19, 16),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "toString",
                       position: (19, 32),
                      },
                      arguments: [
                       BinaryOperation {
                        operator: Addition,
                        operands: [
                         Int {
                          value: 10,
                          position: (19, 42),
                         },
                         Variable {
                          identifier: "i",
                          position: (19, 45),
                         },
                        ],
                        position: (19, 44),
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "-",
                     position: (19, 48),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "entry",
                       position: (19, 51),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "type",
                         position: (19, 57),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: ".conf",
                     position: (19, 62),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "builtins",
                     position: (19, 70),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "toJSON",
                       position: (19, 79),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "entry",
                     position: (19, 86),
                    },
                   ],
                  },
                 ],
                },
                position: (18, 26),
               },
               position: (18, 23),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (20, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "cni",
                  position: (20, 15),
                 },
                 Raw {
                  content: "config",
                  position: (20, 19),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (16, 22),
         },
        ],
       },
       position: (13, 10),
      },
      position: (11, 5),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "infraContainer",
        position: (23, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (23, 20),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "dockerTools",
          position: (23, 25),
         },
         Raw {
          content: "buildImage",
          position: (23, 37),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (24, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "pause",
             position: (24, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "tag",
             position: (25, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "latest",
             position: (25, 12),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "contents",
             position: (26, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "top",
            position: (26, 16),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "package",
              position: (26, 20),
             },
             Raw {
              content: "pause",
              position: (26, 28),
             },
            ],
           },
           default: None,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "config",
             position: (27, 5),
            },
            Raw {
             content: "Cmd",
             position: (27, 12),
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "/bin/pause",
               position: (27, 20),
              },
             ],
            },
           ],
           position: (27, 18),
          },
         ),
        ],
        recursive: false,
        position: (23, 48),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "kubeconfig",
        position: (30, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "top",
        position: (30, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "lib",
          position: (30, 20),
         },
         Raw {
          content: "mkKubeConfig",
          position: (30, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "kubelet",
          position: (30, 38),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (30, 47),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "kubeconfig",
           position: (30, 51),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "manifestPath",
        position: (32, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "kubernetes/manifests",
        position: (32, 19),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "taintOptions",
        position: (34, 3),
       },
      ],
     },
     With {
      expression: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (34, 23),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "types",
          position: (34, 27),
         },
        ],
       },
       default: None,
      },
      target: Function {
       argument: None,
       arguments: FunctionArguments {
        arguments: [
         FunctionArgument {
          identifier: "name",
          default: None,
         },
        ],
        ellipsis: true,
       },
       definition: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (35, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "key",
                position: (36, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (36, 13),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (37, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Key of taint.",
                     position: (37, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (38, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "name",
                   position: (38, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "defaultText",
                     position: (39, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "literalDocBook",
                    position: (39, 23),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "Name of this submodule.",
                       position: (39, 39),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (40, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "str",
                   position: (40, 16),
                  },
                 ),
                ],
                recursive: false,
                position: (36, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "value",
                position: (42, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (42, 15),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (43, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Value of taint.",
                     position: (43, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (44, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "str",
                   position: (44, 16),
                  },
                 ),
                ],
                recursive: false,
                position: (42, 24),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "effect",
                position: (46, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (46, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (47, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Effect of taint.",
                     position: (47, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (48, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "NoSchedule",
                     position: (48, 20),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (49, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "enum",
                    position: (49, 16),
                   },
                   arguments: [
                    List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "NoSchedule",
                         position: (49, 23),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "PreferNoSchedule",
                         position: (49, 36),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "NoExecute",
                         position: (49, 55),
                        },
                       ],
                      },
                     ],
                     position: (49, 21),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (46, 25),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (35, 15),
          },
         ),
        ],
        recursive: false,
        position: (34, 49),
       },
       position: (34, 34),
      },
      position: (34, 18),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "taints",
        position: (54, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "concatMapStringsSep",
       position: (54, 12),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: ",",
          position: (54, 33),
         },
        ],
       },
       Function {
        argument: Some(
         "v",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: String {
         parts: [
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "v",
             position: (54, 43),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "key",
               position: (54, 45),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: "=",
           position: (54, 49),
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "v",
             position: (54, 52),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "value",
               position: (54, 54),
              },
             ],
            },
            default: None,
           },
          },
          Raw {
           content: ":",
           position: (54, 60),
          },
          Expression {
           expression: PropertyAccess {
            expression: Variable {
             identifier: "v",
             position: (54, 63),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "effect",
               position: (54, 65),
              },
             ],
            },
            default: None,
           },
          },
         ],
        },
        position: (54, 37),
       },
       FunctionApplication {
        function: Variable {
         identifier: "mapAttrsToList",
         position: (54, 76),
        },
        arguments: [
         Function {
          argument: Some(
           "n",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: Function {
           argument: Some(
            "v",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Variable {
            identifier: "v",
            position: (54, 98),
           },
           position: (54, 95),
          },
          position: (54, 92),
         },
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (54, 101),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "taints",
             position: (54, 105),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (57, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (58, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (58, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
               position: (58, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubelet",
               position: (58, 55),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "applyManifests",
               position: (58, 65),
              },
             ],
            },
           ],
           position: (58, 28),
          },
          String {
           parts: [],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (59, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (59, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
               position: (59, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubelet",
               position: (59, 55),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "cadvisorPort",
               position: (59, 65),
              },
             ],
            },
           ],
           position: (59, 28),
          },
          String {
           parts: [],
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (60, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (60, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubernetes",
               position: (60, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "kubelet",
               position: (60, 55),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "allowPrivileged",
               position: (60, 65),
              },
             ],
            },
           ],
           position: (60, 28),
          },
          String {
           parts: [],
          },
         ],
        },
       ],
       position: (57, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (64, 3),
        },
        Raw {
         content: "services",
         position: (64, 11),
        },
        Raw {
         content: "kubernetes",
         position: (64, 20),
        },
        Raw {
         content: "kubelet",
         position: (64, 31),
        },
       ],
      },
      With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (64, 46),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "types",
           position: (64, 50),
          },
         ],
        },
        default: None,
       },
       target: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "address",
             position: (66, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (66, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (67, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes kubelet info server listening address.",
                  position: (67, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (68, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "0.0.0.0",
                  position: (68, 18),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (69, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (69, 14),
               },
              ),
             ],
             recursive: false,
             position: (66, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "clusterDns",
             position: (72, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (72, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (73, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Use alternative DNS.",
                  position: (73, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (74, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "10.1.0.1",
                  position: (74, 18),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (75, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (75, 14),
               },
              ),
             ],
             recursive: false,
             position: (72, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "clusterDomain",
             position: (78, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (78, 21),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (79, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Use alternative domain.",
                  position: (79, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (80, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (80, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "services",
                   position: (80, 24),
                  },
                  Raw {
                   content: "kubernetes",
                   position: (80, 33),
                  },
                  Raw {
                   content: "addons",
                   position: (80, 44),
                  },
                  Raw {
                   content: "dns",
                   position: (80, 51),
                  },
                  Raw {
                   content: "clusterDomain",
                   position: (80, 55),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (81, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (81, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.",
                    position: (81, 40),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "options",
                      position: (81, 49),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "services",
                        position: (81, 57),
                       },
                       Raw {
                        content: "kubernetes",
                        position: (81, 66),
                       },
                       Raw {
                        content: "addons",
                        position: (81, 77),
                       },
                       Raw {
                        content: "dns",
                        position: (81, 84),
                       },
                       Raw {
                        content: "clusterDomain",
                        position: (81, 88),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (82, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (82, 14),
               },
              ),
             ],
             recursive: false,
             position: (78, 30),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "clientCaFile",
             position: (85, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (85, 20),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (86, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes apiserver CA file for client authentication.",
                  position: (86, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (87, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "top",
                 position: (87, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "caFile",
                   position: (87, 21),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (88, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (88, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.",
                    position: (88, 40),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "otop",
                      position: (88, 49),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "caFile",
                        position: (88, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (89, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (89, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (89, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (85, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "cni",
             position: (92, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "packages",
                position: (93, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (93, 18),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (94, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "List of network plugin packages to install.",
                     position: (94, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (95, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (95, 16),
                   },
                   arguments: [
                    Variable {
                     identifier: "package",
                     position: (95, 23),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (96, 9),
                    },
                   ],
                  },
                  List {
                   elements: [],
                   position: (96, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (93, 27),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "config",
                position: (99, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (99, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (100, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Kubernetes CNI configuration.",
                     position: (100, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (101, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (101, 16),
                   },
                   arguments: [
                    Variable {
                     identifier: "attrs",
                     position: (101, 23),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (102, 9),
                    },
                   ],
                  },
                  List {
                   elements: [],
                   position: (102, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (103, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "literalExpression",
                    position: (103, 19),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "[{\n  \"cniVersion\": \"0.3.1\",\n  \"name\": \"mynet\",\n  \"type\": \"bridge\",\n  \"bridge\": \"cni0\",\n  \"isGateway\": true,\n  \"ipMasq\": true,\n  \"ipam\": {\n      \"type\": \"host-local\",\n      \"subnet\": \"10.22.0.0/16\",\n      \"routes\": [\n          { \"dst\": \"0.0.0.0/0\" }\n      ]\n  }\n} {\n  \"cniVersion\": \"0.3.1\",\n  \"type\": \"loopback\"\n}]\n",
                       position: (104, 1),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (99, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "configDir",
                position: (125, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (125, 19),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (126, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Path to Kubernetes CNI configuration directory.",
                     position: (126, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (127, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (127, 16),
                   },
                   arguments: [
                    Variable {
                     identifier: "path",
                     position: (127, 23),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (128, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (128, 19),
                  },
                 ),
                ],
                recursive: false,
                position: (125, 28),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (92, 11),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "containerRuntime",
             position: (132, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (132, 24),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (133, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Which container runtime type to use",
                  position: (133, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (134, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "enum",
                 position: (134, 14),
                },
                arguments: [
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "docker",
                      position: (134, 21),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "remote",
                      position: (134, 30),
                     },
                    ],
                   },
                  ],
                  position: (134, 19),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (135, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "remote",
                  position: (135, 18),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (132, 33),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "containerRuntimeEndpoint",
             position: (138, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (138, 32),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (139, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Endpoint at which to find the container runtime api interface/socket",
                  position: (139, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (140, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (140, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (141, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "unix:///run/containerd/containerd.sock",
                  position: (141, 18),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (138, 41),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (144, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkEnableOption",
            position: (144, 14),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "Kubernetes kubelet.",
               position: (144, 30),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraOpts",
             position: (146, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (146, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (147, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes kubelet extra command line options.",
                  position: (147, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (148, 7),
                 },
                ],
               },
               String {
                parts: [],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (149, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "separatedString",
                 position: (149, 14),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: " ",
                    position: (149, 31),
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (146, 26),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "featureGates",
             position: (152, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (152, 20),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (153, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "List set of feature gates",
                  position: (153, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (154, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "top",
                 position: (154, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "featureGates",
                   position: (154, 21),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (155, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (155, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.",
                    position: (155, 40),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "otop",
                      position: (155, 49),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "featureGates",
                        position: (155, 54),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (156, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (156, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (156, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (152, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "healthz",
             position: (159, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "bind",
                position: (160, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (160, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (161, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Kubernetes kubelet healthz listening address.",
                     position: (161, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (162, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "127.0.0.1",
                     position: (162, 20),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (163, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "str",
                   position: (163, 16),
                  },
                 ),
                ],
                recursive: false,
                position: (160, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "port",
                position: (166, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (166, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (167, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Kubernetes kubelet healthz port.",
                     position: (167, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (168, 9),
                    },
                   ],
                  },
                  Int {
                   value: 10248,
                   position: (168, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (169, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "int",
                   position: (169, 16),
                  },
                 ),
                ],
                recursive: false,
                position: (166, 23),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (159, 15),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "hostname",
             position: (173, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (173, 16),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (174, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes kubelet hostname override.",
                  position: (174, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (175, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (175, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "networking",
                   position: (175, 24),
                  },
                  Raw {
                   content: "hostName",
                   position: (175, 35),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (176, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (176, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "config.networking.hostName",
                    position: (176, 40),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (177, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (177, 14),
               },
              ),
             ],
             recursive: false,
             position: (173, 25),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "kubeconfig",
             position: (180, 5),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "top",
             position: (180, 18),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "lib",
               position: (180, 22),
              },
              Raw {
               content: "mkKubeConfigOptions",
               position: (180, 26),
              },
             ],
            },
            default: None,
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "Kubelet",
               position: (180, 47),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "manifests",
             position: (182, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (182, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (183, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "List of manifests to bootstrap with kubelet (only pods can be created as manifest entry)",
                  position: (183, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (184, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (184, 14),
                },
                arguments: [
                 Variable {
                  identifier: "attrs",
                  position: (184, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (185, 7),
                 },
                ],
               },
               Map {
                bindings: [],
                recursive: false,
                position: (185, 17),
               },
              ),
             ],
             recursive: false,
             position: (182, 26),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "networkPlugin",
             position: (188, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (188, 21),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (189, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Network plugin to use by Kubernetes.",
                  position: (189, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (190, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (190, 14),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "enum",
                   position: (190, 22),
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "cni",
                        position: (190, 29),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "kubenet",
                        position: (190, 35),
                       },
                      ],
                     },
                    ],
                    position: (190, 27),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (191, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "kubenet",
                  position: (191, 18),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (188, 30),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "nodeIp",
             position: (194, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (194, 14),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (195, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "IP address of the node. If set, kubelet will use this IP address for the node.",
                  position: (195, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (196, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (196, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (197, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (197, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (197, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (194, 23),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "registerNode",
             position: (200, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (200, 20),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (201, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Whether to auto register kubelet with API server.",
                  position: (201, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (202, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (202, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (203, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (203, 14),
               },
              ),
             ],
             recursive: false,
             position: (200, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "port",
             position: (206, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (206, 12),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (207, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Kubernetes kubelet info server listening port.",
                  position: (207, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (208, 7),
                 },
                ],
               },
               Int {
                value: 10250,
                position: (208, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (209, 7),
                 },
                ],
               },
               Variable {
                identifier: "int",
                position: (209, 14),
               },
              ),
             ],
             recursive: false,
             position: (206, 21),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "seedDockerImages",
             position: (212, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (212, 24),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (213, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "List of docker images to preload on system",
                  position: (213, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (214, 7),
                 },
                ],
               },
               List {
                elements: [],
                position: (214, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (215, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (215, 14),
                },
                arguments: [
                 Variable {
                  identifier: "package",
                  position: (215, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (212, 33),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "taints",
             position: (218, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (218, 14),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (219, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Node taints (https://kubernetes.io/docs/concepts/configuration/assign-pod-node/).",
                  position: (219, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (220, 7),
                 },
                ],
               },
               Map {
                bindings: [],
                recursive: false,
                position: (220, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (221, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (221, 14),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "submodule",
                   position: (221, 23),
                  },
                  arguments: [
                   List {
                    elements: [
                     Variable {
                      identifier: "taintOptions",
                      position: (221, 35),
                     },
                    ],
                    position: (221, 33),
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (218, 23),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "tlsCertFile",
             position: (224, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (224, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (225, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "File containing x509 Certificate for HTTPS.",
                  position: (225, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (226, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (226, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (227, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (227, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (227, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (224, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "tlsKeyFile",
             position: (230, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (230, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (231, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "File containing x509 private key matching tlsCertFile.",
                  position: (231, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (232, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (232, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (233, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (233, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (233, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (230, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "unschedulable",
             position: (236, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (236, 21),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (237, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Whether to set node taint to unschedulable=true as it is the case of node that has only master role.",
                  position: (237, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (238, 7),
                 },
                ],
               },
               Variable {
                identifier: "false",
                position: (238, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (239, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (239, 14),
               },
              ),
             ],
             recursive: false,
             position: (236, 30),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "verbosity",
             position: (242, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (242, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (243, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Optional glog verbosity level for logging statements. See\n<link xlink:href=\"https://github.com/kubernetes/community/blob/master/contributors/devel/logging.md\"/>\n",
                  position: (244, 1),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (247, 7),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (247, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (248, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (248, 14),
                },
                arguments: [
                 Variable {
                  identifier: "int",
                  position: (248, 21),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (242, 26),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (64, 57),
       },
       position: (64, 41),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (254, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (254, 12),
       },
       arguments: [
        List {
         elements: [
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (255, 6),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (255, 11),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (255, 15),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (257, 7),
                 },
                 Raw {
                  content: "etc",
                  position: (257, 19),
                 },
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "cni/net.d",
                     position: (257, 24),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "source",
                  position: (257, 35),
                 },
                ],
               },
               Variable {
                identifier: "cniConfig",
                position: (257, 44),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (259, 7),
                 },
                 Raw {
                  content: "kubernetes",
                  position: (259, 16),
                 },
                 Raw {
                  content: "kubelet",
                  position: (259, 27),
                 },
                 Raw {
                  content: "seedDockerImages",
                  position: (259, 35),
                 },
                ],
               },
               List {
                elements: [
                 Variable {
                  identifier: "infraContainer",
                  position: (259, 55),
                 },
                ],
                position: (259, 54),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "boot",
                  position: (261, 7),
                 },
                 Raw {
                  content: "kernel",
                  position: (261, 12),
                 },
                 Raw {
                  content: "sysctl",
                  position: (261, 19),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Expression {
                     expression: String {
                      parts: [
                       Raw {
                        content: "net.bridge.bridge-nf-call-iptables",
                        position: (262, 10),
                       },
                      ],
                     },
                    },
                   ],
                  },
                  Int {
                   value: 1,
                   position: (262, 49),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Expression {
                     expression: String {
                      parts: [
                       Raw {
                        content: "net.ipv4.ip_forward",
                        position: (263, 10),
                       },
                      ],
                     },
                    },
                   ],
                  },
                  Int {
                   value: 1,
                   position: (263, 49),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Expression {
                     expression: String {
                      parts: [
                       Raw {
                        content: "net.bridge.bridge-nf-call-ip6tables",
                        position: (264, 10),
                       },
                      ],
                     },
                    },
                   ],
                  },
                  Int {
                   value: 1,
                   position: (264, 49),
                  },
                 ),
                ],
                recursive: false,
                position: (261, 28),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "systemd",
                  position: (267, 7),
                 },
                 Raw {
                  content: "services",
                  position: (267, 15),
                 },
                 Raw {
                  content: "kubelet",
                  position: (267, 24),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (268, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Kubernetes Kubelet Service",
                     position: (268, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "wantedBy",
                     position: (269, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "kubernetes.target",
                       position: (269, 23),
                      },
                     ],
                    },
                   ],
                   position: (269, 20),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "after",
                     position: (270, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "containerd.service",
                       position: (270, 20),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "network.target",
                       position: (270, 41),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "kube-apiserver.service",
                       position: (270, 58),
                      },
                     ],
                    },
                   ],
                   position: (270, 17),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (271, 9),
                    },
                   ],
                  },
                  With {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (271, 21),
                   },
                   target: BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     List {
                      elements: [
                       Variable {
                        identifier: "gitMinimal",
                        position: (272, 11),
                       },
                       Variable {
                        identifier: "openssh",
                        position: (273, 11),
                       },
                       Variable {
                        identifier: "util-linux",
                        position: (274, 11),
                       },
                       Variable {
                        identifier: "iproute2",
                        position: (275, 11),
                       },
                       Variable {
                        identifier: "ethtool",
                        position: (276, 11),
                       },
                       Variable {
                        identifier: "thin-provisioning-tools",
                        position: (277, 11),
                       },
                       Variable {
                        identifier: "iptables",
                        position: (278, 11),
                       },
                       Variable {
                        identifier: "socat",
                        position: (279, 11),
                       },
                      ],
                      position: (271, 27),
                     },
                     BinaryOperation {
                      operator: Concatenation,
                      operands: [
                       FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "lib",
                          position: (280, 14),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "optional",
                            position: (280, 18),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "config",
                           position: (280, 27),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "boot",
                             position: (280, 34),
                            },
                            Raw {
                             content: "zfs",
                             position: (280, 39),
                            },
                            Raw {
                             content: "enabled",
                             position: (280, 43),
                            },
                           ],
                          },
                          default: None,
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "config",
                           position: (280, 51),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "boot",
                             position: (280, 58),
                            },
                            Raw {
                             content: "zfs",
                             position: (280, 63),
                            },
                            Raw {
                             content: "package",
                             position: (280, 67),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "top",
                         position: (280, 78),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "path",
                           position: (280, 82),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                      position: (280, 75),
                     },
                    ],
                    position: (280, 11),
                   },
                   position: (271, 16),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "preStart",
                     position: (281, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "",
                     position: (282, 1),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "concatMapStrings",
                       position: (282, 13),
                      },
                      arguments: [
                       Function {
                        argument: Some(
                         "img",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: String {
                         parts: [
                          Raw {
                           content: "echo \"Seeding container image: ",
                           position: (283, 1),
                          },
                          Expression {
                           expression: Variable {
                            identifier: "img",
                            position: (283, 46),
                           },
                          },
                          Raw {
                           content: "\"\n",
                           position: (283, 50),
                          },
                          Expression {
                           expression: IfThenElse {
                            predicate: FunctionApplication {
                             function: PropertyAccess {
                              expression: Variable {
                               identifier: "lib",
                               position: (284, 19),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "hasSuffix",
                                 position: (284, 23),
                                },
                               ],
                              },
                              default: None,
                             },
                             arguments: [
                              String {
                               parts: [
                                Raw {
                                 content: "gz",
                                 position: (284, 34),
                                },
                               ],
                              },
                              Variable {
                               identifier: "img",
                               position: (284, 38),
                              },
                             ],
                            },
                            then: String {
                             parts: [
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "pkgs",
                                 position: (285, 19),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "gzip",
                                   position: (285, 24),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                              Raw {
                               content: "/bin/zcat \"",
                               position: (285, 29),
                              },
                              Expression {
                               expression: Variable {
                                identifier: "img",
                                position: (285, 42),
                               },
                              },
                              Raw {
                               content: "\" | ",
                               position: (285, 46),
                              },
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "pkgs",
                                 position: (285, 52),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "containerd",
                                   position: (285, 57),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                              Raw {
                               content: "/bin/ctr -n k8s.io image import --all-platforms -",
                               position: (285, 68),
                              },
                             ],
                            },
                            else_: String {
                             parts: [
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "pkgs",
                                 position: (287, 19),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "coreutils",
                                   position: (287, 24),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                              Raw {
                               content: "/bin/cat \"",
                               position: (287, 34),
                              },
                              Expression {
                               expression: Variable {
                                identifier: "img",
                                position: (287, 46),
                               },
                              },
                              Raw {
                               content: "\" | ",
                               position: (287, 50),
                              },
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "pkgs",
                                 position: (287, 56),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "containerd",
                                   position: (287, 61),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                              Raw {
                               content: "/bin/ctr -n k8s.io image import --all-platforms -",
                               position: (287, 72),
                              },
                             ],
                            },
                            position: (284, 15),
                           },
                          },
                          Raw {
                           content: "\n",
                           position: (288, 14),
                          },
                         ],
                        },
                        position: (282, 31),
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (289, 15),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "seedDockerImages",
                           position: (289, 19),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n\nrm /opt/cni/bin/* || true\n",
                     position: (289, 36),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "concatMapStrings",
                       position: (292, 13),
                      },
                      arguments: [
                       Function {
                        argument: Some(
                         "package",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: String {
                         parts: [
                          Raw {
                           content: "echo \"Linking cni package: ",
                           position: (293, 1),
                          },
                          Expression {
                           expression: Variable {
                            identifier: "package",
                            position: (293, 42),
                           },
                          },
                          Raw {
                           content: "\"\nln -fs ",
                           position: (293, 50),
                          },
                          Expression {
                           expression: Variable {
                            identifier: "package",
                            position: (294, 22),
                           },
                          },
                          Raw {
                           content: "/bin/* /opt/cni/bin\n",
                           position: (294, 30),
                          },
                         ],
                        },
                        position: (292, 31),
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (295, 15),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "cni",
                           position: (295, 19),
                          },
                          Raw {
                           content: "packages",
                           position: (295, 23),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n",
                     position: (295, 32),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (297, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Slice",
                        position: (298, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "kubernetes.slice",
                        position: (298, 20),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "CPUAccounting",
                        position: (299, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (299, 27),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "MemoryAccounting",
                        position: (300, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (300, 30),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Restart",
                        position: (301, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "on-failure",
                        position: (301, 22),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "RestartSec",
                        position: (302, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "1000ms",
                        position: (302, 25),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ExecStart",
                        position: (303, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "top",
                          position: (303, 27),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (303, 31),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/kubelet \\\n            --address=",
                        position: (303, 39),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (304, 25),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "address",
                            position: (304, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " \\\n            --authentication-token-webhook \\\n            --authentication-token-webhook-cache-ttl=\"10s\" \\\n            --authorization-mode=Webhook \\\n            ",
                        position: (304, 37),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (308, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (308, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "clientCaFile",
                                position: (308, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (308, 51),
                            },
                           ],
                           position: (308, 48),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--client-ca-file=",
                             position: (309, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (309, 35),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "clientCaFile",
                                 position: (309, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (309, 54),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (310, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (310, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "clusterDns",
                                position: (310, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            String {
                             parts: [],
                            },
                           ],
                           position: (310, 46),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--cluster-dns=",
                             position: (311, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (311, 32),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "clusterDns",
                                 position: (311, 36),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (311, 49),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (312, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (312, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "clusterDomain",
                                position: (312, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            String {
                             parts: [],
                            },
                           ],
                           position: (312, 49),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--cluster-domain=",
                             position: (313, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (313, 35),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "clusterDomain",
                                 position: (313, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --cni-conf-dir=",
                        position: (313, 55),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "cniConfig",
                         position: (314, 30),
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (314, 40),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (315, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (315, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "featureGates",
                                position: (315, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            List {
                             elements: [],
                             position: (315, 51),
                            },
                           ],
                           position: (315, 48),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--feature-gates=",
                             position: (316, 16),
                            },
                            Expression {
                             expression: FunctionApplication {
                              function: Variable {
                               identifier: "concatMapStringsSep",
                               position: (316, 34),
                              },
                              arguments: [
                               String {
                                parts: [
                                 Raw {
                                  content: ",",
                                  position: (316, 55),
                                 },
                                ],
                               },
                               Function {
                                argument: Some(
                                 "feature",
                                ),
                                arguments: FunctionArguments {
                                 arguments: [],
                                 ellipsis: false,
                                },
                                definition: String {
                                 parts: [
                                  Expression {
                                   expression: Variable {
                                    identifier: "feature",
                                    position: (316, 71),
                                   },
                                  },
                                  Raw {
                                   content: "=true",
                                   position: (316, 79),
                                  },
                                 ],
                                },
                                position: (316, 59),
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "cfg",
                                 position: (316, 87),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "featureGates",
                                   position: (316, 91),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ],
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --hairpin-mode=hairpin-veth \\\n            --healthz-bind-address=",
                        position: (316, 106),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (318, 38),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "healthz",
                            position: (318, 42),
                           },
                           Raw {
                            content: "bind",
                            position: (318, 50),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " \\\n            --healthz-port=",
                        position: (318, 55),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "toString",
                          position: (319, 30),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (319, 39),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "healthz",
                              position: (319, 43),
                             },
                             Raw {
                              content: "port",
                              position: (319, 51),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --hostname-override=",
                        position: (319, 56),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (320, 35),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "hostname",
                            position: (320, 39),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " \\\n            --kubeconfig=",
                        position: (320, 48),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "kubeconfig",
                         position: (321, 28),
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (321, 39),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (322, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (322, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "networkPlugin",
                                position: (322, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (322, 52),
                            },
                           ],
                           position: (322, 49),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--network-plugin=",
                             position: (323, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (323, 35),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "networkPlugin",
                                 position: (323, 39),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (323, 55),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (324, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (324, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "nodeIp",
                                position: (324, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (324, 45),
                            },
                           ],
                           position: (324, 42),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--node-ip=",
                             position: (325, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (325, 28),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "nodeIp",
                                 position: (325, 32),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --pod-infra-container-image=pause \\\n            ",
                        position: (325, 41),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (327, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (327, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "manifests",
                                position: (327, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Map {
                             bindings: [],
                             recursive: false,
                             position: (327, 48),
                            },
                           ],
                           position: (327, 45),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--pod-manifest-path=/etc/",
                             position: (328, 16),
                            },
                            Expression {
                             expression: Variable {
                              identifier: "manifestPath",
                              position: (328, 43),
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --port=",
                        position: (328, 58),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "toString",
                          position: (329, 22),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (329, 31),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "port",
                              position: (329, 35),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --register-node=",
                        position: (329, 40),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "boolToString",
                          position: (330, 31),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (330, 44),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "registerNode",
                              position: (330, 48),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (330, 61),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (331, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            Variable {
                             identifier: "taints",
                             position: (331, 31),
                            },
                            String {
                             parts: [],
                            },
                           ],
                           position: (331, 38),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--register-with-taints=",
                             position: (332, 16),
                            },
                            Expression {
                             expression: Variable {
                              identifier: "taints",
                              position: (332, 41),
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --root-dir=",
                        position: (332, 50),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "top",
                          position: (333, 26),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "dataDir",
                            position: (333, 30),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (333, 38),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (334, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (334, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "tlsCertFile",
                                position: (334, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (334, 50),
                            },
                           ],
                           position: (334, 47),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--tls-cert-file=",
                             position: (335, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (335, 34),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "tlsCertFile",
                                 position: (335, 38),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (335, 52),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (336, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (336, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "tlsKeyFile",
                                position: (336, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (336, 49),
                            },
                           ],
                           position: (336, 46),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--tls-private-key-file=",
                             position: (337, 16),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (337, 41),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "tlsKeyFile",
                                 position: (337, 45),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            ",
                        position: (337, 58),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (338, 15),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (338, 31),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "verbosity",
                                position: (338, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            Variable {
                             identifier: "null",
                             position: (338, 48),
                            },
                           ],
                           position: (338, 45),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "--v=",
                             position: (338, 55),
                            },
                            Expression {
                             expression: FunctionApplication {
                              function: Variable {
                               identifier: "toString",
                               position: (338, 61),
                              },
                              arguments: [
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "cfg",
                                 position: (338, 70),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "verbosity",
                                   position: (338, 74),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ],
                             },
                            },
                           ],
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " \\\n            --container-runtime=",
                        position: (338, 86),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (339, 35),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "containerRuntime",
                            position: (339, 39),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " \\\n            --container-runtime-endpoint=",
                        position: (339, 56),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (340, 44),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "containerRuntimeEndpoint",
                            position: (340, 48),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " \\\n            --cgroup-driver=systemd \\\n            ",
                        position: (340, 73),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (342, 15),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "extraOpts",
                            position: (342, 19),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\n          ",
                        position: (342, 29),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "WorkingDirectory",
                        position: (344, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "top",
                       position: (344, 30),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "dataDir",
                         position: (344, 34),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                   ],
                   recursive: false,
                   position: (297, 25),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "unitConfig",
                     position: (346, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "StartLimitIntervalSec",
                        position: (347, 11),
                       },
                      ],
                     },
                     Int {
                      value: 0,
                      position: (347, 35),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (346, 22),
                  },
                 ),
                ],
                recursive: false,
                position: (267, 34),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (352, 7),
                 },
                 Raw {
                  content: "kubernetes",
                  position: (352, 16),
                 },
                 Raw {
                  content: "kubelet",
                  position: (352, 27),
                 },
                 Raw {
                  content: "cni",
                  position: (352, 35),
                 },
                 Raw {
                  content: "packages",
                  position: (352, 39),
                 },
                ],
               },
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (352, 51),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "cni-plugins",
                     position: (352, 56),
                    },
                   ],
                  },
                  default: None,
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (352, 68),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "cni-plugin-flannel",
                     position: (352, 73),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
                position: (352, 50),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "boot",
                  position: (354, 7),
                 },
                 Raw {
                  content: "kernelModules",
                  position: (354, 12),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "br_netfilter",
                    position: (354, 30),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "overlay",
                    position: (354, 45),
                   },
                  ],
                 },
                ],
                position: (354, 28),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (356, 7),
                 },
                 Raw {
                  content: "kubernetes",
                  position: (356, 16),
                 },
                 Raw {
                  content: "kubelet",
                  position: (356, 27),
                 },
                 Raw {
                  content: "hostname",
                  position: (356, 35),
                 },
                ],
               },
               With {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (356, 51),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "networking",
                    position: (356, 58),
                   },
                  ],
                 },
                 default: None,
                },
                target: FunctionApplication {
                 function: Variable {
                  identifier: "mkDefault",
                  position: (357, 9),
                 },
                 arguments: [
                  BinaryOperation {
                   operator: Addition,
                   operands: [
                    Variable {
                     identifier: "hostName",
                     position: (357, 20),
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (357, 31),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        Variable {
                         identifier: "domain",
                         position: (357, 47),
                        },
                        Variable {
                         identifier: "null",
                         position: (357, 57),
                        },
                       ],
                       position: (357, 54),
                      },
                      String {
                       parts: [
                        Raw {
                         content: ".",
                         position: (357, 64),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "domain",
                          position: (357, 67),
                         },
                        },
                       ],
                      },
                     ],
                    },
                   ],
                   position: (357, 29),
                  },
                 ],
                },
                position: (356, 46),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (359, 7),
                 },
                 Raw {
                  content: "kubernetes",
                  position: (359, 16),
                 },
                 Raw {
                  content: "pki",
                  position: (359, 27),
                 },
                 Raw {
                  content: "certs",
                  position: (359, 31),
                 },
                ],
               },
               With {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "top",
                  position: (359, 44),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "lib",
                    position: (359, 48),
                   },
                  ],
                 },
                 default: None,
                },
                target: Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "kubelet",
                      position: (360, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "mkCert",
                     position: (360, 19),
                    },
                    arguments: [
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "name",
                           position: (361, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "kubelet",
                           position: (361, 19),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "CN",
                           position: (362, 11),
                          },
                         ],
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "top",
                          position: (362, 16),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "kubelet",
                            position: (362, 20),
                           },
                           Raw {
                            content: "hostname",
                            position: (362, 28),
                           },
                          ],
                         },
                         default: None,
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "action",
                           position: (363, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "systemctl restart kubelet.service",
                           position: (363, 21),
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                      position: (360, 26),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "kubeletClient",
                      position: (366, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "mkCert",
                     position: (366, 25),
                    },
                    arguments: [
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "name",
                           position: (367, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "kubelet-client",
                           position: (367, 19),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "CN",
                           position: (368, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "system:node:",
                           position: (368, 17),
                          },
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "top",
                             position: (368, 31),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "kubelet",
                               position: (368, 35),
                              },
                              Raw {
                               content: "hostname",
                               position: (368, 43),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "fields",
                           position: (369, 11),
                          },
                         ],
                        },
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "O",
                              position: (370, 13),
                             },
                            ],
                           },
                           String {
                            parts: [
                             Raw {
                              content: "system:nodes",
                              position: (370, 18),
                             },
                            ],
                           },
                          ),
                         ],
                         recursive: false,
                         position: (369, 20),
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "action",
                           position: (372, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "systemctl restart kubelet.service",
                           position: (372, 21),
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                      position: (366, 32),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                 position: (359, 53),
                },
                position: (359, 39),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (376, 7),
                 },
                 Raw {
                  content: "kubernetes",
                  position: (376, 16),
                 },
                 Raw {
                  content: "kubelet",
                  position: (376, 27),
                 },
                 Raw {
                  content: "kubeconfig",
                  position: (376, 35),
                 },
                 Raw {
                  content: "server",
                  position: (376, 46),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkDefault",
                 position: (376, 55),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "top",
                   position: (376, 65),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "apiserverAddress",
                     position: (376, 69),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (255, 22),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (379, 6),
           },
           arguments: [
            BinaryOperation {
             operator: LogicalAnd,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (379, 12),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (379, 16),
                 },
                ],
               },
               default: None,
              },
              BinaryOperation {
               operator: NotEqualTo,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (379, 26),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "manifests",
                    position: (379, 30),
                   },
                  ],
                 },
                 default: None,
                },
                Map {
                 bindings: [],
                 recursive: false,
                 position: (379, 43),
                },
               ],
               position: (379, 40),
              },
             ],
             position: (379, 23),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "environment",
                  position: (380, 7),
                 },
                 Raw {
                  content: "etc",
                  position: (380, 19),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mapAttrs'",
                 position: (380, 25),
                },
                arguments: [
                 Function {
                  argument: Some(
                   "name",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "manifest",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: FunctionApplication {
                    function: Variable {
                     identifier: "nameValuePair",
                     position: (381, 9),
                    },
                    arguments: [
                     String {
                      parts: [
                       Expression {
                        expression: Variable {
                         identifier: "manifestPath",
                         position: (381, 26),
                        },
                       },
                       Raw {
                        content: "/",
                        position: (381, 39),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "name",
                         position: (381, 42),
                        },
                       },
                       Raw {
                        content: ".json",
                        position: (381, 47),
                       },
                      ],
                     },
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "text",
                           position: (382, 11),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "builtins",
                           position: (382, 18),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "toJSON",
                             position: (382, 27),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Variable {
                           identifier: "manifest",
                           position: (382, 34),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "mode",
                           position: (383, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "0755",
                           position: (383, 19),
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                      position: (381, 54),
                     },
                    ],
                   },
                   position: (380, 42),
                  },
                  position: (380, 36),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (385, 9),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "manifests",
                     position: (385, 13),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (379, 47),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (388, 6),
           },
           arguments: [
            BinaryOperation {
             operator: LogicalAnd,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (388, 12),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "unschedulable",
                  position: (388, 16),
                 },
                ],
               },
               default: None,
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (388, 33),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (388, 37),
                 },
                ],
               },
               default: None,
              },
             ],
             position: (388, 30),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "services",
                  position: (389, 7),
                 },
                 Raw {
                  content: "kubernetes",
                  position: (389, 16),
                 },
                 Raw {
                  content: "kubelet",
                  position: (389, 27),
                 },
                 Raw {
                  content: "taints",
                  position: (389, 35),
                 },
                 Raw {
                  content: "unschedulable",
                  position: (389, 42),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "value",
                     position: (390, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "true",
                     position: (390, 18),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "effect",
                     position: (391, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "NoSchedule",
                     position: (391, 19),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (389, 58),
               },
              ),
             ],
             recursive: false,
             position: (388, 45),
            },
           ],
          },
         ],
         position: (254, 20),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (397, 3),
        },
        Raw {
         content: "buildDocsInSandbox",
         position: (397, 8),
        },
       ],
      },
      Variable {
       identifier: "false",
       position: (397, 29),
      },
     ),
    ],
    recursive: false,
    position: (56, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}