---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (8, 16),
        },
        Raw {
         content: "fwupd",
         position: (8, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "customEtc",
        position: (10, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Expression {
           expression: String {
            parts: [
             Raw {
              content: "fwupd/daemon.conf",
              position: (11, 6),
             },
            ],
            position: (11, 5),
           },
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "source",
              position: (12, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (12, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "writeText",
                position: (12, 21),
               },
              ],
             },
             default: None,
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "daemon.conf",
                position: (12, 32),
               },
              ],
              position: (12, 31),
             },
             String {
              parts: [
               Raw {
                content: "[fwupd]\nDisabledDevices=",
                position: (13, 1),
               },
               Expression {
                expression: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (14, 27),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "concatStringsSep",
                     position: (14, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: ";",
                     position: (14, 49),
                    },
                   ],
                   position: (14, 48),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (14, 52),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "disabledDevices",
                      position: (14, 56),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Raw {
                content: "\nDisabledPlugins=",
                position: (14, 72),
               },
               Expression {
                expression: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (15, 27),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "concatStringsSep",
                     position: (15, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: ";",
                     position: (15, 49),
                    },
                   ],
                   position: (15, 48),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (15, 52),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "disabledPlugins",
                      position: (15, 56),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Raw {
                content: "\n",
                position: (15, 72),
               },
              ],
              position: (12, 45),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (11, 27),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Expression {
           expression: String {
            parts: [
             Raw {
              content: "fwupd/uefi.conf",
              position: (18, 6),
             },
            ],
            position: (18, 5),
           },
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "source",
              position: (19, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (19, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "writeText",
                position: (19, 21),
               },
              ],
             },
             default: None,
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "uefi.conf",
                position: (19, 32),
               },
              ],
              position: (19, 31),
             },
             String {
              parts: [
               Raw {
                content: "[uefi]\nOverrideESPMountPoint=",
                position: (20, 1),
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (21, 33),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "boot",
                    position: (21, 40),
                   },
                   Raw {
                    content: "loader",
                    position: (21, 45),
                   },
                   Raw {
                    content: "efi",
                    position: (21, 52),
                   },
                   Raw {
                    content: "efiSysMountPoint",
                    position: (21, 56),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "\n",
                position: (21, 73),
               },
              ],
              position: (19, 43),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (18, 25),
        },
       },
      ],
      recursive: false,
      position: (10, 15),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "originalEtc",
        position: (26, 3),
       },
      ],
     },
     to: LetIn {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "mkEtcFile",
           position: (28, 7),
          },
         ],
        },
        to: Function {
         argument: Simple {
          identifier: "n",
         },
         definition: FunctionApplication {
          function: Variable {
           identifier: "nameValuePair",
           position: (28, 22),
          },
          arguments: [
           Variable {
            identifier: "n",
            position: (28, 36),
           },
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (28, 40),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (28, 52),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (28, 56),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/etc/",
                 position: (28, 64),
                },
                Expression {
                 expression: Variable {
                  identifier: "n",
                  position: (28, 71),
                 },
                },
               ],
               position: (28, 49),
              },
             },
            ],
            recursive: false,
            position: (28, 38),
           },
          ],
         },
         position: (28, 19),
        },
       },
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "listToAttrs",
        position: (29, 8),
       },
       arguments: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (29, 21),
          },
          arguments: [
           Variable {
            identifier: "mkEtcFile",
            position: (29, 25),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (29, 35),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (29, 39),
              },
              Raw {
               content: "filesInstalledToEtc",
               position: (29, 47),
              },
             ],
            },
            default: None,
           },
          ],
         },
         position: (29, 20),
        },
       ],
      },
      position: (27, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "extraTrustedKeys",
        position: (30, 3),
       },
      ],
     },
     to: LetIn {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "mkName",
           position: (32, 7),
          },
         ],
        },
        to: Function {
         argument: Simple {
          identifier: "p",
         },
         definition: String {
          parts: [
           Raw {
            content: "pki/fwupd/",
            position: (32, 20),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "baseNameOf",
              position: (32, 32),
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (32, 44),
                },
                arguments: [
                 Variable {
                  identifier: "p",
                  position: (32, 53),
                 },
                ],
               },
               position: (32, 43),
              },
             ],
            },
           },
          ],
          position: (32, 19),
         },
         position: (32, 16),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "mkEtcFile",
           position: (33, 7),
          },
         ],
        },
        to: Function {
         argument: Simple {
          identifier: "p",
         },
         definition: FunctionApplication {
          function: Variable {
           identifier: "nameValuePair",
           position: (33, 22),
          },
          arguments: [
           Parentheses {
            expression: FunctionApplication {
             function: Variable {
              identifier: "mkName",
              position: (33, 37),
             },
             arguments: [
              Variable {
               identifier: "p",
               position: (33, 44),
              },
             ],
            },
            position: (33, 36),
           },
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (33, 49),
                },
               ],
              },
              to: Variable {
               identifier: "p",
               position: (33, 58),
              },
             },
            ],
            recursive: false,
            position: (33, 47),
           },
          ],
         },
         position: (33, 19),
        },
       },
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "listToAttrs",
        position: (34, 8),
       },
       arguments: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (34, 21),
          },
          arguments: [
           Variable {
            identifier: "mkEtcFile",
            position: (34, 25),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (34, 35),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "extraTrustedKeys",
               position: (34, 39),
              },
             ],
            },
            default: None,
           },
          ],
         },
         position: (34, 20),
        },
       ],
      },
      position: (31, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "testRemote",
        position: (40, 3),
       },
      ],
     },
     to: IfThenElse {
      predicate: PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (40, 19),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "enableTestRemote",
          position: (40, 23),
         },
        ],
       },
       default: None,
      },
      then: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Expression {
            expression: String {
             parts: [
              Raw {
               content: "fwupd/remotes.d/fwupd-tests.conf",
               position: (41, 6),
              },
             ],
             position: (41, 5),
            },
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "source",
               position: (42, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (42, 16),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "runCommand",
                 position: (42, 21),
                },
               ],
              },
              default: None,
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "fwupd-tests-enabled.conf",
                 position: (42, 33),
                },
               ],
               position: (42, 32),
              },
              Map {
               bindings: [],
               recursive: false,
               position: (42, 59),
              },
              String {
               parts: [
                Raw {
                 content: "sed \"s,^Enabled=false,Enabled=true,\" \\\n\"",
                 position: (43, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (44, 12),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (44, 16),
                    },
                    Raw {
                     content: "installedTests",
                     position: (44, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/etc/fwupd/remotes.d/fwupd-tests.conf\" > \"$out\"\n",
                 position: (44, 39),
                },
               ],
               position: (42, 62),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (41, 42),
         },
        },
       ],
       recursive: false,
       position: (40, 45),
      },
      else_: Map {
       bindings: [],
       recursive: false,
       position: (47, 10),
      },
      position: (40, 16),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (51, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (52, 5),
           },
           Raw {
            content: "fwupd",
            position: (52, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (53, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (53, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (54, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (54, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (55, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable fwupd, a DBus service that allows\napplications to update firmware.\n",
                    position: (57, 1),
                   },
                  ],
                  position: (56, 23),
                 },
                },
               ],
               recursive: false,
               position: (53, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "disabledDevices",
               position: (62, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (62, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (63, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (63, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (63, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (63, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (64, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "2082b5e0-7a64-478a-b1b2-e3404fab6dad",
                      position: (65, 22),
                     },
                    ],
                    position: (65, 21),
                   },
                  ],
                  position: (65, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (66, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Allow disabling specific devices by their GUID\n",
                    position: (67, 1),
                   },
                  ],
                  position: (66, 23),
                 },
                },
               ],
               recursive: false,
               position: (62, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "disabledPlugins",
               position: (71, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (71, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (72, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (72, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (72, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (72, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (73, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (73, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "udev",
                      position: (74, 22),
                     },
                    ],
                    position: (74, 21),
                   },
                  ],
                  position: (74, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Allow disabling specific plugins\n",
                    position: (76, 1),
                   },
                  ],
                  position: (75, 23),
                 },
                },
               ],
               recursive: false,
               position: (71, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraTrustedKeys",
               position: (80, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (80, 26),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (81, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (81, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (81, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (81, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (81, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (82, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (82, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (83, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (83, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ /etc/nixos/fwupd/myfirmware.pem ]",
                      position: (83, 38),
                     },
                    ],
                    position: (83, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (84, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Installing a public key allows firmware signed with a matching private key to be recognized as trusted, which may require less authentication to install than for untrusted files. By default trusted firmware can be upgraded (but not downgraded) without the user or administrator password. Only very few keys are installed by default.\n",
                    position: (85, 1),
                   },
                  ],
                  position: (84, 23),
                 },
                },
               ],
               recursive: false,
               position: (80, 35),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enableTestRemote",
               position: (89, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (89, 26),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (90, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (90, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (91, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (92, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable test remote. This is used by\n<link xlink:href=\"https://github.com/fwupd/fwupd/blob/master/data/installed-tests/README.md\">installed tests</link>.\n",
                    position: (93, 1),
                   },
                  ],
                  position: (92, 23),
                 },
                },
               ],
               recursive: false,
               position: (89, 35),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (98, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (98, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (99, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (99, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (99, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (100, 19),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "fwupd",
                     position: (100, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (101, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.fwupd",
                      position: (101, 42),
                     },
                    ],
                    position: (101, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (102, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Which fwupd package to use.\n",
                    position: (103, 1),
                   },
                  ],
                  position: (102, 23),
                 },
                },
               ],
               recursive: false,
               position: (98, 26),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (52, 22),
         },
        },
       ],
       recursive: false,
       position: (51, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (109, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (110, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (110, 31),
               },
              ],
              position: (110, 30),
             },
             String {
              parts: [
               Raw {
                content: "fwupd",
                position: (110, 42),
               },
              ],
              position: (110, 41),
             },
             String {
              parts: [
               Raw {
                content: "blacklistDevices",
                position: (110, 50),
               },
              ],
              position: (110, 49),
             },
            ],
            position: (110, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (110, 72),
               },
              ],
              position: (110, 71),
             },
             String {
              parts: [
               Raw {
                content: "fwupd",
                position: (110, 83),
               },
              ],
              position: (110, 82),
             },
             String {
              parts: [
               Raw {
                content: "disabledDevices",
                position: (110, 91),
               },
              ],
              position: (110, 90),
             },
            ],
            position: (110, 69),
           },
          ],
         },
         position: (110, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (111, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (111, 31),
               },
              ],
              position: (111, 30),
             },
             String {
              parts: [
               Raw {
                content: "fwupd",
                position: (111, 42),
               },
              ],
              position: (111, 41),
             },
             String {
              parts: [
               Raw {
                content: "blacklistPlugins",
                position: (111, 50),
               },
              ],
              position: (111, 49),
             },
            ],
            position: (111, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (111, 72),
               },
              ],
              position: (111, 71),
             },
             String {
              parts: [
               Raw {
                content: "fwupd",
                position: (111, 83),
               },
              ],
              position: (111, 82),
             },
             String {
              parts: [
               Raw {
                content: "disabledPlugins",
                position: (111, 91),
               },
              ],
              position: (111, 90),
             },
            ],
            position: (111, 69),
           },
          ],
         },
         position: (111, 5),
        },
       ],
       position: (109, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (115, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (115, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (115, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (115, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (117, 5),
             },
             Raw {
              content: "fwupd",
              position: (117, 14),
             },
             Raw {
              content: "disabledPlugins",
              position: (117, 20),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (117, 38),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (117, 42),
              },
              Raw {
               content: "defaultDisabledPlugins",
               position: (117, 50),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (119, 5),
             },
             Raw {
              content: "systemPackages",
              position: (119, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (119, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (119, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (119, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (122, 5),
             },
             Raw {
              content: "etc",
              position: (122, 17),
             },
            ],
           },
           to: BinaryOperation {
            operator: Update,
            operands: [
             Variable {
              identifier: "originalEtc",
              position: (122, 23),
             },
             BinaryOperation {
              operator: Update,
              operands: [
               Variable {
                identifier: "customEtc",
                position: (122, 38),
               },
               BinaryOperation {
                operator: Update,
                operands: [
                 Variable {
                  identifier: "extraTrustedKeys",
                  position: (122, 51),
                 },
                 Variable {
                  identifier: "testRemote",
                  position: (122, 71),
                 },
                ],
                position: (122, 68),
               },
              ],
              position: (122, 48),
             },
            ],
            position: (122, 35),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (124, 5),
             },
             Raw {
              content: "dbus",
              position: (124, 14),
             },
             Raw {
              content: "packages",
              position: (124, 19),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (124, 32),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (124, 36),
                },
               ],
              },
              default: None,
             },
            ],
            position: (124, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (126, 5),
             },
             Raw {
              content: "udev",
              position: (126, 14),
             },
             Raw {
              content: "packages",
              position: (126, 19),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (126, 32),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (126, 36),
                },
               ],
              },
              default: None,
             },
            ],
            position: (126, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (128, 5),
             },
             Raw {
              content: "packages",
              position: (128, 13),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (128, 26),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (128, 30),
                },
               ],
              },
              default: None,
             },
            ],
            position: (128, 24),
           },
          },
         ],
         recursive: false,
         position: (115, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (131, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (132, 5),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (132, 19),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "fwupd",
             position: (132, 24),
            },
            Raw {
             content: "meta",
             position: (132, 30),
            },
            Raw {
             content: "maintainers",
             position: (132, 35),
            },
           ],
          },
          default: None,
         },
        },
       ],
       recursive: false,
       position: (131, 10),
      },
     },
    ],
    recursive: false,
    position: (48, 4),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}