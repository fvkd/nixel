---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 17),
        },
        Raw {
         content: "ceph",
         position: (6, 26),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "expandCamelCase",
        position: (9, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "replaceStrings",
       position: (9, 21),
      },
      arguments: [
       Variable {
        identifier: "upperChars",
        position: (9, 36),
       },
       FunctionApplication {
        function: Variable {
         identifier: "map",
         position: (9, 48),
        },
        arguments: [
         Function {
          argument: Some(
           "s",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: String {
           parts: [
            Raw {
             content: " ",
             position: (9, 57),
            },
            Expression {
             expression: Variable {
              identifier: "s",
              position: (9, 60),
             },
            },
           ],
          },
          position: (9, 53),
         },
         Variable {
          identifier: "lowerChars",
          position: (9, 65),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "expandCamelCaseAttrs",
        position: (10, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mapAttrs'",
       position: (10, 26),
      },
      arguments: [
       Function {
        argument: Some(
         "name",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Function {
         argument: Some(
          "value",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: FunctionApplication {
          function: Variable {
           identifier: "nameValuePair",
           position: (10, 50),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "expandCamelCase",
             position: (10, 65),
            },
            arguments: [
             Variable {
              identifier: "name",
              position: (10, 81),
             },
            ],
           },
           Variable {
            identifier: "value",
            position: (10, 87),
           },
          ],
         },
         position: (10, 43),
        },
        position: (10, 37),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "makeServices",
        position: (12, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "daemonType",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "daemonIds",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "mkMerge",
         position: (13, 5),
        },
        arguments: [
         FunctionApplication {
          function: Variable {
           identifier: "map",
           position: (13, 14),
          },
          arguments: [
           Function {
            argument: Some(
             "daemonId",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Expression {
                  expression: String {
                   parts: [
                    Raw {
                     content: "ceph-",
                     position: (14, 10),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "daemonType",
                      position: (14, 17),
                     },
                    },
                    Raw {
                     content: "-",
                     position: (14, 28),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "daemonId",
                      position: (14, 31),
                     },
                    },
                   ],
                  },
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "makeService",
                 position: (14, 44),
                },
                arguments: [
                 Variable {
                  identifier: "daemonType",
                  position: (14, 56),
                 },
                 Variable {
                  identifier: "daemonId",
                  position: (14, 67),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (14, 76),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "global",
                     position: (14, 80),
                    },
                    Raw {
                     content: "clusterName",
                     position: (14, 87),
                    },
                   ],
                  },
                  default: None,
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (14, 99),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "ceph",
                     position: (14, 104),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (14, 7),
            },
            position: (13, 19),
           },
           Variable {
            identifier: "daemonIds",
            position: (15, 7),
           },
          ],
         },
        ],
       },
       position: (12, 31),
      },
      position: (12, 19),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "makeService",
        position: (17, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "daemonType",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "daemonId",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Function {
        argument: Some(
         "clusterName",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Function {
         argument: Some(
          "ceph",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: LetIn {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "stateDirectory",
               position: (19, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "ceph/",
               position: (19, 25),
              },
              Expression {
               expression: IfThenElse {
                predicate: BinaryOperation {
                 operator: EqualTo,
                 operands: [
                  Variable {
                   identifier: "daemonType",
                   position: (19, 35),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "rgw",
                     position: (19, 50),
                    },
                   ],
                  },
                 ],
                 position: (19, 46),
                },
                then: String {
                 parts: [
                  Raw {
                   content: "radosgw",
                   position: (19, 61),
                  },
                 ],
                },
                else_: Variable {
                 identifier: "daemonType",
                 position: (19, 75),
                },
                position: (19, 32),
               },
              },
              Raw {
               content: "/",
               position: (19, 86),
              },
              Expression {
               expression: Variable {
                identifier: "clusterName",
                position: (19, 89),
               },
              },
              Raw {
               content: "-",
               position: (19, 101),
              },
              Expression {
               expression: Variable {
                identifier: "daemonId",
                position: (19, 104),
               },
              },
             ],
            },
           ),
          ],
          target: Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (20, 5),
               },
              ],
             },
             Variable {
              identifier: "true",
              position: (20, 14),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (21, 5),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Ceph ",
                position: (21, 20),
               },
               Expression {
                expression: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "builtins",
                   position: (21, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "replaceStrings",
                     position: (21, 36),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "lowerChars",
                   position: (21, 51),
                  },
                  Variable {
                   identifier: "upperChars",
                   position: (21, 62),
                  },
                  Variable {
                   identifier: "daemonType",
                   position: (21, 73),
                  },
                 ],
                },
               },
               Raw {
                content: " daemon ",
                position: (21, 84),
               },
               Expression {
                expression: Variable {
                 identifier: "daemonId",
                 position: (21, 94),
                },
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "after",
                position: (22, 5),
               },
              ],
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "network-online.target",
                    position: (22, 16),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "time-sync.target",
                    position: (22, 40),
                   },
                  ],
                 },
                ],
                position: (22, 13),
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (22, 63),
                },
                arguments: [
                 BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   Variable {
                    identifier: "daemonType",
                    position: (22, 73),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "osd",
                      position: (22, 88),
                     },
                    ],
                   },
                  ],
                  position: (22, 84),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ceph-mon.target",
                    position: (22, 95),
                   },
                  ],
                 },
                ],
               },
              ],
              position: (22, 60),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wants",
                position: (23, 5),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "network-online.target",
                  position: (23, 16),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "time-sync.target",
                  position: (23, 40),
                 },
                ],
               },
              ],
              position: (23, 13),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "partOf",
                position: (24, 5),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "ceph-",
                  position: (24, 17),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "daemonType",
                   position: (24, 24),
                  },
                 },
                 Raw {
                  content: ".target",
                  position: (24, 35),
                 },
                ],
               },
              ],
              position: (24, 14),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wantedBy",
                position: (25, 5),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "ceph-",
                  position: (25, 19),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "daemonType",
                   position: (25, 26),
                  },
                 },
                 Raw {
                  content: ".target",
                  position: (25, 37),
                 },
                ],
               },
              ],
              position: (25, 16),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "path",
                position: (27, 5),
               },
              ],
             },
             List {
              elements: [
               PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (27, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "getopt",
                   position: (27, 19),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (27, 12),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "unitConfig",
                position: (30, 5),
               },
               Raw {
                content: "ConditionPathExists",
                position: (30, 16),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "/var/lib/",
                position: (30, 39),
               },
               Expression {
                expression: Variable {
                 identifier: "stateDirectory",
                 position: (30, 50),
                },
               },
               Raw {
                content: "/keyring",
                position: (30, 65),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "startLimitBurst",
                position: (31, 5),
               },
              ],
             },
             IfThenElse {
              predicate: BinaryOperation {
               operator: EqualTo,
               operands: [
                Variable {
                 identifier: "daemonType",
                 position: (32, 10),
                },
                String {
                 parts: [
                  Raw {
                   content: "osd",
                   position: (32, 25),
                  },
                 ],
                },
               ],
               position: (32, 21),
              },
              then: Int {
               value: 30,
               position: (32, 35),
              },
              else_: IfThenElse {
               predicate: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (32, 46),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "elem",
                    position: (32, 50),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Variable {
                  identifier: "daemonType",
                  position: (32, 55),
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "mgr",
                      position: (32, 68),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "mds",
                      position: (32, 74),
                     },
                    ],
                   },
                  ],
                  position: (32, 66),
                 },
                ],
               },
               then: Int {
                value: 3,
                position: (32, 85),
               },
               else_: Int {
                value: 5,
                position: (32, 92),
               },
               position: (32, 43),
              },
              position: (32, 7),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "startLimitIntervalSec",
                position: (33, 5),
               },
              ],
             },
             BinaryOperation {
              operator: Multiplication,
              operands: [
               Int {
                value: 60,
                position: (33, 29),
               },
               Int {
                value: 30,
                position: (33, 34),
               },
              ],
              position: (33, 32),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (35, 5),
               },
              ],
             },
             BinaryOperation {
              operator: Update,
              operands: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "LimitNOFILE",
                     position: (36, 7),
                    },
                   ],
                  },
                  Int {
                   value: 1048576,
                   position: (36, 21),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "LimitNPROC",
                     position: (37, 7),
                    },
                   ],
                  },
                  Int {
                   value: 1048576,
                   position: (37, 20),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "Environment",
                     position: (38, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "CLUSTER=",
                     position: (38, 22),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "clusterName",
                      position: (38, 32),
                     },
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "ExecReload",
                     position: (39, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (39, 23),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "coreutils",
                         position: (39, 28),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/bin/kill -HUP $MAINPID",
                     position: (39, 38),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "PrivateDevices",
                     position: (40, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "yes",
                     position: (40, 25),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "PrivateTmp",
                     position: (41, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "true",
                     position: (41, 21),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "ProtectHome",
                     position: (42, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "true",
                     position: (42, 22),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "ProtectSystem",
                     position: (43, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "full",
                     position: (43, 24),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "Restart",
                     position: (44, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "on-failure",
                     position: (44, 18),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "StateDirectory",
                     position: (45, 7),
                    },
                   ],
                  },
                  Variable {
                   identifier: "stateDirectory",
                   position: (45, 24),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "User",
                     position: (46, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "ceph",
                     position: (46, 15),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "Group",
                     position: (47, 7),
                    },
                   ],
                  },
                  IfThenElse {
                   predicate: BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     Variable {
                      identifier: "daemonType",
                      position: (47, 18),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "osd",
                        position: (47, 33),
                       },
                      ],
                     },
                    ],
                    position: (47, 29),
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: "disk",
                      position: (47, 44),
                     },
                    ],
                   },
                   else_: String {
                    parts: [
                     Raw {
                      content: "ceph",
                      position: (47, 56),
                     },
                    ],
                   },
                   position: (47, 15),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "ExecStart",
                     position: (48, 7),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "ceph",
                       position: (48, 23),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "out",
                         position: (48, 28),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "/bin/",
                     position: (48, 32),
                    },
                    Expression {
                     expression: IfThenElse {
                      predicate: BinaryOperation {
                       operator: EqualTo,
                       operands: [
                        Variable {
                         identifier: "daemonType",
                         position: (48, 42),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "rgw",
                           position: (48, 57),
                          },
                         ],
                        },
                       ],
                       position: (48, 53),
                      },
                      then: String {
                       parts: [
                        Raw {
                         content: "radosgw",
                         position: (48, 68),
                        },
                       ],
                      },
                      else_: String {
                       parts: [
                        Raw {
                         content: "ceph-",
                         position: (48, 83),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "daemonType",
                          position: (48, 90),
                         },
                        },
                       ],
                      },
                      position: (48, 39),
                     },
                    },
                    Raw {
                     content: " \\\n                    -f --cluster ",
                     position: (48, 103),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "clusterName",
                      position: (49, 36),
                     },
                    },
                    Raw {
                     content: " --id ",
                     position: (49, 48),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "daemonId",
                      position: (49, 56),
                     },
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (35, 21),
               },
               BinaryOperation {
                operator: Update,
                operands: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionalAttrs",
                   position: (50, 10),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     Variable {
                      identifier: "daemonType",
                      position: (50, 25),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "osd",
                        position: (50, 40),
                       },
                      ],
                     },
                    ],
                    position: (50, 36),
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "ExecStartPre",
                         position: (51, 7),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "ceph",
                           position: (51, 25),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "lib",
                             position: (51, 30),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "/libexec/ceph/ceph-osd-prestart.sh --id ",
                         position: (51, 34),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "daemonId",
                          position: (51, 76),
                         },
                        },
                        Raw {
                         content: " --cluster ",
                         position: (51, 85),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "clusterName",
                          position: (51, 98),
                         },
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "RestartSec",
                         position: (52, 7),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "20s",
                         position: (52, 21),
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "PrivateDevices",
                         position: (53, 7),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "no",
                         position: (53, 25),
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                    position: (50, 46),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionalAttrs",
                   position: (54, 10),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     Variable {
                      identifier: "daemonType",
                      position: (54, 26),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "mon",
                        position: (54, 41),
                       },
                      ],
                     },
                    ],
                    position: (54, 37),
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "RestartSec",
                         position: (55, 7),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "10",
                         position: (55, 21),
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                    position: (54, 47),
                   },
                  ],
                 },
                ],
                position: (54, 7),
               },
              ],
              position: (50, 7),
             },
            ),
           ],
           recursive: false,
           position: (19, 119),
          },
          position: (18, 5),
         },
         position: (17, 53),
        },
        position: (17, 40),
       },
       position: (17, 30),
      },
      position: (17, 18),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "makeTarget",
        position: (59, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "daemonType",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Expression {
            expression: String {
             parts: [
              Raw {
               content: "ceph-",
               position: (61, 8),
              },
              Expression {
               expression: Variable {
                identifier: "daemonType",
                position: (61, 15),
               },
              },
             ],
            },
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "description",
               position: (62, 9),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "Ceph target allowing to start/stop all ceph-",
               position: (62, 24),
              },
              Expression {
               expression: Variable {
                identifier: "daemonType",
                position: (62, 70),
               },
              },
              Raw {
               content: " services at once",
               position: (62, 81),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "partOf",
               position: (63, 9),
              },
             ],
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "ceph.target",
                 position: (63, 21),
                },
               ],
              },
             ],
             position: (63, 18),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "wantedBy",
               position: (64, 9),
              },
             ],
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "ceph.target",
                 position: (64, 23),
                },
               ],
              },
             ],
             position: (64, 20),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "before",
               position: (65, 9),
              },
             ],
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "ceph.target",
                 position: (65, 21),
                },
               ],
              },
             ],
             position: (65, 18),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "unitConfig",
               position: (66, 9),
              },
              Raw {
               content: "StopWhenUnneeded",
               position: (66, 20),
              },
             ],
            },
            Variable {
             identifier: "true",
             position: (66, 39),
            },
           ),
          ],
          recursive: false,
          position: (61, 30),
         },
        ),
       ],
       recursive: false,
       position: (60, 5),
      },
      position: (59, 17),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (72, 3),
        },
        Raw {
         content: "services",
         position: (72, 11),
        },
        Raw {
         content: "ceph",
         position: (72, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (75, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (75, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Ceph global configuration",
              position: (75, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "global",
            position: (77, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "fsid",
               position: (78, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (78, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (79, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (79, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (79, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (80, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "433a2193-4f8a-47a0-95d2-209d7ca2cca5\n",
                    position: (81, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (83, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Filesystem ID, a generated uuid, its must be generated and set before\nattempting to start a cluster\n",
                    position: (84, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (78, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "clusterName",
               position: (89, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (89, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (90, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (90, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (90, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (91, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ceph",
                    position: (91, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (92, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Name of cluster\n",
                    position: (93, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (89, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "mgrModulePath",
               position: (97, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (97, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (98, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (98, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (98, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (99, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (99, 22),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "ceph",
                        position: (99, 27),
                       },
                       Raw {
                        content: "lib",
                        position: (99, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/lib/ceph/mgr",
                    position: (99, 36),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (100, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (100, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"",
                      position: (100, 43),
                     },
                     Raw {
                      content: "$",
                      position: (100, 44),
                     },
                     Raw {
                      content: "{pkgs.ceph.lib}/lib/ceph/mgr\"",
                      position: (100, 47),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (101, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path at which to find ceph-mgr modules.\n",
                    position: (102, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (97, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "monInitialMembers",
               position: (106, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (106, 27),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (107, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (107, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (107, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "commas",
                     position: (107, 35),
                    },
                   ],
                  },
                  position: (107, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (108, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (108, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (109, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "node0, node1, node2\n",
                    position: (110, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (112, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of hosts that will be used as monitors at startup.\n",
                    position: (113, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (106, 36),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "monHost",
               position: (117, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (117, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (118, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (118, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (118, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "commas",
                     position: (118, 35),
                    },
                   ],
                  },
                  position: (118, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (119, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (119, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (120, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "10.10.0.1, 10.10.0.2, 10.10.0.3\n",
                    position: (121, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (123, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of hostname shortnames/IP addresses of the initial monitors.\n",
                    position: (124, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (117, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "maxOpenFiles",
               position: (128, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (128, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (129, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (129, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (129, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (130, 9),
                   },
                  ],
                 },
                 Int {
                  value: 131072,
                  position: (130, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (131, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Max open files for each OSD daemon.\n",
                    position: (132, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (128, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "authClusterRequired",
               position: (136, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (136, 29),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (137, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (137, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enum",
                      position: (137, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "cephx",
                        position: (137, 30),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "none",
                        position: (137, 38),
                       },
                      ],
                     },
                    ],
                    position: (137, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (138, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cephx",
                    position: (138, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (139, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enables requiring daemons to authenticate with eachother in the cluster.\n",
                    position: (140, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (136, 38),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "authServiceRequired",
               position: (144, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (144, 29),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (145, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (145, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enum",
                      position: (145, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "cephx",
                        position: (145, 30),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "none",
                        position: (145, 38),
                       },
                      ],
                     },
                    ],
                    position: (145, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (146, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cephx",
                    position: (146, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (147, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enables requiring clients to authenticate with the cluster to access services in the cluster (e.g. radosgw, mds or osd).\n",
                    position: (148, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (144, 38),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "authClientRequired",
               position: (152, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (152, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (153, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (153, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enum",
                      position: (153, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "cephx",
                        position: (153, 30),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "none",
                        position: (153, 38),
                       },
                      ],
                     },
                    ],
                    position: (153, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (154, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cephx",
                    position: (154, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (155, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enables requiring the cluster to authenticate itself to the client.\n",
                    position: (156, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (152, 37),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "publicNetwork",
               position: (160, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (160, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (161, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (161, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (161, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "commas",
                     position: (161, 35),
                    },
                   ],
                  },
                  position: (161, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (162, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (162, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (163, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "10.20.0.0/24, 192.168.1.0/24\n",
                    position: (164, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (166, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A comma-separated list of subnets that will be used as public networks in the cluster.\n",
                    position: (167, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (160, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "clusterNetwork",
               position: (171, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (171, 24),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (172, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (172, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (172, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "commas",
                     position: (172, 35),
                    },
                   ],
                  },
                  position: (172, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (173, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (173, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (174, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "10.10.0.0/24, 192.168.0.0/24\n",
                    position: (175, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (177, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A comma-separated list of subnets that will be used as cluster networks in the cluster.\n",
                    position: (178, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (171, 33),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "rgwMimeTypesFile",
               position: (182, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (182, 26),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (183, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (183, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (183, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "path",
                     position: (183, 35),
                    },
                   ],
                  },
                  position: (183, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (184, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (184, 22),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mailcap",
                        position: (184, 27),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/etc/mime.types",
                    position: (184, 35),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (185, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (185, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"",
                      position: (185, 43),
                     },
                     Raw {
                      content: "$",
                      position: (185, 44),
                     },
                     Raw {
                      content: "{pkgs.mailcap}/etc/mime.types\"",
                      position: (185, 47),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (186, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path to mime types used by radosgw.\n",
                    position: (187, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (182, 35),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (77, 14),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraConfig",
            position: (192, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (192, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (193, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (193, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (193, 26),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (193, 34),
                 },
                ],
               },
               position: (193, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (194, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (194, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (195, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: String {
                     parts: [
                      Raw {
                       content: "ms bind ipv6",
                       position: (196, 10),
                      },
                     ],
                    },
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "true",
                    position: (196, 27),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (195, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (198, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Extra configuration to add to the global section. Use for setting values that are common for all daemons in the cluster.\n",
                 position: (199, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (192, 28),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mgr",
            position: (203, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (204, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (204, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Ceph MGR daemon",
                 position: (204, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "daemons",
               position: (205, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (205, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (206, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (206, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (206, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (206, 35),
                    },
                   ],
                  },
                  position: (206, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (207, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (207, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (208, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "name1",
                      position: (208, 22),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "name2",
                      position: (208, 30),
                     },
                    ],
                   },
                  ],
                  position: (208, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (209, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of names for manager daemons that should have a service created. The names correspond\nto the id part in ceph i.e. [ \"name1\" ] would result in mgr.name1\n",
                    position: (210, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (205, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (214, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (214, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (215, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (215, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (215, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (215, 36),
                    },
                   ],
                  },
                  position: (215, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (216, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (216, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (217, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra configuration to add to the global section for manager daemons.\n",
                    position: (218, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (214, 30),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (203, 11),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mon",
            position: (223, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (224, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (224, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Ceph MON daemon",
                 position: (224, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "daemons",
               position: (225, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (225, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (226, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (226, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (226, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (226, 35),
                    },
                   ],
                  },
                  position: (226, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (227, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (227, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (228, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "name1",
                      position: (228, 22),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "name2",
                      position: (228, 30),
                     },
                    ],
                   },
                  ],
                  position: (228, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (229, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of monitor daemons that should have a service created. The names correspond\nto the id part in ceph i.e. [ \"name1\" ] would result in mon.name1\n",
                    position: (230, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (225, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (234, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (234, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (235, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (235, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (235, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (235, 36),
                    },
                   ],
                  },
                  position: (235, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (236, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (236, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (237, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra configuration to add to the monitor section.\n",
                    position: (238, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (234, 30),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (223, 11),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "osd",
            position: (243, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (244, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (244, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Ceph OSD daemon",
                 position: (244, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "daemons",
               position: (245, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (245, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (246, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (246, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (246, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (246, 35),
                    },
                   ],
                  },
                  position: (246, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (247, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (247, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (248, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "name1",
                      position: (248, 22),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "name2",
                      position: (248, 30),
                     },
                    ],
                   },
                  ],
                  position: (248, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (249, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of OSD daemons that should have a service created. The names correspond\nto the id part in ceph i.e. [ \"name1\" ] would result in osd.name1\n",
                    position: (250, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (245, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (255, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (255, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (256, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (256, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (256, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (256, 36),
                    },
                   ],
                  },
                  position: (256, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (257, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "osd journal size",
                          position: (258, 12),
                         },
                        ],
                       },
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "10000",
                       position: (258, 33),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "osd pool default size",
                          position: (259, 12),
                         },
                        ],
                       },
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "3",
                       position: (259, 38),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "osd pool default min size",
                          position: (260, 12),
                         },
                        ],
                       },
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "2",
                       position: (260, 42),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "osd pool default pg num",
                          position: (261, 12),
                         },
                        ],
                       },
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "200",
                       position: (261, 40),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "osd pool default pgp num",
                          position: (262, 12),
                         },
                        ],
                       },
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "200",
                       position: (262, 41),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "osd crush chooseleaf type",
                          position: (263, 12),
                         },
                        ],
                       },
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "1",
                       position: (263, 42),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                  position: (257, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (265, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra configuration to add to the OSD section.\n",
                    position: (266, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (255, 30),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (243, 11),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mds",
            position: (271, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (272, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (272, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Ceph MDS daemon",
                 position: (272, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "daemons",
               position: (273, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (273, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (274, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (274, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (274, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (274, 35),
                    },
                   ],
                  },
                  position: (274, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (275, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (275, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (276, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "name1",
                      position: (276, 22),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "name2",
                      position: (276, 30),
                     },
                    ],
                   },
                  ],
                  position: (276, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (277, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of metadata service daemons that should have a service created. The names correspond\nto the id part in ceph i.e. [ \"name1\" ] would result in mds.name1\n",
                    position: (278, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (273, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (282, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (282, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (283, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (283, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (283, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (283, 36),
                    },
                   ],
                  },
                  position: (283, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (284, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (284, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (285, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra configuration to add to the MDS section.\n",
                    position: (286, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (282, 30),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (271, 11),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "rgw",
            position: (291, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (292, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (292, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Ceph RadosGW daemon",
                 position: (292, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "daemons",
               position: (293, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (293, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (294, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (294, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (294, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (294, 35),
                    },
                   ],
                  },
                  position: (294, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (295, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (295, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (296, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "name1",
                      position: (296, 22),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "name2",
                      position: (296, 30),
                     },
                    ],
                   },
                  ],
                  position: (296, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (297, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A list of rados gateway daemons that should have a service created. The names correspond\nto the id part in ceph i.e. [ \"name1\" ] would result in client.name1, radosgw daemons\naren't daemons to cluster in the sense that OSD, MGR or MON daemons are. They are simply\ndaemons, from ceph, that uses the cluster as a backend.\n",
                    position: (298, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (293, 26),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (291, 11),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "client",
            position: (306, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (307, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (307, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Ceph client configuration",
                 position: (307, 32),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (308, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (308, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (309, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (309, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (309, 28),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "attrsOf",
                      position: (309, 37),
                     },
                     arguments: [
                      Variable {
                       identifier: "str",
                       position: (309, 45),
                      },
                     ],
                    },
                   ],
                  },
                  position: (309, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (310, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (310, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (311, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (311, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  # This would create a section for a radosgw daemon named node0 and related\n  # configuration for it\n  \"client.radosgw.node0\" = { \"some config option\" = \"true\"; };\n};\n",
                      position: (312, 1),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (318, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra configuration to add to the client section. Configuration for rados gateways\nwould be added here, with their own sections, see example.\n",
                    position: (319, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (308, 30),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (306, 14),
         },
        ),
       ],
       recursive: false,
       position: (72, 27),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (326, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (326, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (326, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (326, 24),
           },
           Raw {
            content: "ceph",
            position: (326, 33),
           },
           Raw {
            content: "enable",
            position: (326, 38),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (327, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (328, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (328, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "global",
                      position: (328, 25),
                     },
                     Raw {
                      content: "fsid",
                      position: (328, 32),
                     },
                    ],
                   },
                   default: None,
                  },
                  String {
                   parts: [],
                  },
                 ],
                 position: (328, 37),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (329, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "fsid has to be set to a valid uuid for the cluster to function",
                   position: (329, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (328, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (331, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (331, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mon",
                        position: (331, 25),
                       },
                       Raw {
                        content: "enable",
                        position: (331, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "true",
                     position: (331, 39),
                    },
                   ],
                   position: (331, 36),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (331, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mon",
                        position: (331, 51),
                       },
                       Raw {
                        content: "daemons",
                        position: (331, 55),
                       },
                      ],
                     },
                     default: None,
                    },
                    List {
                     elements: [],
                     position: (331, 66),
                    },
                   ],
                   position: (331, 63),
                  },
                 ],
                 position: (331, 44),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (332, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "have to set id of atleast one MON if you're going to enable Monitor",
                   position: (332, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (331, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (334, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (334, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mds",
                        position: (334, 25),
                       },
                       Raw {
                        content: "enable",
                        position: (334, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "true",
                     position: (334, 39),
                    },
                   ],
                   position: (334, 36),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (334, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mds",
                        position: (334, 51),
                       },
                       Raw {
                        content: "daemons",
                        position: (334, 55),
                       },
                      ],
                     },
                     default: None,
                    },
                    List {
                     elements: [],
                     position: (334, 66),
                    },
                   ],
                   position: (334, 63),
                  },
                 ],
                 position: (334, 44),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (335, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "have to set id of atleast one MDS if you're going to enable Metadata Service",
                   position: (335, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (334, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (337, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (337, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "osd",
                        position: (337, 25),
                       },
                       Raw {
                        content: "enable",
                        position: (337, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "true",
                     position: (337, 39),
                    },
                   ],
                   position: (337, 36),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (337, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "osd",
                        position: (337, 51),
                       },
                       Raw {
                        content: "daemons",
                        position: (337, 55),
                       },
                      ],
                     },
                     default: None,
                    },
                    List {
                     elements: [],
                     position: (337, 66),
                    },
                   ],
                   position: (337, 63),
                  },
                 ],
                 position: (337, 44),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (338, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "have to set id of atleast one OSD if you're going to enable OSD",
                   position: (338, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (337, 7),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (340, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (340, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mgr",
                        position: (340, 25),
                       },
                       Raw {
                        content: "enable",
                        position: (340, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "true",
                     position: (340, 39),
                    },
                   ],
                   position: (340, 36),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (340, 47),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mgr",
                        position: (340, 51),
                       },
                       Raw {
                        content: "daemons",
                        position: (340, 55),
                       },
                      ],
                     },
                     default: None,
                    },
                    List {
                     elements: [],
                     position: (340, 66),
                    },
                   ],
                   position: (340, 63),
                  },
                 ],
                 position: (340, 44),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (341, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "have to set id of atleast one MGR if you're going to enable MGR",
                   position: (341, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (340, 7),
             },
            ],
            position: (327, 18),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "warnings",
              position: (345, 5),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optional",
             position: (345, 16),
            },
            arguments: [
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (345, 26),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "global",
                   position: (345, 30),
                  },
                  Raw {
                   content: "monInitialMembers",
                   position: (345, 37),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (345, 58),
               },
              ],
              position: (345, 55),
             },
             String {
              parts: [
               Raw {
                content: "Not setting up a list of members in monInitialMembers requires that you set the host variable for each mon daemon or else the cluster won't function",
                position: (346, 8),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (348, 5),
             },
             Raw {
              content: "etc",
              position: (348, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "ceph/ceph.conf",
                 position: (348, 22),
                },
               ],
              },
             },
             Raw {
              content: "text",
              position: (348, 38),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "globalSection",
                 position: (350, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "expandCamelCaseAttrs",
                position: (350, 23),
               },
               arguments: [
                BinaryOperation {
                 operator: Update,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (350, 45),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "global",
                      position: (350, 49),
                     },
                    ],
                   },
                   default: None,
                  },
                  BinaryOperation {
                   operator: Update,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (350, 59),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "extraConfig",
                        position: (350, 63),
                       },
                      ],
                     },
                     default: None,
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "optionalAttrs",
                      position: (350, 78),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (350, 92),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mgr",
                          position: (350, 96),
                         },
                         Raw {
                          content: "enable",
                          position: (350, 100),
                         },
                        ],
                       },
                       default: None,
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (350, 107),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mgr",
                          position: (350, 111),
                         },
                         Raw {
                          content: "extraConfig",
                          position: (350, 115),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   ],
                   position: (350, 75),
                  },
                 ],
                 position: (350, 56),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "globalSection'",
                 position: (352, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "filterAttrs",
                position: (352, 24),
               },
               arguments: [
                Function {
                 argument: Some(
                  "name",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "value",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    Variable {
                     identifier: "value",
                     position: (352, 50),
                    },
                    Variable {
                     identifier: "null",
                     position: (352, 59),
                    },
                   ],
                   position: (352, 56),
                  },
                  position: (352, 43),
                 },
                 position: (352, 37),
                },
                Variable {
                 identifier: "globalSection",
                 position: (352, 65),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "totalConfig",
                 position: (353, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "global",
                      position: (354, 11),
                     },
                    ],
                   },
                   Variable {
                    identifier: "globalSection'",
                    position: (354, 20),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (353, 21),
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "optionalAttrs",
                    position: (355, 14),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (355, 29),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mon",
                          position: (355, 33),
                         },
                         Raw {
                          content: "enable",
                          position: (355, 37),
                         },
                        ],
                       },
                       default: None,
                      },
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (355, 47),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "mon",
                            position: (355, 51),
                           },
                           Raw {
                            content: "extraConfig",
                            position: (355, 55),
                           },
                          ],
                         },
                         default: None,
                        },
                        Map {
                         bindings: [],
                         recursive: false,
                         position: (355, 70),
                        },
                       ],
                       position: (355, 67),
                      },
                     ],
                     position: (355, 44),
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "mon",
                          position: (355, 76),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (355, 82),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mon",
                           position: (355, 86),
                          },
                          Raw {
                           content: "extraConfig",
                           position: (355, 90),
                          },
                         ],
                        },
                        default: None,
                       },
                      ),
                     ],
                     recursive: false,
                     position: (355, 74),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Update,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "optionalAttrs",
                      position: (356, 14),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: LogicalAnd,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (356, 29),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "mds",
                            position: (356, 33),
                           },
                           Raw {
                            content: "enable",
                            position: (356, 37),
                           },
                          ],
                         },
                         default: None,
                        },
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (356, 47),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "mds",
                              position: (356, 51),
                             },
                             Raw {
                              content: "extraConfig",
                              position: (356, 55),
                             },
                            ],
                           },
                           default: None,
                          },
                          Map {
                           bindings: [],
                           recursive: false,
                           position: (356, 70),
                          },
                         ],
                         position: (356, 67),
                        },
                       ],
                       position: (356, 44),
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "mds",
                            position: (356, 76),
                           },
                          ],
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (356, 82),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "mds",
                             position: (356, 86),
                            },
                            Raw {
                             content: "extraConfig",
                             position: (356, 90),
                            },
                           ],
                          },
                          default: None,
                         },
                        ),
                       ],
                       recursive: false,
                       position: (356, 74),
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Update,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionalAttrs",
                        position: (357, 14),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: LogicalAnd,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (357, 29),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "osd",
                              position: (357, 33),
                             },
                             Raw {
                              content: "enable",
                              position: (357, 37),
                             },
                            ],
                           },
                           default: None,
                          },
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (357, 47),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "osd",
                                position: (357, 51),
                               },
                               Raw {
                                content: "extraConfig",
                                position: (357, 55),
                               },
                              ],
                             },
                             default: None,
                            },
                            Map {
                             bindings: [],
                             recursive: false,
                             position: (357, 70),
                            },
                           ],
                           position: (357, 67),
                          },
                         ],
                         position: (357, 44),
                        },
                        Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "osd",
                              position: (357, 76),
                             },
                            ],
                           },
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (357, 82),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "osd",
                               position: (357, 86),
                              },
                              Raw {
                               content: "extraConfig",
                               position: (357, 90),
                              },
                             ],
                            },
                            default: None,
                           },
                          ),
                         ],
                         recursive: false,
                         position: (357, 74),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionalAttrs",
                        position: (358, 14),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: LogicalAnd,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (358, 29),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "client",
                              position: (358, 33),
                             },
                             Raw {
                              content: "enable",
                              position: (358, 40),
                             },
                            ],
                           },
                           default: None,
                          },
                          BinaryOperation {
                           operator: NotEqualTo,
                           operands: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (358, 50),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "client",
                                position: (358, 54),
                               },
                               Raw {
                                content: "extraConfig",
                                position: (358, 61),
                               },
                              ],
                             },
                             default: None,
                            },
                            Map {
                             bindings: [],
                             recursive: false,
                             position: (358, 76),
                            },
                           ],
                           position: (358, 73),
                          },
                         ],
                         position: (358, 47),
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (358, 81),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "client",
                            position: (358, 85),
                           },
                           Raw {
                            content: "extraConfig",
                            position: (358, 92),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     ],
                     position: (358, 11),
                    },
                   ],
                   position: (357, 11),
                  },
                 ],
                 position: (356, 11),
                },
               ],
               position: (355, 11),
              },
             ),
            ],
            target: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "generators",
               position: (360, 9),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "toINI",
                 position: (360, 20),
                },
               ],
              },
              default: None,
             },
             arguments: [
              Map {
               bindings: [],
               recursive: false,
               position: (360, 26),
              },
              Variable {
               identifier: "totalConfig",
               position: (360, 29),
              },
             ],
            },
            position: (348, 45),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (362, 5),
             },
             Raw {
              content: "users",
              position: (362, 11),
             },
             Raw {
              content: "ceph",
              position: (362, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "uid",
                 position: (363, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (363, 13),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (363, 20),
                 },
                 Raw {
                  content: "uids",
                  position: (363, 24),
                 },
                 Raw {
                  content: "ceph",
                  position: (363, 29),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (364, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Ceph daemon user",
                 position: (364, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (365, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "ceph",
                 position: (365, 16),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "extraGroups",
                 position: (366, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "disk",
                   position: (366, 24),
                  },
                 ],
                },
               ],
               position: (366, 21),
              },
             ),
            ],
            recursive: false,
            position: (362, 24),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (369, 5),
             },
             Raw {
              content: "groups",
              position: (369, 11),
             },
             Raw {
              content: "ceph",
              position: (369, 18),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "gid",
                 position: (370, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (370, 13),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (370, 20),
                 },
                 Raw {
                  content: "gids",
                  position: (370, 24),
                 },
                 Raw {
                  content: "ceph",
                  position: (370, 29),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (369, 25),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (373, 5),
             },
             Raw {
              content: "services",
              position: (373, 13),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "services",
                 position: (374, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [],
                 position: (374, 18),
                },
                BinaryOperation {
                 operator: Concatenation,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "optional",
                    position: (375, 12),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (375, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mon",
                        position: (375, 25),
                       },
                       Raw {
                        content: "enable",
                        position: (375, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "makeServices",
                      position: (375, 37),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "mon",
                         position: (375, 51),
                        },
                       ],
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (375, 56),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mon",
                          position: (375, 60),
                         },
                         Raw {
                          content: "daemons",
                          position: (375, 64),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "optional",
                      position: (376, 12),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (376, 21),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mds",
                          position: (376, 25),
                         },
                         Raw {
                          content: "enable",
                          position: (376, 29),
                         },
                        ],
                       },
                       default: None,
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "makeServices",
                        position: (376, 37),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "mds",
                           position: (376, 51),
                          },
                         ],
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (376, 56),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "mds",
                            position: (376, 60),
                           },
                           Raw {
                            content: "daemons",
                            position: (376, 64),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optional",
                        position: (377, 12),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (377, 21),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "osd",
                            position: (377, 25),
                           },
                           Raw {
                            content: "enable",
                            position: (377, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "makeServices",
                          position: (377, 37),
                         },
                         arguments: [
                          String {
                           parts: [
                            Raw {
                             content: "osd",
                             position: (377, 51),
                            },
                           ],
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (377, 56),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "osd",
                              position: (377, 60),
                             },
                             Raw {
                              content: "daemons",
                              position: (377, 64),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Concatenation,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (378, 12),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (378, 21),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "rgw",
                              position: (378, 25),
                             },
                             Raw {
                              content: "enable",
                              position: (378, 29),
                             },
                            ],
                           },
                           default: None,
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "makeServices",
                            position: (378, 37),
                           },
                           arguments: [
                            String {
                             parts: [
                              Raw {
                               content: "rgw",
                               position: (378, 51),
                              },
                             ],
                            },
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (378, 56),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "rgw",
                                position: (378, 60),
                               },
                               Raw {
                                content: "daemons",
                                position: (378, 64),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (379, 12),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (379, 21),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "mgr",
                              position: (379, 25),
                             },
                             Raw {
                              content: "enable",
                              position: (379, 29),
                             },
                            ],
                           },
                           default: None,
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "makeServices",
                            position: (379, 37),
                           },
                           arguments: [
                            String {
                             parts: [
                              Raw {
                               content: "mgr",
                               position: (379, 51),
                              },
                             ],
                            },
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (379, 56),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "mgr",
                                position: (379, 60),
                               },
                               Raw {
                                content: "daemons",
                                position: (379, 64),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         ],
                        },
                       ],
                       position: (379, 9),
                      },
                     ],
                     position: (378, 9),
                    },
                   ],
                   position: (377, 9),
                  },
                 ],
                 position: (376, 9),
                },
               ],
               position: (375, 9),
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "mkMerge",
              position: (381, 9),
             },
             arguments: [
              Variable {
               identifier: "services",
               position: (381, 17),
              },
             ],
            },
            position: (373, 24),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (383, 5),
             },
             Raw {
              content: "targets",
              position: (383, 13),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "targets",
                 position: (384, 7),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ceph",
                        position: (385, 11),
                       },
                      ],
                     },
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "description",
                           position: (386, 11),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "Ceph target allowing to start/stop all ceph service instances at once",
                           position: (386, 26),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "wantedBy",
                           position: (387, 11),
                          },
                         ],
                        },
                        List {
                         elements: [
                          String {
                           parts: [
                            Raw {
                             content: "multi-user.target",
                             position: (387, 25),
                            },
                           ],
                          },
                         ],
                         position: (387, 22),
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "unitConfig",
                           position: (388, 11),
                          },
                          Raw {
                           content: "StopWhenUnneeded",
                           position: (388, 22),
                          },
                         ],
                        },
                        Variable {
                         identifier: "true",
                         position: (388, 41),
                        },
                       ),
                      ],
                      recursive: false,
                      position: (385, 18),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (385, 9),
                  },
                 ],
                 position: (384, 17),
                },
                BinaryOperation {
                 operator: Concatenation,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "optional",
                    position: (390, 12),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (390, 21),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mon",
                        position: (390, 25),
                       },
                       Raw {
                        content: "enable",
                        position: (390, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "makeTarget",
                      position: (390, 37),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "mon",
                         position: (390, 49),
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "optional",
                      position: (391, 12),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (391, 21),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mds",
                          position: (391, 25),
                         },
                         Raw {
                          content: "enable",
                          position: (391, 29),
                         },
                        ],
                       },
                       default: None,
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "makeTarget",
                        position: (391, 37),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "mds",
                           position: (391, 49),
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optional",
                        position: (392, 12),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (392, 21),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "osd",
                            position: (392, 25),
                           },
                           Raw {
                            content: "enable",
                            position: (392, 29),
                           },
                          ],
                         },
                         default: None,
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "makeTarget",
                          position: (392, 37),
                         },
                         arguments: [
                          String {
                           parts: [
                            Raw {
                             content: "osd",
                             position: (392, 49),
                            },
                           ],
                          },
                         ],
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Concatenation,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (393, 12),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (393, 21),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "rgw",
                              position: (393, 25),
                             },
                             Raw {
                              content: "enable",
                              position: (393, 29),
                             },
                            ],
                           },
                           default: None,
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "makeTarget",
                            position: (393, 37),
                           },
                           arguments: [
                            String {
                             parts: [
                              Raw {
                               content: "rgw",
                               position: (393, 49),
                              },
                             ],
                            },
                           ],
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (394, 12),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (394, 21),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "mgr",
                              position: (394, 25),
                             },
                             Raw {
                              content: "enable",
                              position: (394, 29),
                             },
                            ],
                           },
                           default: None,
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "makeTarget",
                            position: (394, 37),
                           },
                           arguments: [
                            String {
                             parts: [
                              Raw {
                               content: "mgr",
                               position: (394, 49),
                              },
                             ],
                            },
                           ],
                          },
                         ],
                        },
                       ],
                       position: (394, 9),
                      },
                     ],
                     position: (393, 9),
                    },
                   ],
                   position: (392, 9),
                  },
                 ],
                 position: (391, 9),
                },
               ],
               position: (390, 9),
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "mkMerge",
              position: (396, 9),
             },
             arguments: [
              Variable {
               identifier: "targets",
               position: (396, 17),
              },
             ],
            },
            position: (383, 23),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (398, 5),
             },
             Raw {
              content: "tmpfiles",
              position: (398, 13),
             },
             Raw {
              content: "rules",
              position: (398, 22),
             },
            ],
           },
           BinaryOperation {
            operator: Concatenation,
            operands: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "d /etc/ceph - ceph ceph - -",
                  position: (399, 8),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "d /run/ceph 0770 ceph ceph -",
                  position: (400, 8),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "d /var/lib/ceph - ceph ceph - -",
                  position: (401, 8),
                 },
                ],
               },
              ],
              position: (398, 30),
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optionals",
                 position: (402, 8),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (402, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "mgr",
                     position: (402, 22),
                    },
                    Raw {
                     content: "enable",
                     position: (402, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "d /var/lib/ceph/mgr - ceph ceph - -",
                      position: (402, 36),
                     },
                    ],
                   },
                  ],
                  position: (402, 33),
                 },
                ],
               },
               BinaryOperation {
                operator: Concatenation,
                operands: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionals",
                   position: (403, 8),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (403, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "mon",
                       position: (403, 22),
                      },
                      Raw {
                       content: "enable",
                       position: (403, 26),
                      },
                     ],
                    },
                    default: None,
                   },
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "d /var/lib/ceph/mon - ceph ceph - -",
                        position: (403, 36),
                       },
                      ],
                     },
                    ],
                    position: (403, 33),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionals",
                   position: (404, 8),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (404, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "osd",
                       position: (404, 22),
                      },
                      Raw {
                       content: "enable",
                       position: (404, 26),
                      },
                     ],
                    },
                    default: None,
                   },
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "d /var/lib/ceph/osd - ceph ceph - -",
                        position: (404, 36),
                       },
                      ],
                     },
                    ],
                    position: (404, 33),
                   },
                  ],
                 },
                ],
                position: (404, 5),
               },
              ],
              position: (403, 5),
             },
            ],
            position: (402, 5),
           },
          ),
         ],
         recursive: false,
         position: (326, 45),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (71, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}