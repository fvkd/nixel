---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (4, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (8, 16),
        },
        Raw {
         content: "incron",
         position: (8, 25),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (13, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (15, 5),
           },
           Raw {
            content: "incron",
            position: (15, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (17, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (17, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (18, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (18, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (18, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (19, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (19, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (20, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable the incron daemon.\n\nNote that commands run under incrontab only support common Nix profiles for the <envar>PATH</envar> provided variable.\n",
                    position: (21, 1),
                   },
                  ],
                  position: (20, 23),
                 },
                },
               ],
               recursive: false,
               position: (17, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "allow",
               position: (27, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (27, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (28, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (28, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (28, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (28, 30),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "listOf",
                        position: (28, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (28, 43),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "str",
                         position: (28, 49),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (29, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (29, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (30, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Users allowed to use incrontab.\n\nIf empty then no user will be allowed to have their own incrontab.\nIf <literal>null</literal> then will defer to <option>deny</option>.\nIf both <option>allow</option> and <option>deny</option> are null\nthen all users will be allowed to have their own incrontab.\n",
                    position: (31, 1),
                   },
                  ],
                  position: (30, 23),
                 },
                },
               ],
               recursive: false,
               position: (27, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "deny",
               position: (40, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (40, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (41, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (41, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (41, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (41, 30),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "listOf",
                        position: (41, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (41, 43),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "str",
                         position: (41, 49),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (42, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (42, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (43, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Users forbidden from using incrontab.",
                    position: (43, 24),
                   },
                  ],
                  position: (43, 23),
                 },
                },
               ],
               recursive: false,
               position: (40, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "systab",
               position: (46, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (46, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (47, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (47, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (47, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (48, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (48, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The system incrontab contents.",
                    position: (49, 24),
                   },
                  ],
                  position: (49, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (50, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/var/mail IN_CLOSE_WRITE abc $@/$#\n/tmp IN_ALL_EVENTS efg $@/$# $&\n",
                    position: (51, 1),
                   },
                  ],
                  position: (50, 19),
                 },
                },
               ],
               recursive: false,
               position: (46, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraPackages",
               position: (56, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (56, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (57, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (57, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (57, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (57, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (58, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (59, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.rsync ]",
                      position: (59, 38),
                     },
                    ],
                    position: (59, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra packages available to the system incrontab.",
                    position: (60, 24),
                   },
                  ],
                  position: (60, 23),
                 },
                },
               ],
               recursive: false,
               position: (56, 32),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (15, 23),
         },
        },
       ],
       recursive: false,
       position: (13, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (67, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (67, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (67, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (67, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "warnings",
              position: (69, 5),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "optional",
             position: (69, 16),
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (69, 26),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "allow",
                     position: (69, 30),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (69, 39),
                 },
                ],
                position: (69, 36),
               },
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (69, 47),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "deny",
                     position: (69, 51),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (69, 59),
                 },
                ],
                position: (69, 56),
               },
              ],
              position: (69, 44),
             },
             String {
              parts: [
               Raw {
                content: "If `services.incron.allow` is set then `services.incron.deny` will be ignored.",
                position: (70, 8),
               },
              ],
              position: (70, 7),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (72, 5),
             },
             Raw {
              content: "systemPackages",
              position: (72, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (72, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "incron",
                 position: (72, 41),
                },
               ],
              },
              default: None,
             },
            ],
            position: (72, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "security",
              position: (74, 5),
             },
             Raw {
              content: "wrappers",
              position: (74, 14),
             },
             Raw {
              content: "incrontab",
              position: (74, 23),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "setuid",
                 position: (75, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (75, 16),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "owner",
                 position: (76, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "root",
                 position: (76, 16),
                },
               ],
               position: (76, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (77, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "root",
                 position: (77, 16),
                },
               ],
               position: (77, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (78, 7),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (78, 19),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "incron",
                     position: (78, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/incrontab",
                 position: (78, 31),
                },
               ],
               position: (78, 16),
              },
             },
            ],
            recursive: false,
            position: (75, 5),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (82, 5),
             },
             Raw {
              content: "etc",
              position: (82, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "incron.d/system",
                 position: (82, 22),
                },
               ],
               position: (82, 21),
              },
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "mode",
                 position: (83, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "0444",
                 position: (83, 15),
                },
               ],
               position: (83, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "text",
                 position: (84, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (84, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "systab",
                  position: (84, 18),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (82, 41),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (86, 5),
             },
             Raw {
              content: "etc",
              position: (86, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "incron.allow",
                 position: (86, 22),
                },
               ],
               position: (86, 21),
              },
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (86, 38),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (86, 44),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "allow",
                   position: (86, 48),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (86, 57),
               },
              ],
              position: (86, 54),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "text",
                   position: (87, 7),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "concatStringsSep",
                  position: (87, 14),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "\n",
                     position: (87, 32),
                    },
                   ],
                   position: (87, 31),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (87, 36),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "allow",
                      position: (87, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (86, 63),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (89, 5),
             },
             Raw {
              content: "etc",
              position: (89, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "incron.deny",
                 position: (89, 22),
                },
               ],
               position: (89, 21),
              },
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (89, 37),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (89, 43),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "deny",
                   position: (89, 47),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (89, 55),
               },
              ],
              position: (89, 52),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "text",
                   position: (90, 7),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "concatStringsSep",
                  position: (90, 14),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "\n",
                     position: (90, 32),
                    },
                   ],
                   position: (90, 31),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (90, 36),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "deny",
                      position: (90, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (89, 61),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (93, 5),
             },
             Raw {
              content: "services",
              position: (93, 13),
             },
             Raw {
              content: "incron",
              position: (93, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (94, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "File System Events Scheduler",
                 position: (94, 22),
                },
               ],
               position: (94, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (95, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (95, 21),
                  },
                 ],
                 position: (95, 20),
                },
               ],
               position: (95, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "path",
                 position: (96, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (96, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "extraPackages",
                  position: (96, 18),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (97, 7),
                },
                Raw {
                 content: "PIDFile",
                 position: (97, 21),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/run/incrond.pid",
                 position: (97, 32),
                },
               ],
               position: (97, 31),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (98, 7),
                },
                Raw {
                 content: "ExecStartPre",
                 position: (98, 21),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (98, 39),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "coreutils",
                     position: (98, 44),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/mkdir -m 710 -p /var/spool/incron",
                 position: (98, 54),
                },
               ],
               position: (98, 36),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (99, 7),
                },
                Raw {
                 content: "ExecStart",
                 position: (99, 21),
                },
               ],
              },
              to: String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (99, 36),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "incron",
                     position: (99, 41),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/incrond --foreground",
                 position: (99, 48),
                },
               ],
               position: (99, 33),
              },
             },
            ],
            recursive: false,
            position: (93, 31),
           },
          },
         ],
         recursive: false,
         position: (67, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (12, 1),
   },
   position: (6, 1),
  },
  position: (4, 1),
 },
 position: (2, 1),
}