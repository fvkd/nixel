---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: LetIn {
  bindings: [
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (6, 12),
     },
    ),
    [
     Raw {
      content: "elem",
      position: (7, 5),
     },
     Raw {
      content: "flip",
      position: (8, 5),
     },
     Raw {
      content: "functionArgs",
      position: (9, 5),
     },
     Raw {
      content: "isAttrs",
      position: (10, 5),
     },
     Raw {
      content: "isBool",
      position: (11, 5),
     },
     Raw {
      content: "isDerivation",
      position: (12, 5),
     },
     Raw {
      content: "isFloat",
      position: (13, 5),
     },
     Raw {
      content: "isFunction",
      position: (14, 5),
     },
     Raw {
      content: "isInt",
      position: (15, 5),
     },
     Raw {
      content: "isList",
      position: (16, 5),
     },
     Raw {
      content: "isString",
      position: (17, 5),
     },
     Raw {
      content: "isStorePath",
      position: (18, 5),
     },
     Raw {
      content: "setFunctionArgs",
      position: (19, 5),
     },
     Raw {
      content: "toDerivation",
      position: (20, 5),
     },
     Raw {
      content: "toList",
      position: (21, 5),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (23, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "lists",
         position: (23, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "all",
      position: (24, 5),
     },
     Raw {
      content: "concatLists",
      position: (25, 5),
     },
     Raw {
      content: "count",
      position: (26, 5),
     },
     Raw {
      content: "elemAt",
      position: (27, 5),
     },
     Raw {
      content: "filter",
      position: (28, 5),
     },
     Raw {
      content: "foldl'",
      position: (29, 5),
     },
     Raw {
      content: "head",
      position: (30, 5),
     },
     Raw {
      content: "imap1",
      position: (31, 5),
     },
     Raw {
      content: "last",
      position: (32, 5),
     },
     Raw {
      content: "length",
      position: (33, 5),
     },
     Raw {
      content: "tail",
      position: (34, 5),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (36, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "attrsets",
         position: (36, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "attrNames",
      position: (37, 5),
     },
     Raw {
      content: "filterAttrs",
      position: (38, 5),
     },
     Raw {
      content: "hasAttr",
      position: (39, 5),
     },
     Raw {
      content: "mapAttrs",
      position: (40, 5),
     },
     Raw {
      content: "optionalAttrs",
      position: (41, 5),
     },
     Raw {
      content: "zipAttrsWith",
      position: (42, 5),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (44, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (44, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "getFiles",
      position: (45, 5),
     },
     Raw {
      content: "getValues",
      position: (46, 5),
     },
     Raw {
      content: "mergeDefaultOption",
      position: (47, 5),
     },
     Raw {
      content: "mergeEqualOption",
      position: (48, 5),
     },
     Raw {
      content: "mergeOneOption",
      position: (49, 5),
     },
     Raw {
      content: "mergeUniqueOption",
      position: (50, 5),
     },
     Raw {
      content: "showFiles",
      position: (51, 5),
     },
     Raw {
      content: "showOption",
      position: (52, 5),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (54, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "strings",
         position: (54, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "concatMapStringsSep",
      position: (55, 5),
     },
     Raw {
      content: "concatStringsSep",
      position: (56, 5),
     },
     Raw {
      content: "escapeNixString",
      position: (57, 5),
     },
     Raw {
      content: "isCoercibleToString",
      position: (58, 5),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (60, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "trivial",
         position: (60, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "boolToString",
      position: (61, 5),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (64, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "modules",
         position: (64, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "mergeDefinitions",
      position: (64, 25),
     },
    ],
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "outer_types",
       position: (65, 3),
      },
     ],
    },
    Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "isType",
          position: (67, 3),
         },
        ],
       },
       Function {
        argument: Some(
         "type",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Function {
         argument: Some(
          "x",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: BinaryOperation {
          operator: EqualTo,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "x",
             position: (67, 22),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "_type",
               position: (67, 24),
              },
             ],
            },
            default: Some(
             String {
              parts: [],
             },
            ),
           },
           Variable {
            identifier: "type",
            position: (67, 40),
           },
          ],
          position: (67, 37),
         },
         position: (67, 18),
        },
        position: (67, 12),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "setType",
          position: (69, 3),
         },
        ],
       },
       Function {
        argument: Some(
         "typeName",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Function {
         argument: Some(
          "value",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: BinaryOperation {
          operator: Update,
          operands: [
           Variable {
            identifier: "value",
            position: (69, 30),
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "_type",
                 position: (70, 5),
                },
               ],
              },
              Variable {
               identifier: "typeName",
               position: (70, 13),
              },
             ),
            ],
            recursive: false,
            position: (69, 39),
           },
          ],
          position: (69, 36),
         },
         position: (69, 23),
        },
        position: (69, 13),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "defaultTypeMerge",
          position: (76, 3),
         },
        ],
       },
       Function {
        argument: Some(
         "f",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Function {
         argument: Some(
          "f'",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: LetIn {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "wrapped",
               position: (77, 9),
              },
             ],
            },
            FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "f",
               position: (77, 19),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "wrapped",
                 position: (77, 21),
                },
                Raw {
                 content: "typeMerge",
                 position: (77, 29),
                },
               ],
              },
              default: None,
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "f'",
                position: (77, 39),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "wrapped",
                  position: (77, 42),
                 },
                 Raw {
                  content: "functor",
                  position: (77, 50),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "payload",
               position: (78, 9),
              },
             ],
            },
            FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "f",
               position: (78, 19),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "binOp",
                 position: (78, 21),
                },
               ],
              },
              default: None,
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "f",
                position: (78, 27),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "payload",
                  position: (78, 29),
                 },
                ],
               },
               default: None,
              },
              PropertyAccess {
               expression: Variable {
                identifier: "f'",
                position: (78, 37),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "payload",
                  position: (78, 40),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ),
          ],
          target: IfThenElse {
           predicate: BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "f",
               position: (81, 8),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "name",
                 position: (81, 10),
                },
               ],
              },
              default: None,
             },
             PropertyAccess {
              expression: Variable {
               identifier: "f'",
               position: (81, 18),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "name",
                 position: (81, 21),
                },
               ],
              },
              default: None,
             },
            ],
            position: (81, 15),
           },
           then: Variable {
            identifier: "null",
            position: (82, 13),
           },
           else_: IfThenElse {
            predicate: BinaryOperation {
             operator: LogicalAnd,
             operands: [
              BinaryOperation {
               operator: LogicalAnd,
               operands: [
                BinaryOperation {
                 operator: EqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "f",
                    position: (84, 17),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "wrapped",
                      position: (84, 19),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (84, 30),
                  },
                 ],
                 position: (84, 27),
                },
                BinaryOperation {
                 operator: EqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "f'",
                    position: (84, 38),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "wrapped",
                      position: (84, 41),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (84, 52),
                  },
                 ],
                 position: (84, 49),
                },
               ],
               position: (84, 35),
              },
              BinaryOperation {
               operator: LogicalAnd,
               operands: [
                BinaryOperation {
                 operator: EqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "f",
                    position: (85, 17),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "payload",
                      position: (85, 19),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (85, 30),
                  },
                 ],
                 position: (85, 27),
                },
                BinaryOperation {
                 operator: EqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "f'",
                    position: (85, 38),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "payload",
                      position: (85, 41),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (85, 52),
                  },
                 ],
                 position: (85, 49),
                },
               ],
               position: (85, 35),
              },
             ],
             position: (85, 13),
            },
            then: PropertyAccess {
             expression: Variable {
              identifier: "f",
              position: (86, 13),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (86, 15),
               },
              ],
             },
             default: None,
            },
            else_: IfThenElse {
             predicate: BinaryOperation {
              operator: LogicalAnd,
              operands: [
               BinaryOperation {
                operator: LogicalAnd,
                operands: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "f",
                     position: (88, 14),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "wrapped",
                       position: (88, 16),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (88, 27),
                   },
                  ],
                  position: (88, 24),
                 },
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "f'",
                     position: (88, 35),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "wrapped",
                       position: (88, 38),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (88, 49),
                   },
                  ],
                  position: (88, 46),
                 },
                ],
                position: (88, 32),
               },
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 Variable {
                  identifier: "wrapped",
                  position: (88, 59),
                 },
                 Variable {
                  identifier: "null",
                  position: (88, 70),
                 },
                ],
                position: (88, 67),
               },
              ],
              position: (88, 55),
             },
             then: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "f",
                position: (89, 13),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (89, 15),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Variable {
                identifier: "wrapped",
                position: (89, 20),
               },
              ],
             },
             else_: IfThenElse {
              predicate: BinaryOperation {
               operator: LogicalAnd,
               operands: [
                BinaryOperation {
                 operator: LogicalAnd,
                 operands: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "f",
                      position: (91, 14),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "payload",
                        position: (91, 16),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (91, 27),
                    },
                   ],
                   position: (91, 24),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "f'",
                      position: (91, 35),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "payload",
                        position: (91, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (91, 49),
                    },
                   ],
                   position: (91, 46),
                  },
                 ],
                 position: (91, 32),
                },
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  Variable {
                   identifier: "payload",
                   position: (91, 59),
                  },
                  Variable {
                   identifier: "null",
                   position: (91, 70),
                  },
                 ],
                 position: (91, 67),
                },
               ],
               position: (91, 55),
              },
              then: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "f",
                 position: (92, 13),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (92, 15),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Variable {
                 identifier: "payload",
                 position: (92, 20),
                },
               ],
              },
              else_: Variable {
               identifier: "null",
               position: (93, 10),
              },
              position: (91, 10),
             },
             position: (88, 10),
            },
            position: (84, 10),
           },
           position: (81, 5),
          },
          position: (77, 5),
         },
         position: (76, 25),
        },
        position: (76, 22),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "defaultFunctor",
          position: (96, 3),
         },
        ],
       },
       Function {
        argument: Some(
         "name",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Map {
         bindings: [
          Inherit(
           None,
           [
            Raw {
             content: "name",
             position: (97, 13),
            },
           ],
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "type",
              position: (98, 5),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (98, 15),
            },
            attribute_path: AttributePath {
             attributes: [
              Expression {
               expression: Variable {
                identifier: "name",
                position: (98, 23),
               },
              },
             ],
            },
            default: Some(
             Variable {
              identifier: "null",
              position: (98, 32),
             },
            ),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "wrapped",
              position: (99, 5),
             },
            ],
           },
           Variable {
            identifier: "null",
            position: (99, 15),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "payload",
              position: (100, 5),
             },
            ],
           },
           Variable {
            identifier: "null",
            position: (100, 15),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "binOp",
              position: (101, 5),
             },
            ],
           },
           Function {
            argument: Some(
             "a",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Function {
             argument: Some(
              "b",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Variable {
              identifier: "null",
              position: (101, 21),
             },
             position: (101, 18),
            },
            position: (101, 15),
           },
          ),
         ],
         recursive: false,
         position: (96, 26),
        },
        position: (96, 20),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "isOptionType",
          position: (104, 3),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "isType",
         position: (104, 18),
        },
        arguments: [
         String {
          parts: [
           Raw {
            content: "option-type",
            position: (104, 26),
           },
          ],
         },
        ],
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "mkOptionType",
          position: (105, 3),
         },
        ],
       },
       Function {
        argument: None,
        arguments: FunctionArguments {
         arguments: [
          FunctionArgument {
           identifier: "nestedTypes",
           default: Some(
            Map {
             bindings: [],
             recursive: false,
             position: (153, 21),
            },
           ),
          },
          FunctionArgument {
           identifier: "deprecationMessage",
           default: Some(
            Variable {
             identifier: "null",
             position: (149, 28),
            },
           ),
          },
          FunctionArgument {
           identifier: "functor",
           default: Some(
            FunctionApplication {
             function: Variable {
              identifier: "defaultFunctor",
              position: (146, 17),
             },
             arguments: [
              Variable {
               identifier: "name",
               position: (146, 32),
              },
             ],
            },
           ),
          },
          FunctionArgument {
           identifier: "typeMerge",
           default: Some(
            FunctionApplication {
             function: Variable {
              identifier: "defaultTypeMerge",
              position: (137, 19),
             },
             arguments: [
              Variable {
               identifier: "functor",
               position: (137, 36),
              },
             ],
            },
           ),
          },
          FunctionArgument {
           identifier: "substSubModules",
           default: Some(
            Function {
             argument: Some(
              "m",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Variable {
              identifier: "null",
              position: (133, 28),
             },
             position: (133, 25),
            },
           ),
          },
          FunctionArgument {
           identifier: "getSubModules",
           default: Some(
            Variable {
             identifier: "null",
             position: (130, 23),
            },
           ),
          },
          FunctionArgument {
           identifier: "getSubOptions",
           default: Some(
            Function {
             argument: Some(
              "prefix",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Map {
              bindings: [],
              recursive: false,
              position: (128, 31),
             },
             position: (128, 23),
            },
           ),
          },
          FunctionArgument {
           identifier: "emptyValue",
           default: Some(
            Map {
             bindings: [],
             recursive: false,
             position: (125, 20),
            },
           ),
          },
          FunctionArgument {
           identifier: "merge",
           default: Some(
            Variable {
             identifier: "mergeDefaultOption",
             position: (120, 15),
            },
           ),
          },
          FunctionArgument {
           identifier: "check",
           default: Some(
            Function {
             argument: Some(
              "x",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Variable {
              identifier: "true",
              position: (113, 19),
             },
             position: (113, 16),
            },
           ),
          },
          FunctionArgument {
           identifier: "description",
           default: Some(
            Variable {
             identifier: "null",
             position: (110, 21),
            },
           ),
          },
          FunctionArgument {
           identifier: "name",
           default: None,
          },
         ],
         ellipsis: false,
        },
        definition: Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "_type",
              position: (155, 7),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "option-type",
              position: (155, 16),
             },
            ],
           },
          ),
          Inherit(
           None,
           [
            Raw {
             content: "name",
             position: (156, 15),
            },
            Raw {
             content: "check",
             position: (156, 20),
            },
            Raw {
             content: "merge",
             position: (156, 26),
            },
            Raw {
             content: "emptyValue",
             position: (156, 32),
            },
            Raw {
             content: "getSubOptions",
             position: (156, 43),
            },
            Raw {
             content: "getSubModules",
             position: (156, 57),
            },
            Raw {
             content: "substSubModules",
             position: (156, 71),
            },
            Raw {
             content: "typeMerge",
             position: (156, 87),
            },
            Raw {
             content: "functor",
             position: (156, 97),
            },
            Raw {
             content: "deprecationMessage",
             position: (156, 105),
            },
            Raw {
             content: "nestedTypes",
             position: (156, 124),
            },
           ],
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "description",
              position: (157, 7),
             },
            ],
           },
           IfThenElse {
            predicate: BinaryOperation {
             operator: EqualTo,
             operands: [
              Variable {
               identifier: "description",
               position: (157, 24),
              },
              Variable {
               identifier: "null",
               position: (157, 39),
              },
             ],
             position: (157, 36),
            },
            then: Variable {
             identifier: "name",
             position: (157, 49),
            },
            else_: Variable {
             identifier: "description",
             position: (157, 59),
            },
            position: (157, 21),
           },
          ),
         ],
         recursive: false,
         position: (155, 5),
        },
        position: (106, 5),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "types",
          position: (163, 3),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "raw",
             position: (165, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (165, 11),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (166, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "raw",
                  position: (166, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (167, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "raw value",
                  position: (167, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (168, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "value",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Variable {
                 identifier: "true",
                 position: (168, 22),
                },
                position: (168, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (169, 7),
                 },
                ],
               },
               Variable {
                identifier: "mergeOneOption",
                position: (169, 15),
               },
              ),
             ],
             recursive: true,
             position: (165, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "anything",
             position: (172, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (172, 16),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (173, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "anything",
                  position: (173, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (174, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "anything",
                  position: (174, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (175, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "value",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Variable {
                 identifier: "true",
                 position: (175, 22),
                },
                position: (175, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (176, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "loc",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "defs",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: LetIn {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "getType",
                       position: (178, 11),
                      },
                     ],
                    },
                    Function {
                     argument: Some(
                      "value",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: IfThenElse {
                      predicate: BinaryOperation {
                       operator: LogicalAnd,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "isAttrs",
                          position: (179, 16),
                         },
                         arguments: [
                          Variable {
                           identifier: "value",
                           position: (179, 24),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "isCoercibleToString",
                          position: (179, 33),
                         },
                         arguments: [
                          Variable {
                           identifier: "value",
                           position: (179, 53),
                          },
                         ],
                        },
                       ],
                       position: (179, 30),
                      },
                      then: String {
                       parts: [
                        Raw {
                         content: "stringCoercibleSet",
                         position: (180, 19),
                        },
                       ],
                      },
                      else_: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "builtins",
                         position: (181, 18),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "typeOf",
                           position: (181, 27),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "value",
                         position: (181, 34),
                        },
                       ],
                      },
                      position: (179, 13),
                     },
                     position: (178, 21),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "commonType",
                       position: (185, 11),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "foldl'",
                      position: (185, 24),
                     },
                     arguments: [
                      Function {
                       argument: Some(
                        "type",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Function {
                        argument: Some(
                         "def",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: IfThenElse {
                         predicate: BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           FunctionApplication {
                            function: Variable {
                             identifier: "getType",
                             position: (186, 16),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "def",
                               position: (186, 24),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "value",
                                 position: (186, 28),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                           Variable {
                            identifier: "type",
                            position: (186, 37),
                           },
                          ],
                          position: (186, 34),
                         },
                         then: Variable {
                          identifier: "type",
                          position: (187, 18),
                         },
                         else_: FunctionApplication {
                          function: Variable {
                           identifier: "throw",
                           position: (188, 18),
                          },
                          arguments: [
                           String {
                            parts: [
                             Raw {
                              content: "The option `",
                              position: (188, 25),
                             },
                             Expression {
                              expression: FunctionApplication {
                               function: Variable {
                                identifier: "showOption",
                                position: (188, 39),
                               },
                               arguments: [
                                Variable {
                                 identifier: "loc",
                                 position: (188, 50),
                                },
                               ],
                              },
                             },
                             Raw {
                              content: "' has conflicting option types in ",
                              position: (188, 54),
                             },
                             Expression {
                              expression: FunctionApplication {
                               function: Variable {
                                identifier: "showFiles",
                                position: (188, 90),
                               },
                               arguments: [
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "getFiles",
                                  position: (188, 101),
                                 },
                                 arguments: [
                                  Variable {
                                   identifier: "defs",
                                   position: (188, 110),
                                  },
                                 ],
                                },
                               ],
                              },
                             },
                            ],
                           },
                          ],
                         },
                         position: (186, 13),
                        },
                        position: (185, 38),
                       },
                       position: (185, 32),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "getType",
                        position: (189, 14),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "head",
                           position: (189, 23),
                          },
                          arguments: [
                           Variable {
                            identifier: "defs",
                            position: (189, 28),
                           },
                          ],
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "value",
                            position: (189, 34),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                      Variable {
                       identifier: "defs",
                       position: (189, 41),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "mergeFunction",
                       position: (191, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "set",
                           position: (193, 13),
                          },
                         ],
                        },
                        PropertyAccess {
                         expression: FunctionApplication {
                          function: Variable {
                           identifier: "attrsOf",
                           position: (193, 20),
                          },
                          arguments: [
                           Variable {
                            identifier: "anything",
                            position: (193, 28),
                           },
                          ],
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "merge",
                            position: (193, 38),
                           },
                          ],
                         },
                         default: None,
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "list",
                           position: (196, 13),
                          },
                         ],
                        },
                        IfThenElse {
                         predicate: BinaryOperation {
                          operator: GreaterThan,
                          operands: [
                           FunctionApplication {
                            function: Variable {
                             identifier: "length",
                             position: (197, 18),
                            },
                            arguments: [
                             Variable {
                              identifier: "defs",
                              position: (197, 25),
                             },
                            ],
                           },
                           Int {
                            value: 1,
                            position: (197, 32),
                           },
                          ],
                          position: (197, 30),
                         },
                         then: FunctionApplication {
                          function: Variable {
                           identifier: "throw",
                           position: (198, 20),
                          },
                          arguments: [
                           String {
                            parts: [
                             Raw {
                              content: "The option `",
                              position: (198, 27),
                             },
                             Expression {
                              expression: FunctionApplication {
                               function: Variable {
                                identifier: "showOption",
                                position: (198, 41),
                               },
                               arguments: [
                                Variable {
                                 identifier: "loc",
                                 position: (198, 52),
                                },
                               ],
                              },
                             },
                             Raw {
                              content: "' has conflicting definitions, in ",
                              position: (198, 56),
                             },
                             Expression {
                              expression: FunctionApplication {
                               function: Variable {
                                identifier: "showFiles",
                                position: (198, 92),
                               },
                               arguments: [
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "getFiles",
                                  position: (198, 103),
                                 },
                                 arguments: [
                                  Variable {
                                   identifier: "defs",
                                   position: (198, 112),
                                  },
                                 ],
                                },
                               ],
                              },
                             },
                             Raw {
                              content: ".",
                              position: (198, 118),
                             },
                            ],
                           },
                          ],
                         },
                         else_: PropertyAccess {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "listOf",
                            position: (199, 21),
                           },
                           arguments: [
                            Variable {
                             identifier: "anything",
                             position: (199, 28),
                            },
                           ],
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "merge",
                             position: (199, 38),
                            },
                           ],
                          },
                          default: None,
                         },
                         position: (197, 15),
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "stringCoercibleSet",
                           position: (201, 13),
                          },
                         ],
                        },
                        Variable {
                         identifier: "mergeOneOption",
                         position: (201, 34),
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "lambda",
                           position: (202, 13),
                          },
                         ],
                        },
                        Function {
                         argument: Some(
                          "loc",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: Function {
                          argument: Some(
                           "defs",
                          ),
                          arguments: FunctionArguments {
                           arguments: [],
                           ellipsis: false,
                          },
                          definition: Function {
                           argument: Some(
                            "arg",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: FunctionApplication {
                            function: PropertyAccess {
                             expression: Variable {
                              identifier: "anything",
                              position: (202, 38),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "merge",
                                position: (202, 47),
                               },
                              ],
                             },
                             default: None,
                            },
                            arguments: [
                             BinaryOperation {
                              operator: Concatenation,
                              operands: [
                               Variable {
                                identifier: "loc",
                                position: (203, 16),
                               },
                               List {
                                elements: [
                                 String {
                                  parts: [
                                   Raw {
                                    content: "<function body>",
                                    position: (203, 26),
                                   },
                                  ],
                                 },
                                ],
                                position: (203, 23),
                               },
                              ],
                              position: (203, 20),
                             },
                             FunctionApplication {
                              function: Variable {
                               identifier: "map",
                               position: (204, 16),
                              },
                              arguments: [
                               Function {
                                argument: Some(
                                 "def",
                                ),
                                arguments: FunctionArguments {
                                 arguments: [],
                                 ellipsis: false,
                                },
                                definition: Map {
                                 bindings: [
                                  KeyValue(
                                   AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "file",
                                      position: (205, 17),
                                     },
                                    ],
                                   },
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "def",
                                     position: (205, 24),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "file",
                                       position: (205, 28),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ),
                                  KeyValue(
                                   AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "value",
                                      position: (206, 17),
                                     },
                                    ],
                                   },
                                   FunctionApplication {
                                    function: PropertyAccess {
                                     expression: Variable {
                                      identifier: "def",
                                      position: (206, 25),
                                     },
                                     attribute_path: AttributePath {
                                      attributes: [
                                       Raw {
                                        content: "value",
                                        position: (206, 29),
                                       },
                                      ],
                                     },
                                     default: None,
                                    },
                                    arguments: [
                                     Variable {
                                      identifier: "arg",
                                      position: (206, 35),
                                     },
                                    ],
                                   },
                                  ),
                                 ],
                                 recursive: false,
                                 position: (204, 26),
                                },
                                position: (204, 21),
                               },
                               Variable {
                                identifier: "defs",
                                position: (207, 18),
                               },
                              ],
                             },
                            ],
                           },
                           position: (202, 33),
                          },
                          position: (202, 27),
                         },
                         position: (202, 22),
                        },
                       ),
                      ],
                      recursive: false,
                      position: (191, 27),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Expression {
                        expression: Variable {
                         identifier: "commonType",
                         position: (209, 15),
                        },
                       },
                      ],
                     },
                     default: Some(
                      Variable {
                       identifier: "mergeEqualOption",
                       position: (209, 30),
                      },
                     ),
                    },
                   ),
                  ],
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "mergeFunction",
                    position: (210, 12),
                   },
                   arguments: [
                    Variable {
                     identifier: "loc",
                     position: (210, 26),
                    },
                    Variable {
                     identifier: "defs",
                     position: (210, 30),
                    },
                   ],
                  },
                  position: (177, 9),
                 },
                 position: (176, 20),
                },
                position: (176, 15),
               },
              ),
             ],
             recursive: false,
             position: (172, 29),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "unspecified",
             position: (213, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (213, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (214, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "unspecified",
                  position: (214, 15),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (213, 32),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "bool",
             position: (217, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (217, 12),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (218, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "bool",
                  position: (218, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (219, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "boolean",
                  position: (219, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (220, 7),
                 },
                ],
               },
               Variable {
                identifier: "isBool",
                position: (220, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (221, 7),
                 },
                ],
               },
               Variable {
                identifier: "mergeEqualOption",
                position: (221, 15),
               },
              ),
             ],
             recursive: false,
             position: (217, 25),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "int",
             position: (224, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (224, 11),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (225, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "int",
                  position: (225, 17),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (226, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "signed integer",
                  position: (226, 24),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (227, 9),
                 },
                ],
               },
               Variable {
                identifier: "isInt",
                position: (227, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (228, 9),
                 },
                ],
               },
               Variable {
                identifier: "mergeEqualOption",
                position: (228, 17),
               },
              ),
             ],
             recursive: false,
             position: (224, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "ints",
             position: (232, 5),
            },
           ],
          },
          LetIn {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "betweenDesc",
                position: (234, 9),
               },
              ],
             },
             Function {
              argument: Some(
               "lowest",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "highest",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: String {
                parts: [
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toString",
                    position: (235, 14),
                   },
                   arguments: [
                    Variable {
                     identifier: "lowest",
                     position: (235, 23),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: " and ",
                  position: (235, 30),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toString",
                    position: (235, 37),
                   },
                   arguments: [
                    Variable {
                     identifier: "highest",
                     position: (235, 46),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: " (both inclusive)",
                  position: (235, 54),
                 },
                ],
               },
               position: (234, 31),
              },
              position: (234, 23),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "between",
                position: (236, 9),
               },
              ],
             },
             Function {
              argument: Some(
               "lowest",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "highest",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Assert {
                expression: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (237, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "assertMsg",
                     position: (237, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  BinaryOperation {
                   operator: LessThanOrEqualTo,
                   operands: [
                    Variable {
                     identifier: "lowest",
                     position: (237, 33),
                    },
                    Variable {
                     identifier: "highest",
                     position: (237, 43),
                    },
                   ],
                   position: (237, 40),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "ints.between: lowest must be smaller than highest",
                     position: (238, 14),
                    },
                   ],
                  },
                 ],
                },
                target: BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "addCheck",
                    position: (239, 11),
                   },
                   arguments: [
                    Variable {
                     identifier: "int",
                     position: (239, 20),
                    },
                    Function {
                     argument: Some(
                      "x",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: BinaryOperation {
                      operator: LogicalAnd,
                      operands: [
                       BinaryOperation {
                        operator: GreaterThanOrEqualTo,
                        operands: [
                         Variable {
                          identifier: "x",
                          position: (239, 28),
                         },
                         Variable {
                          identifier: "lowest",
                          position: (239, 33),
                         },
                        ],
                        position: (239, 30),
                       },
                       BinaryOperation {
                        operator: LessThanOrEqualTo,
                        operands: [
                         Variable {
                          identifier: "x",
                          position: (239, 43),
                         },
                         Variable {
                          identifier: "highest",
                          position: (239, 48),
                         },
                        ],
                        position: (239, 45),
                       },
                      ],
                      position: (239, 40),
                     },
                     position: (239, 25),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "name",
                        position: (240, 13),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "intBetween",
                        position: (240, 21),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (241, 13),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "integer between ",
                        position: (241, 28),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "betweenDesc",
                          position: (241, 46),
                         },
                         arguments: [
                          Variable {
                           identifier: "lowest",
                           position: (241, 58),
                          },
                          Variable {
                           identifier: "highest",
                           position: (241, 65),
                          },
                         ],
                        },
                       },
                      ],
                     },
                    ),
                   ],
                   recursive: false,
                   position: (239, 60),
                  },
                 ],
                 position: (239, 57),
                },
                position: (237, 11),
               },
               position: (236, 27),
              },
              position: (236, 19),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "ign",
                position: (243, 9),
               },
              ],
             },
             Function {
              argument: Some(
               "lowest",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "highest",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Function {
                argument: Some(
                 "name",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "docStart",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: BinaryOperation {
                  operator: Update,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "between",
                     position: (244, 11),
                    },
                    arguments: [
                     Variable {
                      identifier: "lowest",
                      position: (244, 19),
                     },
                     Variable {
                      identifier: "highest",
                      position: (244, 26),
                     },
                    ],
                   },
                   Map {
                    bindings: [
                     Inherit(
                      None,
                      [
                       Raw {
                        content: "name",
                        position: (245, 21),
                       },
                      ],
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "description",
                         position: (246, 13),
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Addition,
                       operands: [
                        Variable {
                         identifier: "docStart",
                         position: (246, 27),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "; between ",
                           position: (246, 39),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "betweenDesc",
                             position: (246, 51),
                            },
                            arguments: [
                             Variable {
                              identifier: "lowest",
                              position: (246, 63),
                             },
                             Variable {
                              identifier: "highest",
                              position: (246, 70),
                             },
                            ],
                           },
                          },
                         ],
                        },
                       ],
                       position: (246, 36),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (244, 37),
                   },
                  ],
                  position: (244, 34),
                 },
                 position: (243, 38),
                },
                position: (243, 32),
               },
               position: (243, 23),
              },
              position: (243, 15),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "unsign",
                position: (248, 9),
               },
              ],
             },
             Function {
              argument: Some(
               "bit",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "range",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "ign",
                 position: (248, 30),
                },
                arguments: [
                 Int {
                  value: 0,
                  position: (248, 34),
                 },
                 BinaryOperation {
                  operator: Subtraction,
                  operands: [
                   Variable {
                    identifier: "range",
                    position: (248, 37),
                   },
                   Int {
                    value: 1,
                    position: (248, 45),
                   },
                  ],
                  position: (248, 43),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "unsignedInt",
                    position: (249, 12),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (249, 25),
                     },
                     arguments: [
                      Variable {
                       identifier: "bit",
                       position: (249, 34),
                      },
                     ],
                    },
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (249, 43),
                     },
                     arguments: [
                      Variable {
                       identifier: "bit",
                       position: (249, 52),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " bit unsigned integer",
                    position: (249, 56),
                   },
                  ],
                 },
                ],
               },
               position: (248, 23),
              },
              position: (248, 18),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "sign",
                position: (250, 9),
               },
              ],
             },
             Function {
              argument: Some(
               "bit",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "range",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "ign",
                 position: (250, 28),
                },
                arguments: [
                 BinaryOperation {
                  operator: Subtraction,
                  operands: [
                   Int {
                    value: 0,
                    position: (250, 33),
                   },
                   BinaryOperation {
                    operator: Division,
                    operands: [
                     Variable {
                      identifier: "range",
                      position: (250, 38),
                     },
                     Int {
                      value: 2,
                      position: (250, 46),
                     },
                    ],
                    position: (250, 44),
                   },
                  ],
                  position: (250, 35),
                 },
                 BinaryOperation {
                  operator: Subtraction,
                  operands: [
                   BinaryOperation {
                    operator: Division,
                    operands: [
                     Variable {
                      identifier: "range",
                      position: (250, 51),
                     },
                     Int {
                      value: 2,
                      position: (250, 59),
                     },
                    ],
                    position: (250, 57),
                   },
                   Int {
                    value: 1,
                    position: (250, 63),
                   },
                  ],
                  position: (250, 61),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "signedInt",
                    position: (251, 12),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (251, 23),
                     },
                     arguments: [
                      Variable {
                       identifier: "bit",
                       position: (251, 32),
                      },
                     ],
                    },
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (251, 41),
                     },
                     arguments: [
                      Variable {
                       identifier: "bit",
                       position: (251, 50),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " bit signed integer",
                    position: (251, 54),
                   },
                  ],
                 },
                ],
               },
               position: (250, 21),
              },
              position: (250, 16),
             },
            ),
           ],
           target: Map {
            bindings: [
             Inherit(
              None,
              [
               Raw {
                content: "between",
                position: (264, 17),
               },
              ],
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "unsigned",
                 position: (266, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                FunctionApplication {
                 function: Variable {
                  identifier: "addCheck",
                  position: (266, 20),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (266, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "int",
                      position: (266, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                  Function {
                   argument: Some(
                    "x",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: BinaryOperation {
                    operator: GreaterThanOrEqualTo,
                    operands: [
                     Variable {
                      identifier: "x",
                      position: (266, 43),
                     },
                     Int {
                      value: 0,
                      position: (266, 48),
                     },
                    ],
                    position: (266, 45),
                   },
                   position: (266, 40),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "name",
                      position: (267, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "unsignedInt",
                      position: (267, 19),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (268, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "unsigned integer, meaning >=0",
                      position: (268, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                 position: (266, 54),
                },
               ],
               position: (266, 51),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "positive",
                 position: (270, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                FunctionApplication {
                 function: Variable {
                  identifier: "addCheck",
                  position: (270, 20),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (270, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "int",
                      position: (270, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                  Function {
                   argument: Some(
                    "x",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: BinaryOperation {
                    operator: GreaterThan,
                    operands: [
                     Variable {
                      identifier: "x",
                      position: (270, 43),
                     },
                     Int {
                      value: 0,
                      position: (270, 47),
                     },
                    ],
                    position: (270, 45),
                   },
                   position: (270, 40),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "name",
                      position: (271, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "positiveInt",
                      position: (271, 19),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (272, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "positive integer, meaning >0",
                      position: (272, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                 position: (270, 53),
                },
               ],
               position: (270, 50),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "u8",
                 position: (274, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "unsign",
                position: (274, 14),
               },
               arguments: [
                Int {
                 value: 8,
                 position: (274, 21),
                },
                Int {
                 value: 256,
                 position: (274, 23),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "u16",
                 position: (275, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "unsign",
                position: (275, 15),
               },
               arguments: [
                Int {
                 value: 16,
                 position: (275, 22),
                },
                Int {
                 value: 65536,
                 position: (275, 25),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "u32",
                 position: (278, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "unsign",
                position: (278, 15),
               },
               arguments: [
                Int {
                 value: 32,
                 position: (278, 22),
                },
                Int {
                 value: 4294967296,
                 position: (278, 25),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "s8",
                 position: (281, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "sign",
                position: (281, 14),
               },
               arguments: [
                Int {
                 value: 8,
                 position: (281, 19),
                },
                Int {
                 value: 256,
                 position: (281, 21),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "s16",
                 position: (282, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "sign",
                position: (282, 15),
               },
               arguments: [
                Int {
                 value: 16,
                 position: (282, 20),
                },
                Int {
                 value: 65536,
                 position: (282, 23),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "s32",
                 position: (283, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "sign",
                position: (283, 15),
               },
               arguments: [
                Int {
                 value: 32,
                 position: (283, 20),
                },
                Int {
                 value: 4294967296,
                 position: (283, 23),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (253, 10),
           },
           position: (233, 7),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "port",
             position: (287, 5),
            },
           ],
          },
          PropertyAccess {
           expression: Variable {
            identifier: "ints",
            position: (287, 12),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "u16",
              position: (287, 17),
             },
            ],
           },
           default: None,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "float",
             position: (289, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (289, 13),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (290, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "float",
                  position: (290, 17),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (291, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "floating point number",
                  position: (291, 24),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (292, 9),
                 },
                ],
               },
               Variable {
                identifier: "isFloat",
                position: (292, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (293, 9),
                 },
                ],
               },
               Variable {
                identifier: "mergeEqualOption",
                position: (293, 17),
               },
              ),
             ],
             recursive: false,
             position: (289, 26),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "str",
             position: (296, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (296, 11),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (297, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "str",
                  position: (297, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (298, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "string",
                  position: (298, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (299, 7),
                 },
                ],
               },
               Variable {
                identifier: "isString",
                position: (299, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (300, 7),
                 },
                ],
               },
               Variable {
                identifier: "mergeEqualOption",
                position: (300, 15),
               },
              ),
             ],
             recursive: false,
             position: (296, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "nonEmptyStr",
             position: (303, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (303, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (304, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "nonEmptyStr",
                  position: (304, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (305, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "non-empty string",
                  position: (305, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (306, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "x",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: BinaryOperation {
                 operator: LogicalAnd,
                 operands: [
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "str",
                     position: (306, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "check",
                       position: (306, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "x",
                     position: (306, 28),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "builtins",
                       position: (306, 33),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "match",
                         position: (306, 42),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "[ \t\n]*",
                         position: (306, 49),
                        },
                       ],
                      },
                      Variable {
                       identifier: "x",
                       position: (306, 59),
                      },
                     ],
                    },
                    Variable {
                     identifier: "null",
                     position: (306, 64),
                    },
                   ],
                   position: (306, 61),
                  },
                 ],
                 position: (306, 30),
                },
                position: (306, 15),
               },
              ),
              Inherit(
               Some(
                Variable {
                 identifier: "str",
                 position: (307, 16),
                },
               ),
               [
                Raw {
                 content: "merge",
                 position: (307, 21),
                },
               ],
              ),
             ],
             recursive: false,
             position: (303, 32),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "singleLineStr",
             position: (311, 5),
            },
           ],
          },
          LetIn {
           bindings: [
            Inherit(
             Some(
              FunctionApplication {
               function: Variable {
                identifier: "strMatching",
                position: (313, 18),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[^\n\r]*\n?",
                   position: (313, 31),
                  },
                 ],
                },
               ],
              },
             ),
             [
              Raw {
               content: "check",
               position: (313, 45),
              },
              Raw {
               content: "merge",
               position: (313, 51),
              },
             ],
            ),
           ],
           target: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (315, 7),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (316, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "singleLineStr",
                   position: (316, 17),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (317, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "(optionally newline-terminated) single-line string",
                   position: (317, 24),
                  },
                 ],
                },
               ),
               Inherit(
                None,
                [
                 Raw {
                  content: "check",
                  position: (318, 17),
                 },
                ],
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (319, 9),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "lib",
                     position: (320, 11),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "removeSuffix",
                       position: (320, 15),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "\n",
                       position: (320, 29),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "merge",
                      position: (320, 34),
                     },
                     arguments: [
                      Variable {
                       identifier: "loc",
                       position: (320, 40),
                      },
                      Variable {
                       identifier: "defs",
                       position: (320, 44),
                      },
                     ],
                    },
                   ],
                  },
                  position: (319, 22),
                 },
                 position: (319, 17),
                },
               ),
              ],
              recursive: false,
              position: (315, 20),
             },
            ],
           },
           position: (312, 7),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "strMatching",
             position: (323, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "pattern",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (323, 28),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (324, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "strMatching ",
                   position: (324, 15),
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "escapeNixString",
                     position: (324, 29),
                    },
                    arguments: [
                     Variable {
                      identifier: "pattern",
                      position: (324, 45),
                     },
                    ],
                   },
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (325, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "string matching the pattern ",
                   position: (325, 22),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "pattern",
                    position: (325, 52),
                   },
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (326, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "x",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "str",
                      position: (326, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "check",
                        position: (326, 22),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "x",
                      position: (326, 28),
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "builtins",
                        position: (326, 33),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "match",
                          position: (326, 42),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Variable {
                        identifier: "pattern",
                        position: (326, 48),
                       },
                       Variable {
                        identifier: "x",
                        position: (326, 56),
                       },
                      ],
                     },
                     Variable {
                      identifier: "null",
                      position: (326, 61),
                     },
                    ],
                    position: (326, 58),
                   },
                  ],
                  position: (326, 30),
                 },
                 position: (326, 15),
                },
               ),
               Inherit(
                Some(
                 Variable {
                  identifier: "str",
                  position: (327, 16),
                 },
                ),
                [
                 Raw {
                  content: "merge",
                  position: (327, 21),
                 },
                ],
               ),
              ],
              recursive: false,
              position: (323, 41),
             },
            ],
           },
           position: (323, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "separatedString",
             position: (332, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "sep",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (332, 28),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (333, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "separatedString",
                   position: (333, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (334, 7),
                  },
                 ],
                },
                IfThenElse {
                 predicate: BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   Variable {
                    identifier: "sep",
                    position: (334, 24),
                   },
                   String {
                    parts: [],
                   },
                  ],
                  position: (334, 28),
                 },
                 then: String {
                  parts: [
                   Raw {
                    content: "Concatenated string",
                    position: (335, 15),
                   },
                  ],
                 },
                 else_: String {
                  parts: [
                   Raw {
                    content: "strings concatenated with ",
                    position: (336, 15),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "builtins",
                       position: (336, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "toJSON",
                         position: (336, 52),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "sep",
                       position: (336, 59),
                      },
                     ],
                    },
                   },
                  ],
                 },
                 position: (334, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (338, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "isString",
                 position: (338, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (339, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "concatStringsSep",
                    position: (339, 26),
                   },
                   arguments: [
                    Variable {
                     identifier: "sep",
                     position: (339, 43),
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "getValues",
                      position: (339, 48),
                     },
                     arguments: [
                      Variable {
                       identifier: "defs",
                       position: (339, 58),
                      },
                     ],
                    },
                   ],
                  },
                  position: (339, 20),
                 },
                 position: (339, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "functor",
                   position: (340, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "defaultFunctor",
                    position: (340, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "name",
                     position: (340, 33),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "payload",
                        position: (341, 9),
                       },
                      ],
                     },
                     Variable {
                      identifier: "sep",
                      position: (341, 19),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "binOp",
                        position: (342, 9),
                       },
                      ],
                     },
                     Function {
                      argument: Some(
                       "sepLhs",
                      ),
                      arguments: FunctionArguments {
                       arguments: [],
                       ellipsis: false,
                      },
                      definition: Function {
                       argument: Some(
                        "sepRhs",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: IfThenElse {
                        predicate: BinaryOperation {
                         operator: EqualTo,
                         operands: [
                          Variable {
                           identifier: "sepLhs",
                           position: (343, 14),
                          },
                          Variable {
                           identifier: "sepRhs",
                           position: (343, 24),
                          },
                         ],
                         position: (343, 21),
                        },
                        then: Variable {
                         identifier: "sepLhs",
                         position: (343, 36),
                        },
                        else_: Variable {
                         identifier: "null",
                         position: (344, 16),
                        },
                        position: (343, 11),
                       },
                       position: (342, 25),
                      },
                      position: (342, 17),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (340, 42),
                  },
                 ],
                 position: (340, 39),
                },
               ),
              ],
              recursive: true,
              position: (332, 41),
             },
            ],
           },
           position: (332, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "lines",
             position: (348, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "separatedString",
            position: (348, 13),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (348, 30),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "commas",
             position: (349, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "separatedString",
            position: (349, 14),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: ",",
               position: (349, 31),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "envVar",
             position: (350, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "separatedString",
            position: (350, 14),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: ":",
               position: (350, 31),
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "string",
             position: (354, 5),
            },
           ],
          },
          BinaryOperation {
           operator: Update,
           operands: [
            FunctionApplication {
             function: Variable {
              identifier: "separatedString",
              position: (354, 14),
             },
             arguments: [
              String {
               parts: [],
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (355, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "string",
                  position: (355, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "deprecationMessage",
                  position: (356, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "See https://github.com/NixOS/nixpkgs/pull/66346 for better alternative types.",
                  position: (356, 29),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (354, 36),
            },
           ],
           position: (354, 33),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "attrs",
             position: (359, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (359, 13),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (360, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "attrs",
                  position: (360, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (361, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "attribute set",
                  position: (361, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (362, 7),
                 },
                ],
               },
               Variable {
                identifier: "isAttrs",
                position: (362, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (363, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "loc",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: FunctionApplication {
                 function: Variable {
                  identifier: "foldl'",
                  position: (363, 20),
                 },
                 arguments: [
                  Function {
                   argument: Some(
                    "res",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Function {
                    argument: Some(
                     "def",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: BinaryOperation {
                     operator: Update,
                     operands: [
                      Variable {
                       identifier: "res",
                       position: (363, 38),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "def",
                        position: (363, 45),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "value",
                          position: (363, 49),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (363, 42),
                    },
                    position: (363, 33),
                   },
                   position: (363, 28),
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (363, 56),
                  },
                 ],
                },
                position: (363, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "emptyValue",
                  position: (364, 7),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "value",
                     position: (364, 22),
                    },
                   ],
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                   position: (364, 30),
                  },
                 ),
                ],
                recursive: false,
                position: (364, 20),
               },
              ),
             ],
             recursive: false,
             position: (359, 26),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "package",
             position: (368, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (368, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (369, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "package",
                  position: (369, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (370, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "x",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: BinaryOperation {
                 operator: LogicalOr,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "isDerivation",
                    position: (370, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "x",
                     position: (370, 31),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "isStorePath",
                    position: (370, 36),
                   },
                   arguments: [
                    Variable {
                     identifier: "x",
                     position: (370, 48),
                    },
                   ],
                  },
                 ],
                 position: (370, 33),
                },
                position: (370, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (371, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "loc",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "defs",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: LetIn {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "res",
                       position: (372, 13),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "mergeOneOption",
                      position: (372, 19),
                     },
                     arguments: [
                      Variable {
                       identifier: "loc",
                       position: (372, 34),
                      },
                      Variable {
                       identifier: "defs",
                       position: (372, 38),
                      },
                     ],
                    },
                   ),
                  ],
                  target: IfThenElse {
                   predicate: FunctionApplication {
                    function: Variable {
                     identifier: "isDerivation",
                     position: (373, 15),
                    },
                    arguments: [
                     Variable {
                      identifier: "res",
                      position: (373, 28),
                     },
                    ],
                   },
                   then: Variable {
                    identifier: "res",
                    position: (373, 37),
                   },
                   else_: FunctionApplication {
                    function: Variable {
                     identifier: "toDerivation",
                     position: (373, 46),
                    },
                    arguments: [
                     Variable {
                      identifier: "res",
                      position: (373, 59),
                     },
                    ],
                   },
                   position: (373, 12),
                  },
                  position: (372, 9),
                 },
                 position: (371, 20),
                },
                position: (371, 15),
               },
              ),
             ],
             recursive: false,
             position: (368, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "shellPackage",
             position: (376, 5),
            },
           ],
          },
          BinaryOperation {
           operator: Update,
           operands: [
            Variable {
             identifier: "package",
             position: (376, 20),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (377, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "x",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: BinaryOperation {
                 operator: LogicalAnd,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "isDerivation",
                    position: (377, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "x",
                     position: (377, 31),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "hasAttr",
                    position: (377, 36),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "shellPath",
                       position: (377, 45),
                      },
                     ],
                    },
                    Variable {
                     identifier: "x",
                     position: (377, 56),
                    },
                   ],
                  },
                 ],
                 position: (377, 33),
                },
                position: (377, 15),
               },
              ),
             ],
             recursive: false,
             position: (376, 31),
            },
           ],
           position: (376, 28),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "path",
             position: (380, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (380, 12),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (381, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "path",
                  position: (381, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "check",
                  position: (382, 7),
                 },
                ],
               },
               Function {
                argument: Some(
                 "x",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: BinaryOperation {
                 operator: LogicalAnd,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "isCoercibleToString",
                    position: (382, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "x",
                     position: (382, 38),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "builtins",
                       position: (382, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "substring",
                         position: (382, 52),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Int {
                       value: 0,
                       position: (382, 62),
                      },
                      Int {
                       value: 1,
                       position: (382, 64),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "toString",
                        position: (382, 67),
                       },
                       arguments: [
                        Variable {
                         identifier: "x",
                         position: (382, 76),
                        },
                       ],
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "/",
                       position: (382, 83),
                      },
                     ],
                    },
                   ],
                   position: (382, 79),
                  },
                 ],
                 position: (382, 40),
                },
                position: (382, 15),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "merge",
                  position: (383, 7),
                 },
                ],
               },
               Variable {
                identifier: "mergeEqualOption",
                position: (383, 15),
               },
              ),
             ],
             recursive: false,
             position: (380, 25),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "listOf",
             position: (386, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (386, 24),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (387, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (387, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (388, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "list of ",
                   position: (388, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "elemType",
                     position: (388, 32),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (388, 41),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "s",
                   position: (388, 53),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (389, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "isList",
                 position: (389, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (390, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "map",
                    position: (391, 9),
                   },
                   arguments: [
                    Function {
                     argument: Some(
                      "x",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: PropertyAccess {
                      expression: Variable {
                       identifier: "x",
                       position: (391, 17),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "value",
                         position: (391, 19),
                        },
                       ],
                      },
                      default: None,
                     },
                     position: (391, 14),
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "filter",
                      position: (391, 27),
                     },
                     arguments: [
                      Function {
                       argument: Some(
                        "x",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: HasProperty {
                        expression: Variable {
                         identifier: "x",
                         position: (391, 38),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "value",
                           position: (391, 42),
                          },
                         ],
                        },
                        position: (391, 40),
                       },
                       position: (391, 35),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "concatLists",
                        position: (391, 50),
                       },
                       arguments: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "imap1",
                          position: (391, 63),
                         },
                         arguments: [
                          Function {
                           argument: Some(
                            "n",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: Function {
                            argument: Some(
                             "def",
                            ),
                            arguments: FunctionArguments {
                             arguments: [],
                             ellipsis: false,
                            },
                            definition: FunctionApplication {
                             function: Variable {
                              identifier: "imap1",
                              position: (392, 11),
                             },
                             arguments: [
                              Function {
                               argument: Some(
                                "m",
                               ),
                               arguments: FunctionArguments {
                                arguments: [],
                                ellipsis: false,
                               },
                               definition: Function {
                                argument: Some(
                                 "def'",
                                ),
                                arguments: FunctionArguments {
                                 arguments: [],
                                 ellipsis: false,
                                },
                                definition: PropertyAccess {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "mergeDefinitions",
                                   position: (393, 14),
                                  },
                                  arguments: [
                                   BinaryOperation {
                                    operator: Concatenation,
                                    operands: [
                                     Variable {
                                      identifier: "loc",
                                      position: (394, 16),
                                     },
                                     List {
                                      elements: [
                                       String {
                                        parts: [
                                         Raw {
                                          content: "[definition ",
                                          position: (394, 25),
                                         },
                                         Expression {
                                          expression: FunctionApplication {
                                           function: Variable {
                                            identifier: "toString",
                                            position: (394, 39),
                                           },
                                           arguments: [
                                            Variable {
                                             identifier: "n",
                                             position: (394, 48),
                                            },
                                           ],
                                          },
                                         },
                                         Raw {
                                          content: "-entry ",
                                          position: (394, 50),
                                         },
                                         Expression {
                                          expression: FunctionApplication {
                                           function: Variable {
                                            identifier: "toString",
                                            position: (394, 59),
                                           },
                                           arguments: [
                                            Variable {
                                             identifier: "m",
                                             position: (394, 68),
                                            },
                                           ],
                                          },
                                         },
                                         Raw {
                                          content: "]",
                                          position: (394, 70),
                                         },
                                        ],
                                       },
                                      ],
                                      position: (394, 23),
                                     },
                                    ],
                                    position: (394, 20),
                                   },
                                   Variable {
                                    identifier: "elemType",
                                    position: (395, 15),
                                   },
                                   List {
                                    elements: [
                                     Map {
                                      bindings: [
                                       Inherit(
                                        Some(
                                         Variable {
                                          identifier: "def",
                                          position: (396, 27),
                                         },
                                        ),
                                        [
                                         Raw {
                                          content: "file",
                                          position: (396, 32),
                                         },
                                        ],
                                       ),
                                       KeyValue(
                                        AttributePath {
                                         attributes: [
                                          Raw {
                                           content: "value",
                                           position: (396, 38),
                                          },
                                         ],
                                        },
                                        Variable {
                                         identifier: "def'",
                                         position: (396, 46),
                                        },
                                       ),
                                      ],
                                      recursive: false,
                                      position: (396, 16),
                                     },
                                    ],
                                    position: (396, 15),
                                   },
                                  ],
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "optionalValue",
                                    position: (397, 15),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                position: (392, 21),
                               },
                               position: (392, 18),
                              },
                              PropertyAccess {
                               expression: Variable {
                                identifier: "def",
                                position: (398, 13),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "value",
                                  position: (398, 17),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                            },
                            position: (391, 73),
                           },
                           position: (391, 70),
                          },
                          Variable {
                           identifier: "defs",
                           position: (399, 11),
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                  position: (390, 20),
                 },
                 position: (390, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "emptyValue",
                   position: (400, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "value",
                      position: (400, 22),
                     },
                    ],
                   },
                   List {
                    elements: [],
                    position: (400, 30),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (400, 20),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (401, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "prefix",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "elemType",
                    position: (401, 31),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "getSubOptions",
                      position: (401, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     Variable {
                      identifier: "prefix",
                      position: (401, 55),
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "*",
                          position: (401, 67),
                         },
                        ],
                       },
                      ],
                      position: (401, 65),
                     },
                    ],
                    position: (401, 62),
                   },
                  ],
                 },
                 position: (401, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubModules",
                   position: (402, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (402, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (402, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "substSubModules",
                   position: (403, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "m",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (403, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (403, 36),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "substSubModules",
                        position: (403, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "m",
                      position: (403, 61),
                     },
                    ],
                   },
                  ],
                 },
                 position: (403, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "functor",
                   position: (404, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "defaultFunctor",
                    position: (404, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "name",
                     position: (404, 33),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "wrapped",
                        position: (404, 44),
                       },
                      ],
                     },
                     Variable {
                      identifier: "elemType",
                      position: (404, 54),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (404, 42),
                  },
                 ],
                 position: (404, 39),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nestedTypes",
                   position: (405, 7),
                  },
                  Raw {
                   content: "elemType",
                   position: (405, 19),
                  },
                 ],
                },
                Variable {
                 identifier: "elemType",
                 position: (405, 30),
                },
               ),
              ],
              recursive: true,
              position: (386, 37),
             },
            ],
           },
           position: (386, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "nonEmptyListOf",
             position: (408, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "list",
                 position: (409, 11),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "addCheck",
                position: (409, 18),
               },
               arguments: [
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (409, 28),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listOf",
                     position: (409, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "elemType",
                   position: (409, 41),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "l",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   Variable {
                    identifier: "l",
                    position: (409, 55),
                   },
                   List {
                    elements: [],
                    position: (409, 60),
                   },
                  ],
                  position: (409, 57),
                 },
                 position: (409, 52),
                },
               ],
              },
             ),
            ],
            target: BinaryOperation {
             operator: Update,
             operands: [
              Variable {
               identifier: "list",
               position: (410, 10),
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (411, 9),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Addition,
                  operands: [
                   String {
                    parts: [
                     Raw {
                      content: "non-empty ",
                      position: (411, 24),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "list",
                     position: (411, 38),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (411, 43),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                  position: (411, 36),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "emptyValue",
                    position: (412, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (412, 22),
                 },
                ),
               ],
               recursive: false,
               position: (410, 18),
              },
             ],
             position: (410, 15),
            },
            position: (409, 7),
           },
           position: (408, 22),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "attrsOf",
             position: (415, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (415, 25),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (416, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (416, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (417, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "attribute set of ",
                   position: (417, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "elemType",
                     position: (417, 41),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (417, 50),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "s",
                   position: (417, 62),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (418, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "isAttrs",
                 position: (418, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (419, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "mapAttrs",
                    position: (420, 9),
                   },
                   arguments: [
                    Function {
                     argument: Some(
                      "n",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: Function {
                      argument: Some(
                       "v",
                      ),
                      arguments: FunctionArguments {
                       arguments: [],
                       ellipsis: false,
                      },
                      definition: PropertyAccess {
                       expression: Variable {
                        identifier: "v",
                        position: (420, 25),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "value",
                          position: (420, 27),
                         },
                        ],
                       },
                       default: None,
                      },
                      position: (420, 22),
                     },
                     position: (420, 19),
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "filterAttrs",
                      position: (420, 35),
                     },
                     arguments: [
                      Function {
                       argument: Some(
                        "n",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Function {
                        argument: Some(
                         "v",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: HasProperty {
                         expression: Variable {
                          identifier: "v",
                          position: (420, 54),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "value",
                            position: (420, 58),
                           },
                          ],
                         },
                         position: (420, 56),
                        },
                        position: (420, 51),
                       },
                       position: (420, 48),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "zipAttrsWith",
                        position: (420, 66),
                       },
                       arguments: [
                        Function {
                         argument: Some(
                          "name",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: Function {
                          argument: Some(
                           "defs",
                          ),
                          arguments: FunctionArguments {
                           arguments: [],
                           ellipsis: false,
                          },
                          definition: PropertyAccess {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "mergeDefinitions",
                             position: (421, 14),
                            },
                            arguments: [
                             BinaryOperation {
                              operator: Concatenation,
                              operands: [
                               Variable {
                                identifier: "loc",
                                position: (421, 32),
                               },
                               List {
                                elements: [
                                 Variable {
                                  identifier: "name",
                                  position: (421, 40),
                                 },
                                ],
                                position: (421, 39),
                               },
                              ],
                              position: (421, 36),
                             },
                             Variable {
                              identifier: "elemType",
                              position: (421, 47),
                             },
                             Variable {
                              identifier: "defs",
                              position: (421, 56),
                             },
                            ],
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "optionalValue",
                              position: (421, 62),
                             },
                            ],
                           },
                           default: None,
                          },
                          position: (420, 86),
                         },
                         position: (420, 80),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "map",
                          position: (424, 12),
                         },
                         arguments: [
                          Function {
                           argument: Some(
                            "def",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: FunctionApplication {
                            function: Variable {
                             identifier: "mapAttrs",
                             position: (424, 22),
                            },
                            arguments: [
                             Function {
                              argument: Some(
                               "n",
                              ),
                              arguments: FunctionArguments {
                               arguments: [],
                               ellipsis: false,
                              },
                              definition: Function {
                               argument: Some(
                                "v",
                               ),
                               arguments: FunctionArguments {
                                arguments: [],
                                ellipsis: false,
                               },
                               definition: Map {
                                bindings: [
                                 Inherit(
                                  Some(
                                   Variable {
                                    identifier: "def",
                                    position: (424, 49),
                                   },
                                  ),
                                  [
                                   Raw {
                                    content: "file",
                                    position: (424, 54),
                                   },
                                  ],
                                 ),
                                 KeyValue(
                                  AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "value",
                                     position: (424, 60),
                                    },
                                   ],
                                  },
                                  Variable {
                                   identifier: "v",
                                   position: (424, 68),
                                  },
                                 ),
                                ],
                                recursive: false,
                                position: (424, 38),
                               },
                               position: (424, 35),
                              },
                              position: (424, 32),
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "def",
                               position: (424, 74),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "value",
                                 position: (424, 78),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                           position: (424, 17),
                          },
                          Variable {
                           identifier: "defs",
                           position: (424, 85),
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                  position: (419, 20),
                 },
                 position: (419, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "emptyValue",
                   position: (425, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "value",
                      position: (425, 22),
                     },
                    ],
                   },
                   Map {
                    bindings: [],
                    recursive: false,
                    position: (425, 30),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (425, 20),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (426, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "prefix",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "elemType",
                    position: (426, 31),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "getSubOptions",
                      position: (426, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     Variable {
                      identifier: "prefix",
                      position: (426, 55),
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "<name>",
                          position: (426, 67),
                         },
                        ],
                       },
                      ],
                      position: (426, 65),
                     },
                    ],
                    position: (426, 62),
                   },
                  ],
                 },
                 position: (426, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubModules",
                   position: (427, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (427, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (427, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "substSubModules",
                   position: (428, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "m",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (428, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (428, 37),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "substSubModules",
                        position: (428, 46),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "m",
                      position: (428, 62),
                     },
                    ],
                   },
                  ],
                 },
                 position: (428, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "functor",
                   position: (429, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "defaultFunctor",
                    position: (429, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "name",
                     position: (429, 33),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "wrapped",
                        position: (429, 44),
                       },
                      ],
                     },
                     Variable {
                      identifier: "elemType",
                      position: (429, 54),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (429, 42),
                  },
                 ],
                 position: (429, 39),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nestedTypes",
                   position: (430, 7),
                  },
                  Raw {
                   content: "elemType",
                   position: (430, 19),
                  },
                 ],
                },
                Variable {
                 identifier: "elemType",
                 position: (430, 30),
                },
               ),
              ],
              recursive: true,
              position: (415, 38),
             },
            ],
           },
           position: (415, 15),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "lazyAttrsOf",
             position: (438, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (438, 29),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (439, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "lazyAttrsOf",
                   position: (439, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (440, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "lazy attribute set of ",
                   position: (440, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "elemType",
                     position: (440, 46),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (440, 55),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "s",
                   position: (440, 67),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (441, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "isAttrs",
                 position: (441, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (442, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "zipAttrsWith",
                    position: (443, 9),
                   },
                   arguments: [
                    Function {
                     argument: Some(
                      "name",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: Function {
                      argument: Some(
                       "defs",
                      ),
                      arguments: FunctionArguments {
                       arguments: [],
                       ellipsis: false,
                      },
                      definition: LetIn {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "merged",
                            position: (444, 15),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "mergeDefinitions",
                           position: (444, 24),
                          },
                          arguments: [
                           BinaryOperation {
                            operator: Concatenation,
                            operands: [
                             Variable {
                              identifier: "loc",
                              position: (444, 42),
                             },
                             List {
                              elements: [
                               Variable {
                                identifier: "name",
                                position: (444, 50),
                               },
                              ],
                              position: (444, 49),
                             },
                            ],
                            position: (444, 46),
                           },
                           Variable {
                            identifier: "elemType",
                            position: (444, 57),
                           },
                           Variable {
                            identifier: "defs",
                            position: (444, 66),
                           },
                          ],
                         },
                        ),
                       ],
                       target: PropertyAccess {
                        expression: Variable {
                         identifier: "merged",
                         position: (446, 14),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "optionalValue",
                           position: (446, 21),
                          },
                          Raw {
                           content: "value",
                           position: (446, 35),
                          },
                         ],
                        },
                        default: Some(
                         PropertyAccess {
                          expression: Variable {
                           identifier: "elemType",
                           position: (446, 44),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "emptyValue",
                             position: (446, 53),
                            },
                            Raw {
                             content: "value",
                             position: (446, 64),
                            },
                           ],
                          },
                          default: Some(
                           PropertyAccess {
                            expression: Variable {
                             identifier: "merged",
                             position: (446, 73),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mergedValue",
                               position: (446, 80),
                              },
                             ],
                            },
                            default: None,
                           },
                          ),
                         },
                        ),
                       },
                       position: (444, 11),
                      },
                      position: (443, 29),
                     },
                     position: (443, 23),
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "map",
                      position: (449, 10),
                     },
                     arguments: [
                      Function {
                       argument: Some(
                        "def",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: FunctionApplication {
                        function: Variable {
                         identifier: "mapAttrs",
                         position: (449, 20),
                        },
                        arguments: [
                         Function {
                          argument: Some(
                           "n",
                          ),
                          arguments: FunctionArguments {
                           arguments: [],
                           ellipsis: false,
                          },
                          definition: Function {
                           argument: Some(
                            "v",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: Map {
                            bindings: [
                             Inherit(
                              Some(
                               Variable {
                                identifier: "def",
                                position: (449, 47),
                               },
                              ),
                              [
                               Raw {
                                content: "file",
                                position: (449, 52),
                               },
                              ],
                             ),
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "value",
                                 position: (449, 58),
                                },
                               ],
                              },
                              Variable {
                               identifier: "v",
                               position: (449, 66),
                              },
                             ),
                            ],
                            recursive: false,
                            position: (449, 36),
                           },
                           position: (449, 33),
                          },
                          position: (449, 30),
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "def",
                           position: (449, 72),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "value",
                             position: (449, 76),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                       position: (449, 15),
                      },
                      Variable {
                       identifier: "defs",
                       position: (449, 83),
                      },
                     ],
                    },
                   ],
                  },
                  position: (442, 20),
                 },
                 position: (442, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "emptyValue",
                   position: (450, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "value",
                      position: (450, 22),
                     },
                    ],
                   },
                   Map {
                    bindings: [],
                    recursive: false,
                    position: (450, 30),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (450, 20),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (451, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "prefix",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "elemType",
                    position: (451, 31),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "getSubOptions",
                      position: (451, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     Variable {
                      identifier: "prefix",
                      position: (451, 55),
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "<name>",
                          position: (451, 67),
                         },
                        ],
                       },
                      ],
                      position: (451, 65),
                     },
                    ],
                    position: (451, 62),
                   },
                  ],
                 },
                 position: (451, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubModules",
                   position: (452, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (452, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (452, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "substSubModules",
                   position: (453, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "m",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "lazyAttrsOf",
                   position: (453, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (453, 41),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "substSubModules",
                        position: (453, 50),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "m",
                      position: (453, 66),
                     },
                    ],
                   },
                  ],
                 },
                 position: (453, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "functor",
                   position: (454, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "defaultFunctor",
                    position: (454, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "name",
                     position: (454, 33),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "wrapped",
                        position: (454, 44),
                       },
                      ],
                     },
                     Variable {
                      identifier: "elemType",
                      position: (454, 54),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (454, 42),
                  },
                 ],
                 position: (454, 39),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nestedTypes",
                   position: (455, 7),
                  },
                  Raw {
                   content: "elemType",
                   position: (455, 19),
                  },
                 ],
                },
                Variable {
                 identifier: "elemType",
                 position: (455, 30),
                },
               ),
              ],
              recursive: true,
              position: (438, 42),
             },
            ],
           },
           position: (438, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "loaOf",
             position: (459, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: BinaryOperation {
            operator: Update,
            operands: [
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (459, 23),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "attrsOf",
                  position: (459, 29),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Variable {
                identifier: "elemType",
                position: (459, 37),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (460, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "loaOf",
                   position: (460, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "deprecationMessage",
                   position: (461, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Addition,
                 operands: [
                  BinaryOperation {
                   operator: Addition,
                   operands: [
                    String {
                     parts: [
                      Raw {
                       content: "Mixing lists with attribute values is no longer",
                       position: (461, 29),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: " possible; please use `types.attrsOf` instead. See",
                       position: (462, 12),
                      },
                     ],
                    },
                   ],
                   position: (462, 9),
                  },
                  String {
                   parts: [
                    Raw {
                     content: " https://github.com/NixOS/nixpkgs/issues/1800 for the motivation.",
                     position: (463, 12),
                    },
                   ],
                  },
                 ],
                 position: (463, 9),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nestedTypes",
                   position: (464, 7),
                  },
                  Raw {
                   content: "elemType",
                   position: (464, 19),
                  },
                 ],
                },
                Variable {
                 identifier: "elemType",
                 position: (464, 30),
                },
               ),
              ],
              recursive: false,
              position: (459, 49),
             },
            ],
            position: (459, 46),
           },
           position: (459, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "uniq",
             position: (468, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (468, 22),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (469, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "uniq",
                   position: (469, 15),
                  },
                 ],
                },
               ),
               Inherit(
                Some(
                 Variable {
                  identifier: "elemType",
                  position: (470, 16),
                 },
                ),
                [
                 Raw {
                  content: "description",
                  position: (470, 26),
                 },
                 Raw {
                  content: "check",
                  position: (470, 38),
                 },
                ],
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (471, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "mergeOneOption",
                 position: (471, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "emptyValue",
                   position: (472, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (472, 20),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "emptyValue",
                    position: (472, 29),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (473, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (473, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubOptions",
                    position: (473, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubModules",
                   position: (474, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (474, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (474, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "substSubModules",
                   position: (475, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "m",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "uniq",
                   position: (475, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (475, 34),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "substSubModules",
                        position: (475, 43),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "m",
                      position: (475, 59),
                     },
                    ],
                   },
                  ],
                 },
                 position: (475, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "functor",
                   position: (476, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "defaultFunctor",
                    position: (476, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "name",
                     position: (476, 33),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "wrapped",
                        position: (476, 44),
                       },
                      ],
                     },
                     Variable {
                      identifier: "elemType",
                      position: (476, 54),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (476, 42),
                  },
                 ],
                 position: (476, 39),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nestedTypes",
                   position: (477, 7),
                  },
                  Raw {
                   content: "elemType",
                   position: (477, 19),
                  },
                 ],
                },
                Variable {
                 identifier: "elemType",
                 position: (477, 30),
                },
               ),
              ],
              recursive: true,
              position: (468, 35),
             },
            ],
           },
           position: (468, 12),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "unique",
             position: (480, 5),
            },
           ],
          },
          Function {
           argument: None,
           arguments: FunctionArguments {
            arguments: [
             FunctionArgument {
              identifier: "message",
              default: None,
             },
            ],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "type",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "mkOptionType",
              position: (480, 33),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "name",
                    position: (481, 7),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "unique",
                    position: (481, 15),
                   },
                  ],
                 },
                ),
                Inherit(
                 Some(
                  Variable {
                   identifier: "type",
                   position: (482, 16),
                  },
                 ),
                 [
                  Raw {
                   content: "description",
                   position: (482, 22),
                  },
                  Raw {
                   content: "check",
                   position: (482, 34),
                  },
                 ],
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "merge",
                    position: (483, 7),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mergeUniqueOption",
                   position: (483, 15),
                  },
                  arguments: [
                   Map {
                    bindings: [
                     Inherit(
                      None,
                      [
                       Raw {
                        content: "message",
                        position: (483, 43),
                       },
                      ],
                     ),
                    ],
                    recursive: false,
                    position: (483, 33),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "emptyValue",
                    position: (484, 7),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "type",
                   position: (484, 20),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "emptyValue",
                     position: (484, 25),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubOptions",
                    position: (485, 7),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "type",
                   position: (485, 23),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "getSubOptions",
                     position: (485, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (486, 7),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "type",
                   position: (486, 23),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "getSubModules",
                     position: (486, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "substSubModules",
                    position: (487, 7),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "m",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "uniq",
                    position: (487, 28),
                   },
                   arguments: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "type",
                       position: (487, 34),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "substSubModules",
                         position: (487, 39),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "m",
                       position: (487, 55),
                      },
                     ],
                    },
                   ],
                  },
                  position: (487, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "functor",
                    position: (488, 7),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Update,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "defaultFunctor",
                     position: (488, 18),
                    },
                    arguments: [
                     Variable {
                      identifier: "name",
                      position: (488, 33),
                     },
                    ],
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "wrapped",
                         position: (488, 44),
                        },
                       ],
                      },
                      Variable {
                       identifier: "type",
                       position: (488, 54),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (488, 42),
                   },
                  ],
                  position: (488, 39),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "nestedTypes",
                    position: (489, 7),
                   },
                   Raw {
                    content: "elemType",
                    position: (489, 19),
                   },
                  ],
                 },
                 Variable {
                  identifier: "type",
                  position: (489, 30),
                 },
                ),
               ],
               recursive: true,
               position: (480, 46),
              },
             ],
            },
            position: (480, 27),
           },
           position: (480, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "nullOr",
             position: (493, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (493, 24),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (494, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (494, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (495, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "null or ",
                   position: (495, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "elemType",
                     position: (495, 32),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (495, 41),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (496, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "x",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: BinaryOperation {
                  operator: LogicalOr,
                  operands: [
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     Variable {
                      identifier: "x",
                      position: (496, 18),
                     },
                     Variable {
                      identifier: "null",
                      position: (496, 23),
                     },
                    ],
                    position: (496, 20),
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (496, 31),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "check",
                        position: (496, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "x",
                      position: (496, 46),
                     },
                    ],
                   },
                  ],
                  position: (496, 28),
                 },
                 position: (496, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (497, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: LetIn {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "nrNulls",
                        position: (498, 13),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "count",
                       position: (498, 23),
                      },
                      arguments: [
                       Function {
                        argument: Some(
                         "def",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: BinaryOperation {
                         operator: EqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "def",
                            position: (498, 35),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "value",
                              position: (498, 39),
                             },
                            ],
                           },
                           default: None,
                          },
                          Variable {
                           identifier: "null",
                           position: (498, 48),
                          },
                         ],
                         position: (498, 45),
                        },
                        position: (498, 30),
                       },
                       Variable {
                        identifier: "defs",
                        position: (498, 54),
                       },
                      ],
                     },
                    ),
                   ],
                   target: IfThenElse {
                    predicate: BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      Variable {
                       identifier: "nrNulls",
                       position: (499, 12),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "length",
                        position: (499, 23),
                       },
                       arguments: [
                        Variable {
                         identifier: "defs",
                         position: (499, 30),
                        },
                       ],
                      },
                     ],
                     position: (499, 20),
                    },
                    then: Variable {
                     identifier: "null",
                     position: (499, 40),
                    },
                    else_: IfThenElse {
                     predicate: BinaryOperation {
                      operator: NotEqualTo,
                      operands: [
                       Variable {
                        identifier: "nrNulls",
                        position: (500, 17),
                       },
                       Int {
                        value: 0,
                        position: (500, 28),
                       },
                      ],
                      position: (500, 25),
                     },
                     then: FunctionApplication {
                      function: Variable {
                       identifier: "throw",
                       position: (501, 11),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "The option `",
                          position: (501, 18),
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "showOption",
                            position: (501, 32),
                           },
                           arguments: [
                            Variable {
                             identifier: "loc",
                             position: (501, 43),
                            },
                           ],
                          },
                         },
                         Raw {
                          content: "` is defined both null and not null, in ",
                          position: (501, 47),
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "showFiles",
                            position: (501, 89),
                           },
                           arguments: [
                            FunctionApplication {
                             function: Variable {
                              identifier: "getFiles",
                              position: (501, 100),
                             },
                             arguments: [
                              Variable {
                               identifier: "defs",
                               position: (501, 109),
                              },
                             ],
                            },
                           ],
                          },
                         },
                         Raw {
                          content: ".",
                          position: (501, 115),
                         },
                        ],
                       },
                      ],
                     },
                     else_: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "elemType",
                        position: (502, 14),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "merge",
                          position: (502, 23),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Variable {
                        identifier: "loc",
                        position: (502, 29),
                       },
                       Variable {
                        identifier: "defs",
                        position: (502, 33),
                       },
                      ],
                     },
                     position: (500, 14),
                    },
                    position: (499, 9),
                   },
                   position: (498, 9),
                  },
                  position: (497, 20),
                 },
                 position: (497, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "emptyValue",
                   position: (503, 7),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "value",
                      position: (503, 22),
                     },
                    ],
                   },
                   Variable {
                    identifier: "null",
                    position: (503, 30),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (503, 20),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (504, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (504, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubOptions",
                    position: (504, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubModules",
                   position: (505, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (505, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (505, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "substSubModules",
                   position: (506, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "m",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "nullOr",
                   position: (506, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (506, 36),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "substSubModules",
                        position: (506, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "m",
                      position: (506, 61),
                     },
                    ],
                   },
                  ],
                 },
                 position: (506, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "functor",
                   position: (507, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  FunctionApplication {
                   function: Variable {
                    identifier: "defaultFunctor",
                    position: (507, 18),
                   },
                   arguments: [
                    Variable {
                     identifier: "name",
                     position: (507, 33),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "wrapped",
                        position: (507, 44),
                       },
                      ],
                     },
                     Variable {
                      identifier: "elemType",
                      position: (507, 54),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (507, 42),
                  },
                 ],
                 position: (507, 39),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "nestedTypes",
                   position: (508, 7),
                  },
                  Raw {
                   content: "elemType",
                   position: (508, 19),
                  },
                 ],
                },
                Variable {
                 identifier: "elemType",
                 position: (508, 30),
                },
               ),
              ],
              recursive: true,
              position: (493, 37),
             },
            ],
           },
           position: (493, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "functionTo",
             position: (511, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "mkOptionType",
             position: (511, 28),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "name",
                   position: (512, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "functionTo",
                   position: (512, 15),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (513, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "function that evaluates to a(n) ",
                   position: (513, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "elemType",
                     position: (513, 56),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "name",
                       position: (513, 65),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "check",
                   position: (514, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "isFunction",
                 position: (514, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "merge",
                   position: (515, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "loc",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "defs",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "fnArgs",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: PropertyAccess {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "mergeDefinitions",
                      position: (516, 18),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: Concatenation,
                       operands: [
                        Variable {
                         identifier: "loc",
                         position: (516, 36),
                        },
                        List {
                         elements: [
                          String {
                           parts: [
                            Raw {
                             content: "[function body]",
                             position: (516, 46),
                            },
                           ],
                          },
                         ],
                         position: (516, 43),
                        },
                       ],
                       position: (516, 40),
                      },
                      Variable {
                       identifier: "elemType",
                       position: (516, 66),
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "map",
                        position: (516, 76),
                       },
                       arguments: [
                        Function {
                         argument: Some(
                          "fn",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: Map {
                          bindings: [
                           Inherit(
                            Some(
                             Variable {
                              identifier: "fn",
                              position: (516, 96),
                             },
                            ),
                            [
                             Raw {
                              content: "file",
                              position: (516, 100),
                             },
                            ],
                           ),
                           KeyValue(
                            AttributePath {
                             attributes: [
                              Raw {
                               content: "value",
                               position: (516, 106),
                              },
                             ],
                            },
                            FunctionApplication {
                             function: PropertyAccess {
                              expression: Variable {
                               identifier: "fn",
                               position: (516, 114),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "value",
                                 position: (516, 117),
                                },
                               ],
                              },
                              default: None,
                             },
                             arguments: [
                              Variable {
                               identifier: "fnArgs",
                               position: (516, 123),
                              },
                             ],
                            },
                           ),
                          ],
                          recursive: false,
                          position: (516, 85),
                         },
                         position: (516, 81),
                        },
                        Variable {
                         identifier: "defs",
                         position: (516, 134),
                        },
                       ],
                      },
                     ],
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "mergedValue",
                       position: (516, 141),
                      },
                     ],
                    },
                    default: None,
                   },
                   position: (516, 9),
                  },
                  position: (515, 20),
                 },
                 position: (515, 15),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubOptions",
                   position: (517, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (517, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubOptions",
                    position: (517, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "getSubModules",
                   position: (518, 7),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "elemType",
                  position: (518, 23),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (518, 32),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "substSubModules",
                   position: (519, 7),
                  },
                 ],
                },
                Function {
                 argument: Some(
                  "m",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "functionTo",
                   position: (519, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "elemType",
                      position: (519, 40),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "substSubModules",
                        position: (519, 49),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "m",
                      position: (519, 65),
                     },
                    ],
                   },
                  ],
                 },
                 position: (519, 25),
                },
               ),
              ],
              recursive: false,
              position: (511, 41),
             },
            ],
           },
           position: (511, 18),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "submodule",
             position: (523, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "modules",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "submoduleWith",
             position: (523, 26),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "shorthandOnlyDefinesConfig",
                   position: (524, 7),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (524, 36),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "modules",
                   position: (525, 7),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "toList",
                  position: (525, 17),
                 },
                 arguments: [
                  Variable {
                   identifier: "modules",
                   position: (525, 24),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (523, 40),
             },
            ],
           },
           position: (523, 17),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "submoduleWith",
             position: (528, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "attrs",
           ),
           arguments: FunctionArguments {
            arguments: [
             FunctionArgument {
              identifier: "shorthandOnlyDefinesConfig",
              default: Some(
               Variable {
                identifier: "false",
                position: (531, 38),
               },
              ),
             },
             FunctionArgument {
              identifier: "specialArgs",
              default: Some(
               Map {
                bindings: [],
                recursive: false,
                position: (530, 23),
               },
              ),
             },
             FunctionArgument {
              identifier: "modules",
              default: None,
             },
            ],
            ellipsis: false,
           },
           definition: LetIn {
            bindings: [
             Inherit(
              Some(
               PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (534, 18),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "modules",
                   position: (534, 22),
                  },
                 ],
                },
                default: None,
               },
              ),
              [
               Raw {
                content: "evalModules",
                position: (534, 31),
               },
              ],
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "coerce",
                 position: (536, 9),
                },
               ],
              },
              Function {
               argument: Some(
                "unify",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Function {
                argument: Some(
                 "value",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: IfThenElse {
                 predicate: FunctionApplication {
                  function: Variable {
                   identifier: "isFunction",
                   position: (536, 35),
                  },
                  arguments: [
                   Variable {
                    identifier: "value",
                    position: (536, 46),
                   },
                  ],
                 },
                 then: FunctionApplication {
                  function: Variable {
                   identifier: "setFunctionArgs",
                   position: (537, 16),
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "args",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: FunctionApplication {
                     function: Variable {
                      identifier: "unify",
                      position: (537, 39),
                     },
                     arguments: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "value",
                        position: (537, 46),
                       },
                       arguments: [
                        Variable {
                         identifier: "args",
                         position: (537, 52),
                        },
                       ],
                      },
                     ],
                    },
                    position: (537, 33),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "functionArgs",
                     position: (537, 60),
                    },
                    arguments: [
                     Variable {
                      identifier: "value",
                      position: (537, 73),
                     },
                    ],
                   },
                  ],
                 },
                 else_: FunctionApplication {
                  function: Variable {
                   identifier: "unify",
                   position: (538, 16),
                  },
                  arguments: [
                   IfThenElse {
                    predicate: Variable {
                     identifier: "shorthandOnlyDefinesConfig",
                     position: (538, 26),
                    },
                    then: Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "config",
                          position: (538, 60),
                         },
                        ],
                       },
                       Variable {
                        identifier: "value",
                        position: (538, 69),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (538, 58),
                    },
                    else_: Variable {
                     identifier: "value",
                     position: (538, 83),
                    },
                    position: (538, 23),
                   },
                  ],
                 },
                 position: (536, 32),
                },
                position: (536, 25),
               },
               position: (536, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "allModules",
                 position: (540, 9),
                },
               ],
              },
              Function {
               argument: Some(
                "defs",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "imap1",
                 position: (540, 28),
                },
                arguments: [
                 Function {
                  argument: Some(
                   "n",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: None,
                   arguments: FunctionArguments {
                    arguments: [
                     FunctionArgument {
                      identifier: "file",
                      default: None,
                     },
                     FunctionArgument {
                      identifier: "value",
                      default: None,
                     },
                    ],
                    ellipsis: false,
                   },
                   definition: IfThenElse {
                    predicate: BinaryOperation {
                     operator: LogicalOr,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "isAttrs",
                        position: (541, 14),
                       },
                       arguments: [
                        Variable {
                         identifier: "value",
                         position: (541, 22),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "isFunction",
                        position: (541, 31),
                       },
                       arguments: [
                        Variable {
                         identifier: "value",
                         position: (541, 42),
                        },
                       ],
                      },
                     ],
                     position: (541, 28),
                    },
                    then: FunctionApplication {
                     function: Variable {
                      identifier: "coerce",
                      position: (543, 13),
                     },
                     arguments: [
                      FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "lib",
                         position: (543, 21),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "modules",
                           position: (543, 25),
                          },
                          Raw {
                           content: "unifyModuleSyntax",
                           position: (543, 33),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "file",
                         position: (543, 51),
                        },
                        String {
                         parts: [
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "toString",
                             position: (543, 59),
                            },
                            arguments: [
                             Variable {
                              identifier: "file",
                              position: (543, 68),
                             },
                            ],
                           },
                          },
                          Raw {
                           content: "-",
                           position: (543, 73),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "toString",
                             position: (543, 76),
                            },
                            arguments: [
                             Variable {
                              identifier: "n",
                              position: (543, 85),
                             },
                            ],
                           },
                          },
                         ],
                        },
                       ],
                      },
                      Variable {
                       identifier: "value",
                       position: (543, 90),
                      },
                     ],
                    },
                    else_: Variable {
                     identifier: "value",
                     position: (544, 16),
                    },
                    position: (541, 11),
                   },
                   position: (540, 38),
                  },
                  position: (540, 35),
                 },
                 Variable {
                  identifier: "defs",
                  position: (545, 11),
                 },
                ],
               },
               position: (540, 22),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "base",
                 position: (547, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "evalModules",
                position: (547, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  Inherit(
                   None,
                   [
                    Raw {
                     content: "specialArgs",
                     position: (548, 19),
                    },
                   ],
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "modules",
                      position: (549, 11),
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     List {
                      elements: [
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "_module",
                             position: (565, 13),
                            },
                            Raw {
                             content: "args",
                             position: (565, 21),
                            },
                            Raw {
                             content: "name",
                             position: (565, 26),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: PropertyAccess {
                            expression: Variable {
                             identifier: "lib",
                             position: (565, 33),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mkOptionDefault",
                               position: (565, 37),
                              },
                             ],
                            },
                            default: None,
                           },
                           arguments: [
                            String {
                             parts: [
                              Raw {
                               content: "‹name›",
                               position: (565, 54),
                              },
                             ],
                            },
                           ],
                          },
                         ),
                        ],
                        recursive: false,
                        position: (549, 22),
                       },
                      ],
                      position: (549, 21),
                     },
                     Variable {
                      identifier: "modules",
                      position: (566, 17),
                     },
                    ],
                    position: (566, 14),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (547, 28),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "freeformType",
                 position: (569, 9),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "base",
                position: (569, 24),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "_module",
                  position: (569, 29),
                 },
                 Raw {
                  content: "freeformType",
                  position: (569, 37),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "mkOptionType",
              position: (572, 7),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "name",
                    position: (573, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "submodule",
                    position: (573, 17),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (574, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "freeformType",
                   position: (574, 23),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (574, 36),
                    },
                   ],
                  },
                  default: Some(
                   Variable {
                    identifier: "name",
                    position: (574, 51),
                   },
                  ),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "check",
                    position: (575, 9),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "x",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: BinaryOperation {
                   operator: LogicalOr,
                   operands: [
                    BinaryOperation {
                     operator: LogicalOr,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "isAttrs",
                        position: (575, 20),
                       },
                       arguments: [
                        Variable {
                         identifier: "x",
                         position: (575, 28),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "isFunction",
                        position: (575, 33),
                       },
                       arguments: [
                        Variable {
                         identifier: "x",
                         position: (575, 44),
                        },
                       ],
                      },
                     ],
                     position: (575, 30),
                    },
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "path",
                       position: (575, 49),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "check",
                         position: (575, 54),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "x",
                       position: (575, 60),
                      },
                     ],
                    },
                   ],
                   position: (575, 46),
                  },
                  position: (575, 17),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "merge",
                    position: (576, 9),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "loc",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "defs",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: PropertyAccess {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "base",
                       position: (577, 12),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "extendModules",
                         position: (577, 17),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "modules",
                            position: (578, 13),
                           },
                          ],
                         },
                         BinaryOperation {
                          operator: Concatenation,
                          operands: [
                           List {
                            elements: [
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "_module",
                                   position: (578, 27),
                                  },
                                  Raw {
                                   content: "args",
                                   position: (578, 35),
                                  },
                                  Raw {
                                   content: "name",
                                   position: (578, 40),
                                  },
                                 ],
                                },
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "last",
                                  position: (578, 47),
                                 },
                                 arguments: [
                                  Variable {
                                   identifier: "loc",
                                   position: (578, 52),
                                  },
                                 ],
                                },
                               ),
                              ],
                              recursive: false,
                              position: (578, 25),
                             },
                            ],
                            position: (578, 23),
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "allModules",
                             position: (578, 64),
                            },
                            arguments: [
                             Variable {
                              identifier: "defs",
                              position: (578, 75),
                             },
                            ],
                           },
                          ],
                          position: (578, 61),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "prefix",
                            position: (579, 13),
                           },
                          ],
                         },
                         Variable {
                          identifier: "loc",
                          position: (579, 22),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (577, 31),
                      },
                     ],
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "config",
                       position: (580, 14),
                      },
                     ],
                    },
                    default: None,
                   },
                   position: (576, 22),
                  },
                  position: (576, 17),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "emptyValue",
                    position: (581, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "value",
                       position: (581, 24),
                      },
                     ],
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (581, 32),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (581, 22),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubOptions",
                    position: (582, 9),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "prefix",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: BinaryOperation {
                   operator: Update,
                   operands: [
                    PropertyAccess {
                     expression: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "base",
                        position: (582, 34),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "extendModules",
                          position: (582, 39),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Map {
                        bindings: [
                         Inherit(
                          None,
                          [
                           Raw {
                            content: "prefix",
                            position: (583, 21),
                           },
                          ],
                         ),
                        ],
                        recursive: false,
                        position: (583, 11),
                       },
                      ],
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "options",
                        position: (583, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "optionalAttrs",
                      position: (583, 43),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        Variable {
                         identifier: "freeformType",
                         position: (583, 58),
                        },
                        Variable {
                         identifier: "null",
                         position: (583, 74),
                        },
                       ],
                       position: (583, 71),
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "_freeformOptions",
                            position: (587, 13),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: PropertyAccess {
                           expression: Variable {
                            identifier: "freeformType",
                            position: (587, 32),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "getSubOptions",
                              position: (587, 45),
                             },
                            ],
                           },
                           default: None,
                          },
                          arguments: [
                           Variable {
                            identifier: "prefix",
                            position: (587, 59),
                           },
                          ],
                         },
                        ),
                       ],
                       recursive: false,
                       position: (583, 80),
                      },
                     ],
                    },
                   ],
                   position: (583, 40),
                  },
                  position: (582, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "getSubModules",
                    position: (589, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "modules",
                  position: (589, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "substSubModules",
                    position: (590, 9),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "m",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "submoduleWith",
                    position: (590, 30),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: Update,
                     operands: [
                      Variable {
                       identifier: "attrs",
                       position: (590, 45),
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "modules",
                            position: (591, 11),
                           },
                          ],
                         },
                         Variable {
                          identifier: "m",
                          position: (591, 21),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (590, 54),
                      },
                     ],
                     position: (590, 51),
                    },
                   ],
                  },
                  position: (590, 27),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "nestedTypes",
                    position: (593, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "lib",
                    position: (593, 23),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "optionalAttrs",
                      position: (593, 27),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     Variable {
                      identifier: "freeformType",
                      position: (593, 42),
                     },
                     Variable {
                      identifier: "null",
                      position: (593, 58),
                     },
                    ],
                    position: (593, 55),
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "freeformType",
                         position: (594, 11),
                        },
                       ],
                      },
                      Variable {
                       identifier: "freeformType",
                       position: (594, 26),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (593, 64),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "functor",
                    position: (596, 9),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Update,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "defaultFunctor",
                     position: (596, 19),
                    },
                    arguments: [
                     Variable {
                      identifier: "name",
                      position: (596, 34),
                     },
                    ],
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "type",
                         position: (597, 11),
                        },
                       ],
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (597, 18),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "submoduleWith",
                          position: (597, 24),
                         },
                        ],
                       },
                       default: None,
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "payload",
                         position: (598, 11),
                        },
                       ],
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "modules",
                            position: (599, 13),
                           },
                          ],
                         },
                         Variable {
                          identifier: "modules",
                          position: (599, 23),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "specialArgs",
                            position: (600, 13),
                           },
                          ],
                         },
                         Variable {
                          identifier: "specialArgs",
                          position: (600, 27),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "shorthandOnlyDefinesConfig",
                            position: (601, 13),
                           },
                          ],
                         },
                         Variable {
                          identifier: "shorthandOnlyDefinesConfig",
                          position: (601, 42),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (598, 21),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "binOp",
                         position: (603, 11),
                        },
                       ],
                      },
                      Function {
                       argument: Some(
                        "lhs",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Function {
                        argument: Some(
                         "rhs",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: Map {
                         bindings: [
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "modules",
                              position: (604, 13),
                             },
                            ],
                           },
                           BinaryOperation {
                            operator: Concatenation,
                            operands: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "lhs",
                               position: (604, 23),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "modules",
                                 position: (604, 27),
                                },
                               ],
                              },
                              default: None,
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "rhs",
                               position: (604, 38),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "modules",
                                 position: (604, 42),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                            position: (604, 35),
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "specialArgs",
                              position: (605, 13),
                             },
                            ],
                           },
                           LetIn {
                            bindings: [
                             KeyValue(
                              AttributePath {
                               attributes: [
                                Raw {
                                 content: "intersecting",
                                 position: (606, 19),
                                },
                               ],
                              },
                              FunctionApplication {
                               function: PropertyAccess {
                                expression: Variable {
                                 identifier: "builtins",
                                 position: (606, 34),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "intersectAttrs",
                                   position: (606, 43),
                                  },
                                 ],
                                },
                                default: None,
                               },
                               arguments: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "lhs",
                                  position: (606, 58),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "specialArgs",
                                    position: (606, 62),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "rhs",
                                  position: (606, 74),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "specialArgs",
                                    position: (606, 78),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                               ],
                              },
                             ),
                            ],
                            target: IfThenElse {
                             predicate: BinaryOperation {
                              operator: EqualTo,
                              operands: [
                               Variable {
                                identifier: "intersecting",
                                position: (607, 21),
                               },
                               Map {
                                bindings: [],
                                recursive: false,
                                position: (607, 37),
                               },
                              ],
                              position: (607, 34),
                             },
                             then: BinaryOperation {
                              operator: Update,
                              operands: [
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "lhs",
                                 position: (608, 20),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "specialArgs",
                                   position: (608, 24),
                                  },
                                 ],
                                },
                                default: None,
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "rhs",
                                 position: (608, 39),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "specialArgs",
                                   position: (608, 43),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ],
                              position: (608, 36),
                             },
                             else_: FunctionApplication {
                              function: Variable {
                               identifier: "throw",
                               position: (609, 20),
                              },
                              arguments: [
                               String {
                                parts: [
                                 Raw {
                                  content: "A submoduleWith option is declared multiple times with the same specialArgs \"",
                                  position: (609, 27),
                                 },
                                 Expression {
                                  expression: FunctionApplication {
                                   function: Variable {
                                    identifier: "toString",
                                    position: (609, 107),
                                   },
                                   arguments: [
                                    FunctionApplication {
                                     function: Variable {
                                      identifier: "attrNames",
                                      position: (609, 117),
                                     },
                                     arguments: [
                                      Variable {
                                       identifier: "intersecting",
                                       position: (609, 127),
                                      },
                                     ],
                                    },
                                   ],
                                  },
                                 },
                                 Raw {
                                  content: "\"",
                                  position: (609, 141),
                                 },
                                ],
                               },
                              ],
                             },
                             position: (607, 18),
                            },
                            position: (606, 15),
                           },
                          ),
                          KeyValue(
                           AttributePath {
                            attributes: [
                             Raw {
                              content: "shorthandOnlyDefinesConfig",
                              position: (610, 13),
                             },
                            ],
                           },
                           IfThenElse {
                            predicate: BinaryOperation {
                             operator: EqualTo,
                             operands: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "lhs",
                                position: (611, 18),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "shorthandOnlyDefinesConfig",
                                  position: (611, 22),
                                 },
                                ],
                               },
                               default: None,
                              },
                              PropertyAccess {
                               expression: Variable {
                                identifier: "rhs",
                                position: (611, 52),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "shorthandOnlyDefinesConfig",
                                  position: (611, 56),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                             position: (611, 49),
                            },
                            then: PropertyAccess {
                             expression: Variable {
                              identifier: "lhs",
                              position: (612, 20),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "shorthandOnlyDefinesConfig",
                                position: (612, 24),
                               },
                              ],
                             },
                             default: None,
                            },
                            else_: FunctionApplication {
                             function: Variable {
                              identifier: "throw",
                              position: (613, 20),
                             },
                             arguments: [
                              String {
                               parts: [
                                Raw {
                                 content: "A submoduleWith option is declared multiple times with conflicting shorthandOnlyDefinesConfig values",
                                 position: (613, 27),
                                },
                               ],
                              },
                             ],
                            },
                            position: (611, 15),
                           },
                          ),
                         ],
                         recursive: false,
                         position: (603, 29),
                        },
                        position: (603, 24),
                       },
                       position: (603, 19),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (596, 42),
                   },
                  ],
                  position: (596, 39),
                 },
                ),
               ],
               recursive: true,
               position: (572, 20),
              },
             ],
            },
            position: (533, 7),
           },
           position: (529, 7),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enum",
             position: (619, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "values",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: LetIn {
            bindings: [
             Inherit(
              Some(
               PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (621, 18),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "lists",
                   position: (621, 22),
                  },
                 ],
                },
                default: None,
               },
              ),
              [
               Raw {
                content: "unique",
                position: (621, 29),
               },
              ],
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "show",
                 position: (622, 9),
                },
               ],
              },
              Function {
               argument: Some(
                "v",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: IfThenElse {
                predicate: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "builtins",
                   position: (623, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "isString",
                     position: (623, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "v",
                   position: (623, 37),
                  },
                 ],
                },
                then: String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (623, 46),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "v",
                    position: (623, 49),
                   },
                  },
                  Raw {
                   content: "\"",
                   position: (623, 51),
                  },
                 ],
                },
                else_: IfThenElse {
                 predicate: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "builtins",
                    position: (624, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "isInt",
                      position: (624, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Variable {
                    identifier: "v",
                    position: (624, 34),
                   },
                  ],
                 },
                 then: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "builtins",
                    position: (624, 41),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "toString",
                      position: (624, 50),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Variable {
                    identifier: "v",
                    position: (624, 59),
                   },
                  ],
                 },
                 else_: IfThenElse {
                  predicate: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "builtins",
                     position: (625, 19),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "isBool",
                       position: (625, 28),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Variable {
                     identifier: "v",
                     position: (625, 35),
                    },
                   ],
                  },
                  then: FunctionApplication {
                   function: Variable {
                    identifier: "boolToString",
                    position: (625, 42),
                   },
                   arguments: [
                    Variable {
                     identifier: "v",
                     position: (625, 55),
                    },
                   ],
                  },
                  else_: String {
                   parts: [
                    Raw {
                     content: "<",
                     position: (626, 18),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "builtins",
                        position: (626, 21),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "typeOf",
                          position: (626, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Variable {
                        identifier: "v",
                        position: (626, 37),
                       },
                      ],
                     },
                    },
                    Raw {
                     content: ">",
                     position: (626, 39),
                    },
                   ],
                  },
                  position: (625, 16),
                 },
                 position: (624, 16),
                },
                position: (623, 16),
               },
               position: (622, 16),
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "mkOptionType",
              position: (628, 7),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "name",
                    position: (629, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "enum",
                    position: (629, 17),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (630, 9),
                   },
                  ],
                 },
                 IfThenElse {
                  predicate: BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    Variable {
                     identifier: "values",
                     position: (635, 14),
                    },
                    List {
                     elements: [],
                     position: (635, 24),
                    },
                   ],
                   position: (635, 21),
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: "impossible (empty enum)",
                     position: (636, 14),
                    },
                   ],
                  },
                  else_: IfThenElse {
                   predicate: BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "builtins",
                        position: (637, 19),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "length",
                          position: (637, 28),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Variable {
                        identifier: "values",
                        position: (637, 35),
                       },
                      ],
                     },
                     Int {
                      value: 1,
                      position: (637, 45),
                     },
                    ],
                    position: (637, 42),
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: "value ",
                      position: (638, 14),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "show",
                        position: (638, 22),
                       },
                       arguments: [
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "builtins",
                           position: (638, 28),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "head",
                             position: (638, 37),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Variable {
                           identifier: "values",
                           position: (638, 42),
                          },
                         ],
                        },
                       ],
                      },
                     },
                     Raw {
                      content: " (singular enum)",
                      position: (638, 50),
                     },
                    ],
                   },
                   else_: String {
                    parts: [
                     Raw {
                      content: "one of ",
                      position: (640, 14),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "concatMapStringsSep",
                        position: (640, 23),
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: ", ",
                           position: (640, 44),
                          },
                         ],
                        },
                        Variable {
                         identifier: "show",
                         position: (640, 48),
                        },
                        Variable {
                         identifier: "values",
                         position: (640, 53),
                        },
                       ],
                      },
                     },
                    ],
                   },
                   position: (637, 16),
                  },
                  position: (635, 11),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "check",
                    position: (641, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "flip",
                   position: (641, 17),
                  },
                  arguments: [
                   Variable {
                    identifier: "elem",
                    position: (641, 22),
                   },
                   Variable {
                    identifier: "values",
                    position: (641, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "merge",
                    position: (642, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "mergeEqualOption",
                  position: (642, 17),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "functor",
                    position: (643, 9),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Update,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "defaultFunctor",
                     position: (643, 20),
                    },
                    arguments: [
                     Variable {
                      identifier: "name",
                      position: (643, 35),
                     },
                    ],
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "payload",
                         position: (643, 46),
                        },
                       ],
                      },
                      Variable {
                       identifier: "values",
                       position: (643, 56),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "binOp",
                         position: (643, 64),
                        },
                       ],
                      },
                      Function {
                       argument: Some(
                        "a",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Function {
                        argument: Some(
                         "b",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: FunctionApplication {
                         function: Variable {
                          identifier: "unique",
                          position: (643, 78),
                         },
                         arguments: [
                          BinaryOperation {
                           operator: Concatenation,
                           operands: [
                            Variable {
                             identifier: "a",
                             position: (643, 86),
                            },
                            Variable {
                             identifier: "b",
                             position: (643, 91),
                            },
                           ],
                           position: (643, 88),
                          },
                         ],
                        },
                        position: (643, 75),
                       },
                       position: (643, 72),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (643, 44),
                   },
                  ],
                  position: (643, 41),
                 },
                ),
               ],
               recursive: true,
               position: (628, 20),
              },
             ],
            },
            position: (620, 7),
           },
           position: (619, 12),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "either",
             position: (647, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "t1",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "t2",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "mkOptionType",
              position: (647, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "name",
                    position: (648, 7),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "either",
                    position: (648, 15),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (649, 7),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "t1",
                      position: (649, 24),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (649, 27),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " or ",
                    position: (649, 39),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "t2",
                      position: (649, 45),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "description",
                        position: (649, 48),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "check",
                    position: (650, 7),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "x",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: BinaryOperation {
                   operator: LogicalOr,
                   operands: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "t1",
                       position: (650, 18),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "check",
                         position: (650, 21),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "x",
                       position: (650, 27),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "t2",
                       position: (650, 32),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "check",
                         position: (650, 35),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "x",
                       position: (650, 41),
                      },
                     ],
                    },
                   ],
                   position: (650, 29),
                  },
                  position: (650, 15),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "merge",
                    position: (651, 7),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "loc",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "defs",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: LetIn {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "defList",
                         position: (653, 11),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "map",
                        position: (653, 21),
                       },
                       arguments: [
                        Function {
                         argument: Some(
                          "d",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: PropertyAccess {
                          expression: Variable {
                           identifier: "d",
                           position: (653, 29),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "value",
                             position: (653, 31),
                            },
                           ],
                          },
                          default: None,
                         },
                         position: (653, 26),
                        },
                        Variable {
                         identifier: "defs",
                         position: (653, 38),
                        },
                       ],
                      },
                     ),
                    ],
                    target: IfThenElse {
                     predicate: FunctionApplication {
                      function: Variable {
                       identifier: "all",
                       position: (655, 16),
                      },
                      arguments: [
                       Function {
                        argument: Some(
                         "x",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "t1",
                           position: (655, 24),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "check",
                             position: (655, 27),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Variable {
                           identifier: "x",
                           position: (655, 33),
                          },
                         ],
                        },
                        position: (655, 21),
                       },
                       Variable {
                        identifier: "defList",
                        position: (655, 36),
                       },
                      ],
                     },
                     then: FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "t1",
                        position: (656, 21),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "merge",
                          position: (656, 24),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Variable {
                        identifier: "loc",
                        position: (656, 30),
                       },
                       Variable {
                        identifier: "defs",
                        position: (656, 34),
                       },
                      ],
                     },
                     else_: IfThenElse {
                      predicate: FunctionApplication {
                       function: Variable {
                        identifier: "all",
                        position: (657, 19),
                       },
                       arguments: [
                        Function {
                         argument: Some(
                          "x",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: FunctionApplication {
                          function: PropertyAccess {
                           expression: Variable {
                            identifier: "t2",
                            position: (657, 27),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "check",
                              position: (657, 30),
                             },
                            ],
                           },
                           default: None,
                          },
                          arguments: [
                           Variable {
                            identifier: "x",
                            position: (657, 36),
                           },
                          ],
                         },
                         position: (657, 24),
                        },
                        Variable {
                         identifier: "defList",
                         position: (657, 39),
                        },
                       ],
                      },
                      then: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "t2",
                         position: (658, 21),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "merge",
                           position: (658, 24),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "loc",
                         position: (658, 30),
                        },
                        Variable {
                         identifier: "defs",
                         position: (658, 34),
                        },
                       ],
                      },
                      else_: FunctionApplication {
                       function: Variable {
                        identifier: "mergeOneOption",
                        position: (659, 16),
                       },
                       arguments: [
                        Variable {
                         identifier: "loc",
                         position: (659, 31),
                        },
                        Variable {
                         identifier: "defs",
                         position: (659, 35),
                        },
                       ],
                      },
                      position: (657, 16),
                     },
                     position: (655, 11),
                    },
                    position: (652, 9),
                   },
                   position: (651, 20),
                  },
                  position: (651, 15),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "typeMerge",
                    position: (660, 7),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "f'",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: LetIn {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "mt1",
                        position: (661, 13),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "t1",
                        position: (661, 19),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "typeMerge",
                          position: (661, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       PropertyAccess {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "elemAt",
                          position: (661, 33),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "f'",
                            position: (661, 40),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "wrapped",
                              position: (661, 43),
                             },
                            ],
                           },
                           default: None,
                          },
                          Int {
                           value: 0,
                           position: (661, 51),
                          },
                         ],
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "functor",
                           position: (661, 54),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "mt2",
                        position: (662, 13),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "t2",
                        position: (662, 19),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "typeMerge",
                          position: (662, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       PropertyAccess {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "elemAt",
                          position: (662, 33),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "f'",
                            position: (662, 40),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "wrapped",
                              position: (662, 43),
                             },
                            ],
                           },
                           default: None,
                          },
                          Int {
                           value: 1,
                           position: (662, 51),
                          },
                         ],
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "functor",
                           position: (662, 54),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    ),
                   ],
                   target: IfThenElse {
                    predicate: BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: LogicalAnd,
                       operands: [
                        BinaryOperation {
                         operator: EqualTo,
                         operands: [
                          Variable {
                           identifier: "name",
                           position: (664, 16),
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "f'",
                            position: (664, 24),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "name",
                              position: (664, 27),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                         position: (664, 21),
                        },
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          Variable {
                           identifier: "mt1",
                           position: (664, 37),
                          },
                          Variable {
                           identifier: "null",
                           position: (664, 44),
                          },
                         ],
                         position: (664, 41),
                        },
                       ],
                       position: (664, 33),
                      },
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        Variable {
                         identifier: "mt2",
                         position: (664, 54),
                        },
                        Variable {
                         identifier: "null",
                         position: (664, 61),
                        },
                       ],
                       position: (664, 58),
                      },
                     ],
                     position: (664, 50),
                    },
                    then: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "functor",
                       position: (665, 17),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "type",
                         position: (665, 25),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "mt1",
                       position: (665, 30),
                      },
                      Variable {
                       identifier: "mt2",
                       position: (665, 34),
                      },
                     ],
                    },
                    else_: Variable {
                     identifier: "null",
                     position: (666, 17),
                    },
                    position: (664, 12),
                   },
                   position: (661, 9),
                  },
                  position: (660, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "functor",
                    position: (667, 7),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Update,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "defaultFunctor",
                     position: (667, 18),
                    },
                    arguments: [
                     Variable {
                      identifier: "name",
                      position: (667, 33),
                     },
                    ],
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "wrapped",
                         position: (667, 44),
                        },
                       ],
                      },
                      List {
                       elements: [
                        Variable {
                         identifier: "t1",
                         position: (667, 56),
                        },
                        Variable {
                         identifier: "t2",
                         position: (667, 59),
                        },
                       ],
                       position: (667, 54),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (667, 42),
                   },
                  ],
                  position: (667, 39),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "nestedTypes",
                    position: (668, 7),
                   },
                   Raw {
                    content: "left",
                    position: (668, 19),
                   },
                  ],
                 },
                 Variable {
                  identifier: "t1",
                  position: (668, 26),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "nestedTypes",
                    position: (669, 7),
                   },
                   Raw {
                    content: "right",
                    position: (669, 19),
                   },
                  ],
                 },
                 Variable {
                  identifier: "t2",
                  position: (669, 27),
                 },
                ),
               ],
               recursive: true,
               position: (647, 35),
              },
             ],
            },
            position: (647, 18),
           },
           position: (647, 14),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "oneOf",
             position: (673, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "ts",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "head'",
                 position: (675, 9),
                },
               ],
              },
              IfThenElse {
               predicate: BinaryOperation {
                operator: EqualTo,
                operands: [
                 Variable {
                  identifier: "ts",
                  position: (675, 20),
                 },
                 List {
                  elements: [],
                  position: (675, 26),
                 },
                ],
                position: (675, 23),
               },
               then: FunctionApplication {
                function: Variable {
                 identifier: "throw",
                 position: (675, 34),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "types.oneOf needs to get at least one type in its argument",
                    position: (675, 41),
                   },
                  ],
                 },
                ],
               },
               else_: FunctionApplication {
                function: Variable {
                 identifier: "head",
                 position: (675, 106),
                },
                arguments: [
                 Variable {
                  identifier: "ts",
                  position: (675, 111),
                 },
                ],
               },
               position: (675, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "tail'",
                 position: (676, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "tail",
                position: (676, 17),
               },
               arguments: [
                Variable {
                 identifier: "ts",
                 position: (676, 22),
                },
               ],
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "foldl'",
              position: (677, 10),
             },
             arguments: [
              Variable {
               identifier: "either",
               position: (677, 17),
              },
              Variable {
               identifier: "head'",
               position: (677, 24),
              },
              Variable {
               identifier: "tail'",
               position: (677, 30),
              },
             ],
            },
            position: (674, 7),
           },
           position: (673, 13),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "coercedTo",
             position: (681, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "coercedType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "coerceFunc",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Function {
             argument: Some(
              "finalType",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Assert {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (682, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "assertMsg",
                   position: (682, 18),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                BinaryOperation {
                 operator: EqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "coercedType",
                    position: (682, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "getSubModules",
                      position: (682, 41),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (682, 58),
                  },
                 ],
                 position: (682, 55),
                },
                String {
                 parts: [
                  Raw {
                   content: "coercedTo: coercedType must not have submodules (it’s a ",
                   position: (683, 10),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "coercedType",
                     position: (684, 11),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "description",
                       position: (684, 23),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: ")",
                   position: (684, 35),
                  },
                 ],
                },
               ],
              },
              target: FunctionApplication {
               function: Variable {
                identifier: "mkOptionType",
                position: (685, 7),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "name",
                      position: (686, 9),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "coercedTo",
                      position: (686, 17),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (687, 9),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "finalType",
                        position: (687, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (687, 36),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: " or ",
                      position: (687, 48),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "coercedType",
                        position: (687, 54),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "description",
                          position: (687, 66),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: " convertible to it",
                      position: (687, 78),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "check",
                      position: (688, 9),
                     },
                    ],
                   },
                   Function {
                    argument: Some(
                     "x",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: BinaryOperation {
                     operator: LogicalOr,
                     operands: [
                      BinaryOperation {
                       operator: LogicalAnd,
                       operands: [
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "coercedType",
                           position: (688, 21),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "check",
                             position: (688, 33),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Variable {
                           identifier: "x",
                           position: (688, 39),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "finalType",
                           position: (688, 44),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "check",
                             position: (688, 54),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          FunctionApplication {
                           function: Variable {
                            identifier: "coerceFunc",
                            position: (688, 61),
                           },
                           arguments: [
                            Variable {
                             identifier: "x",
                             position: (688, 72),
                            },
                           ],
                          },
                         ],
                        },
                       ],
                       position: (688, 41),
                      },
                      FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "finalType",
                         position: (688, 79),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "check",
                           position: (688, 89),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "x",
                         position: (688, 95),
                        },
                       ],
                      },
                     ],
                     position: (688, 76),
                    },
                    position: (688, 17),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "merge",
                      position: (689, 9),
                     },
                    ],
                   },
                   Function {
                    argument: Some(
                     "loc",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: Function {
                     argument: Some(
                      "defs",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: LetIn {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "coerceVal",
                           position: (691, 13),
                          },
                         ],
                        },
                        Function {
                         argument: Some(
                          "val",
                         ),
                         arguments: FunctionArguments {
                          arguments: [],
                          ellipsis: false,
                         },
                         definition: IfThenElse {
                          predicate: FunctionApplication {
                           function: PropertyAccess {
                            expression: Variable {
                             identifier: "coercedType",
                             position: (692, 18),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "check",
                               position: (692, 30),
                              },
                             ],
                            },
                            default: None,
                           },
                           arguments: [
                            Variable {
                             identifier: "val",
                             position: (692, 36),
                            },
                           ],
                          },
                          then: FunctionApplication {
                           function: Variable {
                            identifier: "coerceFunc",
                            position: (692, 45),
                           },
                           arguments: [
                            Variable {
                             identifier: "val",
                             position: (692, 56),
                            },
                           ],
                          },
                          else_: Variable {
                           identifier: "val",
                           position: (693, 20),
                          },
                          position: (692, 15),
                         },
                         position: (691, 25),
                        },
                       ),
                      ],
                      target: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "finalType",
                         position: (694, 14),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "merge",
                           position: (694, 24),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "loc",
                         position: (694, 30),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "map",
                          position: (694, 35),
                         },
                         arguments: [
                          Function {
                           argument: Some(
                            "def",
                           ),
                           arguments: FunctionArguments {
                            arguments: [],
                            ellipsis: false,
                           },
                           definition: BinaryOperation {
                            operator: Update,
                            operands: [
                             Variable {
                              identifier: "def",
                              position: (694, 45),
                             },
                             Map {
                              bindings: [
                               KeyValue(
                                AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "value",
                                   position: (694, 54),
                                  },
                                 ],
                                },
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "coerceVal",
                                  position: (694, 62),
                                 },
                                 arguments: [
                                  PropertyAccess {
                                   expression: Variable {
                                    identifier: "def",
                                    position: (694, 72),
                                   },
                                   attribute_path: AttributePath {
                                    attributes: [
                                     Raw {
                                      content: "value",
                                      position: (694, 76),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                 ],
                                },
                               ),
                              ],
                              recursive: false,
                              position: (694, 52),
                             },
                            ],
                            position: (694, 49),
                           },
                           position: (694, 40),
                          },
                          Variable {
                           identifier: "defs",
                           position: (694, 86),
                          },
                         ],
                        },
                       ],
                      },
                      position: (690, 11),
                     },
                     position: (689, 22),
                    },
                    position: (689, 17),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "emptyValue",
                      position: (695, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "finalType",
                     position: (695, 22),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "emptyValue",
                       position: (695, 32),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "getSubOptions",
                      position: (696, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "finalType",
                     position: (696, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "getSubOptions",
                       position: (696, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "getSubModules",
                      position: (697, 9),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "finalType",
                     position: (697, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "getSubModules",
                       position: (697, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "substSubModules",
                      position: (698, 9),
                     },
                    ],
                   },
                   Function {
                    argument: Some(
                     "m",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: FunctionApplication {
                     function: Variable {
                      identifier: "coercedTo",
                      position: (698, 30),
                     },
                     arguments: [
                      Variable {
                       identifier: "coercedType",
                       position: (698, 40),
                      },
                      Variable {
                       identifier: "coerceFunc",
                       position: (698, 52),
                      },
                      FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "finalType",
                         position: (698, 64),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "substSubModules",
                           position: (698, 74),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Variable {
                         identifier: "m",
                         position: (698, 90),
                        },
                       ],
                      },
                     ],
                    },
                    position: (698, 27),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "typeMerge",
                      position: (699, 9),
                     },
                    ],
                   },
                   Function {
                    argument: Some(
                     "t1",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: Function {
                     argument: Some(
                      "t2",
                     ),
                     arguments: FunctionArguments {
                      arguments: [],
                      ellipsis: false,
                     },
                     definition: Variable {
                      identifier: "null",
                      position: (699, 29),
                     },
                     position: (699, 25),
                    },
                    position: (699, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "functor",
                      position: (700, 9),
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: Update,
                    operands: [
                     FunctionApplication {
                      function: Variable {
                       identifier: "defaultFunctor",
                       position: (700, 20),
                      },
                      arguments: [
                       Variable {
                        identifier: "name",
                        position: (700, 35),
                       },
                      ],
                     },
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "wrapped",
                           position: (700, 46),
                          },
                         ],
                        },
                        Variable {
                         identifier: "finalType",
                         position: (700, 56),
                        },
                       ),
                      ],
                      recursive: false,
                      position: (700, 44),
                     },
                    ],
                    position: (700, 41),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "nestedTypes",
                      position: (701, 9),
                     },
                     Raw {
                      content: "coercedType",
                      position: (701, 21),
                     },
                    ],
                   },
                   Variable {
                    identifier: "coercedType",
                    position: (701, 35),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "nestedTypes",
                      position: (702, 9),
                     },
                     Raw {
                      content: "finalType",
                      position: (702, 21),
                     },
                    ],
                   },
                   Variable {
                    identifier: "finalType",
                    position: (702, 33),
                   },
                  ),
                 ],
                 recursive: true,
                 position: (685, 20),
                },
               ],
              },
              position: (682, 7),
             },
             position: (681, 42),
            },
            position: (681, 30),
           },
           position: (681, 17),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "optionSet",
             position: (708, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOptionType",
            position: (708, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (709, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "optionSet",
                  position: (709, 15),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (710, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "option set",
                  position: (710, 22),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "deprecationMessage",
                  position: (711, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Use `types.submodule' instead",
                  position: (711, 29),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (708, 30),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "addCheck",
             position: (714, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "elemType",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "check",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: BinaryOperation {
             operator: Update,
             operands: [
              Variable {
               identifier: "elemType",
               position: (714, 33),
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "check",
                    position: (714, 47),
                   },
                  ],
                 },
                 Function {
                  argument: Some(
                   "x",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: BinaryOperation {
                   operator: LogicalAnd,
                   operands: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "elemType",
                       position: (714, 58),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "check",
                         position: (714, 67),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "x",
                       position: (714, 73),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "check",
                      position: (714, 78),
                     },
                     arguments: [
                      Variable {
                       identifier: "x",
                       position: (714, 84),
                      },
                     ],
                    },
                   ],
                   position: (714, 75),
                  },
                  position: (714, 55),
                 },
                ),
               ],
               recursive: false,
               position: (714, 45),
              },
             ],
             position: (714, 42),
            },
            position: (714, 26),
           },
           position: (714, 16),
          },
         ),
        ],
        recursive: true,
        position: (163, 11),
       },
      ),
     ],
     recursive: true,
     position: (66, 1),
    },
   ),
  ],
  target: BinaryOperation {
   operator: Update,
   operands: [
    Variable {
     identifier: "outer_types",
     position: (719, 4),
    },
    PropertyAccess {
     expression: Variable {
      identifier: "outer_types",
      position: (719, 19),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "types",
        position: (719, 31),
       },
      ],
     },
     default: None,
    },
   ],
   position: (719, 16),
  },
  position: (5, 1),
 },
 position: (3, 1),
}