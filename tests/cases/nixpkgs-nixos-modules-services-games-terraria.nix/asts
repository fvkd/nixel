---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "options",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 11),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 18),
        },
        Raw {
         content: "terraria",
         position: (6, 27),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "opt",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "options",
       position: (7, 11),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 19),
        },
        Raw {
         content: "terraria",
         position: (7, 28),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "worldSizeMap",
        position: (8, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "small",
           position: (8, 20),
          },
         ],
        },
        to: Int {
         value: 1,
         position: (8, 28),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "medium",
           position: (8, 31),
          },
         ],
        },
        to: Int {
         value: 2,
         position: (8, 40),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "large",
           position: (8, 43),
          },
         ],
        },
        to: Int {
         value: 3,
         position: (8, 51),
        },
       },
      ],
      recursive: false,
      position: (8, 18),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "valFlag",
        position: (9, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "name",
      },
      definition: Function {
       argument: Simple {
        identifier: "val",
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "optionalString",
         position: (9, 24),
        },
        arguments: [
         Parentheses {
          expression: BinaryOperation {
           operator: NotEqualTo,
           operands: [
            Variable {
             identifier: "val",
             position: (9, 40),
            },
            Variable {
             identifier: "null",
             position: (9, 47),
            },
           ],
           position: (9, 44),
          },
          position: (9, 39),
         },
         String {
          parts: [
           Raw {
            content: "-",
            position: (9, 54),
           },
           Expression {
            expression: Variable {
             identifier: "name",
             position: (9, 57),
            },
           },
           Raw {
            content: " \"",
            position: (9, 62),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "escape",
              position: (9, 67),
             },
             arguments: [
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "\\",
                   position: (9, 76),
                  },
                 ],
                 position: (9, 75),
                },
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (9, 81),
                  },
                 ],
                 position: (9, 80),
                },
               ],
               position: (9, 74),
              },
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (9, 87),
                },
                arguments: [
                 Variable {
                  identifier: "val",
                  position: (9, 96),
                 },
                ],
               },
               position: (9, 86),
              },
             ],
            },
           },
           Raw {
            content: "\"",
            position: (9, 101),
           },
          ],
          position: (9, 53),
         },
        ],
       },
       position: (9, 19),
      },
      position: (9, 13),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "boolFlag",
        position: (10, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "name",
      },
      definition: Function {
       argument: Simple {
        identifier: "val",
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "optionalString",
         position: (10, 25),
        },
        arguments: [
         Variable {
          identifier: "val",
          position: (10, 40),
         },
         String {
          parts: [
           Raw {
            content: "-",
            position: (10, 45),
           },
           Expression {
            expression: Variable {
             identifier: "name",
             position: (10, 48),
            },
           },
          ],
          position: (10, 44),
         },
        ],
       },
       position: (10, 20),
      },
      position: (10, 14),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "flags",
        position: (11, 3),
       },
      ],
     },
     to: List {
      elements: [
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (12, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "port",
             position: (12, 15),
            },
           ],
           position: (12, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (12, 21),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "port",
              position: (12, 25),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (12, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (13, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "maxPlayers",
             position: (13, 15),
            },
           ],
           position: (13, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (13, 27),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "maxPlayers",
              position: (13, 31),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (13, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (14, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "password",
             position: (14, 15),
            },
           ],
           position: (14, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (14, 25),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "password",
              position: (14, 29),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (14, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (15, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "motd",
             position: (15, 15),
            },
           ],
           position: (15, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (15, 21),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "messageOfTheDay",
              position: (15, 25),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (15, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (16, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "world",
             position: (16, 15),
            },
           ],
           position: (16, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (16, 22),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "worldPath",
              position: (16, 26),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (16, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (17, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "autocreate",
             position: (17, 15),
            },
           ],
           position: (17, 14),
          },
          Parentheses {
           expression: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (17, 28),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "getAttr",
                position: (17, 37),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (17, 45),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "autoCreatedWorldSize",
                 position: (17, 49),
                },
               ],
              },
              default: None,
             },
             Variable {
              identifier: "worldSizeMap",
              position: (17, 70),
             },
            ],
           },
           position: (17, 27),
          },
         ],
        },
        position: (17, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "valFlag",
          position: (18, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "banlist",
             position: (18, 15),
            },
           ],
           position: (18, 14),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (18, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "banListPath",
              position: (18, 28),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (18, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "boolFlag",
          position: (19, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "secure",
             position: (19, 16),
            },
           ],
           position: (19, 15),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (19, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "secure",
              position: (19, 28),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (19, 5),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "boolFlag",
          position: (20, 6),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "noupnp",
             position: (20, 16),
            },
           ],
           position: (20, 15),
          },
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (20, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "noUPnP",
              position: (20, 28),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (20, 5),
       },
      ],
      position: (11, 11),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "stopScript",
        position: (22, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (22, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeScript",
          position: (22, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "terraria-stop",
          position: (22, 34),
         },
        ],
        position: (22, 33),
       },
       String {
        parts: [
         Raw {
          content: "#!",
          position: (23, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (23, 9),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "runtimeShell",
              position: (23, 14),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\nif ! [ -d \"/proc/$1\" ]; then\n  exit 0\nfi\n\n",
          position: (23, 27),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "getBin",
            position: (29, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (29, 14),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "tmux",
                position: (29, 19),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "/bin/tmux -S ",
          position: (29, 24),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (29, 39),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "dataDir",
              position: (29, 43),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/terraria.sock send-keys Enter exit Enter\n",
          position: (29, 51),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "getBin",
            position: (30, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (30, 14),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "coreutils",
                position: (30, 19),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "/bin/tail --pid=\"$1\" -f /dev/null\n",
          position: (30, 29),
         },
        ],
        position: (22, 49),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (34, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (35, 5),
           },
           Raw {
            content: "terraria",
            position: (35, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (36, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (36, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (37, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (37, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (37, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (38, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (39, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "If enabled, starts a Terraria server. The server can be connected to via <literal>tmux -S ",
                    position: (40, 1),
                   },
                   Raw {
                    content: "$",
                    position: (40, 101),
                   },
                   Raw {
                    content: "{config.",
                    position: (40, 104),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "opt",
                      position: (40, 114),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "dataDir",
                        position: (40, 118),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "}/terraria.sock attach</literal>\nfor administration by users who are a part of the <literal>terraria</literal> group (use <literal>C-b d</literal> shortcut to detach again).\n",
                    position: (40, 126),
                   },
                  ],
                  position: (39, 23),
                 },
                },
               ],
               recursive: false,
               position: (36, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "port",
               position: (45, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (45, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (46, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (46, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "port",
                     position: (46, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (47, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 7777,
                  position: (47, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (48, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Specifies the port to listen on.\n",
                    position: (49, 1),
                   },
                  ],
                  position: (48, 23),
                 },
                },
               ],
               recursive: false,
               position: (45, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "maxPlayers",
               position: (53, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (53, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (54, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "ints",
                     position: (54, 29),
                    },
                    Raw {
                     content: "u8",
                     position: (54, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 255,
                  position: (55, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Sets the max number of players (between 1 and 255).\n",
                    position: (57, 1),
                   },
                  ],
                  position: (56, 23),
                 },
                },
               ],
               recursive: false,
               position: (53, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "password",
               position: (61, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (61, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (62, 23),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (62, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (62, 36),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (62, 42),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (63, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Sets the server password. Leave <literal>null</literal> for no password.\n",
                    position: (65, 1),
                   },
                  ],
                  position: (64, 23),
                 },
                },
               ],
               recursive: false,
               position: (61, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "messageOfTheDay",
               position: (69, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (69, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (70, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (70, 23),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (70, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (70, 36),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (70, 42),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (71, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (71, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Set the server message of the day text.\n",
                    position: (73, 1),
                   },
                  ],
                  position: (72, 23),
                 },
                },
               ],
               recursive: false,
               position: (69, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "worldPath",
               position: (77, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (77, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (78, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (78, 23),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (78, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (78, 36),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (78, 42),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (79, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (79, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (80, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The path to the world file (<literal>.wld</literal>) which should be loaded.\nIf no world exists at this path, one will be created with the size\nspecified by <literal>autoCreatedWorldSize</literal>.\n",
                    position: (81, 1),
                   },
                  ],
                  position: (80, 23),
                 },
                },
               ],
               recursive: false,
               position: (77, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "autoCreatedWorldSize",
               position: (87, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (87, 30),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (88, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (88, 23),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (88, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "small",
                        position: (88, 37),
                       },
                      ],
                      position: (88, 36),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "medium",
                        position: (88, 45),
                       },
                      ],
                      position: (88, 44),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "large",
                        position: (88, 54),
                       },
                      ],
                      position: (88, 53),
                     },
                    ],
                    position: (88, 34),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (89, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "medium",
                    position: (89, 24),
                   },
                  ],
                  position: (89, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Specifies the size of the auto-created world if <literal>worldPath</literal> does not\npoint to an existing world.\n",
                    position: (91, 1),
                   },
                  ],
                  position: (90, 23),
                 },
                },
               ],
               recursive: false,
               position: (87, 39),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "banListPath",
               position: (96, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (96, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (97, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (97, 23),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (97, 29),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (97, 36),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (97, 42),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (98, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (98, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (99, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The path to the ban list.\n",
                    position: (100, 1),
                   },
                  ],
                  position: (99, 23),
                 },
                },
               ],
               recursive: false,
               position: (96, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "secure",
               position: (104, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (104, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (105, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (105, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (105, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (106, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (106, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (107, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Adds additional cheat protection to the server.",
                    position: (107, 24),
                   },
                  ],
                  position: (107, 23),
                 },
                },
               ],
               recursive: false,
               position: (104, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "noUPnP",
               position: (110, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (110, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (111, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (111, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (111, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (112, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (112, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (113, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Disables automatic Universal Plug and Play.",
                    position: (113, 24),
                   },
                  ],
                  position: (113, 23),
                 },
                },
               ],
               recursive: false,
               position: (110, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "openFirewall",
               position: (116, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (116, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (117, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (117, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (117, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (118, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (118, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (119, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Wheter to open ports in the firewall",
                    position: (119, 24),
                   },
                  ],
                  position: (119, 23),
                 },
                },
               ],
               recursive: false,
               position: (116, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "dataDir",
               position: (122, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (122, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (123, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (123, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (123, 29),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (124, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/var/lib/terraria",
                    position: (124, 24),
                   },
                  ],
                  position: (124, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (125, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/srv/terraria",
                    position: (125, 24),
                   },
                  ],
                  position: (125, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (126, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Path to variable state data directory for terraria.",
                    position: (126, 24),
                   },
                  ],
                  position: (126, 23),
                 },
                },
               ],
               recursive: false,
               position: (122, 26),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (35, 25),
         },
        },
       ],
       recursive: false,
       position: (34, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (131, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (131, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (131, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (131, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (132, 5),
             },
             Raw {
              content: "users",
              position: (132, 11),
             },
             Raw {
              content: "terraria",
              position: (132, 17),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (133, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Terraria server service user",
                 position: (133, 22),
                },
               ],
               position: (133, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "home",
                 position: (134, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (134, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "dataDir",
                  position: (134, 25),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "createHome",
                 position: (135, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (135, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "uid",
                 position: (136, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (136, 21),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "ids",
                  position: (136, 28),
                 },
                 Raw {
                  content: "uids",
                  position: (136, 32),
                 },
                 Raw {
                  content: "terraria",
                  position: (136, 37),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (132, 28),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (139, 5),
             },
             Raw {
              content: "groups",
              position: (139, 11),
             },
             Raw {
              content: "terraria",
              position: (139, 18),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "gid",
                 position: (140, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (140, 13),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "ids",
                  position: (140, 20),
                 },
                 Raw {
                  content: "gids",
                  position: (140, 24),
                 },
                 Raw {
                  content: "terraria",
                  position: (140, 29),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "members",
                 position: (141, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "terraria",
                   position: (141, 20),
                  },
                 ],
                 position: (141, 19),
                },
               ],
               position: (141, 17),
              },
             },
            ],
            recursive: false,
            position: (139, 29),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (144, 5),
             },
             Raw {
              content: "services",
              position: (144, 13),
             },
             Raw {
              content: "terraria",
              position: (144, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (145, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Terraria Server Service",
                 position: (145, 24),
                },
               ],
               position: (145, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (146, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (146, 26),
                  },
                 ],
                 position: (146, 25),
                },
               ],
               position: (146, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (147, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (147, 26),
                  },
                 ],
                 position: (147, 25),
                },
               ],
               position: (147, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (149, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (150, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "terraria",
                    position: (150, 20),
                   },
                  ],
                  position: (150, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Type",
                    position: (151, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "forking",
                    position: (151, 17),
                   },
                  ],
                  position: (151, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "GuessMainPID",
                    position: (152, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (152, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (153, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "getBin",
                      position: (153, 24),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (153, 31),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "tmux",
                          position: (153, 36),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "/bin/tmux -S ",
                    position: (153, 41),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (153, 56),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "dataDir",
                        position: (153, 60),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/terraria.sock new -d ",
                    position: (153, 68),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (153, 92),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "terraria-server",
                        position: (153, 97),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/TerrariaServer ",
                    position: (153, 113),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "concatStringsSep",
                      position: (153, 135),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (153, 153),
                        },
                       ],
                       position: (153, 152),
                      },
                      Variable {
                       identifier: "flags",
                       position: (153, 156),
                      },
                     ],
                    },
                   },
                  ],
                  position: (153, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStop",
                    position: (154, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "stopScript",
                     position: (154, 23),
                    },
                   },
                   Raw {
                    content: " $MAINPID",
                    position: (154, 34),
                   },
                  ],
                  position: (154, 20),
                 },
                },
               ],
               recursive: false,
               position: (149, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "postStart",
                 position: (157, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "",
                 position: (158, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (158, 11),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "coreutils",
                     position: (158, 16),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/chmod 660 ",
                 position: (158, 26),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (158, 43),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dataDir",
                     position: (158, 47),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/terraria.sock\n",
                 position: (158, 55),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (159, 11),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "coreutils",
                     position: (159, 16),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/chgrp terraria ",
                 position: (159, 26),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (159, 48),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dataDir",
                     position: (159, 52),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/terraria.sock\n",
                 position: (159, 60),
                },
               ],
               position: (157, 19),
              },
             },
            ],
            recursive: false,
            position: (144, 33),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "networking",
              position: (163, 5),
             },
             Raw {
              content: "firewall",
              position: (163, 16),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (163, 27),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (163, 32),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "openFirewall",
                 position: (163, 36),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "allowedTCPPorts",
                   position: (164, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (164, 27),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "port",
                      position: (164, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (164, 25),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "allowedUDPPorts",
                   position: (165, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (165, 27),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "port",
                      position: (165, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (165, 25),
                },
               },
              ],
              recursive: false,
              position: (163, 49),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (131, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (33, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}