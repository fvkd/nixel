---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "neovim",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "runtime'",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "filter",
       position: (8, 14),
      },
      arguments: [
       Parentheses {
        expression: Function {
         argument: Simple {
          identifier: "f",
         },
         definition: PropertyAccess {
          expression: Variable {
           identifier: "f",
           position: (8, 25),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "enable",
             position: (8, 27),
            },
           ],
          },
          default: None,
         },
         position: (8, 22),
        },
        position: (8, 21),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "attrValues",
          position: (8, 36),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (8, 47),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "runtime",
              position: (8, 51),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (8, 35),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "runtime",
        position: (10, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (10, 13),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "linkFarm",
          position: (10, 18),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "neovim-runtime",
          position: (10, 28),
         },
        ],
        position: (10, 27),
       },
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "map",
          position: (10, 45),
         },
         arguments: [
          Parentheses {
           expression: Function {
            argument: Simple {
             identifier: "x",
            },
            definition: Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "name",
                  position: (10, 55),
                 },
                ],
               },
               to: PropertyAccess {
                expression: Variable {
                 identifier: "x",
                 position: (10, 62),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "target",
                   position: (10, 64),
                  },
                 ],
                },
                default: None,
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "path",
                  position: (10, 72),
                 },
                ],
               },
               to: PropertyAccess {
                expression: Variable {
                 identifier: "x",
                 position: (10, 79),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "source",
                   position: (10, 81),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             recursive: false,
             position: (10, 53),
            },
            position: (10, 50),
           },
           position: (10, 49),
          },
          Variable {
           identifier: "runtime'",
           position: (10, 92),
          },
         ],
        },
        position: (10, 44),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (13, 3),
        },
        Raw {
         content: "programs",
         position: (13, 11),
        },
        Raw {
         content: "neovim",
         position: (13, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (14, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (14, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Neovim",
              position: (14, 30),
             },
            ],
            position: (14, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "defaultEditor",
            position: (16, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (16, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (17, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (17, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (17, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (18, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (18, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (19, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "When enabled, installs neovim and configures neovim to be the default editor\nusing the EDITOR environment variable.\n",
                 position: (20, 1),
                },
               ],
               position: (19, 21),
              },
             },
            ],
            recursive: false,
            position: (16, 30),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "viAlias",
            position: (25, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (25, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (26, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (26, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (26, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (27, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (27, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (28, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Symlink <command>vi</command> to <command>nvim</command> binary.\n",
                 position: (29, 1),
                },
               ],
               position: (28, 21),
              },
             },
            ],
            recursive: false,
            position: (25, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "vimAlias",
            position: (33, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (33, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (34, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (34, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (34, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (35, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (35, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (36, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Symlink <command>vim</command> to <command>nvim</command> binary.\n",
                 position: (37, 1),
                },
               ],
               position: (36, 21),
              },
             },
            ],
            recursive: false,
            position: (33, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "withRuby",
            position: (41, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (41, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (42, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (42, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (42, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (43, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (43, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (44, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Enable Ruby provider.",
                 position: (44, 22),
                },
               ],
               position: (44, 21),
              },
             },
            ],
            recursive: false,
            position: (41, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "withPython3",
            position: (47, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (47, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (48, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (48, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (48, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (49, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (49, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (50, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Enable Python 3 provider.",
                 position: (50, 22),
                },
               ],
               position: (50, 21),
              },
             },
            ],
            recursive: false,
            position: (47, 28),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "withNodeJs",
            position: (53, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (53, 18),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (54, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (54, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (54, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (55, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (55, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (56, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Enable Node provider.",
                 position: (56, 22),
                },
               ],
               position: (56, 21),
              },
             },
            ],
            recursive: false,
            position: (53, 27),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "configure",
            position: (59, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (59, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (60, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (60, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "attrs",
                  position: (60, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (61, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (61, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (62, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (62, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  customRC = ",
                   position: (63, 1),
                  },
                  Raw {
                   content: "''",
                   position: (64, 22),
                  },
                  Raw {
                   content: "\n    \" here your custom configuration goes!\n  ",
                   position: (64, 25),
                  },
                  Raw {
                   content: "''",
                   position: (66, 11),
                  },
                  Raw {
                   content: ";\n  packages.myVimPackage = with pkgs.vimPlugins; {\n    # loaded on launch\n    start = [ fugitive ];\n    # manually loadable by calling `:packadd $plugin-name`\n    opt = [ ];\n  };\n}\n",
                   position: (66, 14),
                  },
                 ],
                 position: (62, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (75, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Generate your init file from your list of plugins and custom commands.\nNeovim will then be wrapped to load <command>nvim -u /nix/store/<replaceable>hash</replaceable>-vimrc</command>\n",
                 position: (76, 1),
                },
               ],
               position: (75, 21),
              },
             },
            ],
            recursive: false,
            position: (59, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "package",
            position: (81, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (81, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (82, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (82, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (82, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (83, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (83, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "neovim-unwrapped",
                  position: (83, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (84, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (84, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.neovim-unwrapped",
                   position: (84, 40),
                  },
                 ],
                 position: (84, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (85, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The package to use for the neovim binary.",
                 position: (85, 22),
                },
               ],
               position: (85, 21),
              },
             },
            ],
            recursive: false,
            position: (81, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "finalPackage",
            position: (88, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (88, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (89, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (89, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (89, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "visible",
                 position: (90, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (90, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "readOnly",
                 position: (91, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (91, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (92, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Resulting customized neovim package.",
                 position: (92, 22),
                },
               ],
               position: (92, 21),
              },
             },
            ],
            recursive: false,
            position: (88, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "runtime",
            position: (95, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (95, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (96, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (96, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (97, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (97, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{ \"ftplugin/c.vim\".text = \"setlocal omnifunc=v:lua.vim.lsp.omnifunc\"; }\n",
                   position: (98, 1),
                  },
                 ],
                 position: (97, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (100, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Set of files that have to be linked in <filename>runtime</filename>.\n",
                 position: (101, 1),
                },
               ],
               position: (100, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (104, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (104, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (104, 26),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "submodule",
                    position: (104, 35),
                   },
                   arguments: [
                    Parentheses {
                     expression: Function {
                      argument: Destructured {
                       identifier: None,
                       arguments: [
                        DestructuredArgument {
                         identifier: "name",
                         default: None,
                        },
                        DestructuredArgument {
                         identifier: "config",
                         default: None,
                        },
                       ],
                       ellipsis: true,
                      },
                      definition: Map {
                       bindings: [
                        Binding {
                         from: AttributePath {
                          parts: [
                           Raw {
                            content: "options",
                            position: (106, 11),
                           },
                          ],
                         },
                         to: Map {
                          bindings: [
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "enable",
                               position: (108, 13),
                              },
                             ],
                            },
                            to: FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (108, 22),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "type",
                                    position: (109, 15),
                                   },
                                  ],
                                 },
                                 to: PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (109, 22),
                                  },
                                  attribute_path: AttributePath {
                                   parts: [
                                    Raw {
                                     content: "bool",
                                     position: (109, 28),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "default",
                                    position: (110, 15),
                                   },
                                  ],
                                 },
                                 to: Variable {
                                  identifier: "true",
                                  position: (110, 25),
                                 },
                                },
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "description",
                                    position: (111, 15),
                                   },
                                  ],
                                 },
                                 to: String {
                                  parts: [
                                   Raw {
                                    content: "Whether this /etc file should be generated.  This\noption allows specific /etc files to be disabled.\n",
                                    position: (112, 1),
                                   },
                                  ],
                                  position: (111, 29),
                                 },
                                },
                               ],
                               recursive: false,
                               position: (108, 31),
                              },
                             ],
                            },
                           },
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "target",
                               position: (117, 13),
                              },
                             ],
                            },
                            to: FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (117, 22),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "type",
                                    position: (118, 15),
                                   },
                                  ],
                                 },
                                 to: PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (118, 22),
                                  },
                                  attribute_path: AttributePath {
                                   parts: [
                                    Raw {
                                     content: "str",
                                     position: (118, 28),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "description",
                                    position: (119, 15),
                                   },
                                  ],
                                 },
                                 to: String {
                                  parts: [
                                   Raw {
                                    content: "Name of symlink.  Defaults to the attribute\nname.\n",
                                    position: (120, 1),
                                   },
                                  ],
                                  position: (119, 29),
                                 },
                                },
                               ],
                               recursive: false,
                               position: (117, 31),
                              },
                             ],
                            },
                           },
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "text",
                               position: (125, 13),
                              },
                             ],
                            },
                            to: FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (125, 20),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "default",
                                    position: (126, 15),
                                   },
                                  ],
                                 },
                                 to: Variable {
                                  identifier: "null",
                                  position: (126, 25),
                                 },
                                },
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "type",
                                    position: (127, 15),
                                   },
                                  ],
                                 },
                                 to: FunctionApplication {
                                  function: PropertyAccess {
                                   expression: Variable {
                                    identifier: "types",
                                    position: (127, 22),
                                   },
                                   attribute_path: AttributePath {
                                    parts: [
                                     Raw {
                                      content: "nullOr",
                                      position: (127, 28),
                                     },
                                    ],
                                   },
                                   default: None,
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "types",
                                     position: (127, 35),
                                    },
                                    attribute_path: AttributePath {
                                     parts: [
                                      Raw {
                                       content: "lines",
                                       position: (127, 41),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                },
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "description",
                                    position: (128, 15),
                                   },
                                  ],
                                 },
                                 to: String {
                                  parts: [
                                   Raw {
                                    content: "Text of the file.",
                                    position: (128, 30),
                                   },
                                  ],
                                  position: (128, 29),
                                 },
                                },
                               ],
                               recursive: false,
                               position: (125, 29),
                              },
                             ],
                            },
                           },
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "source",
                               position: (131, 13),
                              },
                             ],
                            },
                            to: FunctionApplication {
                             function: Variable {
                              identifier: "mkOption",
                              position: (131, 22),
                             },
                             arguments: [
                              Map {
                               bindings: [
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "type",
                                    position: (132, 15),
                                   },
                                  ],
                                 },
                                 to: PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (132, 22),
                                  },
                                  attribute_path: AttributePath {
                                   parts: [
                                    Raw {
                                     content: "path",
                                     position: (132, 28),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Binding {
                                 from: AttributePath {
                                  parts: [
                                   Raw {
                                    content: "description",
                                    position: (133, 15),
                                   },
                                  ],
                                 },
                                 to: String {
                                  parts: [
                                   Raw {
                                    content: "Path of the source file.",
                                    position: (133, 30),
                                   },
                                  ],
                                  position: (133, 29),
                                 },
                                },
                               ],
                               recursive: false,
                               position: (131, 31),
                              },
                             ],
                            },
                           },
                          ],
                          recursive: false,
                          position: (106, 21),
                         },
                        },
                        Binding {
                         from: AttributePath {
                          parts: [
                           Raw {
                            content: "config",
                            position: (138, 11),
                           },
                          ],
                         },
                         to: Map {
                          bindings: [
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "target",
                               position: (139, 13),
                              },
                             ],
                            },
                            to: FunctionApplication {
                             function: Variable {
                              identifier: "mkDefault",
                              position: (139, 22),
                             },
                             arguments: [
                              Variable {
                               identifier: "name",
                               position: (139, 32),
                              },
                             ],
                            },
                           },
                           Binding {
                            from: AttributePath {
                             parts: [
                              Raw {
                               content: "source",
                               position: (140, 13),
                              },
                             ],
                            },
                            to: FunctionApplication {
                             function: Variable {
                              identifier: "mkIf",
                              position: (140, 22),
                             },
                             arguments: [
                              Parentheses {
                               expression: BinaryOperation {
                                operator: NotEqualTo,
                                operands: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (140, 28),
                                  },
                                  attribute_path: AttributePath {
                                   parts: [
                                    Raw {
                                     content: "text",
                                     position: (140, 35),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                 Variable {
                                  identifier: "null",
                                  position: (140, 43),
                                 },
                                ],
                                position: (140, 40),
                               },
                               position: (140, 27),
                              },
                              Parentheses {
                               expression: LetIn {
                                bindings: [
                                 Binding {
                                  from: AttributePath {
                                   parts: [
                                    Raw {
                                     content: "name'",
                                     position: (141, 19),
                                    },
                                   ],
                                  },
                                  to: BinaryOperation {
                                   operator: Addition,
                                   operands: [
                                    String {
                                     parts: [
                                      Raw {
                                       content: "neovim-runtime",
                                       position: (141, 28),
                                      },
                                     ],
                                     position: (141, 27),
                                    },
                                    FunctionApplication {
                                     function: Variable {
                                      identifier: "baseNameOf",
                                      position: (141, 46),
                                     },
                                     arguments: [
                                      Variable {
                                       identifier: "name",
                                       position: (141, 57),
                                      },
                                     ],
                                    },
                                   ],
                                   position: (141, 44),
                                  },
                                 },
                                ],
                                target: FunctionApplication {
                                 function: Variable {
                                  identifier: "mkDefault",
                                  position: (142, 18),
                                 },
                                 arguments: [
                                  Parentheses {
                                   expression: FunctionApplication {
                                    function: PropertyAccess {
                                     expression: Variable {
                                      identifier: "pkgs",
                                      position: (142, 29),
                                     },
                                     attribute_path: AttributePath {
                                      parts: [
                                       Raw {
                                        content: "writeText",
                                        position: (142, 34),
                                       },
                                      ],
                                     },
                                     default: None,
                                    },
                                    arguments: [
                                     Variable {
                                      identifier: "name'",
                                      position: (142, 44),
                                     },
                                     PropertyAccess {
                                      expression: Variable {
                                       identifier: "config",
                                       position: (142, 50),
                                      },
                                      attribute_path: AttributePath {
                                       parts: [
                                        Raw {
                                         content: "text",
                                         position: (142, 57),
                                        },
                                       ],
                                      },
                                      default: None,
                                     },
                                    ],
                                   },
                                   position: (142, 28),
                                  },
                                 ],
                                },
                                position: (141, 15),
                               },
                               position: (140, 49),
                              },
                             ],
                            },
                           },
                          ],
                          recursive: false,
                          position: (138, 20),
                         },
                        },
                       ],
                       recursive: false,
                       position: (106, 9),
                      },
                      position: (105, 9),
                     },
                     position: (104, 45),
                    },
                   ],
                  },
                  position: (104, 34),
                 },
                ],
               },
               position: (104, 14),
              },
             },
            ],
            recursive: false,
            position: (95, 24),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (13, 29),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (150, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (150, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (150, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (150, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (151, 5),
             },
             Raw {
              content: "systemPackages",
              position: (151, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (152, 7),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "finalPackage",
                 position: (152, 11),
                },
               ],
              },
              default: None,
             },
            ],
            position: (151, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (154, 5),
             },
             Raw {
              content: "variables",
              position: (154, 17),
             },
             Raw {
              content: "EDITOR",
              position: (154, 27),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (154, 36),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (154, 41),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "defaultEditor",
                 position: (154, 45),
                },
               ],
              },
              default: None,
             },
             Parentheses {
              expression: FunctionApplication {
               function: Variable {
                identifier: "mkOverride",
                position: (154, 60),
               },
               arguments: [
                Int {
                 value: 900,
                 position: (154, 71),
                },
                String {
                 parts: [
                  Raw {
                   content: "nvim",
                   position: (154, 76),
                  },
                 ],
                 position: (154, 75),
                },
               ],
              },
              position: (154, 59),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (156, 5),
             },
             Raw {
              content: "neovim",
              position: (156, 14),
             },
             Raw {
              content: "finalPackage",
              position: (156, 21),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (156, 36),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "wrapNeovim",
                position: (156, 41),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (156, 52),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (156, 56),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Inherit {
                from: Some(
                 Variable {
                  identifier: "cfg",
                  position: (157, 16),
                 },
                ),
                attributes: [
                 Raw {
                  content: "viAlias",
                  position: (157, 21),
                 },
                 Raw {
                  content: "vimAlias",
                  position: (157, 29),
                 },
                 Raw {
                  content: "withPython3",
                  position: (157, 38),
                 },
                 Raw {
                  content: "withNodeJs",
                  position: (157, 50),
                 },
                 Raw {
                  content: "withRuby",
                  position: (157, 61),
                 },
                ],
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "configure",
                   position: (158, 7),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Update,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (158, 19),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "configure",
                      position: (158, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "customRC",
                        position: (160, 9),
                       },
                      ],
                     },
                     to: BinaryOperation {
                      operator: Addition,
                      operands: [
                       Parentheses {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (160, 21),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "configure",
                            position: (160, 25),
                           },
                           Raw {
                            content: "customRC",
                            position: (160, 35),
                           },
                          ],
                         },
                         default: Some(
                          String {
                           parts: [],
                           position: (160, 47),
                          },
                         ),
                        },
                        position: (160, 20),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "set runtimepath^=",
                          position: (161, 1),
                         },
                         Interpolation {
                          expression: Variable {
                           identifier: "runtime",
                           position: (161, 30),
                          },
                         },
                         Raw {
                          content: "/etc\n",
                          position: (161, 38),
                         },
                        ],
                        position: (160, 53),
                       },
                      ],
                      position: (160, 51),
                     },
                    },
                   ],
                   recursive: false,
                   position: (158, 36),
                  },
                 ],
                 position: (158, 33),
                },
               },
              ],
              recursive: false,
              position: (156, 64),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (150, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (12, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}