---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (6, 6),
  },
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "imports",
        position: (9, 3),
       },
      ],
     },
     to: List {
      elements: [
       Path {
        parts: [
         Raw {
          content: "./installation-cd-base.nix",
          position: (9, 15),
         },
        ],
        position: (9, 15),
       },
      ],
      position: (9, 13),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "security",
        position: (17, 3),
       },
       Raw {
        content: "polkit",
        position: (17, 12),
       },
       Raw {
        content: "extraConfig",
        position: (17, 19),
       },
      ],
     },
     to: String {
      parts: [
       Raw {
        content: "polkit.addRule(function(action, subject) {\n  if (subject.isInGroup(\"wheel\")) {\n    return polkit.Result.YES;\n  }\n});\n",
        position: (18, 1),
       },
      ],
      position: (17, 33),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "services",
        position: (25, 3),
       },
       Raw {
        content: "xserver",
        position: (25, 12),
       },
       Raw {
        content: "enable",
        position: (25, 20),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (25, 29),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "networking",
        position: (28, 3),
       },
       Raw {
        content: "networkmanager",
        position: (28, 14),
       },
       Raw {
        content: "enable",
        position: (28, 29),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (28, 38),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "networking",
        position: (29, 3),
       },
       Raw {
        content: "wireless",
        position: (29, 14),
       },
       Raw {
        content: "enable",
        position: (29, 23),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkForce",
       position: (29, 32),
      },
      arguments: [
       Variable {
        identifier: "false",
        position: (29, 40),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "powerManagement",
        position: (33, 3),
       },
       Raw {
        content: "enable",
        position: (33, 19),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (33, 28),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "hardware",
        position: (36, 3),
       },
       Raw {
        content: "pulseaudio",
        position: (36, 12),
       },
       Raw {
        content: "enable",
        position: (36, 23),
       },
      ],
     },
     to: Variable {
      identifier: "true",
      position: (36, 32),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "environment",
        position: (38, 3),
       },
       Raw {
        content: "systemPackages",
        position: (38, 15),
       },
      ],
     },
     to: List {
      elements: [
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (40, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "gparted",
           position: (40, 10),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (43, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "vim",
           position: (43, 10),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (44, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "bvi",
           position: (44, 10),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (45, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "joe",
           position: (45, 10),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (48, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "git",
           position: (48, 10),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (51, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "firefox",
           position: (51, 10),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (53, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "glxinfo",
           position: (53, 10),
          },
         ],
        },
        default: None,
       },
      ],
      position: (38, 32),
     },
    },
   ],
   recursive: false,
   position: (8, 1),
  },
  position: (6, 1),
 },
 position: (4, 1),
}