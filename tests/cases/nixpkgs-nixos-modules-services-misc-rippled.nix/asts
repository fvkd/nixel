---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "options",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "rippled",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "opt",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "options",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 17),
        },
        Raw {
         content: "rippled",
         position: (7, 26),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "b2i",
        position: (9, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "val",
      },
      definition: IfThenElse {
       predicate: Variable {
        identifier: "val",
        position: (9, 17),
       },
       then: String {
        parts: [
         Raw {
          content: "1",
          position: (9, 27),
         },
        ],
        position: (9, 26),
       },
       else_: String {
        parts: [
         Raw {
          content: "0",
          position: (9, 36),
         },
        ],
        position: (9, 35),
       },
       position: (9, 14),
      },
      position: (9, 9),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "dbCfg",
        position: (11, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "db",
      },
      definition: String {
       parts: [
        Raw {
         content: "type=",
         position: (12, 1),
        },
        Interpolation {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "db",
           position: (12, 12),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "type",
             position: (12, 15),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "\npath=",
         position: (12, 20),
        },
        Interpolation {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "db",
           position: (13, 12),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "path",
             position: (13, 15),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "\n",
         position: (13, 20),
        },
        Interpolation {
         expression: FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (14, 7),
          },
          arguments: [
           Parentheses {
            expression: BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "db",
                position: (14, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "compression",
                  position: (14, 26),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (14, 41),
              },
             ],
             position: (14, 38),
            },
            position: (14, 22),
           },
           Parentheses {
            expression: String {
             parts: [
              Raw {
               content: "compression=",
               position: (14, 49),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "b2i",
                 position: (14, 63),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "db",
                   position: (14, 67),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "compression",
                     position: (14, 70),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
             ],
             position: (14, 48),
            },
            position: (14, 47),
           },
          ],
         },
        },
        Raw {
         content: "\n",
         position: (14, 86),
        },
        Interpolation {
         expression: FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (15, 7),
          },
          arguments: [
           Parentheses {
            expression: BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "db",
                position: (15, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "onlineDelete",
                  position: (15, 26),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (15, 42),
              },
             ],
             position: (15, 39),
            },
            position: (15, 22),
           },
           Parentheses {
            expression: String {
             parts: [
              Raw {
               content: "online_delete=",
               position: (15, 50),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (15, 66),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "db",
                   position: (15, 75),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "onlineDelete",
                     position: (15, 78),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
             ],
             position: (15, 49),
            },
            position: (15, 48),
           },
          ],
         },
        },
        Raw {
         content: "\n",
         position: (15, 94),
        },
        Interpolation {
         expression: FunctionApplication {
          function: Variable {
           identifier: "optionalString",
           position: (16, 7),
          },
          arguments: [
           Parentheses {
            expression: BinaryOperation {
             operator: NotEqualTo,
             operands: [
              PropertyAccess {
               expression: Variable {
                identifier: "db",
                position: (16, 23),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "advisoryDelete",
                  position: (16, 26),
                 },
                ],
               },
               default: None,
              },
              Variable {
               identifier: "null",
               position: (16, 44),
              },
             ],
             position: (16, 41),
            },
            position: (16, 22),
           },
           Parentheses {
            expression: String {
             parts: [
              Raw {
               content: "advisory_delete=",
               position: (16, 52),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "b2i",
                 position: (16, 70),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "db",
                   position: (16, 74),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "advisoryDelete",
                     position: (16, 77),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
             ],
             position: (16, 51),
            },
            position: (16, 50),
           },
          ],
         },
        },
        Raw {
         content: "\n",
         position: (16, 95),
        },
        Interpolation {
         expression: PropertyAccess {
          expression: Variable {
           identifier: "db",
           position: (17, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "extraOpts",
             position: (17, 10),
            },
           ],
          },
          default: None,
         },
        },
        Raw {
         content: "\n",
         position: (17, 20),
        },
       ],
       position: (11, 15),
      },
      position: (11, 11),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "rippledCfg",
        position: (20, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Addition,
      operands: [
       String {
        parts: [
         Raw {
          content: "[server]\n",
          position: (21, 1),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatMapStringsSep",
            position: (22, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (22, 28),
              },
             ],
             position: (22, 27),
            },
            Parentheses {
             expression: Function {
              argument: Simple {
               identifier: "n",
              },
              definition: String {
               parts: [
                Raw {
                 content: "port_",
                 position: (22, 37),
                },
                Interpolation {
                 expression: Variable {
                  identifier: "n",
                  position: (22, 44),
                 },
                },
               ],
               position: (22, 36),
              },
              position: (22, 33),
             },
             position: (22, 32),
            },
            Parentheses {
             expression: FunctionApplication {
              function: Variable {
               identifier: "attrNames",
               position: (22, 50),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (22, 60),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "ports",
                   position: (22, 64),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
             position: (22, 49),
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (22, 71),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatMapStrings",
            position: (24, 7),
           },
           arguments: [
            Parentheses {
             expression: Function {
              argument: Simple {
               identifier: "p",
              },
              definition: String {
               parts: [
                Raw {
                 content: "[port_",
                 position: (25, 1),
                },
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "p",
                   position: (25, 13),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "name",
                     position: (25, 15),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "]\nip=",
                 position: (25, 20),
                },
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "p",
                   position: (26, 10),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "ip",
                     position: (26, 12),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\nport=",
                 position: (26, 15),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (27, 12),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "p",
                     position: (27, 21),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "port",
                       position: (27, 23),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "\nprotocol=",
                 position: (27, 28),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (28, 16),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                      position: (28, 34),
                     },
                    ],
                    position: (28, 33),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "p",
                     position: (28, 37),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "protocol",
                       position: (28, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (28, 48),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (29, 7),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (29, 23),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "user",
                          position: (29, 25),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [],
                       position: (29, 33),
                      },
                     ],
                     position: (29, 30),
                    },
                    position: (29, 22),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "user=",
                      position: (29, 38),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (29, 45),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "user",
                          position: (29, 47),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                    position: (29, 37),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (29, 54),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (30, 7),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (30, 23),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "password",
                          position: (30, 25),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [],
                       position: (30, 37),
                      },
                     ],
                     position: (30, 34),
                    },
                    position: (30, 22),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "user=",
                      position: (30, 42),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (30, 49),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "password",
                          position: (30, 51),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                    position: (30, 41),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\nadmin=",
                 position: (30, 62),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (31, 13),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: ",",
                      position: (31, 31),
                     },
                    ],
                    position: (31, 30),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "p",
                     position: (31, 34),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "admin",
                       position: (31, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (31, 42),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (32, 7),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (32, 23),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ssl",
                          position: (32, 25),
                         },
                         Raw {
                          content: "key",
                          position: (32, 29),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (32, 36),
                      },
                     ],
                     position: (32, 33),
                    },
                    position: (32, 22),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "ssl_key=",
                      position: (32, 43),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (32, 53),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ssl",
                          position: (32, 55),
                         },
                         Raw {
                          content: "key",
                          position: (32, 59),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                    position: (32, 42),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (32, 65),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (33, 7),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (33, 23),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ssl",
                          position: (33, 25),
                         },
                         Raw {
                          content: "cert",
                          position: (33, 29),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (33, 37),
                      },
                     ],
                     position: (33, 34),
                    },
                    position: (33, 22),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "ssl_cert=",
                      position: (33, 44),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (33, 55),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ssl",
                          position: (33, 57),
                         },
                         Raw {
                          content: "cert",
                          position: (33, 61),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                    position: (33, 43),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (33, 68),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (34, 7),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: NotEqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (34, 23),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ssl",
                          position: (34, 25),
                         },
                         Raw {
                          content: "chain",
                          position: (34, 29),
                         },
                        ],
                       },
                       default: None,
                      },
                      Variable {
                       identifier: "null",
                       position: (34, 38),
                      },
                     ],
                     position: (34, 35),
                    },
                    position: (34, 22),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "ssl_chain=",
                      position: (34, 45),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "p",
                        position: (34, 57),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ssl",
                          position: (34, 59),
                         },
                         Raw {
                          content: "chain",
                          position: (34, 63),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                    position: (34, 44),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (34, 71),
                },
               ],
               position: (24, 28),
              },
              position: (24, 25),
             },
             position: (24, 24),
            },
            Parentheses {
             expression: FunctionApplication {
              function: Variable {
               identifier: "attrValues",
               position: (35, 10),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (35, 21),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "ports",
                   position: (35, 25),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
             position: (35, 9),
            },
           ],
          },
         },
         Raw {
          content: "\n\n[database_path]\n",
          position: (35, 32),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (38, 7),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "databasePath",
              position: (38, 11),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\n[node_db]\n",
          position: (38, 24),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "dbCfg",
            position: (41, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (41, 13),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "nodeDb",
                position: (41, 17),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (41, 24),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (43, 7),
           },
           arguments: [
            Parentheses {
             expression: BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (43, 23),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "tempDb",
                   position: (43, 27),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (43, 37),
               },
              ],
              position: (43, 34),
             },
             position: (43, 22),
            },
            String {
             parts: [
              Raw {
               content: "[temp_db]\n",
               position: (44, 1),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "dbCfg",
                 position: (45, 7),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (45, 13),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "tempDb",
                     position: (45, 17),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
             ],
             position: (43, 43),
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (45, 27),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (47, 7),
           },
           arguments: [
            Parentheses {
             expression: BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (47, 23),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "importDb",
                   position: (47, 27),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "null",
                position: (47, 39),
               },
              ],
              position: (47, 36),
             },
             position: (47, 22),
            },
            String {
             parts: [
              Raw {
               content: "[import_db]\n",
               position: (48, 1),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "dbCfg",
                 position: (49, 7),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (49, 13),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "importDb",
                     position: (49, 17),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
             ],
             position: (47, 45),
            },
           ],
          },
         },
         Raw {
          content: "\n\n[ips]\n",
          position: (49, 29),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (52, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (52, 25),
              },
             ],
             position: (52, 24),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (52, 29),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "ips",
                position: (52, 33),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[ips_fixed]\n",
          position: (52, 37),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (55, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (55, 25),
              },
             ],
             position: (55, 24),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (55, 29),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "ipsFixed",
                position: (55, 33),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[validators]\n",
          position: (55, 42),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (58, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (58, 25),
              },
             ],
             position: (58, 24),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (58, 29),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "validators",
                position: (58, 33),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[node_size]\n",
          position: (58, 44),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (61, 7),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "nodeSize",
              position: (61, 11),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n\n[ledger_history]\n",
          position: (61, 20),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "toString",
            position: (64, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (64, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "ledgerHistory",
                position: (64, 20),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[fetch_depth]\n",
          position: (64, 34),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "toString",
            position: (67, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (67, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "fetchDepth",
                position: (67, 20),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[validation_quorum]\n",
          position: (67, 31),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "toString",
            position: (70, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (70, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "validationQuorum",
                position: (70, 20),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n[sntp_servers]\n",
          position: (70, 37),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (73, 7),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "\n",
               position: (73, 25),
              },
             ],
             position: (73, 24),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (73, 29),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "sntpServers",
                position: (73, 33),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (73, 45),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (75, 7),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (75, 22),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "statsd",
                position: (75, 26),
               },
               Raw {
                content: "enable",
                position: (75, 33),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [
              Raw {
               content: "[insight]\nserver=statsd\naddress=",
               position: (76, 1),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (78, 15),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "statsd",
                   position: (78, 19),
                  },
                  Raw {
                   content: "address",
                   position: (78, 26),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\nprefix=",
               position: (78, 34),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (79, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "statsd",
                   position: (79, 18),
                  },
                  Raw {
                   content: "prefix",
                   position: (79, 25),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\n",
               position: (79, 32),
              },
             ],
             position: (75, 40),
            },
           ],
          },
         },
         Raw {
          content: "\n\n[rpc_startup]\n{ \"command\": \"log_level\", \"severity\": \"",
          position: (80, 8),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (83, 46),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "logLevel",
              position: (83, 50),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\" }\n",
          position: (83, 59),
         },
        ],
        position: (20, 16),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (84, 8),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "extraConfig",
           position: (84, 12),
          },
         ],
        },
        default: None,
       },
      ],
      position: (84, 6),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "portOptions",
        position: (86, 3),
       },
      ],
     },
     to: Function {
      argument: Destructured {
       identifier: None,
       arguments: [
        DestructuredArgument {
         identifier: "name",
         default: None,
        },
       ],
       ellipsis: true,
      },
      definition: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (87, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "name",
               position: (88, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (88, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (89, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (89, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "name",
                  position: (90, 19),
                 },
                },
               ],
               recursive: false,
               position: (88, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ip",
               position: (93, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 12),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (94, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "127.0.0.1",
                    position: (94, 20),
                   },
                  ],
                  position: (94, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (95, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Ip where rippled listens.",
                    position: (95, 24),
                   },
                  ],
                  position: (95, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (96, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (96, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (96, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               recursive: false,
               position: (93, 21),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "port",
               position: (99, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (99, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Port where rippled listens.",
                    position: (100, 24),
                   },
                  ],
                  position: (100, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (101, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (101, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               recursive: false,
               position: (99, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "protocol",
               position: (104, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (104, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Protocols expose by rippled.",
                    position: (105, 24),
                   },
                  ],
                  position: (105, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (106, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (106, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (106, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (106, 30),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "enum",
                         position: (106, 36),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "http",
                           position: (106, 43),
                          },
                         ],
                         position: (106, 42),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "https",
                           position: (106, 50),
                          },
                         ],
                         position: (106, 49),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "ws",
                           position: (106, 58),
                          },
                         ],
                         position: (106, 57),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "wss",
                           position: (106, 63),
                          },
                         ],
                         position: (106, 62),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "peer",
                           position: (106, 69),
                          },
                         ],
                         position: (106, 68),
                        },
                       ],
                       position: (106, 41),
                      },
                     ],
                    },
                    position: (106, 29),
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (104, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "user",
               position: (109, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (109, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (110, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "When set, these credentials will be required on HTTP/S requests.",
                    position: (110, 24),
                   },
                  ],
                  position: (110, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (111, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (111, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (111, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (112, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (112, 19),
                 },
                },
               ],
               recursive: false,
               position: (109, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "password",
               position: (115, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (115, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (116, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "When set, these credentials will be required on HTTP/S requests.",
                    position: (116, 24),
                   },
                  ],
                  position: (116, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (117, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (117, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (117, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (118, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (118, 19),
                 },
                },
               ],
               recursive: false,
               position: (115, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "admin",
               position: (121, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (121, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (122, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "A comma-separated list of admin IP addresses.",
                    position: (122, 24),
                   },
                  ],
                  position: (122, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (123, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (123, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (123, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (123, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (123, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (124, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "127.0.0.1",
                      position: (124, 21),
                     },
                    ],
                    position: (124, 20),
                   },
                  ],
                  position: (124, 19),
                 },
                },
               ],
               recursive: false,
               position: (121, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ssl",
               position: (127, 7),
              },
             ],
            },
            to: Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "key",
                  position: (128, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (128, 15),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (129, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Specifies the filename holding the SSL key in PEM format.\n",
                       position: (130, 1),
                      },
                     ],
                     position: (129, 25),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (132, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "null",
                     position: (132, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (133, 11),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (133, 18),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "nullOr",
                         position: (133, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (133, 31),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "path",
                          position: (133, 37),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                  ],
                  recursive: false,
                  position: (128, 24),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "cert",
                  position: (136, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (136, 16),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (137, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Specifies the path to the SSL certificate file in PEM format.\nThis is not needed if the chain includes it.\n",
                       position: (138, 1),
                      },
                     ],
                     position: (137, 25),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (141, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "null",
                     position: (141, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (142, 11),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (142, 18),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "nullOr",
                         position: (142, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (142, 31),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "path",
                          position: (142, 37),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                  ],
                  recursive: false,
                  position: (136, 25),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "chain",
                  position: (145, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (145, 17),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (146, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "If you need a certificate chain, specify the path to the\ncertificate chain here. The chain may include the end certificate.\n",
                       position: (147, 1),
                      },
                     ],
                     position: (146, 25),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (150, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "null",
                     position: (150, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (151, 11),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (151, 18),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "nullOr",
                         position: (151, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "types",
                        position: (151, 31),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "path",
                          position: (151, 37),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                  ],
                  recursive: false,
                  position: (145, 26),
                 },
                ],
               },
              },
             ],
             recursive: false,
             position: (127, 13),
            },
           },
          ],
          recursive: false,
          position: (87, 15),
         },
        },
       ],
       recursive: false,
       position: (86, 31),
      },
      position: (86, 17),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "dbOptions",
        position: (157, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "options",
           position: (158, 5),
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "type",
              position: (159, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (159, 14),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (160, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Rippled database type.",
                   position: (160, 24),
                  },
                 ],
                 position: (160, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (161, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (161, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "enum",
                     position: (161, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "rocksdb",
                       position: (161, 29),
                      },
                     ],
                     position: (161, 28),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "nudb",
                       position: (161, 39),
                      },
                     ],
                     position: (161, 38),
                    },
                   ],
                   position: (161, 27),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (162, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "rocksdb",
                   position: (162, 20),
                  },
                 ],
                 position: (162, 19),
                },
               },
              ],
              recursive: false,
              position: (159, 23),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "path",
              position: (165, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (165, 14),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (166, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Location to store the database.",
                   position: (166, 24),
                  },
                 ],
                 position: (166, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (167, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (167, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "path",
                    position: (167, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (168, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (168, 19),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "databasePath",
                    position: (168, 23),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "defaultText",
                   position: (169, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (169, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "config.",
                     position: (169, 42),
                    },
                    Interpolation {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "opt",
                       position: (169, 51),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "databasePath",
                         position: (169, 55),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   position: (169, 41),
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (165, 23),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "compression",
              position: (172, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (172, 21),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (173, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Whether to enable snappy compression.",
                   position: (173, 24),
                  },
                 ],
                 position: (173, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (174, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (174, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nullOr",
                     position: (174, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (174, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "bool",
                      position: (174, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (175, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "null",
                 position: (175, 19),
                },
               },
              ],
              recursive: false,
              position: (172, 30),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "onlineDelete",
              position: (178, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (178, 22),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (179, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Enable automatic purging of older ledger information.",
                   position: (179, 24),
                  },
                 ],
                 position: (179, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (180, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (180, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nullOr",
                     position: (180, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Parentheses {
                   expression: FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (180, 30),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "addCheck",
                        position: (180, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (180, 45),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "int",
                         position: (180, 51),
                        },
                       ],
                      },
                      default: None,
                     },
                     Parentheses {
                      expression: Function {
                       argument: Simple {
                        identifier: "v",
                       },
                       definition: BinaryOperation {
                        operator: GreaterThan,
                        operands: [
                         Variable {
                          identifier: "v",
                          position: (180, 59),
                         },
                         Int {
                          value: 256,
                          position: (180, 63),
                         },
                        ],
                        position: (180, 61),
                       },
                       position: (180, 56),
                      },
                      position: (180, 55),
                     },
                    ],
                   },
                   position: (180, 29),
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (181, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (181, 19),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "ledgerHistory",
                    position: (181, 23),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "defaultText",
                   position: (182, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (182, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "config.",
                     position: (182, 42),
                    },
                    Interpolation {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "opt",
                       position: (182, 51),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "ledgerHistory",
                         position: (182, 55),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                   position: (182, 41),
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (178, 31),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "advisoryDelete",
              position: (185, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (185, 24),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (186, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "If set, then require administrative RPC call \"can_delete\"\nto enable online deletion of ledger records.\n",
                   position: (187, 1),
                  },
                 ],
                 position: (186, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (190, 9),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (190, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "nullOr",
                     position: (190, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (190, 29),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "bool",
                      position: (190, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (191, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "null",
                 position: (191, 19),
                },
               },
              ],
              recursive: false,
              position: (185, 33),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "extraOpts",
              position: (194, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (194, 19),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (195, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Extra database options.",
                   position: (195, 24),
                  },
                 ],
                 position: (195, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (196, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (196, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "lines",
                    position: (196, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (197, 9),
                  },
                 ],
                },
                to: String {
                 parts: [],
                 position: (197, 19),
                },
               },
              ],
              recursive: false,
              position: (194, 28),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (158, 15),
        },
       },
      ],
      recursive: false,
      position: (157, 15),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (208, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (209, 5),
           },
           Raw {
            content: "rippled",
            position: (209, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (210, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (210, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "rippled",
                 position: (210, 32),
                },
               ],
               position: (210, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (212, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (212, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (213, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Which rippled package to use.",
                    position: (213, 24),
                   },
                  ],
                  position: (213, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (214, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (214, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (214, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (215, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (215, 19),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "rippled",
                     position: (215, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (216, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (216, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.rippled",
                      position: (216, 42),
                     },
                    ],
                    position: (216, 41),
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (212, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ports",
               position: (219, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (219, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (220, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Ports exposed by rippled",
                    position: (220, 24),
                   },
                  ],
                  position: (220, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (221, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (221, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (221, 28),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "submodule",
                       position: (221, 37),
                      },
                      arguments: [
                       Variable {
                        identifier: "portOptions",
                        position: (221, 47),
                       },
                      ],
                     },
                     position: (221, 36),
                    },
                   ],
                  },
                  position: (221, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (222, 9),
                   },
                  ],
                 },
                 to: Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "rpc",
                       position: (223, 11),
                      },
                     ],
                    },
                    to: Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "port",
                          position: (224, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 5005,
                        position: (224, 20),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "admin",
                          position: (225, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "127.0.0.1",
                            position: (225, 23),
                           },
                          ],
                          position: (225, 22),
                         },
                        ],
                        position: (225, 21),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "protocol",
                          position: (226, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "http",
                            position: (226, 26),
                           },
                          ],
                          position: (226, 25),
                         },
                        ],
                        position: (226, 24),
                       },
                      },
                     ],
                     recursive: false,
                     position: (223, 17),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "peer",
                       position: (229, 11),
                      },
                     ],
                    },
                    to: Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "port",
                          position: (230, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 51235,
                        position: (230, 20),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "ip",
                          position: (231, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "0.0.0.0",
                          position: (231, 19),
                         },
                        ],
                        position: (231, 18),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "protocol",
                          position: (232, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "peer",
                            position: (232, 26),
                           },
                          ],
                          position: (232, 25),
                         },
                        ],
                        position: (232, 24),
                       },
                      },
                     ],
                     recursive: false,
                     position: (229, 18),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "ws_public",
                       position: (235, 11),
                      },
                     ],
                    },
                    to: Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "port",
                          position: (236, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 5006,
                        position: (236, 20),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "ip",
                          position: (237, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "0.0.0.0",
                          position: (237, 19),
                         },
                        ],
                        position: (237, 18),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "protocol",
                          position: (238, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "ws",
                            position: (238, 26),
                           },
                          ],
                          position: (238, 25),
                         },
                         String {
                          parts: [
                           Raw {
                            content: "wss",
                            position: (238, 31),
                           },
                          ],
                          position: (238, 30),
                         },
                        ],
                        position: (238, 24),
                       },
                      },
                     ],
                     recursive: false,
                     position: (235, 23),
                    },
                   },
                  ],
                  recursive: false,
                  position: (222, 19),
                 },
                },
               ],
               recursive: false,
               position: (219, 24),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "nodeDb",
               position: (243, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (243, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (244, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Rippled main database options.",
                    position: (244, 24),
                   },
                  ],
                  position: (244, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (245, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (245, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (245, 28),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "submodule",
                       position: (245, 36),
                      },
                      arguments: [
                       Variable {
                        identifier: "dbOptions",
                        position: (245, 46),
                       },
                      ],
                     },
                     position: (245, 35),
                    },
                   ],
                  },
                  position: (245, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (246, 9),
                   },
                  ],
                 },
                 to: Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (247, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "rocksdb",
                       position: (247, 19),
                      },
                     ],
                     position: (247, 18),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "extraOpts",
                       position: (248, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "open_files=2000\nfilter_bits=12\ncache_mb=256\nfile_size_pb=8\nfile_size_mult=2;\n",
                       position: (249, 1),
                      },
                     ],
                     position: (248, 23),
                    },
                   },
                  ],
                  recursive: false,
                  position: (246, 19),
                 },
                },
               ],
               recursive: false,
               position: (243, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "tempDb",
               position: (258, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (258, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (259, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Rippled temporary database options.",
                    position: (259, 24),
                   },
                  ],
                  position: (259, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (260, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (260, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (260, 28),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "submodule",
                       position: (260, 36),
                      },
                      arguments: [
                       Variable {
                        identifier: "dbOptions",
                        position: (260, 46),
                       },
                      ],
                     },
                     position: (260, 35),
                    },
                   ],
                  },
                  position: (260, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (261, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (261, 19),
                 },
                },
               ],
               recursive: false,
               position: (258, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "importDb",
               position: (264, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (264, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (265, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Settings for performing a one-time import.",
                    position: (265, 24),
                   },
                  ],
                  position: (265, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (266, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (266, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "nullOr",
                    position: (266, 28),
                   },
                   arguments: [
                    Parentheses {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "submodule",
                       position: (266, 36),
                      },
                      arguments: [
                       Variable {
                        identifier: "dbOptions",
                        position: (266, 46),
                       },
                      ],
                     },
                     position: (266, 35),
                    },
                   ],
                  },
                  position: (266, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (267, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (267, 19),
                 },
                },
               ],
               recursive: false,
               position: (264, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "nodeSize",
               position: (270, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (270, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (271, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Rippled size of the node you are running.\n\"tiny\", \"small\", \"medium\", \"large\", and \"huge\"\n",
                    position: (272, 1),
                   },
                  ],
                  position: (271, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (275, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (275, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (275, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "tiny",
                        position: (275, 29),
                       },
                      ],
                      position: (275, 28),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "small",
                        position: (275, 36),
                       },
                      ],
                      position: (275, 35),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "medium",
                        position: (275, 44),
                       },
                      ],
                      position: (275, 43),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "large",
                        position: (275, 53),
                       },
                      ],
                      position: (275, 52),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "huge",
                        position: (275, 61),
                       },
                      ],
                      position: (275, 60),
                     },
                    ],
                    position: (275, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (276, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "small",
                    position: (276, 20),
                   },
                  ],
                  position: (276, 19),
                 },
                },
               ],
               recursive: false,
               position: (270, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ips",
               position: (279, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (279, 13),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (280, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of hostnames or ips where the Ripple protocol is served.\nFor a starter list, you can either copy entries from:\nhttps://ripple.com/ripple.txt or if you prefer you can let it\n default to r.ripple.com 51235\n\nA port may optionally be specified after adding a space to the\naddress. By convention, if known, IPs are listed in from most\nto least trusted.\n",
                    position: (281, 1),
                   },
                  ],
                  position: (280, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (290, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (290, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (290, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (290, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (290, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (291, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "r.ripple.com 51235",
                      position: (291, 21),
                     },
                    ],
                    position: (291, 20),
                   },
                  ],
                  position: (291, 19),
                 },
                },
               ],
               recursive: false,
               position: (279, 22),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ipsFixed",
               position: (294, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (294, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (295, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of IP addresses or hostnames to which rippled should always\nattempt to maintain peer connections with. This is useful for\nmanually forming private networks, for example to configure a\nvalidation server that connects to the Ripple network through a\npublic-facing server, or for building a set of cluster peers.\n\nA port may optionally be specified after adding a space to the address\n",
                    position: (296, 1),
                   },
                  ],
                  position: (295, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (304, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (304, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (304, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (304, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (304, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (305, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (305, 19),
                 },
                },
               ],
               recursive: false,
               position: (294, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "validators",
               position: (308, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (308, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (309, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of nodes to always accept as validators. Nodes are specified by domain\nor public key.\n",
                    position: (310, 1),
                   },
                  ],
                  position: (309, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (313, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (313, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (313, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (313, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (313, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (314, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "n949f75evCHwgyP4fPVgaHqNHxUVN15PsJEZ3B3HnXPcPjcZAoy7  RL1",
                      position: (315, 12),
                     },
                    ],
                    position: (315, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "n9MD5h24qrQqiyBC8aeqqCWvpiBiYQ3jxSr91uiDvmrkyHRdYLUj  RL2",
                      position: (316, 12),
                     },
                    ],
                    position: (316, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "n9L81uNCaPgtUJfaHh89gmdvXKAmSt5Gdsw2g1iPWaPkAHW5Nm4C  RL3",
                      position: (317, 12),
                     },
                    ],
                    position: (317, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "n9KiYM9CgngLvtRCQHZwgC2gjpdaZcCcbt3VboxiNFcKuwFVujzS  RL4",
                      position: (318, 12),
                     },
                    ],
                    position: (318, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "n9LdgEtkmGB9E2h3K4Vp7iGUaKuq23Zr32ehxiU8FWY7xoxbWTSA  RL5",
                      position: (319, 12),
                     },
                    ],
                    position: (319, 11),
                   },
                  ],
                  position: (314, 19),
                 },
                },
               ],
               recursive: false,
               position: (308, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "databasePath",
               position: (323, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (323, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (324, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Path to the ripple database.\n",
                    position: (325, 1),
                   },
                  ],
                  position: (324, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (327, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (327, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "path",
                     position: (327, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (328, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/var/lib/rippled",
                    position: (328, 20),
                   },
                  ],
                  position: (328, 19),
                 },
                },
               ],
               recursive: false,
               position: (323, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "validationQuorum",
               position: (331, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (331, 26),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (332, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The minimum number of trusted validations a ledger must have before\nthe server considers it fully validated.\n",
                    position: (333, 1),
                   },
                  ],
                  position: (332, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (336, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (336, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (336, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (337, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 3,
                  position: (337, 19),
                 },
                },
               ],
               recursive: false,
               position: (331, 35),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ledgerHistory",
               position: (340, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (340, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (341, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The number of past ledgers to acquire on server startup and the minimum\nto maintain while running.\n",
                    position: (342, 1),
                   },
                  ],
                  position: (341, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (345, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (345, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "either",
                      position: (345, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (345, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "int",
                       position: (345, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                   Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (345, 40),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "enum",
                         position: (345, 46),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "full",
                           position: (345, 53),
                          },
                         ],
                         position: (345, 52),
                        },
                       ],
                       position: (345, 51),
                      },
                     ],
                    },
                    position: (345, 39),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (346, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 1296000,
                  position: (346, 19),
                 },
                },
               ],
               recursive: false,
               position: (340, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "fetchDepth",
               position: (349, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (349, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (350, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The number of past ledgers to serve to other peers that request historical\nledger data (or \"full\" for no limit).\n",
                    position: (351, 1),
                   },
                  ],
                  position: (350, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (354, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (354, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "either",
                      position: (354, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (354, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "int",
                       position: (354, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                   Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (354, 40),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "enum",
                         position: (354, 46),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "full",
                           position: (354, 53),
                          },
                         ],
                         position: (354, 52),
                        },
                       ],
                       position: (354, 51),
                      },
                     ],
                    },
                    position: (354, 39),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (355, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "full",
                    position: (355, 20),
                   },
                  ],
                  position: (355, 19),
                 },
                },
               ],
               recursive: false,
               position: (349, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "sntpServers",
               position: (358, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (358, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (359, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "IP address or domain of NTP servers to use for time synchronization.;\n",
                    position: (360, 1),
                   },
                  ],
                  position: (359, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (362, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (362, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (362, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (362, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (362, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (363, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "time.windows.com",
                      position: (364, 12),
                     },
                    ],
                    position: (364, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "time.apple.com",
                      position: (365, 12),
                     },
                    ],
                    position: (365, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "time.nist.gov",
                      position: (366, 12),
                     },
                    ],
                    position: (366, 11),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "pool.ntp.org",
                      position: (367, 12),
                     },
                    ],
                    position: (367, 11),
                   },
                  ],
                  position: (363, 19),
                 },
                },
               ],
               recursive: false,
               position: (358, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "logLevel",
               position: (371, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (371, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (372, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Logging verbosity.",
                    position: (372, 24),
                   },
                  ],
                  position: (372, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (373, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (373, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (373, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "debug",
                        position: (373, 29),
                       },
                      ],
                      position: (373, 28),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "error",
                        position: (373, 37),
                       },
                      ],
                      position: (373, 36),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "info",
                        position: (373, 45),
                       },
                      ],
                      position: (373, 44),
                     },
                    ],
                    position: (373, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (374, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "error",
                    position: (374, 20),
                   },
                  ],
                  position: (374, 19),
                 },
                },
               ],
               recursive: false,
               position: (371, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "statsd",
               position: (377, 7),
              },
             ],
            },
            to: Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "enable",
                  position: (378, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkEnableOption",
                 position: (378, 18),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "statsd monitoring for rippled",
                    position: (378, 34),
                   },
                  ],
                  position: (378, 33),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "address",
                  position: (380, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (380, 19),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (381, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "The UDP address and port of the listening StatsD server.",
                       position: (381, 26),
                      },
                     ],
                     position: (381, 25),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (382, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "127.0.0.1:8125",
                       position: (382, 22),
                      },
                     ],
                     position: (382, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (383, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (383, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "str",
                        position: (383, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  recursive: false,
                  position: (380, 28),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "prefix",
                  position: (386, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (386, 18),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (387, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "A string prepended to each collected metric.",
                       position: (387, 26),
                      },
                     ],
                     position: (387, 25),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (388, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [],
                     position: (388, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (389, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (389, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "str",
                        position: (389, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  recursive: false,
                  position: (386, 27),
                 },
                ],
               },
              },
             ],
             recursive: false,
             position: (377, 16),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraConfig",
               position: (393, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (393, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (394, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (394, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (395, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (395, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (395, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (396, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra lines to be added verbatim to the rippled.cfg configuration file.\n",
                    position: (397, 1),
                   },
                  ],
                  position: (396, 23),
                 },
                },
               ],
               recursive: false,
               position: (393, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "config",
               position: (401, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (401, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (402, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (402, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (403, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (403, 19),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "writeText",
                      position: (403, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "rippled.conf",
                      position: (403, 35),
                     },
                    ],
                    position: (403, 34),
                   },
                   Variable {
                    identifier: "rippledCfg",
                    position: (403, 49),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (404, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalDocBook",
                   position: (404, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "generated config file",
                      position: (404, 39),
                     },
                    ],
                    position: (404, 38),
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (401, 25),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (209, 24),
         },
        },
       ],
       recursive: false,
       position: (208, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (412, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (412, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (412, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (412, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (414, 5),
             },
             Raw {
              content: "users",
              position: (414, 11),
             },
             Raw {
              content: "rippled",
              position: (414, 17),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (415, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Ripple server user",
                 position: (415, 24),
                },
               ],
               position: (415, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "isSystemUser",
                 position: (416, 9),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (416, 24),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (417, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "rippled",
                 position: (417, 18),
                },
               ],
               position: (417, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "home",
                 position: (418, 9),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (418, 16),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "databasePath",
                  position: (418, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "createHome",
                 position: (419, 9),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (419, 22),
              },
             },
            ],
            recursive: false,
            position: (414, 27),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (421, 5),
             },
             Raw {
              content: "groups",
              position: (421, 11),
             },
             Raw {
              content: "rippled",
              position: (421, 18),
             },
            ],
           },
           to: Map {
            bindings: [],
            recursive: false,
            position: (421, 28),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (423, 5),
             },
             Raw {
              content: "services",
              position: (423, 13),
             },
             Raw {
              content: "rippled",
              position: (423, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (424, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (424, 18),
                  },
                 ],
                 position: (424, 17),
                },
               ],
               position: (424, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (425, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (425, 21),
                  },
                 ],
                 position: (425, 20),
                },
               ],
               position: (425, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (427, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (428, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (428, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "package",
                        position: (428, 28),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/rippled --fg --conf ",
                    position: (428, 36),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (428, 63),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "config",
                        position: (428, 67),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (428, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (429, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "rippled",
                    position: (429, 17),
                   },
                  ],
                  position: (429, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (430, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "on-failure",
                    position: (430, 20),
                   },
                  ],
                  position: (430, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "LimitNOFILE",
                    position: (431, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 10000,
                  position: (431, 21),
                 },
                },
               ],
               recursive: false,
               position: (427, 23),
              },
             },
            ],
            recursive: false,
            position: (423, 32),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (435, 5),
             },
             Raw {
              content: "systemPackages",
              position: (435, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (435, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (435, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (435, 34),
           },
          },
         ],
         recursive: false,
         position: (412, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (204, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}