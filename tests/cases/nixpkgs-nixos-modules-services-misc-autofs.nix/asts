---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "autofs",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "autoMaster",
        position: (9, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (9, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (9, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "auto.master",
          position: (9, 32),
         },
        ],
        position: (9, 31),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (9, 45),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "autoMaster",
           position: (9, 49),
          },
         ],
        },
        default: None,
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (17, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (19, 5),
           },
           Raw {
            content: "autofs",
            position: (19, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (21, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (21, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (22, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (22, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (22, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (23, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (23, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (24, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Mount filesystems on demand. Unmount them automatically.\nYou may also be interested in afuse.\n",
                    position: (25, 1),
                   },
                  ],
                  position: (24, 23),
                 },
                },
               ],
               recursive: false,
               position: (21, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "autoMaster",
               position: (30, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (30, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (31, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (31, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (31, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (32, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (32, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "let\n  mapConf = pkgs.writeText \"auto\" ",
                      position: (33, 1),
                     },
                     Raw {
                      content: "''",
                      position: (34, 45),
                     },
                     Raw {
                      content: "\n   kernel    -ro,soft,intr       ftp.kernel.org:/pub/linux\n   boot      -fstype=ext2        :/dev/hda1\n   windoze   -fstype=smbfs       ://windoze/c\n   removable -fstype=ext2        :/dev/hdd\n   cd        -fstype=iso9660,ro  :/dev/hdc\n   floppy    -fstype=auto        :/dev/fd0\n   server    -rw,hard,intr       / -ro myserver.me.org:/ \\\n                                 /usr myserver.me.org:/usr \\\n                                 /home myserver.me.org:/home\n  ",
                      position: (34, 48),
                     },
                     Raw {
                      content: "''",
                      position: (44, 13),
                     },
                     Raw {
                      content: ";\nin ",
                      position: (44, 16),
                     },
                     Raw {
                      content: "''",
                      position: (45, 14),
                     },
                     Raw {
                      content: "\n  /auto file:",
                      position: (45, 17),
                     },
                     Raw {
                      content: "$",
                      position: (46, 24),
                     },
                     Raw {
                      content: "{mapConf}\n",
                      position: (46, 27),
                     },
                     Raw {
                      content: "''",
                      position: (47, 11),
                     },
                     Raw {
                      content: "\n",
                      position: (47, 14),
                     },
                    ],
                    position: (32, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Contents of <literal>/etc/auto.master</literal> file. See <command>auto.master(5)</command> and <command>autofs(5)</command>.\n",
                    position: (50, 1),
                   },
                  ],
                  position: (49, 23),
                 },
                },
               ],
               recursive: false,
               position: (30, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "timeout",
               position: (54, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (54, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (55, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (55, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 600,
                  position: (56, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Set the global minimum timeout, in seconds, until directories are unmounted",
                    position: (57, 24),
                   },
                  ],
                  position: (57, 23),
                 },
                },
               ],
               recursive: false,
               position: (54, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "debug",
               position: (60, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (60, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (61, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (61, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (62, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Pass -d and -7 to automount and write log to the system journal.\n",
                    position: (64, 1),
                   },
                  ],
                  position: (63, 23),
                 },
                },
               ],
               recursive: false,
               position: (60, 24),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (19, 23),
         },
        },
       ],
       recursive: false,
       position: (17, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (75, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (75, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (75, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (75, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (77, 5),
             },
             Raw {
              content: "kernelModules",
              position: (77, 10),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "autofs4",
                position: (77, 29),
               },
              ],
              position: (77, 28),
             },
            ],
            position: (77, 26),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (79, 5),
             },
             Raw {
              content: "services",
              position: (79, 13),
             },
             Raw {
              content: "autofs",
              position: (79, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (80, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Automounts filesystems on demand",
                 position: (80, 24),
                },
               ],
               position: (80, 23),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (81, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (81, 20),
                  },
                 ],
                 position: (81, 19),
                },
                String {
                 parts: [
                  Raw {
                   content: "ypbind.service",
                   position: (81, 37),
                  },
                 ],
                 position: (81, 36),
                },
                String {
                 parts: [
                  Raw {
                   content: "sssd.service",
                   position: (81, 54),
                  },
                 ],
                 position: (81, 53),
                },
                String {
                 parts: [
                  Raw {
                   content: "network-online.target",
                   position: (81, 69),
                  },
                 ],
                 position: (81, 68),
                },
               ],
               position: (81, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wants",
                 position: (82, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network-online.target",
                   position: (82, 20),
                  },
                 ],
                 position: (82, 19),
                },
               ],
               position: (82, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (83, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (83, 23),
                  },
                 ],
                 position: (83, 22),
                },
               ],
               position: (83, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "preStart",
                 position: (85, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "# There should be only one autofs service managed by systemd, so this should be safe.\nrm -f /tmp/autofs-running\n",
                 position: (86, 1),
                },
               ],
               position: (85, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (90, 9),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Type",
                    position: (91, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "forking",
                    position: (91, 19),
                   },
                  ],
                  position: (91, 18),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "PIDFile",
                    position: (92, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/run/autofs.pid",
                    position: (92, 22),
                   },
                  ],
                  position: (92, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (93, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (93, 26),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "autofs5",
                        position: (93, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/automount ",
                    position: (93, 39),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (93, 56),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (93, 71),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "debug",
                          position: (93, 75),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "-d",
                         position: (93, 82),
                        },
                       ],
                       position: (93, 81),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " -p /run/autofs.pid -t ",
                    position: (93, 86),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "builtins",
                       position: (93, 111),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "toString",
                         position: (93, 120),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (93, 129),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "timeout",
                          position: (93, 133),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: " ",
                    position: (93, 141),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "autoMaster",
                     position: (93, 144),
                    },
                   },
                  ],
                  position: (93, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecReload",
                    position: (94, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (94, 27),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "coreutils",
                        position: (94, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/kill -HUP $MAINPID",
                    position: (94, 42),
                   },
                  ],
                  position: (94, 24),
                 },
                },
               ],
               recursive: false,
               position: (90, 25),
              },
             },
            ],
            recursive: false,
            position: (80, 7),
           },
          },
         ],
         recursive: false,
         position: (75, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}