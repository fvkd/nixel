---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (2, 1)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "buildPythonPackage" (2, 3)
          , := lexemes ","
            , "," (3, 1)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchPypi" (3, 3)
            , := lexemes ","
              , "," (4, 1)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "unittest2" (4, 3)
              , := lexemes ","
                , "," (5, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "pyasn1" (5, 3)
                , := lexemes ","
                  , "," (6, 1)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "mock" (6, 3)
                  , := lexemes ","
                    , "," (7, 1)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "isPy3k" (7, 3)
                    , := lexemes ","
                      , "," (8, 1)
                    formals := rules "formal"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "pythonOlder" (8, 3)
      } := lexemes "}"
        } "}" (9, 1)
      : := lexemes ":"
        : ":" (9, 2)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildPythonPackage" (11, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (11, 20)
                  { := lexemes "{"
                    { "{" (11, 24)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules 
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "pname" (12, 3)
                                  = := lexemes "="
                                    = "=" (12, 9)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (12, 11)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "rsa" (12, 12)
                                                " := lexemes "\""
                                                  " "\"" (12, 15)
                                  ; := lexemes ";"
                                    ; ";" (12, 16)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "version" (13, 3)
                                = := lexemes "="
                                  = "=" (13, 11)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (13, 13)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "4.8" (13, 14)
                                              " := lexemes "\""
                                                " "\"" (13, 17)
                                ; := lexemes ";"
                                  ; ";" (13, 18)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "src" (15, 3)
                              = := lexemes "="
                                = "=" (15, 7)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "fetchPypi" (15, 9)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "{" "binds" "}"
                                            { := lexemes "{"
                                              { "{" (15, 19)
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "INHERIT" "attrs" ";"
                                                binds := rules 
                                                INHERIT := lexemes "INHERIT"
                                                  INHERIT "inherit" (16, 5)
                                                attrs := rules "attrs" "attr"
                                                  attrs := rules "attrs" "attr"
                                                    attrs := rules 
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "pname" (16, 13)
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "version" (16, 19)
                                                ; := lexemes ";"
                                                  ; ";" (16, 26)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "sha256" (17, 5)
                                              = := lexemes "="
                                                = "=" (17, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (17, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "5c6bd9dc7a543b7fe4304a631f8a8a3b674e2bbfc49c2ae96200cdbe55df6b17" (17, 15)
                                                            " := lexemes "\""
                                                              " "\"" (17, 79)
                                              ; := lexemes ";"
                                                ; ";" (17, 80)
                                            } := lexemes "}"
                                              } "}" (18, 3)
                              ; := lexemes ";"
                                ; ";" (18, 4)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "checkInputs" (20, 3)
                            = := lexemes "="
                              = "=" (20, 15)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (20, 17)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules 
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "unittest2" (20, 19)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "mock" (20, 29)
                                          ] := lexemes "]"
                                            ] "]" (20, 34)
                            ; := lexemes ";"
                              ; ";" (20, 35)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "propagatedBuildInputs" (21, 3)
                          = := lexemes "="
                            = "=" (21, 25)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (21, 27)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules 
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "pyasn1" (21, 29)
                                        ] := lexemes "]"
                                          ] "]" (21, 36)
                          ; := lexemes ";"
                            ; ";" (21, 37)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "preConfigure" (23, 3)
                        = := lexemes "="
                          = "=" (23, 16)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_app" "expr_select"
                                  expr_app := rules "expr_app" "expr_select"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple" "." "attrpath"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "lib" (23, 18)
                                        . := lexemes "."
                                          . "." (23, 21)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "optionalString" (23, 22)
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "(" "expr" ")"
                                        ( := lexemes "("
                                          ( "(" (23, 37)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_op" "AND" "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "isPy3k" (23, 38)
                                                AND := lexemes "AND"
                                                  AND "&&" (23, 45)
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_app" "expr_select"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "pythonOlder" (23, 48)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (23, 60)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "3.7" (23, 61)
                                                        " := lexemes "\""
                                                          " "\"" (23, 64)
                                        ) := lexemes ")"
                                          ) ")" (23, 65)
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (23, 67)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    substituteInPlace setup.py --replace \"open('README.md')\" \"open('README.md',encoding='utf-8')\"\n  " (24, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (25, 3)
                        ; := lexemes ";"
                          ; ";" (25, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "doCheck" (28, 3)
                      = := lexemes "="
                        = "=" (28, 11)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "ID"
                                    ID := lexemes "ID"
                                      ID "false" (28, 13)
                      ; := lexemes ";"
                        ; ";" (28, 18)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (30, 3)
                    = := lexemes "="
                      = "=" (30, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (30, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (30, 15)
                        ; := lexemes ";"
                          ; ";" (30, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (30, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules 
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (31, 5)
                                          = := lexemes "="
                                            = "=" (31, 14)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (31, 16)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "https://stuvel.eu/rsa" (31, 17)
                                                        " := lexemes "\""
                                                          " "\"" (31, 38)
                                          ; := lexemes ";"
                                            ; ";" (31, 39)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (32, 5)
                                        = := lexemes "="
                                          = "=" (32, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "licenses" (32, 15)
                                                    . := lexemes "."
                                                      . "." (32, 23)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "asl20" (32, 24)
                                        ; := lexemes ";"
                                          ; ";" (32, 29)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "description" (33, 5)
                                      = := lexemes "="
                                        = "=" (33, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (33, 19)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "A pure-Python RSA implementation" (33, 20)
                                                    " := lexemes "\""
                                                      " "\"" (33, 52)
                                      ; := lexemes ";"
                                        ; ";" (33, 53)
                                    } := lexemes "}"
                                      } "}" (34, 3)
                    ; := lexemes ";"
                      ; ";" (34, 4)
                  } := lexemes "}"
                    } "}" (36, 1)