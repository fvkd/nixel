---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (2, 1)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "assertpy" (2, 3)
          , := lexemes ","
            , "," (3, 1)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "buildPythonPackage" (3, 3)
            , := lexemes ","
              , "," (4, 1)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "fetchFromGitHub" (4, 3)
              , := lexemes ","
                , "," (5, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "lark" (5, 3)
                , := lexemes ","
                  , "," (6, 1)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "poetry-core" (6, 3)
                  , := lexemes ","
                    , "," (7, 1)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "pytestCheckHook" (7, 3)
                    , := lexemes ","
                      , "," (8, 1)
                    formals := rules "formal" "," "formals"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "pythonOlder" (8, 3)
                      , := lexemes ","
                        , "," (9, 1)
                      formals := rules "formal" "," "formals"
                        formal := rules "ID"
                          ID := lexemes "ID"
                            ID "regex" (9, 3)
                        , := lexemes ","
                          , "," (10, 1)
                        formals := rules "formal"
                          formal := rules "ID"
                            ID := lexemes "ID"
                              ID "typing-extensions" (10, 3)
      } := lexemes "}"
        } "}" (11, 1)
      : := lexemes ":"
        : ":" (11, 2)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildPythonPackage" (13, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (13, 20)
                  { := lexemes "{"
                    { "{" (13, 24)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules 
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "pname" (14, 3)
                                        = := lexemes "="
                                          = "=" (14, 9)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "\"" "string_parts" "\""
                                                      " := lexemes "\""
                                                        " "\"" (14, 11)
                                                      string_parts := rules "STR"
                                                        STR := lexemes "STR"
                                                          STR "pycep-parser" (14, 12)
                                                      " := lexemes "\""
                                                        " "\"" (14, 24)
                                        ; := lexemes ";"
                                          ; ";" (14, 25)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "version" (15, 3)
                                      = := lexemes "="
                                        = "=" (15, 11)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (15, 13)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "0.3.2" (15, 14)
                                                    " := lexemes "\""
                                                      " "\"" (15, 19)
                                      ; := lexemes ";"
                                        ; ";" (15, 20)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "format" (16, 3)
                                    = := lexemes "="
                                      = "=" (16, 10)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (16, 12)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "pyproject" (16, 13)
                                                  " := lexemes "\""
                                                    " "\"" (16, 22)
                                    ; := lexemes ";"
                                      ; ";" (16, 23)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "disabled" (18, 3)
                                  = := lexemes "="
                                    = "=" (18, 12)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_app" "expr_select"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "pythonOlder" (18, 14)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (18, 26)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "3.7" (18, 27)
                                                " := lexemes "\""
                                                  " "\"" (18, 30)
                                  ; := lexemes ";"
                                    ; ";" (18, 31)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "src" (20, 3)
                                = := lexemes "="
                                  = "=" (20, 7)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_app" "expr_select"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "fetchFromGitHub" (20, 9)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "{" "binds" "}"
                                              { := lexemes "{"
                                                { "{" (20, 25)
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                                      binds := rules 
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "owner" (21, 5)
                                                      = := lexemes "="
                                                        = "=" (21, 11)
                                                      expr := rules "expr_function"
                                                        expr_function := rules "expr_if"
                                                          expr_if := rules "expr_op"
                                                            expr_op := rules "expr_app"
                                                              expr_app := rules "expr_select"
                                                                expr_select := rules "expr_simple"
                                                                  expr_simple := rules "\"" "string_parts" "\""
                                                                    " := lexemes "\""
                                                                      " "\"" (21, 13)
                                                                    string_parts := rules "STR"
                                                                      STR := lexemes "STR"
                                                                        STR "gruebel" (21, 14)
                                                                    " := lexemes "\""
                                                                      " "\"" (21, 21)
                                                      ; := lexemes ";"
                                                        ; ";" (21, 22)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "repo" (22, 5)
                                                    = := lexemes "="
                                                      = "=" (22, 10)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (22, 12)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR "pycep" (22, 13)
                                                                  " := lexemes "\""
                                                                    " "\"" (22, 18)
                                                    ; := lexemes ";"
                                                      ; ";" (22, 19)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "rev" (23, 5)
                                                  = := lexemes "="
                                                    = "=" (23, 9)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "version" (23, 11)
                                                  ; := lexemes ";"
                                                    ; ";" (23, 18)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "hash" (24, 5)
                                                = := lexemes "="
                                                  = "=" (24, 10)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (24, 12)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "sha256-ud26xJQWdu7wtv75/K16HSSw0MvaSr3H1hDZBPjSzYE=" (24, 13)
                                                              " := lexemes "\""
                                                                " "\"" (24, 64)
                                                ; := lexemes ";"
                                                  ; ";" (24, 65)
                                              } := lexemes "}"
                                                } "}" (25, 3)
                                ; := lexemes ";"
                                  ; ";" (25, 4)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "nativeBuildInputs" (27, 3)
                              = := lexemes "="
                                = "=" (27, 21)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "[" "expr_list" "]"
                                            [ := lexemes "["
                                              [ "[" (27, 23)
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules 
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "poetry-core" (28, 5)
                                            ] := lexemes "]"
                                              ] "]" (29, 3)
                              ; := lexemes ";"
                                ; ";" (29, 4)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "propagatedBuildInputs" (31, 3)
                            = := lexemes "="
                              = "=" (31, 25)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (31, 27)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules 
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "lark" (32, 5)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "regex" (33, 5)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "typing-extensions" (34, 5)
                                          ] := lexemes "]"
                                            ] "]" (35, 3)
                            ; := lexemes ";"
                              ; ";" (35, 4)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "checkInputs" (37, 3)
                          = := lexemes "="
                            = "=" (37, 15)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (37, 17)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules 
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "assertpy" (38, 5)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "pytestCheckHook" (39, 5)
                                        ] := lexemes "]"
                                          ] "]" (40, 3)
                          ; := lexemes ";"
                            ; ";" (40, 4)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "postPatch" (42, 3)
                        = := lexemes "="
                          = "=" (42, 13)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (42, 15)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules "ind_string_parts" "DOLLAR_CURLY" "expr" "}"
                                          ind_string_parts := rules "ind_string_parts" "IND_STR"
                                            ind_string_parts := rules 
                                            IND_STR := lexemes "IND_STR"
                                              IND_STR "    substituteInPlace pyproject.toml \\\n      --replace 'version = \"0.3.2-alpha.4\"' 'version = \"" (43, 1)
                                          DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                            DOLLAR_CURLY "${" (44, 57)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "version" (44, 59)
                                          } := lexemes "}"
                                            } "}" (44, 66)
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "\"' \\\n      --replace 'regex = \"^2022.3.2\"' 'regex = \"*\"'\n  " (44, 67)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (46, 3)
                        ; := lexemes ";"
                          ; ";" (46, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "pythonImportsCheck" (48, 3)
                      = := lexemes "="
                        = "=" (48, 22)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "[" "expr_list" "]"
                                    [ := lexemes "["
                                      [ "[" (48, 24)
                                    expr_list := rules "expr_list" "expr_select"
                                      expr_list := rules 
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (49, 5)
                                          string_parts := rules "STR"
                                            STR := lexemes "STR"
                                              STR "pycep" (49, 6)
                                          " := lexemes "\""
                                            " "\"" (49, 11)
                                    ] := lexemes "]"
                                      ] "]" (50, 3)
                      ; := lexemes ";"
                        ; ";" (50, 4)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (52, 3)
                    = := lexemes "="
                      = "=" (52, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (52, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (52, 15)
                        ; := lexemes ";"
                          ; ";" (52, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (52, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "description" (53, 5)
                                            = := lexemes "="
                                              = "=" (53, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (53, 19)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "Python based Bicep parser" (53, 20)
                                                          " := lexemes "\""
                                                            " "\"" (53, 45)
                                            ; := lexemes ";"
                                              ; ";" (53, 46)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (54, 5)
                                          = := lexemes "="
                                            = "=" (54, 14)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (54, 16)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "https://github.com/gruebel/pycep" (54, 17)
                                                        " := lexemes "\""
                                                          " "\"" (54, 49)
                                          ; := lexemes ";"
                                            ; ";" (54, 50)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (55, 5)
                                        = := lexemes "="
                                          = "=" (55, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "WITH" "expr" ";" "expr_function"
                                            WITH := lexemes "WITH"
                                              WITH "with" (55, 15)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "licenses" (55, 20)
                                            ; := lexemes ";"
                                              ; ";" (55, 28)
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "[" "expr_list" "]"
                                                        [ := lexemes "["
                                                          [ "[" (55, 30)
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "asl20" (55, 32)
                                                        ] := lexemes "]"
                                                          ] "]" (55, 38)
                                        ; := lexemes ";"
                                          ; ";" (55, 39)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (56, 5)
                                      = := lexemes "="
                                        = "=" (56, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "WITH" "expr" ";" "expr_function"
                                          WITH := lexemes "WITH"
                                            WITH "with" (56, 19)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (56, 24)
                                          ; := lexemes ";"
                                            ; ";" (56, 35)
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (56, 37)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "fab" (56, 39)
                                                      ] := lexemes "]"
                                                        ] "]" (56, 43)
                                      ; := lexemes ";"
                                        ; ";" (56, 44)
                                    } := lexemes "}"
                                      } "}" (57, 3)
                    ; := lexemes ";"
                      ; ";" (57, 4)
                  } := lexemes "}"
                    } "}" (58, 1)