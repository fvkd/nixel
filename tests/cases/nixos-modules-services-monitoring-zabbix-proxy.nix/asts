---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (4, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (4, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (4, 16),
       },
       Raw {
        content: "zabbixProxy",
        position: (4, 25),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "opt",
       position: (5, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "options",
      position: (5, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (5, 17),
       },
       Raw {
        content: "zabbixProxy",
        position: (5, 26),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pgsql",
       position: (6, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (6, 11),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (6, 18),
       },
       Raw {
        content: "postgresql",
        position: (6, 27),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mysql",
       position: (7, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (7, 11),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (7, 18),
       },
       Raw {
        content: "mysql",
        position: (7, 27),
       },
      ],
     },
     default: None,
    },
   ),
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (9, 12),
     },
    ),
    [
     Raw {
      content: "mkAfter",
      position: (9, 17),
     },
     Raw {
      content: "mkDefault",
      position: (9, 25),
     },
     Raw {
      content: "mkEnableOption",
      position: (9, 35),
     },
     Raw {
      content: "mkIf",
      position: (9, 50),
     },
     Raw {
      content: "mkMerge",
      position: (9, 55),
     },
     Raw {
      content: "mkOption",
      position: (9, 63),
     },
    ],
   ),
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (10, 12),
     },
    ),
    [
     Raw {
      content: "attrValues",
      position: (10, 17),
     },
     Raw {
      content: "concatMapStringsSep",
      position: (10, 28),
     },
     Raw {
      content: "getName",
      position: (10, 48),
     },
     Raw {
      content: "literalExpression",
      position: (10, 56),
     },
     Raw {
      content: "optional",
      position: (10, 74),
     },
     Raw {
      content: "optionalAttrs",
      position: (10, 83),
     },
     Raw {
      content: "optionalString",
      position: (10, 97),
     },
     Raw {
      content: "types",
      position: (10, 112),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (11, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "generators",
         position: (11, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "toKeyValue",
      position: (11, 28),
     },
    ],
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "user",
       position: (13, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "zabbix",
       position: (13, 11),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "group",
       position: (14, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "zabbix",
       position: (14, 12),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "runtimeDir",
       position: (15, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "/run/zabbix",
       position: (15, 17),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "stateDir",
       position: (16, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "/var/lib/zabbix",
       position: (16, 15),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "passwordFile",
       position: (17, 3),
      },
     ],
    },
    String {
     parts: [
      Expression {
       expression: Variable {
        identifier: "runtimeDir",
        position: (17, 21),
       },
      },
      Raw {
       content: "/zabbix-dbpassword.conf",
       position: (17, 32),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "moduleEnv",
       position: (19, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (19, 15),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "symlinkJoin",
         position: (19, 20),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "name",
            position: (20, 5),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "zabbix-proxy-module-env",
            position: (20, 13),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "paths",
            position: (21, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "attrValues",
           position: (21, 13),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (21, 24),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "modules",
               position: (21, 28),
              },
             ],
            },
            default: None,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "configFile",
       position: (24, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (24, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "writeText",
         position: (24, 21),
        },
       ],
      },
      default: None,
     },
     arguments: [
      String {
       parts: [
        Raw {
         content: "zabbix_proxy.conf",
         position: (24, 32),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "toKeyValue",
        position: (24, 52),
       },
       arguments: [
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "listsAsDuplicateKeys",
              position: (24, 65),
             },
            ],
           },
           Variable {
            identifier: "true",
            position: (24, 88),
           },
          ),
         ],
         recursive: false,
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (24, 96),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "settings",
            position: (24, 100),
           },
          ],
         },
         default: None,
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mysqlLocal",
       position: (26, 3),
      },
     ],
    },
    BinaryOperation {
     operator: LogicalAnd,
     operands: [
      PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (26, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "database",
          position: (26, 20),
         },
         Raw {
          content: "createLocally",
          position: (26, 29),
         },
        ],
       },
       default: None,
      },
      BinaryOperation {
       operator: EqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (26, 46),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "database",
            position: (26, 50),
           },
           Raw {
            content: "type",
            position: (26, 59),
           },
          ],
         },
         default: None,
        },
        String {
         parts: [
          Raw {
           content: "mysql",
           position: (26, 68),
          },
         ],
        },
       ],
       position: (26, 64),
      },
     ],
     position: (26, 43),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "pgsqlLocal",
       position: (27, 3),
      },
     ],
    },
    BinaryOperation {
     operator: LogicalAnd,
     operands: [
      PropertyAccess {
       expression: Variable {
        identifier: "cfg",
        position: (27, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "database",
          position: (27, 20),
         },
         Raw {
          content: "createLocally",
          position: (27, 29),
         },
        ],
       },
       default: None,
      },
      BinaryOperation {
       operator: EqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (27, 46),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "database",
            position: (27, 50),
           },
           Raw {
            content: "type",
            position: (27, 59),
           },
          ],
         },
         default: None,
        },
        String {
         parts: [
          Raw {
           content: "pgsql",
           position: (27, 68),
          },
         ],
        },
       ],
       position: (27, 64),
      },
     ],
     position: (27, 43),
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (32, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (33, 6),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "mkRemovedOptionModule",
            position: (33, 10),
           },
          ],
         },
         default: None,
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
              position: (33, 35),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "zabbixProxy",
              position: (33, 46),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "extraConfig",
              position: (33, 60),
             },
            ],
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "Use services.zabbixProxy.settings instead.",
            position: (33, 76),
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (38, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (40, 5),
          },
          Raw {
           content: "zabbixProxy",
           position: (40, 14),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (41, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkEnableOption",
             position: (41, 16),
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "the Zabbix Proxy",
                position: (41, 32),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "server",
              position: (43, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (43, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (44, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (44, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (44, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (45, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "The IP address or hostname of the Zabbix server to connect to.\n",
                   position: (46, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "package",
              position: (50, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (50, 17),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (51, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (51, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (51, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (52, 9),
                  },
                 ],
                },
                IfThenElse {
                 predicate: BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (53, 14),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (53, 18),
                      },
                      Raw {
                       content: "type",
                       position: (53, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "mysql",
                      position: (53, 36),
                     },
                    ],
                   },
                  ],
                  position: (53, 32),
                 },
                 then: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (53, 48),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "zabbix",
                     position: (53, 53),
                    },
                    Raw {
                     content: "proxy-mysql",
                     position: (53, 60),
                    },
                   ],
                  },
                  default: None,
                 },
                 else_: IfThenElse {
                  predicate: BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (54, 19),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "database",
                        position: (54, 23),
                       },
                       Raw {
                        content: "type",
                        position: (54, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [
                      Raw {
                       content: "pgsql",
                       position: (54, 41),
                      },
                     ],
                    },
                   ],
                   position: (54, 37),
                  },
                  then: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (54, 53),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "zabbix",
                      position: (54, 58),
                     },
                     Raw {
                      content: "proxy-pgsql",
                      position: (54, 65),
                     },
                    ],
                   },
                   default: None,
                  },
                  else_: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (55, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "zabbix",
                      position: (55, 21),
                     },
                     Raw {
                      content: "proxy-sqlite",
                      position: (55, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                  position: (54, 16),
                 },
                 position: (53, 11),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "defaultText",
                   position: (56, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (56, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "pkgs.zabbix.proxy-pgsql",
                     position: (56, 42),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (57, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "The Zabbix package to use.",
                   position: (57, 24),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "extraPackages",
              position: (60, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (60, 23),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (61, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (61, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listOf",
                     position: (61, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (61, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (61, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (62, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (62, 24),
                 },
                 target: List {
                  elements: [
                   Variable {
                    identifier: "nettools",
                    position: (62, 32),
                   },
                   Variable {
                    identifier: "nmap",
                    position: (62, 41),
                   },
                   Variable {
                    identifier: "traceroute",
                    position: (62, 46),
                   },
                  ],
                 },
                 position: (62, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "defaultText",
                   position: (63, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (63, 23),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "[ nettools nmap traceroute ]",
                     position: (63, 42),
                    },
                   ],
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (64, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Packages to be added to the Zabbix <envar>PATH</envar>.\nTypically used to add executables for scripts, but can be anything.\n",
                   position: (65, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "modules",
              position: (70, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (70, 17),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (71, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (71, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrsOf",
                     position: (71, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (71, 30),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "package",
                      position: (71, 36),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (72, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "A set of modules to load.",
                   position: (72, 24),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (73, 9),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (74, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (74, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "{\n  \"dummy.so\" = pkgs.stdenv.mkDerivation {\n    name = \"zabbix-dummy-module-",
                     position: (75, 1),
                    },
                    Raw {
                     content: "$",
                     position: (77, 43),
                    },
                    Raw {
                     content: "{cfg.package.version}\";\n    src = cfg.package.src;\n    buildInputs = [ cfg.package ];\n    sourceRoot = \"zabbix-",
                     position: (77, 46),
                    },
                    Raw {
                     content: "$",
                     position: (80, 36),
                    },
                    Raw {
                     content: "{cfg.package.version}/src/modules/dummy\";\n    installPhase = ",
                     position: (80, 39),
                    },
                    Raw {
                     content: "''",
                     position: (81, 30),
                    },
                    Raw {
                     content: "\n      mkdir -p $out/lib\n      cp dummy.so $out/lib/\n    ",
                     position: (81, 33),
                    },
                    Raw {
                     content: "''",
                     position: (84, 15),
                    },
                    Raw {
                     content: ";\n  };\n}\n",
                     position: (84, 18),
                    },
                   ],
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "database",
              position: (90, 7),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (91, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (91, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (92, 11),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (92, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "enum",
                        position: (92, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "mysql",
                          position: (92, 32),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "pgsql",
                          position: (92, 40),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "sqlite",
                          position: (92, 48),
                         },
                        ],
                       },
                      ],
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "example",
                      position: (93, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "mysql",
                      position: (93, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (94, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "pgsql",
                      position: (94, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (95, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Database engine to use.",
                      position: (95, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "host",
                 position: (98, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (98, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (99, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (99, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (99, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (100, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "localhost",
                      position: (100, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (101, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Database host address.",
                      position: (101, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "port",
                 position: (104, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (104, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (105, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (105, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "int",
                       position: (105, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (106, 11),
                     },
                    ],
                   },
                   IfThenElse {
                    predicate: BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (106, 24),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "database",
                          position: (106, 28),
                         },
                         Raw {
                          content: "type",
                          position: (106, 37),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "mysql",
                         position: (106, 46),
                        },
                       ],
                      },
                     ],
                     position: (106, 42),
                    },
                    then: PropertyAccess {
                     expression: Variable {
                      identifier: "mysql",
                      position: (106, 58),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "port",
                        position: (106, 64),
                       },
                      ],
                     },
                     default: None,
                    },
                    else_: PropertyAccess {
                     expression: Variable {
                      identifier: "pgsql",
                      position: (106, 74),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "port",
                        position: (106, 80),
                       },
                      ],
                     },
                     default: None,
                    },
                    position: (106, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "defaultText",
                      position: (107, 11),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "literalExpression",
                     position: (107, 25),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "if config.",
                        position: (108, 1),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "opt",
                          position: (108, 25),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "database",
                            position: (108, 29),
                           },
                           Raw {
                            content: "type",
                            position: (108, 38),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: " == \"mysql\"\nthen config.",
                        position: (108, 43),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "options",
                          position: (109, 27),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "services",
                            position: (109, 35),
                           },
                           Raw {
                            content: "mysql",
                            position: (109, 44),
                           },
                           Raw {
                            content: "port",
                            position: (109, 50),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\nelse config.",
                        position: (109, 55),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "options",
                          position: (110, 27),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "services",
                            position: (110, 35),
                           },
                           Raw {
                            content: "postgresql",
                            position: (110, 44),
                           },
                           Raw {
                            content: "port",
                            position: (110, 55),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\n",
                        position: (110, 60),
                       },
                      ],
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (112, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Database host port.",
                      position: (112, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "name",
                 position: (115, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (115, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (116, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (116, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (116, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (117, 11),
                     },
                    ],
                   },
                   IfThenElse {
                    predicate: BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (117, 24),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "database",
                          position: (117, 28),
                         },
                         Raw {
                          content: "type",
                          position: (117, 37),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "sqlite",
                         position: (117, 46),
                        },
                       ],
                      },
                     ],
                     position: (117, 42),
                    },
                    then: String {
                     parts: [
                      Expression {
                       expression: Variable {
                        identifier: "stateDir",
                        position: (117, 62),
                       },
                      },
                      Raw {
                       content: "/zabbix.db",
                       position: (117, 71),
                      },
                     ],
                    },
                    else_: String {
                     parts: [
                      Raw {
                       content: "zabbix",
                       position: (117, 89),
                      },
                     ],
                    },
                    position: (117, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "defaultText",
                      position: (118, 11),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "literalExpression",
                     position: (118, 25),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "zabbix",
                        position: (118, 44),
                       },
                      ],
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (119, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Database name.",
                      position: (119, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "user",
                 position: (122, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (122, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (123, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (123, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (123, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (124, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "zabbix",
                      position: (124, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (125, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Database user.",
                      position: (125, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "passwordFile",
                 position: (128, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (128, 24),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (129, 11),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (129, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "nullOr",
                        position: (129, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (129, 31),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "path",
                         position: (129, 37),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (130, 11),
                     },
                    ],
                   },
                   Variable {
                    identifier: "null",
                    position: (130, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "example",
                      position: (131, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/run/keys/zabbix-dbpassword",
                      position: (131, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (132, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "A file containing the password corresponding to\n<option>database.user</option>.\n",
                      position: (133, 1),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "socket",
                 position: (138, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (138, 18),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (139, 11),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (139, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "nullOr",
                        position: (139, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (139, 31),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "path",
                         position: (139, 37),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (140, 11),
                     },
                    ],
                   },
                   Variable {
                    identifier: "null",
                    position: (140, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "example",
                      position: (141, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/run/postgresql",
                      position: (141, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (142, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Path to the unix socket file to use for authentication.",
                      position: (142, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "createLocally",
                 position: (145, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (145, 25),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (146, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (146, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "bool",
                       position: (146, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (147, 11),
                     },
                    ],
                   },
                   Variable {
                    identifier: "true",
                    position: (147, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (148, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Whether to create a local database automatically.",
                      position: (148, 26),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "listen",
              position: (152, 7),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "ip",
                 position: (153, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (153, 14),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (154, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (154, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (154, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (155, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "0.0.0.0",
                      position: (155, 22),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (156, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "List of comma delimited IP addresses that the trapper should listen on.\nTrapper will listen on all network interfaces if this parameter is missing.\n",
                      position: (157, 1),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "port",
                 position: (162, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkOption",
                position: (162, 16),
               },
               arguments: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "type",
                      position: (163, 11),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (163, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "port",
                       position: (163, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "default",
                      position: (164, 11),
                     },
                    ],
                   },
                   Int {
                    value: 10051,
                    position: (164, 21),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "description",
                      position: (165, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "Listen port for trapper.\n",
                      position: (166, 1),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "openFirewall",
              position: (171, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (171, 22),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (172, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (172, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bool",
                    position: (172, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (173, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (173, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (174, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Open ports in the firewall for the Zabbix Proxy.\n",
                   position: (175, 1),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "settings",
              position: (179, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (179, 18),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (180, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "types",
                  position: (180, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (180, 28),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "oneOf",
                     position: (180, 37),
                    },
                    arguments: [
                     List {
                      elements: [
                       Variable {
                        identifier: "int",
                        position: (180, 45),
                       },
                       Variable {
                        identifier: "str",
                        position: (180, 49),
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "listOf",
                         position: (180, 54),
                        },
                        arguments: [
                         Variable {
                          identifier: "str",
                          position: (180, 61),
                         },
                        ],
                       },
                      ],
                     },
                    ],
                   },
                  ],
                 },
                 position: (180, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (181, 9),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (182, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Zabbix Proxy configuration. Refer to\n<link xlink:href=\"https://www.zabbix.com/documentation/current/manual/appendix/config/zabbix_proxy\"/>\nfor details on supported values.\n",
                   position: (183, 1),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (187, 9),
                  },
                 ],
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "CacheSize",
                      position: (188, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "1G",
                      position: (188, 24),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "SSHKeyLocation",
                      position: (189, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/var/lib/zabbix/.ssh",
                      position: (189, 29),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "StartPingers",
                      position: (190, 11),
                     },
                    ],
                   },
                   Int {
                    value: 32,
                    position: (190, 26),
                   },
                  ),
                 ],
                 recursive: false,
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (200, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (200, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (200, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (200, 21),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "assertions",
             position: (202, 5),
            },
           ],
          },
          List {
           elements: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "assertion",
                  position: (203, 9),
                 },
                ],
               },
               UnaryOperation {
                operator: Not,
                operand: PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (203, 22),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "services",
                    position: (203, 29),
                   },
                   Raw {
                    content: "zabbixServer",
                    position: (203, 38),
                   },
                   Raw {
                    content: "enable",
                    position: (203, 51),
                   },
                  ],
                 },
                 default: None,
                },
                position: (203, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "message",
                  position: (204, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Please choose one of services.zabbixServer or services.zabbixProxy.",
                  position: (204, 20),
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "assertion",
                  position: (206, 9),
                 },
                ],
               },
               BinaryOperation {
                operator: Implication,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (206, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (206, 25),
                    },
                    Raw {
                     content: "createLocally",
                     position: (206, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (206, 51),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (206, 55),
                      },
                      Raw {
                       content: "user",
                       position: (206, 64),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "user",
                    position: (206, 72),
                   },
                  ],
                  position: (206, 69),
                 },
                ],
                position: (206, 48),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "message",
                  position: (207, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "services.zabbixProxy.database.user must be set to ",
                  position: (207, 20),
                 },
                 Expression {
                  expression: Variable {
                   identifier: "user",
                   position: (207, 72),
                  },
                 },
                 Raw {
                  content: " if services.zabbixProxy.database.createLocally is set true",
                  position: (207, 77),
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "assertion",
                  position: (209, 9),
                 },
                ],
               },
               BinaryOperation {
                operator: Implication,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (209, 21),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (209, 25),
                    },
                    Raw {
                     content: "createLocally",
                     position: (209, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (209, 51),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (209, 55),
                      },
                      Raw {
                       content: "passwordFile",
                       position: (209, 64),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (209, 80),
                   },
                  ],
                  position: (209, 77),
                 },
                ],
                position: (209, 48),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "message",
                  position: (210, 9),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "a password cannot be specified if services.zabbixProxy.database.createLocally is set to true",
                  position: (210, 20),
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (214, 5),
            },
            Raw {
             content: "zabbixProxy",
             position: (214, 14),
            },
            Raw {
             content: "settings",
             position: (214, 26),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkMerge",
            position: (214, 37),
           },
           arguments: [
            List {
             elements: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LogType",
                    position: (216, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "console",
                    position: (216, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ListenIP",
                    position: (217, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (217, 20),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listen",
                     position: (217, 24),
                    },
                    Raw {
                     content: "ip",
                     position: (217, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ListenPort",
                    position: (218, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (218, 22),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listen",
                     position: (218, 26),
                    },
                    Raw {
                     content: "port",
                     position: (218, 33),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Server",
                    position: (219, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (219, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "server",
                     position: (219, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DBHost",
                    position: (221, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (221, 18),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (221, 34),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "database",
                         position: (221, 38),
                        },
                        Raw {
                         content: "createLocally",
                         position: (221, 47),
                        },
                       ],
                      },
                      default: None,
                     },
                     Variable {
                      identifier: "true",
                      position: (221, 64),
                     },
                    ],
                    position: (221, 61),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (221, 70),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (221, 74),
                      },
                      Raw {
                       content: "host",
                       position: (221, 83),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DBName",
                    position: (222, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (222, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (222, 22),
                    },
                    Raw {
                     content: "name",
                     position: (222, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DBUser",
                    position: (223, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (223, 18),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (223, 22),
                    },
                    Raw {
                     content: "user",
                     position: (223, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "SocketDir",
                    position: (224, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "runtimeDir",
                  position: (224, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "FpingLocation",
                    position: (225, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/wrappers/bin/fping",
                    position: (225, 26),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LoadModule",
                    position: (226, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "builtins",
                    position: (226, 22),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrNames",
                      position: (226, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (226, 41),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "modules",
                       position: (226, 45),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (228, 8),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (228, 14),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "database",
                      position: (228, 18),
                     },
                     Raw {
                      content: "createLocally",
                      position: (228, 27),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "true",
                   position: (228, 44),
                  },
                 ],
                 position: (228, 41),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "DBPort",
                      position: (228, 52),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (228, 61),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (228, 65),
                      },
                      Raw {
                       content: "port",
                       position: (228, 74),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (229, 8),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (229, 14),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "database",
                      position: (229, 18),
                     },
                     Raw {
                      content: "passwordFile",
                      position: (229, 27),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (229, 43),
                  },
                 ],
                 position: (229, 40),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "Include",
                      position: (229, 51),
                     },
                    ],
                   },
                   List {
                    elements: [
                     String {
                      parts: [
                       Expression {
                        expression: Variable {
                         identifier: "passwordFile",
                         position: (229, 66),
                        },
                       },
                      ],
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (230, 8),
               },
               arguments: [
                BinaryOperation {
                 operator: LogicalAnd,
                 operands: [
                  Variable {
                   identifier: "mysqlLocal",
                   position: (230, 14),
                  },
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (230, 28),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "database",
                        position: (230, 32),
                       },
                       Raw {
                        content: "socket",
                        position: (230, 41),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "null",
                     position: (230, 51),
                    },
                   ],
                   position: (230, 48),
                  },
                 ],
                 position: (230, 25),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "DBSocket",
                      position: (230, 59),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (230, 70),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (230, 74),
                      },
                      Raw {
                       content: "socket",
                       position: (230, 83),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (231, 8),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (231, 14),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "modules",
                      position: (231, 18),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [],
                   recursive: false,
                  },
                 ],
                 position: (231, 26),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "LoadModulePath",
                      position: (231, 35),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "moduleEnv",
                       position: (231, 55),
                      },
                     },
                     Raw {
                      content: "/lib",
                      position: (231, 65),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                },
               ],
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "networking",
             position: (234, 5),
            },
            Raw {
             content: "firewall",
             position: (234, 16),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkIf",
            position: (234, 27),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (234, 32),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "openFirewall",
                position: (234, 36),
               },
              ],
             },
             default: None,
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "allowedTCPPorts",
                  position: (235, 7),
                 },
                ],
               },
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (235, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "listen",
                     position: (235, 31),
                    },
                    Raw {
                     content: "port",
                     position: (235, 38),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (238, 5),
            },
            Raw {
             content: "mysql",
             position: (238, 14),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "optionalAttrs",
            position: (238, 22),
           },
           arguments: [
            Variable {
             identifier: "mysqlLocal",
             position: (238, 36),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (239, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (239, 16),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (240, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkDefault",
                 position: (240, 17),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (240, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "mariadb",
                     position: (240, 32),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (243, 5),
            },
            Raw {
             content: "services",
             position: (243, 13),
            },
            Raw {
             content: "mysql",
             position: (243, 22),
            },
            Raw {
             content: "postStart",
             position: (243, 28),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkAfter",
            position: (243, 40),
           },
           arguments: [
            FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (243, 49),
             },
             arguments: [
              Variable {
               identifier: "mysqlLocal",
               position: (243, 64),
              },
              String {
               parts: [
                Raw {
                 content: "( echo \"CREATE DATABASE IF NOT EXISTS \\`",
                 position: (244, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (244, 49),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (244, 53),
                    },
                    Raw {
                     content: "name",
                     position: (244, 62),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\\` CHARACTER SET utf8 COLLATE utf8_bin;\"\n  echo \"CREATE USER IF NOT EXISTS ",
                 position: (244, 67),
                },
                Raw {
                 content: "'",
                 position: (245, 41),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (245, 44),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (245, 48),
                    },
                    Raw {
                     content: "user",
                     position: (245, 57),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "'@'localhost' IDENTIFIED WITH ",
                 position: (245, 62),
                },
                Expression {
                 expression: IfThenElse {
                  predicate: BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "getName",
                      position: (245, 98),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (245, 106),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (245, 113),
                         },
                         Raw {
                          content: "mysql",
                          position: (245, 122),
                         },
                         Raw {
                          content: "package",
                          position: (245, 128),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "getName",
                      position: (245, 139),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (245, 147),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "mariadb",
                          position: (245, 152),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   ],
                   position: (245, 136),
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: "unix_socket",
                     position: (245, 167),
                    },
                   ],
                  },
                  else_: String {
                   parts: [
                    Raw {
                     content: "auth_socket",
                     position: (245, 186),
                    },
                   ],
                  },
                  position: (245, 94),
                 },
                },
                Raw {
                 content: ";\"\n  echo \"GRANT ALL PRIVILEGES ON \\`",
                 position: (245, 199),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (246, 43),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (246, 47),
                    },
                    Raw {
                     content: "name",
                     position: (246, 56),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\\`.* TO ",
                 position: (246, 61),
                },
                Raw {
                 content: "'",
                 position: (246, 69),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (246, 72),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (246, 76),
                    },
                    Raw {
                     content: "user",
                     position: (246, 85),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "'@'localhost';\"\n) | ",
                 position: (246, 90),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (247, 13),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "services",
                     position: (247, 20),
                    },
                    Raw {
                     content: "mysql",
                     position: (247, 29),
                    },
                    Raw {
                     content: "package",
                     position: (247, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/mysql -N\n",
                 position: (247, 43),
                },
               ],
              },
             ],
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (250, 5),
            },
            Raw {
             content: "postgresql",
             position: (250, 14),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "optionalAttrs",
            position: (250, 27),
           },
           arguments: [
            Variable {
             identifier: "pgsqlLocal",
             position: (250, 41),
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "enable",
                  position: (251, 7),
                 },
                ],
               },
               Variable {
                identifier: "true",
                position: (251, 16),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "ensureDatabases",
                  position: (252, 7),
                 },
                ],
               },
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (252, 27),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "database",
                     position: (252, 31),
                    },
                    Raw {
                     content: "name",
                     position: (252, 40),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "ensureUsers",
                  position: (253, 7),
                 },
                ],
               },
               List {
                elements: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "name",
                       position: (254, 11),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (254, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "database",
                        position: (254, 22),
                       },
                       Raw {
                        content: "user",
                        position: (254, 31),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "ensurePermissions",
                       position: (255, 11),
                      },
                     ],
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Expression {
                          expression: String {
                           parts: [
                            Raw {
                             content: "DATABASE ",
                             position: (255, 34),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (255, 45),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "database",
                                 position: (255, 49),
                                },
                                Raw {
                                 content: "name",
                                 position: (255, 58),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                          },
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "ALL PRIVILEGES",
                          position: (255, 68),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ),
             ],
             recursive: false,
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (260, 5),
            },
            Raw {
             content: "users",
             position: (260, 11),
            },
            Expression {
             expression: Variable {
              identifier: "user",
              position: (260, 19),
             },
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (261, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Zabbix daemon user",
                position: (261, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "uid",
                position: (262, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (262, 13),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "ids",
                 position: (262, 20),
                },
                Raw {
                 content: "uids",
                 position: (262, 24),
                },
                Raw {
                 content: "zabbix",
                 position: (262, 29),
                },
               ],
              },
              default: None,
             },
            ),
            Inherit(
             None,
             [
              Raw {
               content: "group",
               position: (263, 15),
              },
             ],
            ),
           ],
           recursive: false,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "users",
             position: (266, 5),
            },
            Raw {
             content: "groups",
             position: (266, 11),
            },
            Expression {
             expression: Variable {
              identifier: "group",
              position: (266, 20),
             },
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "gid",
                position: (267, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (267, 13),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "ids",
                 position: (267, 20),
                },
                Raw {
                 content: "gids",
                 position: (267, 24),
                },
                Raw {
                 content: "zabbix",
                 position: (267, 29),
                },
               ],
              },
              default: None,
             },
            ),
           ],
           recursive: false,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "security",
             position: (270, 5),
            },
            Raw {
             content: "wrappers",
             position: (270, 14),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "fping",
                position: (271, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "setuid",
                   position: (272, 11),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (272, 20),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "owner",
                   position: (273, 11),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "root",
                   position: (273, 20),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "group",
                   position: (274, 11),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "root",
                   position: (274, 20),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "source",
                   position: (275, 11),
                  },
                 ],
                },
                String {
                 parts: [
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (275, 23),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "fping",
                       position: (275, 28),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/fping",
                   position: (275, 34),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ),
           ],
           recursive: false,
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (279, 5),
            },
            Raw {
             content: "services",
             position: (279, 13),
            },
            Raw {
             content: "zabbix-proxy",
             position: (279, 22),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (280, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Zabbix Proxy",
                position: (280, 22),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wantedBy",
                position: (282, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "multi-user.target",
                  position: (282, 21),
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "after",
                position: (283, 7),
               },
              ],
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (283, 15),
                },
                arguments: [
                 Variable {
                  identifier: "mysqlLocal",
                  position: (283, 24),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mysql.service",
                    position: (283, 36),
                   },
                  ],
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (283, 54),
                },
                arguments: [
                 Variable {
                  identifier: "pgsqlLocal",
                  position: (283, 63),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "postgresql.service",
                    position: (283, 75),
                   },
                  ],
                 },
                ],
               },
              ],
              position: (283, 51),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "path",
                position: (285, 7),
               },
              ],
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "/run/wrappers",
                    position: (285, 17),
                   },
                  ],
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (285, 37),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "extraPackages",
                   position: (285, 41),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (285, 34),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "preStart",
                position: (286, 7),
               },
              ],
             },
             BinaryOperation {
              operator: Addition,
              operands: [
               BinaryOperation {
                operator: Addition,
                operands: [
                 BinaryOperation {
                  operator: Addition,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "optionalString",
                     position: (286, 18),
                    },
                    arguments: [
                     Variable {
                      identifier: "pgsqlLocal",
                      position: (286, 33),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "if ! test -e \"",
                        position: (287, 1),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "stateDir",
                         position: (287, 25),
                        },
                       },
                       Raw {
                        content: "/db-created\"; then\n  cat ",
                        position: (287, 34),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (288, 17),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (288, 21),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/share/zabbix/database/postgresql/schema.sql | ",
                        position: (288, 29),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pgsql",
                          position: (288, 78),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (288, 84),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/psql ",
                        position: (288, 92),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (288, 104),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "database",
                            position: (288, 108),
                           },
                           Raw {
                            content: "name",
                            position: (288, 117),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\n  touch \"",
                        position: (288, 122),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "stateDir",
                         position: (289, 20),
                        },
                       },
                       Raw {
                        content: "/db-created\"\nfi\n",
                        position: (289, 29),
                       },
                      ],
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "optionalString",
                     position: (291, 12),
                    },
                    arguments: [
                     Variable {
                      identifier: "mysqlLocal",
                      position: (291, 27),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "if ! test -e \"",
                        position: (292, 1),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "stateDir",
                         position: (292, 25),
                        },
                       },
                       Raw {
                        content: "/db-created\"; then\n  cat ",
                        position: (292, 34),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (293, 17),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (293, 21),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/share/zabbix/database/mysql/schema.sql | ",
                        position: (293, 29),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "mysql",
                          position: (293, 73),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (293, 79),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/mysql ",
                        position: (293, 87),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (293, 100),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "database",
                            position: (293, 104),
                           },
                           Raw {
                            content: "name",
                            position: (293, 113),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "\n  touch \"",
                        position: (293, 118),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "stateDir",
                         position: (294, 20),
                        },
                       },
                       Raw {
                        content: "/db-created\"\nfi\n",
                        position: (294, 29),
                       },
                      ],
                     },
                    ],
                   },
                  ],
                  position: (291, 10),
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (296, 12),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (296, 28),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "database",
                         position: (296, 32),
                        },
                        Raw {
                         content: "type",
                         position: (296, 41),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "sqlite",
                        position: (296, 50),
                       },
                      ],
                     },
                    ],
                    position: (296, 46),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "if ! test -e \"",
                      position: (297, 1),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (297, 25),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "database",
                          position: (297, 29),
                         },
                         Raw {
                          content: "name",
                          position: (297, 38),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "\"; then\n  ",
                      position: (297, 43),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (298, 13),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sqlite",
                          position: (298, 18),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/sqlite3 \"",
                      position: (298, 25),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (298, 41),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "database",
                          position: (298, 45),
                         },
                         Raw {
                          content: "name",
                          position: (298, 54),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "\" < ",
                      position: (298, 59),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (298, 65),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "package",
                          position: (298, 69),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/share/zabbix/database/sqlite3/schema.sql\nfi\n",
                      position: (298, 77),
                     },
                    ],
                   },
                  ],
                 },
                ],
                position: (296, 10),
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optionalString",
                 position: (300, 12),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (300, 28),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "database",
                       position: (300, 32),
                      },
                      Raw {
                       content: "passwordFile",
                       position: (300, 41),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (300, 57),
                   },
                  ],
                  position: (300, 54),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "# create a copy of the supplied password file in a format zabbix can consume\ntouch ",
                    position: (301, 1),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "passwordFile",
                     position: (302, 17),
                    },
                   },
                   Raw {
                    content: "\nchmod 0600 ",
                    position: (302, 30),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "passwordFile",
                     position: (303, 22),
                    },
                   },
                   Raw {
                    content: "\necho -n \"DBPassword = \" > ",
                    position: (303, 35),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "passwordFile",
                     position: (304, 37),
                    },
                   },
                   Raw {
                    content: "\ncat ",
                    position: (304, 50),
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (305, 15),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "database",
                        position: (305, 19),
                       },
                       Raw {
                        content: "passwordFile",
                        position: (305, 28),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " >> ",
                    position: (305, 41),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "passwordFile",
                     position: (305, 47),
                    },
                   },
                   Raw {
                    content: "\n",
                    position: (305, 60),
                   },
                  ],
                 },
                ],
               },
              ],
              position: (300, 10),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (308, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ExecStart",
                   position: (309, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "@",
                   position: (309, 22),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (309, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (309, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/sbin/zabbix_proxy zabbix_proxy -f --config ",
                   position: (309, 37),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "configFile",
                    position: (309, 83),
                   },
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "Restart",
                   position: (310, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "always",
                   position: (310, 20),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RestartSec",
                   position: (311, 9),
                  },
                 ],
                },
                Int {
                 value: 2,
                 position: (311, 22),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "User",
                   position: (313, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "user",
                 position: (313, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "Group",
                   position: (314, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "group",
                 position: (314, 17),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RuntimeDirectory",
                   position: (315, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "zabbix",
                   position: (315, 29),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "StateDirectory",
                   position: (316, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "zabbix",
                   position: (316, 27),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "PrivateTmp",
                   position: (317, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (317, 22),
                },
               ),
              ],
              recursive: false,
             },
            ),
           ],
           recursive: false,
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
  position: (3, 1),
 },
 position: (1, 1),
}