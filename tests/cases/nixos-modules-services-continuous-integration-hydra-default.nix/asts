---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "hydra",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "baseDir",
        position: (9, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "/var/lib/hydra",
       },
      ],
      position: (9, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hydraConf",
        position: (11, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (11, 15),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeScript",
          position: (11, 20),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "hydra.conf",
         },
        ],
        position: (11, 32),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (11, 45),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "extraConfig",
           position: (11, 49),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hydraEnv",
        position: (13, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "HYDRA_DBI",
           position: (14, 7),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (14, 19),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "dbi",
            position: (14, 23),
           },
          ],
         },
         default: None,
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "HYDRA_CONFIG",
           position: (15, 7),
          },
         ],
        },
        String {
         parts: [
          Expression {
           expression: Variable {
            identifier: "baseDir",
            position: (15, 25),
           },
          },
          Raw {
           content: "/hydra.conf",
          },
         ],
         position: (15, 22),
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "HYDRA_DATA",
           position: (16, 7),
          },
         ],
        },
        String {
         parts: [
          Expression {
           expression: Variable {
            identifier: "baseDir",
            position: (16, 23),
           },
          },
         ],
         position: (16, 20),
        },
       ),
      ],
      recursive: false,
      position: (14, 5),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "env",
        position: (19, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Update,
      operands: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "NIX_REMOTE",
             position: (20, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "daemon",
            },
           ],
           position: (20, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "SSL_CERT_FILE",
             position: (21, 7),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "/etc/ssl/certs/ca-certificates.crt",
            },
           ],
           position: (21, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "PGPASSFILE",
             position: (22, 7),
            },
           ],
          },
          String {
           parts: [
            Expression {
             expression: Variable {
              identifier: "baseDir",
              position: (22, 23),
             },
            },
            Raw {
             content: "/pgpass",
            },
           ],
           position: (22, 20),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "NIX_REMOTE_SYSTEMS",
             position: (23, 7),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "concatStringsSep",
            position: (23, 28),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: ":",
              },
             ],
             position: (23, 45),
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (23, 49),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "buildMachinesFiles",
                position: (23, 53),
               },
              ],
             },
             default: None,
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (20, 5),
       },
       BinaryOperation {
        operator: Update,
        operands: [
         FunctionApplication {
          function: Variable {
           identifier: "optionalAttrs",
           position: (24, 10),
          },
          arguments: [
           BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (24, 25),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "smtpHost",
                 position: (24, 29),
                },
               ],
              },
              default: None,
             },
             Variable {
              identifier: "null",
              position: (24, 41),
             },
            ],
            position: (24, 38),
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "EMAIL_SENDER_TRANSPORT",
                 position: (25, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "SMTP",
                },
               ],
               position: (25, 32),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "EMAIL_SENDER_TRANSPORT_host",
                 position: (26, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (26, 37),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "smtpHost",
                  position: (26, 41),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (24, 47),
           },
          ],
         },
         BinaryOperation {
          operator: Update,
          operands: [
           Variable {
            identifier: "hydraEnv",
            position: (27, 10),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (27, 22),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "extraEnv",
               position: (27, 26),
              },
             ],
            },
            default: None,
           },
          ],
          position: (27, 19),
         },
        ],
        position: (27, 7),
       },
      ],
      position: (24, 7),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "serverEnv",
        position: (29, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Update,
      operands: [
       Variable {
        identifier: "env",
        position: (29, 15),
       },
       BinaryOperation {
        operator: Update,
        operands: [
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "HYDRA_TRACKER",
               position: (30, 7),
              },
             ],
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (30, 23),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "tracker",
                position: (30, 27),
               },
              ],
             },
             default: None,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "XDG_CACHE_HOME",
               position: (31, 7),
              },
             ],
            },
            String {
             parts: [
              Expression {
               expression: Variable {
                identifier: "baseDir",
                position: (31, 27),
               },
              },
              Raw {
               content: "/www/.cache",
              },
             ],
             position: (31, 24),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "COLUMNS",
               position: (32, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "80",
              },
             ],
             position: (32, 17),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "PGPASSFILE",
               position: (33, 7),
              },
             ],
            },
            String {
             parts: [
              Expression {
               expression: Variable {
                identifier: "baseDir",
                position: (33, 23),
               },
              },
              Raw {
               content: "/pgpass-www",
              },
             ],
             position: (33, 20),
            },
           ),
          ],
          recursive: false,
          position: (30, 5),
         },
         FunctionApplication {
          function: Variable {
           identifier: "optionalAttrs",
           position: (34, 11),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (34, 25),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "debugServer",
               position: (34, 29),
              },
             ],
            },
            default: None,
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "DBIC_TRACE",
                 position: (34, 43),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "1",
                },
               ],
               position: (34, 56),
              },
             ),
            ],
            recursive: false,
            position: (34, 41),
           },
          ],
         },
        ],
        position: (34, 7),
       },
      ],
      position: (29, 19),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "localDB",
        position: (36, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "dbi:Pg:dbname=hydra;user=hydra;",
       },
      ],
      position: (36, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "haveLocalDB",
        position: (38, 3),
       },
      ],
     },
     BinaryOperation {
      operator: EqualTo,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (38, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "dbi",
           position: (38, 21),
          },
         ],
        },
        default: None,
       },
       Variable {
        identifier: "localDB",
        position: (38, 28),
       },
      ],
      position: (38, 25),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hydra-package",
        position: (40, 3),
       },
      ],
     },
     LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "makeWrapperArgs",
           position: (42, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "concatStringsSep",
          position: (42, 23),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: " ",
            },
           ],
           position: (42, 40),
          },
          FunctionApplication {
           function: Variable {
            identifier: "mapAttrsToList",
            position: (42, 45),
           },
           arguments: [
            Function {
             argument: Some(
              "key",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: Function {
              argument: Some(
               "value",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: String {
               parts: [
                Raw {
                 content: "--set \"",
                },
                Expression {
                 expression: Variable {
                  identifier: "key",
                  position: (42, 84),
                 },
                },
                Raw {
                 content: "\" \"",
                },
                Expression {
                 expression: Variable {
                  identifier: "value",
                  position: (42, 95),
                 },
                },
                Raw {
                 content: "\"",
                },
               ],
               position: (42, 73),
              },
              position: (42, 66),
             },
             position: (42, 61),
            },
            Variable {
             identifier: "hydraEnv",
             position: (42, 106),
            },
           ],
          },
         ],
        },
       ),
      ],
      target: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (43, 6),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "buildEnv",
           position: (43, 11),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "name",
              position: (44, 5),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "hydra-env",
             },
            ],
            position: (44, 12),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "buildInputs",
              position: (45, 5),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (45, 21),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "makeWrapper",
                 position: (45, 26),
                },
               ],
              },
              default: None,
             },
            ],
            position: (45, 19),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "paths",
              position: (46, 5),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (46, 15),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (46, 19),
                },
               ],
              },
              default: None,
             },
            ],
            position: (46, 13),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "postBuild",
              position: (48, 5),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "if [ -L \"$out/bin\" ]; then\n    unlink \"$out/bin\"\nfi\nmkdir -p \"$out/bin\"\n\nfor path in ",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatStringsSep",
                position: (54, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: " ",
                  },
                 ],
                 position: (54, 38),
                },
                Variable {
                 identifier: "paths",
                 position: (54, 42),
                },
               ],
              },
             },
             Raw {
              content: "; do\n  if [ -d \"$path/bin\" ]; then\n    cd \"$path/bin\"\n    for prg in *; do\n      if [ -f \"$prg\" ]; then\n        rm -f \"$out/bin/$prg\"\n        if [ -x \"$prg\" ]; then\n          makeWrapper \"$path/bin/$prg\" \"$out/bin/$prg\" ",
             },
             Expression {
              expression: Variable {
               identifier: "makeWrapperArgs",
               position: (61, 64),
              },
             },
             Raw {
              content: "\n        fi\n      fi\n    done\n  fi\ndone\n",
             },
            ],
            position: (48, 17),
           },
          ),
         ],
         recursive: true,
         position: (43, 20),
        },
       ],
      },
      position: (41, 3),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (74, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (76, 5),
           },
           Raw {
            content: "hydra",
            position: (76, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (78, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (78, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (79, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (79, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (79, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (80, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (80, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (81, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to run Hydra services.\n",
                   },
                  ],
                  position: (81, 23),
                 },
                ),
               ],
               recursive: false,
               position: (78, 25),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "dbi",
               position: (86, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (86, 13),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (87, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (87, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (87, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (88, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "localDB",
                  position: (88, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (89, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "dbi:Pg:dbname=hydra;host=postgres.example.org;user=foo;",
                   },
                  ],
                  position: (89, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (90, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The DBI string for Hydra database connection.\n\nNOTE: Attempts to set `application_name` will be overridden by\n`hydra-TYPE` (where TYPE is e.g. `evaluator`, `queue-runner`,\netc.) in all hydra services to more easily distinguish where\nqueries are coming from.\n",
                   },
                  ],
                  position: (90, 23),
                 },
                ),
               ],
               recursive: false,
               position: (86, 22),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (100, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (100, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (101, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (101, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (101, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (102, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (102, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "hydra-unstable",
                     position: (102, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (103, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (103, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.hydra-unstable",
                     },
                    ],
                    position: (103, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (104, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The Hydra package.",
                   },
                  ],
                  position: (104, 23),
                 },
                ),
               ],
               recursive: false,
               position: (100, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "hydraURL",
               position: (107, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (107, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (108, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (108, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (108, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (109, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The base URL for the Hydra webserver instance. Used for links in emails.\n",
                   },
                  ],
                  position: (109, 23),
                 },
                ),
               ],
               recursive: false,
               position: (107, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "listenHost",
               position: (114, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (114, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (115, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (115, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (115, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (116, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "*",
                   },
                  ],
                  position: (116, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (117, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "localhost",
                   },
                  ],
                  position: (117, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (118, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The hostname or address to listen on or <literal>*</literal> to listen\non all interfaces.\n",
                   },
                  ],
                  position: (118, 23),
                 },
                ),
               ],
               recursive: false,
               position: (114, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "port",
               position: (124, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (124, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (125, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (125, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (125, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (126, 9),
                   },
                  ],
                 },
                 Int {
                  value: 3000,
                  position: (126, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (127, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "TCP port the web server should listen to.\n",
                   },
                  ],
                  position: (127, 23),
                 },
                ),
               ],
               recursive: false,
               position: (124, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "minimumDiskFree",
               position: (132, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (132, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (133, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (133, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (133, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (134, 9),
                   },
                  ],
                 },
                 Int {
                  value: 0,
                  position: (134, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (135, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Threshold of minimum disk space (GiB) to determine if the queue runner should run or not.\n",
                   },
                  ],
                  position: (135, 23),
                 },
                ),
               ],
               recursive: false,
               position: (132, 34),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "minimumDiskFreeEvaluator",
               position: (140, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (140, 34),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (141, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (141, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (141, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (142, 9),
                   },
                  ],
                 },
                 Int {
                  value: 0,
                  position: (142, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (143, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Threshold of minimum disk space (GiB) to determine if the evaluator should run or not.\n",
                   },
                  ],
                  position: (143, 23),
                 },
                ),
               ],
               recursive: false,
               position: (140, 43),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "notificationSender",
               position: (148, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (148, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (149, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (149, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (149, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (150, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Sender email address used for email notifications.\n",
                   },
                  ],
                  position: (150, 23),
                 },
                ),
               ],
               recursive: false,
               position: (148, 37),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "smtpHost",
               position: (155, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (155, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (156, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (156, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (156, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (156, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (156, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (157, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (157, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (158, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "localhost",
                   },
                  ],
                  position: (158, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (159, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Hostname of the SMTP server to use to send email.\n",
                   },
                  ],
                  position: (159, 23),
                 },
                ),
               ],
               recursive: false,
               position: (155, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "tracker",
               position: (164, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (164, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (165, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (165, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (165, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (166, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                  position: (166, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (167, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Piece of HTML that is included on all pages.\n",
                   },
                  ],
                  position: (167, 23),
                 },
                ),
               ],
               recursive: false,
               position: (164, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "logo",
               position: (172, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (172, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (173, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (173, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (173, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (173, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (173, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (174, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (174, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (175, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path to a file containing the logo of your Hydra instance.\n",
                   },
                  ],
                  position: (175, 23),
                 },
                ),
               ],
               recursive: false,
               position: (172, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "debugServer",
               position: (180, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (180, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (181, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (181, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (181, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (182, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (182, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (183, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to run the server in debug mode.",
                   },
                  ],
                  position: (183, 23),
                 },
                ),
               ],
               recursive: false,
               position: (180, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraConfig",
               position: (186, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (186, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (187, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (187, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (187, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (188, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra lines for the Hydra configuration.",
                   },
                  ],
                  position: (188, 23),
                 },
                ),
               ],
               recursive: false,
               position: (186, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraEnv",
               position: (191, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (191, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (192, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (192, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (192, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (192, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (192, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (193, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (193, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (194, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra environment variables for Hydra.",
                   },
                  ],
                  position: (194, 23),
                 },
                ),
               ],
               recursive: false,
               position: (191, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "gcRootsDir",
               position: (197, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (197, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (198, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (198, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "path",
                     position: (198, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (199, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/nix/var/nix/gcroots/hydra",
                   },
                  ],
                  position: (199, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (200, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Directory that holds Hydra garbage collector roots.",
                   },
                  ],
                  position: (200, 23),
                 },
                ),
               ],
               recursive: false,
               position: (197, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "buildMachinesFiles",
               position: (203, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (203, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (204, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (204, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (204, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (204, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (204, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (205, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "optional",
                   position: (205, 19),
                  },
                  arguments: [
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "config",
                       position: (205, 29),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "nix",
                         position: (205, 36),
                        },
                        Raw {
                         content: "buildMachines",
                         position: (205, 40),
                        },
                       ],
                      },
                      default: None,
                     },
                     List {
                      elements: [],
                      position: (205, 57),
                     },
                    ],
                    position: (205, 54),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/etc/nix/machines",
                     },
                    ],
                    position: (205, 61),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (206, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (206, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "optional (config.nix.buildMachines != []) \"/etc/nix/machines\"",
                     },
                    ],
                    position: (206, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (207, 9),
                   },
                  ],
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/etc/nix/machines",
                     },
                    ],
                    position: (207, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "/var/lib/hydra/provisioner/machines",
                     },
                    ],
                    position: (207, 41),
                   },
                  ],
                  position: (207, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (208, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of files containing build machines.",
                   },
                  ],
                  position: (208, 23),
                 },
                ),
               ],
               recursive: false,
               position: (203, 37),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "useSubstitutes",
               position: (211, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (211, 24),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (212, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (212, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (212, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (213, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (213, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (214, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to use binary caches for downloading store paths. Note that\nbinary substitutions trigger (a potentially large number of) additional\nHTTP requests that slow down the queue monitor thread significantly.\nAlso, this Hydra instance will serve those downloaded store paths to\nits users with its own signature attached as if it had built them\nitself, so don't enable this feature unless your active binary caches\nare absolute trustworthy.\n",
                   },
                  ],
                  position: (214, 23),
                 },
                ),
               ],
               recursive: false,
               position: (211, 33),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (76, 22),
         },
        ),
       ],
       recursive: false,
       position: (74, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (231, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (231, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (231, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (231, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (233, 5),
             },
             Raw {
              content: "groups",
              position: (233, 11),
             },
             Raw {
              content: "hydra",
              position: (233, 18),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "gid",
                 position: (234, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (234, 13),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (234, 20),
                 },
                 Raw {
                  content: "gids",
                  position: (234, 24),
                 },
                 Raw {
                  content: "hydra",
                  position: (234, 29),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (233, 26),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (237, 5),
             },
             Raw {
              content: "users",
              position: (237, 11),
             },
             Raw {
              content: "hydra",
              position: (237, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (238, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Hydra",
                },
               ],
               position: (238, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (239, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "hydra",
                },
               ],
               position: (239, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "home",
                 position: (241, 9),
                },
               ],
              },
              Variable {
               identifier: "baseDir",
               position: (241, 16),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "useDefaultShell",
                 position: (242, 9),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (242, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "uid",
                 position: (243, 9),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (243, 15),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (243, 22),
                 },
                 Raw {
                  content: "uids",
                  position: (243, 26),
                 },
                 Raw {
                  content: "hydra",
                  position: (243, 31),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (238, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (246, 5),
             },
             Raw {
              content: "users",
              position: (246, 11),
             },
             Raw {
              content: "hydra-queue-runner",
              position: (246, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (247, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Hydra queue runner",
                },
               ],
               position: (247, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (248, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "hydra",
                },
               ],
               position: (248, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "useDefaultShell",
                 position: (249, 9),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (249, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "home",
                 position: (250, 9),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (250, 19),
                 },
                },
                Raw {
                 content: "/queue-runner",
                },
               ],
               position: (250, 16),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "uid",
                 position: (251, 9),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (251, 15),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (251, 22),
                 },
                 Raw {
                  content: "uids",
                  position: (251, 26),
                 },
                 Raw {
                  content: "hydra-queue-runner",
                  position: (251, 31),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (247, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (254, 5),
             },
             Raw {
              content: "users",
              position: (254, 11),
             },
             Raw {
              content: "hydra-www",
              position: (254, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (255, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Hydra web server",
                },
               ],
               position: (255, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (256, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "hydra",
                },
               ],
               position: (256, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "useDefaultShell",
                 position: (257, 9),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (257, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "uid",
                 position: (258, 9),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (258, 15),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (258, 22),
                 },
                 Raw {
                  content: "uids",
                  position: (258, 26),
                 },
                 Raw {
                  content: "hydra-www",
                  position: (258, 31),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (255, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (261, 5),
             },
             Raw {
              content: "hydra",
              position: (261, 14),
             },
             Raw {
              content: "extraConfig",
              position: (261, 20),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "using_frontend_proxy = 1\nbase_uri = ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (264, 22),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "hydraURL",
                  position: (264, 26),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\nnotification_sender = ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (265, 33),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "notificationSender",
                  position: (265, 37),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\nmax_servers = 25\n",
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (267, 11),
               },
               arguments: [
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (267, 27),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "logo",
                      position: (267, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (267, 39),
                  },
                 ],
                 position: (267, 36),
                },
                String {
                 parts: [
                  Raw {
                   content: "hydra_logo = ",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (268, 26),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "logo",
                       position: (268, 30),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\n",
                  },
                 ],
                 position: (267, 45),
                },
               ],
              },
             },
             Raw {
              content: "\ngc_roots_dir = ",
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (270, 26),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "gcRootsDir",
                  position: (270, 30),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\nuse-substitutes = ",
             },
             Expression {
              expression: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (271, 32),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "useSubstitutes",
                   position: (271, 36),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "1",
                 },
                ],
                position: (271, 56),
               },
               else_: String {
                parts: [
                 Raw {
                  content: "0",
                 },
                ],
                position: (271, 65),
               },
               position: (271, 29),
              },
             },
             Raw {
              content: "\n",
             },
            ],
            position: (262, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (274, 5),
             },
             Raw {
              content: "systemPackages",
              position: (274, 17),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "hydra-package",
              position: (274, 36),
             },
            ],
            position: (274, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (276, 5),
             },
             Raw {
              content: "variables",
              position: (276, 17),
             },
            ],
           },
           Variable {
            identifier: "hydraEnv",
            position: (276, 29),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "nix",
              position: (278, 5),
             },
             Raw {
              content: "settings",
              position: (278, 9),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (278, 20),
            },
            arguments: [
             List {
              elements: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "keep-outputs",
                     position: (280, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (280, 24),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "keep-derivations",
                     position: (281, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (281, 28),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "trusted-users",
                     position: (282, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "hydra-queue-runner",
                      },
                     ],
                     position: (282, 27),
                    },
                   ],
                   position: (282, 25),
                  },
                 ),
                ],
                recursive: false,
                position: (279, 7),
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (285, 8),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "versionOlder",
                   position: (285, 14),
                  },
                  arguments: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "getVersion",
                     position: (285, 28),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "config",
                       position: (285, 39),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "nix",
                         position: (285, 46),
                        },
                        Raw {
                         content: "package",
                         position: (285, 50),
                        },
                        Raw {
                         content: "out",
                         position: (285, 58),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "2.4pre",
                     },
                    ],
                    position: (285, 63),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "gc-check-reachability",
                       position: (289, 11),
                      },
                     ],
                    },
                    Variable {
                     identifier: "false",
                     position: (289, 35),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (286, 9),
                 },
                ],
               },
              ],
              position: (278, 28),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (294, 5),
             },
             Raw {
              content: "services",
              position: (294, 13),
             },
             Raw {
              content: "hydra-init",
              position: (294, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (295, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (295, 22),
                },
               ],
               position: (295, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (296, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "optional",
                position: (296, 20),
               },
               arguments: [
                Variable {
                 identifier: "haveLocalDB",
                 position: (296, 29),
                },
                String {
                 parts: [
                  Raw {
                   content: "postgresql.service",
                  },
                 ],
                 position: (296, 41),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (297, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "optional",
                position: (297, 17),
               },
               arguments: [
                Variable {
                 identifier: "haveLocalDB",
                 position: (297, 26),
                },
                String {
                 parts: [
                  Raw {
                   content: "postgresql.service",
                  },
                 ],
                 position: (297, 38),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (298, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "env",
                 position: (298, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (299, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "env",
                        position: (299, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (299, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-init",
                     },
                    ],
                    position: (299, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (298, 30),
                },
               ],
               position: (298, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "preStart",
                 position: (301, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "mkdir -p ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (302, 22),
                 },
                },
                Raw {
                 content: "\nchown hydra.hydra ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (303, 31),
                 },
                },
                Raw {
                 content: "\nchmod 0750 ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (304, 24),
                 },
                },
                Raw {
                 content: "\n\nln -sf ",
                },
                Expression {
                 expression: Variable {
                  identifier: "hydraConf",
                  position: (306, 20),
                 },
                },
                Raw {
                 content: " ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (306, 33),
                 },
                },
                Raw {
                 content: "/hydra.conf\n\nmkdir -m 0700 -p ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (308, 30),
                 },
                },
                Raw {
                 content: "/www\nchown hydra-www.hydra ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (309, 35),
                 },
                },
                Raw {
                 content: "/www\n\nmkdir -m 0700 -p ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (311, 30),
                 },
                },
                Raw {
                 content: "/queue-runner\nmkdir -m 0750 -p ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (312, 30),
                 },
                },
                Raw {
                 content: "/build-logs\nchown hydra-queue-runner.hydra ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (313, 44),
                 },
                },
                Raw {
                 content: "/queue-runner ",
                },
                Expression {
                 expression: Variable {
                  identifier: "baseDir",
                  position: (313, 68),
                 },
                },
                Raw {
                 content: "/build-logs\n\n",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (315, 13),
                  },
                  arguments: [
                   Variable {
                    identifier: "haveLocalDB",
                    position: (315, 28),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "if ! [ -e ",
                     },
                     Expression {
                      expression: Variable {
                       identifier: "baseDir",
                       position: (316, 25),
                      },
                     },
                     Raw {
                      content: "/.db-created ]; then\n  ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (317, 17),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sudo",
                          position: (317, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/sudo -u ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (317, 42),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (317, 49),
                         },
                         Raw {
                          content: "postgresql",
                          position: (317, 58),
                         },
                         Raw {
                          content: "superUser",
                          position: (317, 69),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: " ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (317, 82),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (317, 89),
                         },
                         Raw {
                          content: "postgresql",
                          position: (317, 98),
                         },
                         Raw {
                          content: "package",
                          position: (317, 109),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/createuser hydra\n  ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (318, 17),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sudo",
                          position: (318, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/sudo -u ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (318, 42),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (318, 49),
                         },
                         Raw {
                          content: "postgresql",
                          position: (318, 58),
                         },
                         Raw {
                          content: "superUser",
                          position: (318, 69),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: " ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (318, 82),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (318, 89),
                         },
                         Raw {
                          content: "postgresql",
                          position: (318, 98),
                         },
                         Raw {
                          content: "package",
                          position: (318, 109),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/createdb -O hydra hydra\n  touch ",
                     },
                     Expression {
                      expression: Variable {
                       identifier: "baseDir",
                       position: (319, 23),
                      },
                     },
                     Raw {
                      content: "/.db-created\nfi\necho \"create extension if not exists pg_trgm\" | ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (321, 63),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "sudo",
                          position: (321, 68),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/sudo -u ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (321, 88),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (321, 95),
                         },
                         Raw {
                          content: "postgresql",
                          position: (321, 104),
                         },
                         Raw {
                          content: "superUser",
                          position: (321, 115),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: " -- ",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (321, 131),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "services",
                          position: (321, 138),
                         },
                         Raw {
                          content: "postgresql",
                          position: (321, 147),
                         },
                         Raw {
                          content: "package",
                          position: (321, 158),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/psql hydra\n",
                     },
                    ],
                    position: (315, 40),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n\nif [ ! -e ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (324, 23),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gcRootsDir",
                     position: (324, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: " ]; then\n\n  # Move legacy roots directory.\n  if [ -e /nix/var/nix/gcroots/per-user/hydra/hydra-roots ]; then\n    mv /nix/var/nix/gcroots/per-user/hydra/hydra-roots ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (328, 68),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gcRootsDir",
                     position: (328, 72),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\n  fi\n\n  mkdir -p ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (331, 24),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gcRootsDir",
                     position: (331, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\nfi\n\n# Move legacy hydra-www roots.\nif [ -e /nix/var/nix/gcroots/per-user/hydra-www/hydra-roots ]; then\n  find /nix/var/nix/gcroots/per-user/hydra-www/hydra-roots/ -type f \\\n    | xargs -r mv -f -t ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (337, 37),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gcRootsDir",
                     position: (337, 41),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/\n  rmdir /nix/var/nix/gcroots/per-user/hydra-www/hydra-roots\nfi\n\nchown hydra.hydra ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (341, 31),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gcRootsDir",
                     position: (341, 35),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\nchmod 2775 ",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (342, 24),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "gcRootsDir",
                     position: (342, 28),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\n",
                },
               ],
               position: (301, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (344, 9),
                },
                Raw {
                 content: "ExecStart",
                 position: (344, 23),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "hydra-package",
                  position: (344, 38),
                 },
                },
                Raw {
                 content: "/bin/hydra-init",
                },
               ],
               position: (344, 35),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (345, 9),
                },
                Raw {
                 content: "PermissionsStartOnly",
                 position: (345, 23),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (345, 46),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (346, 9),
                },
                Raw {
                 content: "User",
                 position: (346, 23),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "hydra",
                },
               ],
               position: (346, 30),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (347, 9),
                },
                Raw {
                 content: "Type",
                 position: (347, 23),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "oneshot",
                },
               ],
               position: (347, 30),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (348, 9),
                },
                Raw {
                 content: "RemainAfterExit",
                 position: (348, 23),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (348, 41),
              },
             ),
            ],
            recursive: false,
            position: (295, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (351, 5),
             },
             Raw {
              content: "services",
              position: (351, 13),
             },
             Raw {
              content: "hydra-server",
              position: (351, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (352, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (352, 22),
                },
               ],
               position: (352, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (353, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (353, 22),
                },
               ],
               position: (353, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (354, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (354, 19),
                },
               ],
               position: (354, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (355, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "serverEnv",
                 position: (355, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (356, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "serverEnv",
                        position: (356, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (356, 36),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-server",
                     },
                    ],
                    position: (356, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (355, 36),
                },
               ],
               position: (355, 33),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (358, 9),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "hydraConf",
                 position: (358, 29),
                },
               ],
               position: (358, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (359, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (360, 13),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Addition,
                  operands: [
                   BinaryOperation {
                    operator: Addition,
                    operands: [
                     String {
                      parts: [
                       Raw {
                        content: "@",
                       },
                       Expression {
                        expression: Variable {
                         identifier: "hydra-package",
                         position: (361, 19),
                        },
                       },
                       Raw {
                        content: "/bin/hydra-server hydra-server -f -h '",
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (361, 73),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "listenHost",
                            position: (361, 77),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "' ",
                       },
                      ],
                      position: (361, 15),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "-p ",
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "toString",
                          position: (362, 23),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (362, 32),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "port",
                              position: (362, 36),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " --max_spare_servers 5 --max_servers 25 ",
                       },
                      ],
                      position: (362, 17),
                     },
                    ],
                    position: (362, 15),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "--max_requests 100 ",
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "optionalString",
                        position: (363, 39),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (363, 54),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "debugServer",
                            position: (363, 58),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "-d",
                          },
                         ],
                         position: (363, 70),
                        },
                       ],
                      },
                     },
                    ],
                    position: (363, 17),
                   },
                  ],
                  position: (363, 15),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (364, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hydra-www",
                   },
                  ],
                  position: (364, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "PermissionsStartOnly",
                    position: (365, 13),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (365, 36),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (366, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                   },
                  ],
                  position: (366, 23),
                 },
                ),
               ],
               recursive: false,
               position: (360, 11),
              },
             ),
            ],
            recursive: false,
            position: (352, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (370, 5),
             },
             Raw {
              content: "services",
              position: (370, 13),
             },
             Raw {
              content: "hydra-queue-runner",
              position: (370, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (371, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (371, 22),
                },
               ],
               position: (371, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (372, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (372, 22),
                },
               ],
               position: (372, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (373, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (373, 19),
                },
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                  },
                 ],
                 position: (373, 40),
                },
               ],
               position: (373, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (374, 9),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "hydra-package",
                 position: (374, 18),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (374, 32),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "nettools",
                    position: (374, 37),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (374, 46),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "openssh",
                    position: (374, 51),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (374, 59),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bzip2",
                    position: (374, 64),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (374, 70),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "nix",
                    position: (374, 77),
                   },
                   Raw {
                    content: "package",
                    position: (374, 81),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (374, 16),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (375, 9),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "hydraConf",
                 position: (375, 29),
                },
               ],
               position: (375, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (376, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "env",
                 position: (376, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "PGPASSFILE",
                      position: (377, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "baseDir",
                       position: (377, 27),
                      },
                     },
                     Raw {
                      content: "/pgpass-queue-runner",
                     },
                    ],
                    position: (377, 24),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "IN_SYSTEMD",
                      position: (378, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "1",
                     },
                    ],
                    position: (378, 24),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (379, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "env",
                        position: (379, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (379, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-queue-runner",
                     },
                    ],
                    position: (379, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (376, 30),
                },
               ],
               position: (376, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (381, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (382, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "@",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "hydra-package",
                     position: (382, 29),
                    },
                   },
                   Raw {
                    content: "/bin/hydra-queue-runner hydra-queue-runner -v",
                   },
                  ],
                  position: (382, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStopPost",
                    position: (383, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "hydra-package",
                     position: (383, 31),
                    },
                   },
                   Raw {
                    content: "/bin/hydra-queue-runner --unlock",
                   },
                  ],
                  position: (383, 28),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (384, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hydra-queue-runner",
                   },
                  ],
                  position: (384, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (385, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                   },
                  ],
                  position: (385, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LimitCORE",
                    position: (388, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "infinity",
                   },
                  ],
                  position: (388, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "WorkingDirectory",
                    position: (389, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "baseDir",
                     position: (389, 35),
                    },
                   },
                   Raw {
                    content: "/queue-runner",
                   },
                  ],
                  position: (389, 32),
                 },
                ),
               ],
               recursive: false,
               position: (382, 11),
              },
             ),
            ],
            recursive: false,
            position: (371, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (393, 5),
             },
             Raw {
              content: "services",
              position: (393, 13),
             },
             Raw {
              content: "hydra-evaluator",
              position: (393, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (394, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (394, 22),
                },
               ],
               position: (394, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (395, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (395, 22),
                },
               ],
               position: (395, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (396, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (396, 19),
                },
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                  },
                 ],
                 position: (396, 40),
                },
               ],
               position: (396, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (397, 9),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "pkgs",
                position: (397, 21),
               },
               target: List {
                elements: [
                 Variable {
                  identifier: "hydra-package",
                  position: (397, 29),
                 },
                 Variable {
                  identifier: "nettools",
                  position: (397, 43),
                 },
                 Variable {
                  identifier: "jq",
                  position: (397, 52),
                 },
                ],
                position: (397, 27),
               },
               position: (397, 16),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (398, 9),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "hydraConf",
                 position: (398, 29),
                },
               ],
               position: (398, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (399, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "env",
                 position: (399, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (400, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "env",
                        position: (400, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (400, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-evaluator",
                     },
                    ],
                    position: (400, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (399, 30),
                },
               ],
               position: (399, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (402, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (403, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "@",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "hydra-package",
                     position: (403, 29),
                    },
                   },
                   Raw {
                    content: "/bin/hydra-evaluator hydra-evaluator",
                   },
                  ],
                  position: (403, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (404, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hydra",
                   },
                  ],
                  position: (404, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (405, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                   },
                  ],
                  position: (405, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "WorkingDirectory",
                    position: (406, 13),
                   },
                  ],
                 },
                 Variable {
                  identifier: "baseDir",
                  position: (406, 32),
                 },
                ),
               ],
               recursive: false,
               position: (403, 11),
              },
             ),
            ],
            recursive: false,
            position: (394, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (410, 5),
             },
             Raw {
              content: "services",
              position: (410, 13),
             },
             Raw {
              content: "hydra-update-gc-roots",
              position: (410, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (411, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (411, 22),
                },
               ],
               position: (411, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (412, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (412, 19),
                },
               ],
               position: (412, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (413, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "env",
                 position: (413, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (414, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "env",
                        position: (414, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (414, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-update-gc-roots",
                     },
                    ],
                    position: (414, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (413, 30),
                },
               ],
               position: (413, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (416, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (417, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "@",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "hydra-package",
                     position: (417, 29),
                    },
                   },
                   Raw {
                    content: "/bin/hydra-update-gc-roots hydra-update-gc-roots",
                   },
                  ],
                  position: (417, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (418, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hydra",
                   },
                  ],
                  position: (418, 20),
                 },
                ),
               ],
               recursive: false,
               position: (417, 11),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startAt",
                 position: (420, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "2,14:15",
                },
               ],
               position: (420, 19),
              },
             ),
            ],
            recursive: false,
            position: (411, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (423, 5),
             },
             Raw {
              content: "services",
              position: (423, 13),
             },
             Raw {
              content: "hydra-send-stats",
              position: (423, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (424, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (424, 22),
                },
               ],
               position: (424, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (425, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (425, 19),
                },
               ],
               position: (425, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (426, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "env",
                 position: (426, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (427, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "env",
                        position: (427, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (427, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-send-stats",
                     },
                    ],
                    position: (427, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (426, 30),
                },
               ],
               position: (426, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (429, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (430, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "@",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "hydra-package",
                     position: (430, 29),
                    },
                   },
                   Raw {
                    content: "/bin/hydra-send-stats hydra-send-stats",
                   },
                  ],
                  position: (430, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (431, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hydra",
                   },
                  ],
                  position: (431, 20),
                 },
                ),
               ],
               recursive: false,
               position: (430, 11),
              },
             ),
            ],
            recursive: false,
            position: (424, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (435, 5),
             },
             Raw {
              content: "services",
              position: (435, 13),
             },
             Raw {
              content: "hydra-notify",
              position: (435, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (436, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (436, 22),
                },
               ],
               position: (436, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "requires",
                 position: (437, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (437, 22),
                },
               ],
               position: (437, 20),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (438, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "hydra-init.service",
                  },
                 ],
                 position: (438, 19),
                },
               ],
               position: (438, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (439, 9),
                },
               ],
              },
              List {
               elements: [
                Variable {
                 identifier: "hydraConf",
                 position: (439, 29),
                },
               ],
               position: (439, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (440, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Update,
               operands: [
                Variable {
                 identifier: "env",
                 position: (440, 23),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "PGPASSFILE",
                      position: (441, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "baseDir",
                       position: (441, 27),
                      },
                     },
                     Raw {
                      content: "/pgpass-queue-runner",
                     },
                    ],
                    position: (441, 24),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "HYDRA_DBI",
                      position: (442, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "env",
                        position: (442, 26),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "HYDRA_DBI",
                          position: (442, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: ";application_name=hydra-notify",
                     },
                    ],
                    position: (442, 23),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (440, 30),
                },
               ],
               position: (440, 27),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (444, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (445, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "@",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "hydra-package",
                     position: (445, 29),
                    },
                   },
                   Raw {
                    content: "/bin/hydra-notify hydra-notify",
                   },
                  ],
                  position: (445, 25),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "User",
                    position: (447, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hydra-queue-runner",
                   },
                  ],
                  position: (447, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Restart",
                    position: (448, 13),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "always",
                   },
                  ],
                  position: (448, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "RestartSec",
                    position: (449, 13),
                   },
                  ],
                 },
                 Int {
                  value: 5,
                  position: (449, 26),
                 },
                ),
               ],
               recursive: false,
               position: (445, 11),
              },
             ),
            ],
            recursive: false,
            position: (436, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (455, 5),
             },
             Raw {
              content: "services",
              position: (455, 13),
             },
             Raw {
              content: "hydra-check-space",
              position: (455, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "script",
                 position: (456, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "if [ $(($(stat -f -c '%a' /nix/store) * $(stat -f -c '%S' /nix/store))) -lt $((",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (458, 94),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (458, 103),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "minimumDiskFree",
                       position: (458, 107),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " * 1024**3)) ]; then\n    echo \"stopping Hydra queue runner due to lack of free space...\"\n    systemctl stop hydra-queue-runner\nfi\nif [ $(($(stat -f -c '%a' /nix/store) * $(stat -f -c '%S' /nix/store))) -lt $((",
                },
                Expression {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "toString",
                   position: (462, 94),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (462, 103),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "minimumDiskFreeEvaluator",
                       position: (462, 107),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Raw {
                 content: " * 1024**3)) ]; then\n    echo \"stopping Hydra evaluator due to lack of free space...\"\n    systemctl stop hydra-evaluator\nfi\n",
                },
               ],
               position: (457, 11),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startAt",
                 position: (467, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "*:0/5",
                },
               ],
               position: (467, 19),
              },
             ),
            ],
            recursive: false,
            position: (456, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (473, 5),
             },
             Raw {
              content: "services",
              position: (473, 13),
             },
             Raw {
              content: "hydra-compress-logs",
              position: (473, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (474, 9),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (474, 18),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bzip2",
                    position: (474, 23),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (474, 16),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "script",
                 position: (475, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "find /var/lib/hydra/build-logs -type f -name \"*.drv\" -mtime +3 -size +0c | xargs -r bzip2 -v -f\n",
                },
               ],
               position: (476, 11),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "startAt",
                 position: (479, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Sun 01:45",
                },
               ],
               position: (479, 19),
              },
             ),
            ],
            recursive: false,
            position: (474, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (482, 5),
             },
             Raw {
              content: "postgresql",
              position: (482, 14),
             },
             Raw {
              content: "enable",
              position: (482, 25),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (482, 34),
            },
            arguments: [
             Variable {
              identifier: "haveLocalDB",
              position: (482, 39),
             },
             Variable {
              identifier: "true",
              position: (482, 51),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (484, 5),
             },
             Raw {
              content: "postgresql",
              position: (484, 14),
             },
             Raw {
              content: "identMap",
              position: (484, 25),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (484, 36),
            },
            arguments: [
             Variable {
              identifier: "haveLocalDB",
              position: (484, 51),
             },
             String {
              parts: [
               Raw {
                content: "hydra-users hydra hydra\nhydra-users hydra-queue-runner hydra\nhydra-users hydra-www hydra\nhydra-users root hydra\n# The postgres user is used to create the pg_trgm extension for the hydra database\nhydra-users postgres postgres\n",
               },
              ],
              position: (485, 7),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (494, 5),
             },
             Raw {
              content: "postgresql",
              position: (494, 14),
             },
             Raw {
              content: "authentication",
              position: (494, 25),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optionalString",
             position: (494, 42),
            },
            arguments: [
             Variable {
              identifier: "haveLocalDB",
              position: (494, 57),
             },
             String {
              parts: [
               Raw {
                content: "local hydra all ident map=hydra-users\n",
               },
              ],
              position: (495, 7),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (231, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (72, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}