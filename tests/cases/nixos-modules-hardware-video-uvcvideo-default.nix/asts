---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (4, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (8, 16),
        },
        Raw {
         content: "uvcvideo",
         position: (8, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "uvcdynctrl-udev-rules",
        position: (10, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "packages",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (10, 37),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "callPackage",
           position: (10, 42),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Path {
         parts: [
          Raw {
           content: "./uvcdynctrl-udev-rules.nix",
           position: (10, 54),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "drivers",
              position: (11, 5),
             },
            ],
           },
           Variable {
            identifier: "packages",
            position: (11, 15),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "udevDebug",
              position: (12, 5),
             },
            ],
           },
           Variable {
            identifier: "false",
            position: (12, 17),
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
      position: (10, 27),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (19, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (20, 5),
           },
           Raw {
            content: "uvcvideo",
            position: (20, 14),
           },
           Raw {
            content: "dynctrl",
            position: (20, 23),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (22, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (22, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (23, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (23, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (23, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (24, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (24, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (25, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to enable <command>uvcvideo</command> dynamic controls.\n\nNote that enabling this brings the <command>uvcdynctrl</command> tool\ninto your environment and register all dynamic controls from\nspecified <command>packages</command> to the <command>uvcvideo</command> driver.\n",
                    position: (26, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "packages",
               position: (34, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (34, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (35, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (35, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (35, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (35, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (35, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (36, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (36, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.tiscamera ]",
                      position: (36, 38),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (37, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of packages containing <command>uvcvideo</command> dynamic controls\nrules. All files found in\n<filename><replaceable>pkg</replaceable>/share/uvcdynctrl/data</filename>\nwill be included.\n\nNote that these will serve as input to the <command>libwebcam</command>\npackage which through its own <command>udev</command> rule will register\nthe dynamic controls from specified packages to the <command>uvcvideo</command>\ndriver.\n",
                    position: (38, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "apply",
                    position: (48, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "map",
                   position: (48, 17),
                  },
                  arguments: [
                   Variable {
                    identifier: "getBin",
                    position: (48, 21),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (53, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (53, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (53, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "dynctrl",
            position: (53, 21),
           },
           Raw {
            content: "enable",
            position: (53, 29),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (55, 5),
             },
             Raw {
              content: "udev",
              position: (55, 14),
             },
             Raw {
              content: "packages",
              position: (55, 19),
             },
            ],
           },
           List {
            elements: [
             FunctionApplication {
              function: Variable {
               identifier: "uvcdynctrl-udev-rules",
               position: (56, 8),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (56, 30),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "dynctrl",
                   position: (56, 34),
                  },
                  Raw {
                   content: "packages",
                   position: (56, 42),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (59, 5),
             },
             Raw {
              content: "systemPackages",
              position: (59, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (60, 7),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "libwebcam",
                 position: (60, 12),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (6, 1),
  },
  position: (4, 1),
 },
 position: (2, 1),
}