---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (4, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (4, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (4, 16),
       },
       Raw {
        content: "geoipupdate",
        position: (4, 25),
       },
      ],
     },
     default: None,
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (7, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (8, 6),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "mkRemovedOptionModule",
            position: (8, 10),
           },
          ],
         },
         default: None,
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (8, 34),
           },
           String {
            parts: [
             Raw {
              content: "geoip-updater",
             },
            ],
            position: (8, 45),
           },
          ],
          position: (8, 32),
         },
         String {
          parts: [
           Raw {
            content: "services.geoip-updater has been removed, use services.geoipupdate instead.",
           },
          ],
          position: (8, 63),
         },
        ],
       },
      ],
      position: (7, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (11, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (12, 5),
          },
          Raw {
           content: "geoipupdate",
           position: (12, 14),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (13, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (13, 16),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkEnableOption",
                position: (13, 20),
               },
              ],
             },
             default: None,
            },
            arguments: [
             String {
              parts: [
               Raw {
                content: "periodic downloading of GeoIP databases using\n<productname>geoipupdate</productname>.\n",
               },
              ],
              position: (13, 35),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "interval",
              position: (18, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (18, 18),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkOption",
                position: (18, 22),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (19, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (19, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "types",
                    position: (19, 20),
                   },
                   Raw {
                    content: "str",
                    position: (19, 26),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (20, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "weekly",
                  },
                 ],
                 position: (20, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (21, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Update the GeoIP databases at this time / interval.\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n",
                  },
                 ],
                 position: (21, 23),
                },
               ),
              ],
              recursive: false,
              position: (18, 31),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "settings",
              position: (29, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (29, 18),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkOption",
                position: (29, 22),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (30, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "<productname>geoipupdate</productname> configuration\noptions. See\n<link xlink:href=\"https://github.com/maxmind/geoipupdate/blob/main/doc/GeoIP.conf.md\" />\nfor a full list of available options.\n",
                  },
                 ],
                 position: (30, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (36, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (36, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "types",
                     position: (36, 20),
                    },
                    Raw {
                     content: "submodule",
                     position: (36, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "freeformType",
                        position: (37, 11),
                       },
                      ],
                     },
                     With {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "lib",
                        position: (38, 18),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "types",
                          position: (38, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                      target: LetIn {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "type",
                            position: (40, 15),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "oneOf",
                           position: (40, 22),
                          },
                          arguments: [
                           List {
                            elements: [
                             Variable {
                              identifier: "str",
                              position: (40, 29),
                             },
                             Variable {
                              identifier: "int",
                              position: (40, 33),
                             },
                             Variable {
                              identifier: "bool",
                              position: (40, 37),
                             },
                            ],
                            position: (40, 28),
                           },
                          ],
                         },
                        ),
                       ],
                       target: FunctionApplication {
                        function: Variable {
                         identifier: "attrsOf",
                         position: (42, 15),
                        },
                        arguments: [
                         FunctionApplication {
                          function: Variable {
                           identifier: "either",
                           position: (42, 24),
                          },
                          arguments: [
                           Variable {
                            identifier: "type",
                            position: (42, 31),
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "listOf",
                             position: (42, 37),
                            },
                            arguments: [
                             Variable {
                              identifier: "type",
                              position: (42, 44),
                             },
                            ],
                           },
                          ],
                         },
                        ],
                       },
                       position: (39, 13),
                      },
                      position: (38, 13),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "options",
                        position: (44, 11),
                       },
                      ],
                     },
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "AccountID",
                           position: (46, 13),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (46, 25),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "mkOption",
                             position: (46, 29),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "type",
                                position: (47, 15),
                               },
                              ],
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "lib",
                               position: (47, 22),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "types",
                                 position: (47, 26),
                                },
                                Raw {
                                 content: "int",
                                 position: (47, 32),
                                },
                               ],
                              },
                              default: None,
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "description",
                                position: (48, 15),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "Your MaxMind account ID.\n",
                               },
                              ],
                              position: (48, 29),
                             },
                            ),
                           ],
                           recursive: false,
                           position: (46, 38),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "EditionIDs",
                           position: (53, 13),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (53, 26),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "mkOption",
                             position: (53, 30),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "type",
                                position: (54, 15),
                               },
                              ],
                             },
                             With {
                              expression: PropertyAccess {
                               expression: Variable {
                                identifier: "lib",
                                position: (54, 27),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "types",
                                  position: (54, 31),
                                 },
                                ],
                               },
                               default: None,
                              },
                              target: FunctionApplication {
                               function: Variable {
                                identifier: "listOf",
                                position: (54, 38),
                               },
                               arguments: [
                                FunctionApplication {
                                 function: Variable {
                                  identifier: "either",
                                  position: (54, 46),
                                 },
                                 arguments: [
                                  Variable {
                                   identifier: "str",
                                   position: (54, 53),
                                  },
                                  Variable {
                                   identifier: "int",
                                   position: (54, 57),
                                  },
                                 ],
                                },
                               ],
                              },
                              position: (54, 22),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "example",
                                position: (55, 15),
                               },
                              ],
                             },
                             List {
                              elements: [
                               String {
                                parts: [
                                 Raw {
                                  content: "GeoLite2-ASN",
                                 },
                                ],
                                position: (56, 17),
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "GeoLite2-City",
                                 },
                                ],
                                position: (57, 17),
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "GeoLite2-Country",
                                 },
                                ],
                                position: (58, 17),
                               },
                              ],
                              position: (55, 25),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "description",
                                position: (60, 15),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "List of database edition IDs. This includes new string\nIDs like <literal>GeoIP2-City</literal> and old\nnumeric IDs like <literal>106</literal>.\n",
                               },
                              ],
                              position: (60, 29),
                             },
                            ),
                           ],
                           recursive: false,
                           position: (53, 39),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "LicenseKey",
                           position: (67, 13),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (67, 26),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "mkOption",
                             position: (67, 30),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "type",
                                position: (68, 15),
                               },
                              ],
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "lib",
                               position: (68, 22),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "types",
                                 position: (68, 26),
                                },
                                Raw {
                                 content: "path",
                                 position: (68, 32),
                                },
                               ],
                              },
                              default: None,
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "description",
                                position: (69, 15),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "A file containing the <productname>MaxMind</productname>\nlicense key.\n",
                               },
                              ],
                              position: (69, 29),
                             },
                            ),
                           ],
                           recursive: false,
                           position: (67, 39),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "DatabaseDirectory",
                           position: (75, 13),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (75, 33),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "mkOption",
                             position: (75, 37),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "type",
                                position: (76, 15),
                               },
                              ],
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "lib",
                               position: (76, 22),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "types",
                                 position: (76, 26),
                                },
                                Raw {
                                 content: "path",
                                 position: (76, 32),
                                },
                               ],
                              },
                              default: None,
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "default",
                                position: (77, 15),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "/var/lib/GeoIP",
                               },
                              ],
                              position: (77, 25),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "example",
                                position: (78, 15),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "/run/GeoIP",
                               },
                              ],
                              position: (78, 25),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "description",
                                position: (79, 15),
                               },
                              ],
                             },
                             String {
                              parts: [
                               Raw {
                                content: "The directory to store the database files in. The\ndirectory will be automatically created, the owner\nchanged to <literal>geoip</literal> and permissions\nset to world readable. This applies if the directory\nalready exists as well, so don't use a directory with\nsensitive contents.\n",
                               },
                              ],
                              position: (79, 29),
                             },
                            ),
                           ],
                           recursive: false,
                           position: (75, 46),
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                      position: (44, 21),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (36, 36),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (29, 31),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (12, 28),
        },
       ),
      ],
      recursive: false,
      position: (11, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (96, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (96, 12),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "mkIf",
          position: (96, 16),
         },
        ],
       },
       default: None,
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (96, 21),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (96, 25),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (98, 5),
            },
            Raw {
             content: "geoipupdate",
             position: (98, 14),
            },
            Raw {
             content: "settings",
             position: (98, 26),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "LockFile",
                position: (99, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "/run/geoipupdate/.lock",
               },
              ],
              position: (99, 18),
             },
            ),
           ],
           recursive: false,
           position: (98, 37),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (102, 5),
            },
            Raw {
             content: "services",
             position: (102, 13),
            },
            Raw {
             content: "geoipupdate-create-db-dir",
             position: (102, 22),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (103, 7),
               },
               Raw {
                content: "Type",
                position: (103, 21),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "oneshot",
               },
              ],
              position: (103, 28),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "script",
                position: (104, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "mkdir -p ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (105, 20),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (105, 24),
                   },
                   Raw {
                    content: "DatabaseDirectory",
                    position: (105, 33),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "\nchmod 0755 ",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (106, 22),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (106, 26),
                   },
                   Raw {
                    content: "DatabaseDirectory",
                    position: (106, 35),
                   },
                  ],
                 },
                 default: None,
                },
               },
               Raw {
                content: "\n",
               },
              ],
              position: (104, 16),
             },
            ),
           ],
           recursive: false,
           position: (102, 50),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (110, 5),
            },
            Raw {
             content: "services",
             position: (110, 13),
            },
            Raw {
             content: "geoipupdate",
             position: (110, 22),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (111, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "GeoIP Updater",
               },
              ],
              position: (111, 21),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "requires",
                position: (112, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "geoipupdate-create-db-dir.service",
                 },
                ],
                position: (112, 20),
               },
              ],
              position: (112, 18),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "after",
                position: (113, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "geoipupdate-create-db-dir.service",
                 },
                ],
                position: (114, 9),
               },
               String {
                parts: [
                 Raw {
                  content: "network-online.target",
                 },
                ],
                position: (115, 9),
               },
               String {
                parts: [
                 Raw {
                  content: "nss-lookup.target",
                 },
                ],
                position: (116, 9),
               },
              ],
              position: (113, 15),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wants",
                position: (118, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "network-online.target",
                 },
                ],
                position: (118, 17),
               },
              ],
              position: (118, 15),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "startAt",
                position: (119, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (119, 17),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "interval",
                 position: (119, 21),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "serviceConfig",
                position: (120, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ExecStartPre",
                   position: (121, 9),
                  },
                 ],
                },
                LetIn {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "geoipupdateKeyValue",
                      position: (123, 13),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "lib",
                      position: (123, 35),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "generators",
                        position: (123, 39),
                       },
                       Raw {
                        content: "toKeyValue",
                        position: (123, 50),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "mkKeyValue",
                           position: (124, 15),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (124, 28),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "flip",
                             position: (124, 32),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "lib",
                            position: (124, 37),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "generators",
                              position: (124, 41),
                             },
                             Raw {
                              content: "mkKeyValueDefault",
                              position: (124, 52),
                             },
                            ],
                           },
                           default: None,
                          },
                          String {
                           parts: [
                            Raw {
                             content: " ",
                            },
                           ],
                           position: (124, 70),
                          },
                          Map {
                           bindings: [
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "mkValueString",
                                position: (125, 17),
                               },
                              ],
                             },
                             Function {
                              argument: Simple {
                               identifier: "v",
                              },
                              definition: With {
                               expression: Variable {
                                identifier: "builtins",
                                position: (125, 41),
                               },
                               target: IfThenElse {
                                predicate: FunctionApplication {
                                 function: Variable {
                                  identifier: "isInt",
                                  position: (126, 22),
                                 },
                                 arguments: [
                                  Variable {
                                   identifier: "v",
                                   position: (126, 38),
                                  },
                                 ],
                                },
                                then: FunctionApplication {
                                 function: Variable {
                                  identifier: "toString",
                                  position: (126, 45),
                                 },
                                 arguments: [
                                  Variable {
                                   identifier: "v",
                                   position: (126, 54),
                                  },
                                 ],
                                },
                                else_: IfThenElse {
                                 predicate: FunctionApplication {
                                  function: Variable {
                                   identifier: "isString",
                                   position: (127, 27),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "v",
                                    position: (127, 38),
                                   },
                                  ],
                                 },
                                 then: Variable {
                                  identifier: "v",
                                  position: (127, 45),
                                 },
                                 else_: IfThenElse {
                                  predicate: BinaryOperation {
                                   operator: EqualTo,
                                   operands: [
                                    Variable {
                                     identifier: "true",
                                     position: (128, 27),
                                    },
                                    Variable {
                                     identifier: "v",
                                     position: (128, 38),
                                    },
                                   ],
                                   position: (128, 33),
                                  },
                                  then: String {
                                   parts: [
                                    Raw {
                                     content: "1",
                                    },
                                   ],
                                   position: (128, 45),
                                  },
                                  else_: IfThenElse {
                                   predicate: BinaryOperation {
                                    operator: EqualTo,
                                    operands: [
                                     Variable {
                                      identifier: "false",
                                      position: (129, 27),
                                     },
                                     Variable {
                                      identifier: "v",
                                      position: (129, 38),
                                     },
                                    ],
                                    position: (129, 33),
                                   },
                                   then: String {
                                    parts: [
                                     Raw {
                                      content: "0",
                                     },
                                    ],
                                    position: (129, 45),
                                   },
                                   else_: IfThenElse {
                                    predicate: FunctionApplication {
                                     function: Variable {
                                      identifier: "isList",
                                      position: (130, 27),
                                     },
                                     arguments: [
                                      Variable {
                                       identifier: "v",
                                       position: (130, 38),
                                      },
                                     ],
                                    },
                                    then: FunctionApplication {
                                     function: PropertyAccess {
                                      expression: Variable {
                                       identifier: "lib",
                                       position: (130, 45),
                                      },
                                      attribute_path: AttributePath {
                                       attributes: [
                                        Raw {
                                         content: "concatMapStringsSep",
                                         position: (130, 49),
                                        },
                                       ],
                                      },
                                      default: None,
                                     },
                                     arguments: [
                                      String {
                                       parts: [
                                        Raw {
                                         content: " ",
                                        },
                                       ],
                                       position: (130, 69),
                                      },
                                      Variable {
                                       identifier: "mkValueString",
                                       position: (130, 73),
                                      },
                                      Variable {
                                       identifier: "v",
                                       position: (130, 87),
                                      },
                                     ],
                                    },
                                    else_: FunctionApplication {
                                     function: Variable {
                                      identifier: "throw",
                                      position: (131, 24),
                                     },
                                     arguments: [
                                      String {
                                       parts: [
                                        Raw {
                                         content: "unsupported type ",
                                        },
                                        Expression {
                                         expression: FunctionApplication {
                                          function: Variable {
                                           identifier: "typeOf",
                                           position: (131, 50),
                                          },
                                          arguments: [
                                           Variable {
                                            identifier: "v",
                                            position: (131, 57),
                                           },
                                          ],
                                         },
                                        },
                                        Raw {
                                         content: ": ",
                                        },
                                        Expression {
                                         expression: FunctionApplication {
                                          function: PropertyAccess {
                                           expression: Variable {
                                            identifier: "lib",
                                            position: (131, 64),
                                           },
                                           attribute_path: AttributePath {
                                            attributes: [
                                             Raw {
                                              content: "generators",
                                              position: (131, 68),
                                             },
                                             Raw {
                                              content: "toPretty",
                                              position: (131, 79),
                                             },
                                            ],
                                           },
                                           default: None,
                                          },
                                          arguments: [
                                           Map {
                                            bindings: [],
                                            recursive: false,
                                            position: (131, 88),
                                           },
                                           Variable {
                                            identifier: "v",
                                            position: (131, 92),
                                           },
                                          ],
                                         },
                                        },
                                       ],
                                       position: (131, 30),
                                      },
                                     ],
                                    },
                                    position: (130, 24),
                                   },
                                   position: (129, 24),
                                  },
                                  position: (128, 24),
                                 },
                                 position: (127, 24),
                                },
                                position: (126, 19),
                               },
                               position: (125, 36),
                              },
                              position: (125, 33),
                             },
                            ),
                           ],
                           recursive: true,
                           position: (124, 74),
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                      position: (123, 61),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "geoipupdateConf",
                      position: (135, 13),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (135, 31),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "writeText",
                        position: (135, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: "geoipupdate.conf",
                       },
                      ],
                      position: (135, 46),
                     },
                     FunctionApplication {
                      function: Variable {
                       identifier: "geoipupdateKeyValue",
                       position: (135, 66),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (135, 86),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "settings",
                           position: (135, 90),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "script",
                      position: (137, 13),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "chown geoip \"",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (138, 30),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "settings",
                          position: (138, 34),
                         },
                         Raw {
                          content: "DatabaseDirectory",
                          position: (138, 43),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "\"\n\ncp ",
                     },
                     Expression {
                      expression: Variable {
                       identifier: "geoipupdateConf",
                       position: (140, 20),
                      },
                     },
                     Raw {
                      content: " /run/geoipupdate/GeoIP.conf\n",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (141, 17),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "replace-secret",
                          position: (141, 22),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/replace-secret ",
                     },
                     Raw {
                      content: "'",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (141, 60),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "settings",
                          position: (141, 64),
                         },
                         Raw {
                          content: "LicenseKey",
                          position: (141, 73),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "' \\\n                                          ",
                     },
                     Raw {
                      content: "'",
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (142, 60),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "settings",
                          position: (142, 64),
                         },
                         Raw {
                          content: "LicenseKey",
                          position: (142, 73),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "' \\\n                                          /run/geoipupdate/GeoIP.conf\n",
                     },
                    ],
                    position: (137, 22),
                   },
                  ),
                 ],
                 target: String {
                  parts: [
                   Raw {
                    content: "+",
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (146, 17),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "writeShellScript",
                         position: (146, 22),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "start-pre-full-privileges",
                        },
                       ],
                       position: (146, 39),
                      },
                      Variable {
                       identifier: "script",
                       position: (146, 67),
                      },
                     ],
                    },
                   },
                  ],
                  position: (146, 13),
                 },
                 position: (122, 11),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ExecStart",
                   position: (147, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (147, 24),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "geoipupdate",
                       position: (147, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/geoipupdate -f /run/geoipupdate/GeoIP.conf",
                  },
                 ],
                 position: (147, 21),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "User",
                   position: (148, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "geoip",
                  },
                 ],
                 position: (148, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "DynamicUser",
                   position: (149, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (149, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ReadWritePaths",
                   position: (150, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (150, 26),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (150, 30),
                   },
                   Raw {
                    content: "DatabaseDirectory",
                    position: (150, 39),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RuntimeDirectory",
                   position: (151, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "geoipupdate",
                  },
                 ],
                 position: (151, 28),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RuntimeDirectoryMode",
                   position: (152, 9),
                  },
                 ],
                },
                Int {
                 value: 700,
                 position: (152, 32),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "CapabilityBoundingSet",
                   position: (153, 9),
                  },
                 ],
                },
                String {
                 parts: [],
                 position: (153, 33),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "PrivateDevices",
                   position: (154, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (154, 26),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "PrivateMounts",
                   position: (155, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (155, 25),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "PrivateUsers",
                   position: (156, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (156, 24),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectClock",
                   position: (157, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (157, 24),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectControlGroups",
                   position: (158, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (158, 32),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectHome",
                   position: (159, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (159, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectHostname",
                   position: (160, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (160, 27),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectKernelLogs",
                   position: (161, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (161, 29),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectKernelModules",
                   position: (162, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (162, 32),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectKernelTunables",
                   position: (163, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (163, 33),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProtectProc",
                   position: (164, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "invisible",
                  },
                 ],
                 position: (164, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "ProcSubset",
                   position: (165, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "pid",
                  },
                 ],
                 position: (165, 22),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "SystemCallFilter",
                   position: (166, 9),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "@system-service",
                    },
                   ],
                   position: (166, 30),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "~@privileged",
                    },
                   ],
                   position: (166, 48),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "~@resources",
                    },
                   ],
                   position: (166, 63),
                  },
                 ],
                 position: (166, 28),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RestrictAddressFamilies",
                   position: (167, 9),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "AF_INET",
                    },
                   ],
                   position: (167, 37),
                  },
                  String {
                   parts: [
                    Raw {
                     content: "AF_INET6",
                    },
                   ],
                   position: (167, 47),
                  },
                 ],
                 position: (167, 35),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RestrictRealtime",
                   position: (168, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (168, 28),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "RestrictNamespaces",
                   position: (169, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (169, 30),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "MemoryDenyWriteExecute",
                   position: (170, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (170, 34),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "LockPersonality",
                   position: (171, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (171, 27),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "SystemCallArchitectures",
                   position: (172, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "native",
                  },
                 ],
                 position: (172, 35),
                },
               ),
              ],
              recursive: false,
              position: (120, 23),
             },
            ),
           ],
           recursive: false,
           position: (110, 36),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (176, 5),
            },
            Raw {
             content: "timers",
             position: (176, 13),
            },
            Raw {
             content: "geoipupdate-initial-run",
             position: (176, 20),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "wantedBy",
                position: (177, 7),
               },
              ],
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "timers.target",
                 },
                ],
                position: (177, 20),
               },
              ],
              position: (177, 18),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "unitConfig",
                position: (178, 7),
               },
               Raw {
                content: "ConditionPathExists",
                position: (178, 18),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "!",
               },
               Expression {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (178, 44),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "settings",
                    position: (178, 48),
                   },
                   Raw {
                    content: "DatabaseDirectory",
                    position: (178, 57),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              position: (178, 40),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "timerConfig",
                position: (179, 7),
               },
              ],
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "Unit",
                   position: (180, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "geoipupdate.service",
                  },
                 ],
                 position: (180, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "OnActiveSec",
                   position: (181, 9),
                  },
                 ],
                },
                Int {
                 value: 0,
                 position: (181, 23),
                },
               ),
              ],
              recursive: false,
              position: (179, 21),
             },
            ),
           ],
           recursive: false,
           position: (176, 46),
          },
         ),
        ],
        recursive: false,
        position: (96, 32),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "meta",
        position: (186, 3),
       },
       Raw {
        content: "maintainers",
        position: (186, 8),
       },
      ],
     },
     List {
      elements: [
       PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (186, 24),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (186, 28),
          },
          Raw {
           content: "talyz",
           position: (186, 40),
          },
         ],
        },
        default: None,
       },
      ],
      position: (186, 22),
     },
    ),
   ],
   recursive: false,
   position: (6, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}