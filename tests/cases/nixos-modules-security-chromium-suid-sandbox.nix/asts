---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 13),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "security",
         position: (6, 20),
        },
        Raw {
         content: "chromiumSuidSandbox",
         position: (6, 29),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "sandbox",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (7, 13),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "chromium",
         position: (7, 18),
        },
        Raw {
         content: "sandbox",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (10, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (11, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (11, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "unity3d",
               position: (11, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (11, 52),
              },
             ],
            },
           ],
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "security",
               position: (11, 65),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "chromiumSuidSandbox",
               position: (11, 76),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (11, 98),
              },
             ],
            },
           ],
          },
         ],
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (14, 3),
        },
        Raw {
         content: "security",
         position: (14, 11),
        },
        Raw {
         content: "chromiumSuidSandbox",
         position: (14, 20),
        },
        Raw {
         content: "enable",
         position: (14, 40),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkOption",
        position: (14, 49),
       },
       arguments: [
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "type",
              position: (15, 5),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (15, 12),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "bool",
               position: (15, 18),
              },
             ],
            },
            default: None,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "default",
              position: (16, 5),
             },
            ],
           },
           Variable {
            identifier: "false",
            position: (16, 15),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "description",
              position: (17, 5),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "Whether to install the Chromium SUID sandbox which is an executable that\nChromium may use in order to achieve sandboxing.\n\nIf you get the error \"The SUID sandbox helper binary was found, but is not\nconfigured correctly.\", turning this on might help.\n\nAlso, if the URL chrome://sandbox tells you that \"You are not adequately\nsandboxed!\", turning this on might resolve the issue.\n",
              position: (18, 1),
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (29, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (29, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (29, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (29, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (30, 5),
             },
             Raw {
              content: "systemPackages",
              position: (30, 17),
             },
            ],
           },
           List {
            elements: [
             Variable {
              identifier: "sandbox",
              position: (30, 36),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (31, 5),
             },
             Raw {
              content: "wrappers",
              position: (31, 14),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "sandbox",
                position: (31, 25),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "passthru",
                  position: (31, 33),
                 },
                 Raw {
                  content: "sandboxExecutableName",
                  position: (31, 42),
                 },
                ],
               },
               default: None,
              },
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "setuid",
                 position: (32, 9),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (32, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "owner",
                 position: (33, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "root",
                 position: (33, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (34, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "root",
                 position: (34, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "source",
                 position: (35, 9),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "sandbox",
                  position: (35, 21),
                 },
                },
                Raw {
                 content: "/bin/",
                 position: (35, 29),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "sandbox",
                   position: (35, 36),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "passthru",
                     position: (35, 44),
                    },
                    Raw {
                     content: "sandboxExecutableName",
                     position: (35, 53),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}