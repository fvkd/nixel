---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: LetIn {
  bindings: [
   Inherit {
    from: Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (2, 16),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "attrsets",
         position: (2, 20),
        },
       ],
      },
      default: None,
     },
    ),
    attributes: [
     Raw {
      content: "mapAttrs",
      position: (2, 30),
     },
    ],
   },
  ],
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "doubles",
        position: (5, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (5, 13),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./doubles.nix",
          position: (5, 20),
         },
        ],
        position: (5, 20),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (5, 44),
           },
          ],
         },
        ],
        recursive: false,
        position: (5, 34),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "parse",
        position: (6, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (6, 11),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./parse.nix",
          position: (6, 18),
         },
        ],
        position: (6, 18),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (6, 40),
           },
          ],
         },
        ],
        recursive: false,
        position: (6, 30),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "inspect",
        position: (7, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (7, 13),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./inspect.nix",
          position: (7, 20),
         },
        ],
        position: (7, 20),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (7, 44),
           },
          ],
         },
        ],
        recursive: false,
        position: (7, 34),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "platforms",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (8, 15),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./platforms.nix",
          position: (8, 22),
         },
        ],
        position: (8, 22),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (8, 48),
           },
          ],
         },
        ],
        recursive: false,
        position: (8, 38),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "examples",
        position: (9, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (9, 14),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./examples.nix",
          position: (9, 21),
         },
        ],
        position: (9, 21),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (9, 46),
           },
          ],
         },
        ],
        recursive: false,
        position: (9, 36),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "architectures",
        position: (10, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (10, 19),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./architectures.nix",
          position: (10, 26),
         },
        ],
        position: (10, 26),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (10, 56),
           },
          ],
         },
        ],
        recursive: false,
        position: (10, 46),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "supported",
        position: (11, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (11, 15),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./supported.nix",
          position: (11, 22),
         },
        ],
        position: (11, 22),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "lib",
            position: (11, 48),
           },
          ],
         },
        ],
        recursive: false,
        position: (11, 38),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "elaborate",
        position: (19, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "args'",
      },
      definition: LetIn {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "args",
            position: (20, 5),
           },
          ],
         },
         to: IfThenElse {
          predicate: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (20, 15),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "isString",
               position: (20, 19),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Variable {
             identifier: "args'",
             position: (20, 28),
            },
           ],
          },
          then: Map {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "system",
                position: (20, 41),
               },
              ],
             },
             to: Variable {
              identifier: "args'",
              position: (20, 50),
             },
            },
           ],
           recursive: false,
           position: (20, 39),
          },
          else_: Variable {
           identifier: "args'",
           position: (21, 17),
          },
          position: (20, 12),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "final",
            position: (22, 5),
           },
          ],
         },
         to: BinaryOperation {
          operator: Update,
          operands: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "parsed",
                 position: (24, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "parse",
                 position: (24, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "mkSystemFromString",
                   position: (24, 22),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Parentheses {
                 expression: IfThenElse {
                  predicate: HasProperty {
                   expression: Variable {
                    identifier: "args",
                    position: (24, 45),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "config",
                      position: (24, 52),
                     },
                    ],
                   },
                   position: (24, 50),
                  },
                  then: PropertyAccess {
                   expression: Variable {
                    identifier: "args",
                    position: (24, 64),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "config",
                      position: (24, 69),
                     },
                    ],
                   },
                   default: None,
                  },
                  else_: PropertyAccess {
                   expression: Variable {
                    identifier: "args",
                    position: (24, 81),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "system",
                      position: (24, 86),
                     },
                    ],
                   },
                   default: None,
                  },
                  position: (24, 42),
                 },
                 position: (24, 41),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "system",
                 position: (26, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "parse",
                 position: (26, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "doubleFromSystem",
                   position: (26, 22),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (26, 39),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "parsed",
                    position: (26, 45),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "config",
                 position: (27, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "parse",
                 position: (27, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "tripleFromSystem",
                   position: (27, 22),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (27, 39),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "parsed",
                    position: (27, 45),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "isCompatible",
                 position: (29, 7),
                },
               ],
              },
              to: Function {
               argument: Simple {
                identifier: "platform",
               },
               definition: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "parse",
                  position: (29, 32),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isCompatible",
                    position: (29, 38),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "final",
                   position: (29, 51),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "parsed",
                     position: (29, 57),
                    },
                    Raw {
                     content: "cpu",
                     position: (29, 64),
                    },
                   ],
                  },
                  default: None,
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "platform",
                   position: (29, 68),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "parsed",
                     position: (29, 77),
                    },
                    Raw {
                     content: "cpu",
                     position: (29, 84),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               position: (29, 22),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "libc",
                 position: (31, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "final",
                 position: (32, 17),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "isDarwin",
                   position: (32, 23),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "libSystem",
                  position: (32, 51),
                 },
                ],
                position: (32, 50),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (33, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isMinGW",
                    position: (33, 23),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "msvcrt",
                   position: (33, 51),
                  },
                 ],
                 position: (33, 50),
                },
                else_: IfThenElse {
                 predicate: PropertyAccess {
                  expression: Variable {
                   identifier: "final",
                   position: (34, 17),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "isWasi",
                     position: (34, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 then: String {
                  parts: [
                   Raw {
                    content: "wasilibc",
                    position: (34, 51),
                   },
                  ],
                  position: (34, 50),
                 },
                 else_: IfThenElse {
                  predicate: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (35, 17),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "isRedox",
                      position: (35, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: "relibc",
                     position: (35, 51),
                    },
                   ],
                   position: (35, 50),
                  },
                  else_: IfThenElse {
                   predicate: PropertyAccess {
                    expression: Variable {
                     identifier: "final",
                     position: (36, 17),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "isMusl",
                       position: (36, 23),
                      },
                     ],
                    },
                    default: None,
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: "musl",
                      position: (36, 51),
                     },
                    ],
                    position: (36, 50),
                   },
                   else_: IfThenElse {
                    predicate: PropertyAccess {
                     expression: Variable {
                      identifier: "final",
                      position: (37, 17),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "isUClibc",
                        position: (37, 23),
                       },
                      ],
                     },
                     default: None,
                    },
                    then: String {
                     parts: [
                      Raw {
                       content: "uclibc",
                       position: (37, 51),
                      },
                     ],
                     position: (37, 50),
                    },
                    else_: IfThenElse {
                     predicate: PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (38, 17),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "isAndroid",
                         position: (38, 23),
                        },
                       ],
                      },
                      default: None,
                     },
                     then: String {
                      parts: [
                       Raw {
                        content: "bionic",
                        position: (38, 51),
                       },
                      ],
                      position: (38, 50),
                     },
                     else_: IfThenElse {
                      predicate: PropertyAccess {
                       expression: Variable {
                        identifier: "final",
                        position: (39, 17),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "isLinux",
                          position: (39, 23),
                         },
                        ],
                       },
                       default: None,
                      },
                      then: String {
                       parts: [
                        Raw {
                         content: "glibc",
                         position: (39, 51),
                        },
                       ],
                       position: (39, 50),
                      },
                      else_: IfThenElse {
                       predicate: PropertyAccess {
                        expression: Variable {
                         identifier: "final",
                         position: (40, 17),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "isAvr",
                           position: (40, 23),
                          },
                         ],
                        },
                        default: None,
                       },
                       then: String {
                        parts: [
                         Raw {
                          content: "avrlibc",
                          position: (40, 51),
                         },
                        ],
                        position: (40, 50),
                       },
                       else_: IfThenElse {
                        predicate: PropertyAccess {
                         expression: Variable {
                          identifier: "final",
                          position: (41, 17),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "isNone",
                            position: (41, 23),
                           },
                          ],
                         },
                         default: None,
                        },
                        then: String {
                         parts: [
                          Raw {
                           content: "newlib",
                           position: (41, 51),
                          },
                         ],
                         position: (41, 50),
                        },
                        else_: IfThenElse {
                         predicate: PropertyAccess {
                          expression: Variable {
                           identifier: "final",
                           position: (42, 17),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "isNetBSD",
                             position: (42, 23),
                            },
                           ],
                          },
                          default: None,
                         },
                         then: String {
                          parts: [
                           Raw {
                            content: "nblibc",
                            position: (42, 51),
                           },
                          ],
                          position: (42, 50),
                         },
                         else_: String {
                          parts: [
                           Raw {
                            content: "native/impure",
                            position: (44, 51),
                           },
                          ],
                          position: (44, 50),
                         },
                         position: (42, 14),
                        },
                        position: (41, 14),
                       },
                       position: (40, 14),
                      },
                      position: (39, 14),
                     },
                     position: (38, 14),
                    },
                    position: (37, 14),
                   },
                   position: (36, 14),
                  },
                  position: (35, 14),
                 },
                 position: (34, 14),
                },
                position: (33, 14),
               },
               position: (32, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "linker",
                 position: (51, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "final",
                 position: (52, 17),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "useLLVM",
                   position: (52, 23),
                  },
                 ],
                },
                default: Some(
                 Variable {
                  identifier: "false",
                  position: (52, 34),
                 },
                ),
               },
               then: String {
                parts: [
                 Raw {
                  content: "lld",
                  position: (52, 51),
                 },
                ],
                position: (52, 50),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (53, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isDarwin",
                    position: (53, 23),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "cctools",
                   position: (53, 51),
                  },
                 ],
                 position: (53, 50),
                },
                else_: String {
                 parts: [
                  Raw {
                   content: "bfd",
                   position: (57, 51),
                  },
                 ],
                 position: (57, 50),
                },
                position: (53, 14),
               },
               position: (52, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "extensions",
                 position: (58, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "sharedLibrary",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: IfThenElse {
                  predicate: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (60, 19),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "isDarwin",
                      position: (60, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: ".dylib",
                     position: (60, 41),
                    },
                   ],
                   position: (60, 40),
                  },
                  else_: IfThenElse {
                   predicate: PropertyAccess {
                    expression: Variable {
                     identifier: "final",
                     position: (61, 19),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "isWindows",
                       position: (61, 25),
                      },
                     ],
                    },
                    default: None,
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: ".dll",
                      position: (61, 41),
                     },
                    ],
                    position: (61, 40),
                   },
                   else_: String {
                    parts: [
                     Raw {
                      content: ".so",
                      position: (62, 41),
                     },
                    ],
                    position: (62, 40),
                   },
                   position: (61, 16),
                  },
                  position: (60, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "executable",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: IfThenElse {
                  predicate: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (64, 19),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "isWindows",
                      position: (64, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: ".exe",
                     position: (64, 41),
                    },
                   ],
                   position: (64, 40),
                  },
                  else_: String {
                   parts: [],
                   position: (65, 40),
                  },
                  position: (64, 16),
                 },
                },
               ],
               recursive: false,
               position: (58, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "useAndroidPrebuilt",
                 position: (68, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (68, 28),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "useiOSPrebuilt",
                 position: (69, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (69, 24),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "uname",
                 position: (72, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "system",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "linux",
                        position: (75, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "Linux",
                        position: (75, 20),
                       },
                      ],
                      position: (75, 19),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "windows",
                        position: (76, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "Windows",
                        position: (76, 22),
                       },
                      ],
                      position: (76, 21),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "darwin",
                        position: (77, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "Darwin",
                        position: (77, 21),
                       },
                      ],
                      position: (77, 20),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "netbsd",
                        position: (78, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "NetBSD",
                        position: (78, 21),
                       },
                      ],
                      position: (78, 20),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "freebsd",
                        position: (79, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "FreeBSD",
                        position: (79, 22),
                       },
                      ],
                      position: (79, 21),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "openbsd",
                        position: (80, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "OpenBSD",
                        position: (80, 22),
                       },
                      ],
                      position: (80, 21),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "wasi",
                        position: (81, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "Wasi",
                        position: (81, 19),
                       },
                      ],
                      position: (81, 18),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "redox",
                        position: (82, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "Redox",
                        position: (82, 20),
                       },
                      ],
                      position: (82, 19),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "genode",
                        position: (83, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "Genode",
                        position: (83, 21),
                       },
                      ],
                      position: (83, 20),
                     },
                    },
                   ],
                   recursive: false,
                   position: (74, 18),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Interpolation {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (84, 13),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "parsed",
                         position: (84, 19),
                        },
                        Raw {
                         content: "kernel",
                         position: (84, 26),
                        },
                        Raw {
                         content: "name",
                         position: (84, 33),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                  },
                  default: Some(
                   Variable {
                    identifier: "null",
                    position: (84, 42),
                   },
                  ),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "processor",
                    position: (87, 10),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "final",
                   position: (87, 22),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "parsed",
                     position: (87, 28),
                    },
                    Raw {
                     content: "cpu",
                     position: (87, 35),
                    },
                    Raw {
                     content: "name",
                     position: (87, 39),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "release",
                    position: (90, 10),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (90, 20),
                 },
                },
               ],
               recursive: false,
               position: (72, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "isStatic",
                 position: (92, 7),
                },
               ],
              },
              to: BinaryOperation {
               operator: LogicalOr,
               operands: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (92, 18),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isWasm",
                    position: (92, 24),
                   },
                  ],
                 },
                 default: None,
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (92, 34),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isRedox",
                    position: (92, 40),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (92, 31),
              },
             },
             Inherit {
              from: Some(
               BinaryOperation {
                operator: Update,
                operands: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "linux-kernel",
                       position: (97, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "args",
                      position: (97, 26),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "linux-kernel",
                        position: (97, 31),
                       },
                      ],
                     },
                     default: Some(
                      Map {
                       bindings: [],
                       recursive: false,
                       position: (97, 47),
                      },
                     ),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "gcc",
                       position: (98, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "args",
                      position: (98, 17),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "gcc",
                        position: (98, 22),
                       },
                      ],
                     },
                     default: Some(
                      Map {
                       bindings: [],
                       recursive: false,
                       position: (98, 29),
                      },
                     ),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "rustc",
                       position: (99, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "args",
                      position: (99, 19),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "rust",
                        position: (99, 24),
                       },
                      ],
                     },
                     default: Some(
                      Map {
                       bindings: [],
                       recursive: false,
                       position: (99, 32),
                      },
                     ),
                    },
                   },
                  ],
                  recursive: false,
                  position: (96, 10),
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "platforms",
                    position: (100, 14),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "select",
                      position: (100, 24),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Variable {
                    identifier: "final",
                    position: (100, 31),
                   },
                  ],
                 },
                ],
                position: (100, 11),
               },
              ),
              attributes: [
               Raw {
                content: "linux-kernel",
                position: (101, 9),
               },
               Raw {
                content: "gcc",
                position: (101, 22),
               },
               Raw {
                content: "rustc",
                position: (101, 26),
               },
              ],
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "linuxArch",
                 position: (103, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "final",
                 position: (104, 12),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "isAarch32",
                   position: (104, 18),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "arm",
                  position: (104, 34),
                 },
                ],
                position: (104, 33),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (105, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isAarch64",
                    position: (105, 23),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "arm64",
                   position: (105, 39),
                  },
                 ],
                 position: (105, 38),
                },
                else_: IfThenElse {
                 predicate: PropertyAccess {
                  expression: Variable {
                   identifier: "final",
                   position: (106, 17),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "isx86_32",
                     position: (106, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 then: String {
                  parts: [
                   Raw {
                    content: "i386",
                    position: (106, 38),
                   },
                  ],
                  position: (106, 37),
                 },
                 else_: IfThenElse {
                  predicate: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (107, 17),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "isx86_64",
                      position: (107, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: "x86_64",
                     position: (107, 38),
                    },
                   ],
                   position: (107, 37),
                  },
                  else_: IfThenElse {
                   predicate: PropertyAccess {
                    expression: Variable {
                     identifier: "final",
                     position: (108, 17),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "isMips32",
                       position: (108, 23),
                      },
                     ],
                    },
                    default: None,
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: "mips",
                      position: (108, 38),
                     },
                    ],
                    position: (108, 37),
                   },
                   else_: IfThenElse {
                    predicate: PropertyAccess {
                     expression: Variable {
                      identifier: "final",
                      position: (109, 17),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "isMips64",
                        position: (109, 23),
                       },
                      ],
                     },
                     default: None,
                    },
                    then: String {
                     parts: [
                      Raw {
                       content: "mips",
                       position: (109, 38),
                      },
                     ],
                     position: (109, 37),
                    },
                    else_: IfThenElse {
                     predicate: PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (110, 17),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "isPower",
                         position: (110, 23),
                        },
                       ],
                      },
                      default: None,
                     },
                     then: String {
                      parts: [
                       Raw {
                        content: "powerpc",
                        position: (110, 37),
                       },
                      ],
                      position: (110, 36),
                     },
                     else_: IfThenElse {
                      predicate: PropertyAccess {
                       expression: Variable {
                        identifier: "final",
                        position: (111, 17),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "isRiscV",
                          position: (111, 23),
                         },
                        ],
                       },
                       default: None,
                      },
                      then: String {
                       parts: [
                        Raw {
                         content: "riscv",
                         position: (111, 37),
                        },
                       ],
                       position: (111, 36),
                      },
                      else_: IfThenElse {
                       predicate: PropertyAccess {
                        expression: Variable {
                         identifier: "final",
                         position: (112, 17),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "isS390",
                           position: (112, 23),
                          },
                         ],
                        },
                        default: None,
                       },
                       then: String {
                        parts: [
                         Raw {
                          content: "s390",
                          position: (112, 36),
                         },
                        ],
                        position: (112, 35),
                       },
                       else_: PropertyAccess {
                        expression: Variable {
                         identifier: "final",
                         position: (113, 14),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "parsed",
                           position: (113, 20),
                          },
                          Raw {
                           content: "cpu",
                           position: (113, 27),
                          },
                          Raw {
                           content: "name",
                           position: (113, 31),
                          },
                         ],
                        },
                        default: None,
                       },
                       position: (112, 14),
                      },
                      position: (111, 14),
                     },
                     position: (110, 14),
                    },
                    position: (109, 14),
                   },
                   position: (108, 14),
                  },
                  position: (107, 14),
                 },
                 position: (106, 14),
                },
                position: (105, 14),
               },
               position: (104, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "qemuArch",
                 position: (115, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "final",
                 position: (116, 12),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "isAarch32",
                   position: (116, 18),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "arm",
                  position: (116, 34),
                 },
                ],
                position: (116, 33),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (117, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isx86_64",
                    position: (117, 23),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "x86_64",
                   position: (117, 38),
                  },
                 ],
                 position: (117, 37),
                },
                else_: IfThenElse {
                 predicate: PropertyAccess {
                  expression: Variable {
                   identifier: "final",
                   position: (118, 17),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "isx86",
                     position: (118, 23),
                    },
                   ],
                  },
                  default: None,
                 },
                 then: String {
                  parts: [
                   Raw {
                    content: "i386",
                    position: (118, 35),
                   },
                  ],
                  position: (118, 34),
                 },
                 else_: PropertyAccess {
                  expression: Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "powerpc",
                        position: (120, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "ppc",
                        position: (120, 22),
                       },
                      ],
                      position: (120, 21),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "powerpcle",
                        position: (121, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "ppc",
                        position: (121, 24),
                       },
                      ],
                      position: (121, 23),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "powerpc64",
                        position: (122, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "ppc64",
                        position: (122, 24),
                       },
                      ],
                      position: (122, 23),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "powerpc64le",
                        position: (123, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "ppc64le",
                        position: (123, 26),
                       },
                      ],
                      position: (123, 25),
                     },
                    },
                   ],
                   recursive: false,
                   position: (119, 14),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Interpolation {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (124, 13),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "parsed",
                         position: (124, 19),
                        },
                        Raw {
                         content: "cpu",
                         position: (124, 26),
                        },
                        Raw {
                         content: "name",
                         position: (124, 30),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                   ],
                  },
                  default: Some(
                   PropertyAccess {
                    expression: Variable {
                     identifier: "final",
                     position: (124, 39),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "parsed",
                       position: (124, 45),
                      },
                      Raw {
                       content: "cpu",
                       position: (124, 52),
                      },
                      Raw {
                       content: "name",
                       position: (124, 56),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                 },
                 position: (118, 14),
                },
                position: (117, 14),
               },
               position: (116, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "darwinArch",
                 position: (126, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "armv7a",
                     position: (127, 9),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "armv7",
                     position: (127, 20),
                    },
                   ],
                   position: (127, 19),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "aarch64",
                     position: (128, 9),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "arm64",
                     position: (128, 20),
                    },
                   ],
                   position: (128, 19),
                  },
                 },
                ],
                recursive: false,
                position: (126, 20),
               },
               attribute_path: AttributePath {
                parts: [
                 Interpolation {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (129, 11),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "parsed",
                      position: (129, 17),
                     },
                     Raw {
                      content: "cpu",
                      position: (129, 24),
                     },
                     Raw {
                      content: "name",
                      position: (129, 28),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                ],
               },
               default: Some(
                PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (129, 37),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "parsed",
                    position: (129, 43),
                   },
                   Raw {
                    content: "cpu",
                    position: (129, 50),
                   },
                   Raw {
                    content: "name",
                    position: (129, 54),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "darwinPlatform",
                 position: (131, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "final",
                 position: (132, 12),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "isMacOS",
                   position: (132, 18),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "macos",
                  position: (132, 32),
                 },
                ],
                position: (132, 31),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (133, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isiOS",
                    position: (133, 23),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "ios",
                   position: (133, 35),
                  },
                 ],
                 position: (133, 34),
                },
                else_: Variable {
                 identifier: "null",
                 position: (134, 14),
                },
                position: (133, 14),
               },
               position: (132, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "darwinSdkVersion",
                 position: (137, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "final",
                position: (137, 26),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "sdkVer",
                  position: (137, 32),
                 },
                ],
               },
               default: Some(
                Parentheses {
                 expression: IfThenElse {
                  predicate: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (137, 46),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "isAarch64",
                      position: (137, 52),
                     },
                    ],
                   },
                   default: None,
                  },
                  then: String {
                   parts: [
                    Raw {
                     content: "11.0",
                     position: (137, 68),
                    },
                   ],
                   position: (137, 67),
                  },
                  else_: String {
                   parts: [
                    Raw {
                     content: "10.12",
                     position: (137, 80),
                    },
                   ],
                   position: (137, 79),
                  },
                  position: (137, 43),
                 },
                 position: (137, 42),
                },
               ),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "darwinMinVersion",
                 position: (138, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "final",
                position: (138, 26),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "darwinSdkVersion",
                  position: (138, 32),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "darwinMinVersionVariable",
                 position: (139, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: PropertyAccess {
                expression: Variable {
                 identifier: "final",
                 position: (140, 12),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "isMacOS",
                   position: (140, 18),
                  },
                 ],
                },
                default: None,
               },
               then: String {
                parts: [
                 Raw {
                  content: "MACOSX_DEPLOYMENT_TARGET",
                  position: (140, 32),
                 },
                ],
                position: (140, 31),
               },
               else_: IfThenElse {
                predicate: PropertyAccess {
                 expression: Variable {
                  identifier: "final",
                  position: (141, 17),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "isiOS",
                    position: (141, 23),
                   },
                  ],
                 },
                 default: None,
                },
                then: String {
                 parts: [
                  Raw {
                   content: "IPHONEOS_DEPLOYMENT_TARGET",
                   position: (141, 35),
                  },
                 ],
                 position: (141, 34),
                },
                else_: Variable {
                 identifier: "null",
                 position: (142, 14),
                },
                position: (141, 14),
               },
               position: (140, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "emulator",
                 position: (144, 7),
                },
               ],
              },
              to: Function {
               argument: Simple {
                identifier: "pkgs",
               },
               definition: LetIn {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "qemu-user",
                     position: (145, 9),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (145, 21),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "qemu",
                       position: (145, 26),
                      },
                      Raw {
                       content: "override",
                       position: (145, 31),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "smartcardSupport",
                          position: (146, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (146, 30),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "spiceSupport",
                          position: (147, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (147, 26),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "openGLSupport",
                          position: (148, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (148, 27),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "virglSupport",
                          position: (149, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (149, 26),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "vncSupport",
                          position: (150, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (150, 24),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "gtkSupport",
                          position: (151, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (151, 24),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "sdlSupport",
                          position: (152, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (152, 24),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "pulseSupport",
                          position: (153, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (153, 26),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "smbdSupport",
                          position: (154, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (154, 25),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "seccompSupport",
                          position: (155, 11),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (155, 28),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "hostCpuTargets",
                          position: (156, 11),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Interpolation {
                            expression: PropertyAccess {
                             expression: Variable {
                              identifier: "final",
                              position: (156, 32),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "qemuArch",
                                position: (156, 38),
                               },
                              ],
                             },
                             default: None,
                            },
                           },
                           Raw {
                            content: "-linux-user",
                            position: (156, 47),
                           },
                          ],
                          position: (156, 29),
                         },
                        ],
                        position: (156, 28),
                       },
                      },
                     ],
                     recursive: false,
                     position: (145, 40),
                    },
                   ],
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "wine-name",
                     position: (158, 9),
                    },
                   ],
                  },
                  to: String {
                   parts: [
                    Raw {
                     content: "wine",
                     position: (158, 22),
                    },
                    Interpolation {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "toString",
                       position: (158, 28),
                      },
                      arguments: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "final",
                         position: (158, 37),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "parsed",
                           position: (158, 43),
                          },
                          Raw {
                           content: "cpu",
                           position: (158, 50),
                          },
                          Raw {
                           content: "bits",
                           position: (158, 54),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    },
                   ],
                   position: (158, 21),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "wine",
                     position: (159, 9),
                    },
                   ],
                  },
                  to: PropertyAccess {
                   expression: Parentheses {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (159, 17),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "winePackagesFor",
                         position: (159, 22),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "wine-name",
                       position: (159, 38),
                      },
                     ],
                    },
                    position: (159, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "minimal",
                      position: (159, 49),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                ],
                target: IfThenElse {
                 predicate: BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   BinaryOperation {
                    operator: EqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (161, 12),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "parsed",
                         position: (161, 18),
                        },
                        Raw {
                         content: "kernel",
                         position: (161, 25),
                        },
                        Raw {
                         content: "name",
                         position: (161, 32),
                        },
                       ],
                      },
                      default: None,
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (161, 40),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "stdenv",
                         position: (161, 45),
                        },
                        Raw {
                         content: "hostPlatform",
                         position: (161, 52),
                        },
                        Raw {
                         content: "parsed",
                         position: (161, 65),
                        },
                        Raw {
                         content: "kernel",
                         position: (161, 72),
                        },
                        Raw {
                         content: "name",
                         position: (161, 79),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                    position: (161, 37),
                   },
                   FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (162, 12),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "stdenv",
                        position: (162, 17),
                       },
                       Raw {
                        content: "hostPlatform",
                        position: (162, 24),
                       },
                       Raw {
                        content: "isCompatible",
                        position: (162, 37),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Variable {
                      identifier: "final",
                      position: (162, 50),
                     },
                    ],
                   },
                  ],
                  position: (161, 84),
                 },
                 then: String {
                  parts: [
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (163, 17),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "runtimeShell",
                        position: (163, 22),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " -c '\"$@\"' --",
                    position: (163, 35),
                   },
                  ],
                  position: (163, 14),
                 },
                 else_: IfThenElse {
                  predicate: PropertyAccess {
                   expression: Variable {
                    identifier: "final",
                    position: (164, 17),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "isWindows",
                      position: (164, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  then: String {
                   parts: [
                    Interpolation {
                     expression: Variable {
                      identifier: "wine",
                      position: (165, 17),
                     },
                    },
                    Raw {
                     content: "/bin/",
                     position: (165, 22),
                    },
                    Interpolation {
                     expression: Variable {
                      identifier: "wine-name",
                      position: (165, 29),
                     },
                    },
                   ],
                   position: (165, 14),
                  },
                  else_: IfThenElse {
                   predicate: BinaryOperation {
                    operator: LogicalAnd,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (166, 17),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "isLinux",
                         position: (166, 23),
                        },
                       ],
                      },
                      default: None,
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "pkgs",
                       position: (166, 34),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "stdenv",
                         position: (166, 39),
                        },
                        Raw {
                         content: "hostPlatform",
                         position: (166, 46),
                        },
                        Raw {
                         content: "isLinux",
                         position: (166, 59),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                    position: (166, 31),
                   },
                   then: String {
                    parts: [
                     Interpolation {
                      expression: Variable {
                       identifier: "qemu-user",
                       position: (167, 17),
                      },
                     },
                     Raw {
                      content: "/bin/qemu-",
                      position: (167, 27),
                     },
                     Interpolation {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "final",
                        position: (167, 39),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "qemuArch",
                          position: (167, 45),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                    ],
                    position: (167, 14),
                   },
                   else_: IfThenElse {
                    predicate: PropertyAccess {
                     expression: Variable {
                      identifier: "final",
                      position: (168, 17),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "isWasi",
                        position: (168, 23),
                       },
                      ],
                     },
                     default: None,
                    },
                    then: String {
                     parts: [
                      Interpolation {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (169, 17),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "wasmtime",
                           position: (169, 22),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/wasmtime",
                       position: (169, 31),
                      },
                     ],
                     position: (169, 14),
                    },
                    else_: IfThenElse {
                     predicate: PropertyAccess {
                      expression: Variable {
                       identifier: "final",
                       position: (170, 17),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "isMmix",
                         position: (170, 23),
                        },
                       ],
                      },
                      default: None,
                     },
                     then: String {
                      parts: [
                       Interpolation {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (171, 17),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "mmixware",
                            position: (171, 22),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/mmix",
                        position: (171, 31),
                       },
                      ],
                      position: (171, 14),
                     },
                     else_: FunctionApplication {
                      function: Variable {
                       identifier: "throw",
                       position: (172, 14),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "Don't know how to run ",
                          position: (172, 21),
                         },
                         Interpolation {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "final",
                            position: (172, 45),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "config",
                              position: (172, 51),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: " executables.",
                          position: (172, 58),
                         },
                        ],
                        position: (172, 20),
                       },
                      ],
                     },
                     position: (170, 14),
                    },
                    position: (168, 14),
                   },
                   position: (166, 14),
                  },
                  position: (164, 14),
                 },
                 position: (161, 9),
                },
                position: (144, 24),
               },
               position: (144, 18),
              },
             },
            ],
            recursive: false,
            position: (22, 13),
           },
           BinaryOperation {
            operator: Update,
            operands: [
             FunctionApplication {
              function: Variable {
               identifier: "mapAttrs",
               position: (174, 10),
              },
              arguments: [
               Parentheses {
                expression: Function {
                 argument: Simple {
                  identifier: "n",
                 },
                 definition: Function {
                  argument: Simple {
                   identifier: "v",
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "v",
                    position: (174, 26),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "final",
                      position: (174, 28),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "parsed",
                        position: (174, 34),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  position: (174, 23),
                 },
                 position: (174, 20),
                },
                position: (174, 19),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "inspect",
                 position: (174, 42),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "predicates",
                   position: (174, 50),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
             BinaryOperation {
              operator: Update,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "mapAttrs",
                 position: (175, 10),
                },
                arguments: [
                 Parentheses {
                  expression: Function {
                   argument: Simple {
                    identifier: "n",
                   },
                   definition: Function {
                    argument: Simple {
                     identifier: "v",
                    },
                    definition: FunctionApplication {
                     function: Variable {
                      identifier: "v",
                      position: (175, 26),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "final",
                        position: (175, 28),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "gcc",
                          position: (175, 34),
                         },
                         Raw {
                          content: "arch",
                          position: (175, 38),
                         },
                        ],
                       },
                       default: Some(
                        String {
                         parts: [
                          Raw {
                           content: "default",
                           position: (175, 47),
                          },
                         ],
                         position: (175, 46),
                        },
                       ),
                      },
                     ],
                    },
                    position: (175, 23),
                   },
                   position: (175, 20),
                  },
                  position: (175, 19),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "architectures",
                   position: (175, 57),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "predicates",
                     position: (175, 71),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               Variable {
                identifier: "args",
                position: (176, 10),
               },
              ],
              position: (176, 7),
             },
            ],
            position: (175, 7),
           },
          ],
          position: (174, 7),
         },
        },
       ],
       target: Assert {
        expression: BinaryOperation {
         operator: Implication,
         operands: [
          PropertyAccess {
           expression: Variable {
            identifier: "final",
            position: (177, 13),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "useAndroidPrebuilt",
              position: (177, 19),
             },
            ],
           },
           default: None,
          },
          PropertyAccess {
           expression: Variable {
            identifier: "final",
            position: (177, 41),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "isAndroid",
              position: (177, 47),
             },
            ],
           },
           default: None,
          },
         ],
         position: (177, 38),
        },
        target: Assert {
         expression: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (178, 13),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "foldl",
              position: (178, 17),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Parentheses {
            expression: Function {
             argument: Simple {
              identifier: "pass",
             },
             definition: Function {
              argument: Destructured {
               identifier: None,
               arguments: [
                DestructuredArgument {
                 identifier: "assertion",
                 default: None,
                },
                DestructuredArgument {
                 identifier: "message",
                 default: None,
                },
               ],
               ellipsis: false,
              },
              definition: IfThenElse {
               predicate: FunctionApplication {
                function: Variable {
                 identifier: "assertion",
                 position: (180, 13),
                },
                arguments: [
                 Variable {
                  identifier: "final",
                  position: (180, 23),
                 },
                ],
               },
               then: Variable {
                identifier: "pass",
                position: (181, 15),
               },
               else_: FunctionApplication {
                function: Variable {
                 identifier: "throw",
                 position: (182, 15),
                },
                arguments: [
                 Variable {
                  identifier: "message",
                  position: (182, 21),
                 },
                ],
               },
               position: (180, 10),
              },
              position: (179, 15),
             },
             position: (179, 9),
            },
            position: (179, 8),
           },
           Variable {
            identifier: "true",
            position: (183, 8),
           },
           Parentheses {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "final",
              position: (184, 9),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "parsed",
                position: (184, 15),
               },
               Raw {
                content: "abi",
                position: (184, 22),
               },
               Raw {
                content: "assertions",
                position: (184, 26),
               },
              ],
             },
             default: Some(
              List {
               elements: [],
               position: (184, 40),
              },
             ),
            },
            position: (184, 8),
           },
          ],
         },
         target: Variable {
          identifier: "final",
          position: (185, 5),
         },
         position: (178, 6),
        },
        position: (177, 6),
       },
       position: (19, 22),
      },
      position: (19, 15),
     },
    },
   ],
   recursive: true,
   position: (4, 1),
  },
  position: (2, 3),
 },
 position: (1, 1),
}