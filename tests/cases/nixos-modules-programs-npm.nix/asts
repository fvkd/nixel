---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "npm",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (12, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (13, 5),
           },
           Raw {
            content: "npm",
            position: (13, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (14, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (14, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "<command>npm</command> global config",
                },
               ],
               position: (14, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (16, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (16, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (17, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (17, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (17, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (18, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The npm package version / flavor to use",
                   },
                  ],
                  position: (18, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (19, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (19, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "nodePackages",
                     position: (19, 24),
                    },
                    Raw {
                     content: "npm",
                     position: (19, 37),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (20, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (20, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.nodePackages.npm",
                     },
                    ],
                    position: (20, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (21, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (21, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.nodePackages_13_x.npm",
                     },
                    ],
                    position: (21, 37),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (16, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "npmrc",
               position: (24, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (24, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (25, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "lib",
                   position: (25, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "types",
                     position: (25, 20),
                    },
                    Raw {
                     content: "lines",
                     position: (25, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (26, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The system-wide npm configuration.\nSee <link xlink:href=\"https://docs.npmjs.com/misc/config\"/>.\n",
                   },
                  ],
                  position: (26, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (30, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "prefix = ",
                   },
                   Raw {
                    content: "$",
                   },
                   Raw {
                    content: "{HOME}/.npm\n",
                   },
                  ],
                  position: (30, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (33, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "prefix = ",
                   },
                   Raw {
                    content: "$",
                   },
                   Raw {
                    content: "{HOME}/.npm\nhttps-proxy=proxy.example.com\ninit-license=MIT\ninit-author-url=http://npmjs.org\ncolor=true\n",
                   },
                  ],
                  position: (33, 19),
                 },
                ),
               ],
               recursive: false,
               position: (24, 24),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (13, 20),
         },
        ),
       ],
       recursive: false,
       position: (12, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (46, 3),
        },
       ],
      },
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (46, 12),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "mkIf",
           position: (46, 16),
          },
         ],
        },
        default: None,
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (46, 21),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (46, 25),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (47, 5),
             },
             Raw {
              content: "etc",
              position: (47, 17),
             },
             Raw {
              content: "npmrc",
              position: (47, 21),
             },
             Raw {
              content: "text",
              position: (47, 27),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (47, 34),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "npmrc",
               position: (47, 38),
              },
             ],
            },
            default: None,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (49, 5),
             },
             Raw {
              content: "variables",
              position: (49, 17),
             },
             Raw {
              content: "NPM_CONFIG_GLOBALCONFIG",
              position: (49, 27),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "/etc/npmrc",
             },
            ],
            position: (49, 53),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (51, 5),
             },
             Raw {
              content: "systemPackages",
              position: (51, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (51, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (51, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (51, 34),
           },
          ),
         ],
         recursive: false,
         position: (46, 32),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (9, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}