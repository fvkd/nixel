---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "hpssacli",
        position: (6, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (6, 14),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "stdenv",
          position: (6, 19),
         },
         Raw {
          content: "mkDerivation",
          position: (6, 26),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "pname",
             position: (7, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "hpssacli",
             position: (7, 14),
            },
           ],
           position: (7, 13),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "version",
             position: (8, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "2.40-13.0",
             position: (8, 16),
            },
           ],
           position: (8, 15),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "src",
             position: (10, 5),
            },
           ],
          },
          to: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (10, 11),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "fetchurl",
               position: (10, 16),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "url",
                  position: (11, 7),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "https://downloads.linux.hpe.com/SDR/downloads/MCP/Ubuntu/pool/non-free/",
                  position: (11, 14),
                 },
                 Interpolation {
                  expression: Variable {
                   identifier: "pname",
                   position: (11, 87),
                  },
                 },
                 Raw {
                  content: "-",
                  position: (11, 93),
                 },
                 Interpolation {
                  expression: Variable {
                   identifier: "version",
                   position: (11, 96),
                  },
                 },
                 Raw {
                  content: "_amd64.deb",
                  position: (11, 104),
                 },
                ],
                position: (11, 13),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "sha256",
                  position: (12, 7),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "11w7fwk93lmfw0yya4jpjwdmgjimqxx6412sqa166g1pz4jil4sw",
                  position: (12, 17),
                 },
                ],
                position: (12, 16),
               },
              },
             ],
             recursive: false,
             position: (10, 25),
            },
           ],
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "nativeBuildInputs",
             position: (15, 5),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (15, 27),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "dpkg",
                position: (15, 32),
               },
              ],
             },
             default: None,
            },
           ],
           position: (15, 25),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "unpackPhase",
             position: (17, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "dpkg -x $src ./",
             position: (17, 20),
            },
           ],
           position: (17, 19),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "installPhase",
             position: (19, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "mkdir -p $out/bin $out/share/doc $out/share/man\nmv opt/hp/hpssacli/bld/{hpssascripting,hprmstr,hpssacli} $out/bin/\nmv opt/hp/hpssacli/bld/*.{license,txt}                   $out/share/doc/\nmv usr/man                                               $out/share/\n\nfor file in $out/bin/*; do\n  chmod +w $file\n  patchelf --set-interpreter \"$(cat $NIX_CC/nix-support/dynamic-linker)\" \\\n           --set-rpath ",
             position: (20, 1),
            },
            Interpolation {
             expression: FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "lib",
                position: (28, 32),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "makeLibraryPath",
                  position: (28, 36),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               List {
                elements: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (28, 54),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "stdenv",
                     position: (28, 59),
                    },
                    Raw {
                     content: "cc",
                     position: (28, 66),
                    },
                    Raw {
                     content: "cc",
                     position: (28, 69),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
                position: (28, 52),
               },
              ],
             },
            },
            Raw {
             content: " \\\n           $file\ndone\n",
             position: (28, 74),
            },
           ],
           position: (19, 20),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "dontStrip",
             position: (33, 5),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (33, 17),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "meta",
             position: (35, 5),
            },
           ],
          },
          to: With {
           expression: Variable {
            identifier: "lib",
            position: (35, 17),
           },
           target: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (36, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "HP Smart Array CLI",
                 position: (36, 22),
                },
               ],
               position: (36, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "homepage",
                 position: (37, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "https://downloads.linux.hpe.com/SDR/downloads/MCP/Ubuntu/pool/non-free/",
                 position: (37, 19),
                },
               ],
               position: (37, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "license",
                 position: (38, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "licenses",
                position: (38, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "unfreeRedistributable",
                  position: (38, 26),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "platforms",
                 position: (39, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "x86_64-linux",
                   position: (39, 22),
                  },
                 ],
                 position: (39, 21),
                },
               ],
               position: (39, 19),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "maintainers",
                 position: (40, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "maintainers",
                position: (40, 26),
               },
               target: List {
                elements: [
                 Variable {
                  identifier: "volth",
                  position: (40, 41),
                 },
                ],
                position: (40, 39),
               },
               position: (40, 21),
              },
             },
            ],
            recursive: false,
            position: (35, 22),
           },
           position: (35, 12),
          },
         },
        ],
        recursive: true,
        position: (6, 39),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (46, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "hardware",
            position: (47, 5),
           },
           Raw {
            content: "raid",
            position: (47, 14),
           },
           Raw {
            content: "HPSmartArray",
            position: (47, 19),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (48, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (48, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "HP Smart Array kernel modules and CLI utility",
                 position: (48, 32),
                },
               ],
               position: (48, 31),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (47, 34),
         },
        },
       ],
       recursive: false,
       position: (46, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (54, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (54, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (54, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "hardware",
            position: (54, 24),
           },
           Raw {
            content: "raid",
            position: (54, 33),
           },
           Raw {
            content: "HPSmartArray",
            position: (54, 38),
           },
           Raw {
            content: "enable",
            position: (54, 51),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (56, 5),
             },
             Raw {
              content: "initrd",
              position: (56, 10),
             },
             Raw {
              content: "kernelModules",
              position: (56, 17),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "sg",
                position: (56, 36),
               },
              ],
              position: (56, 35),
             },
            ],
            position: (56, 33),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (57, 5),
             },
             Raw {
              content: "initrd",
              position: (57, 10),
             },
             Raw {
              content: "availableKernelModules",
              position: (57, 17),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "hpsa",
                position: (57, 45),
               },
              ],
              position: (57, 44),
             },
            ],
            position: (57, 42),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (59, 5),
             },
             Raw {
              content: "systemPackages",
              position: (59, 17),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "hpssacli",
              position: (59, 36),
             },
            ],
            position: (59, 34),
           },
          },
         ],
         recursive: false,
         position: (54, 58),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (43, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}