---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "prometheus",
         position: (6, 25),
        },
        Raw {
         content: "exporters",
         position: (6, 36),
        },
        Raw {
         content: "openvpn",
         position: (6, 46),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "port",
         position: (8, 3),
        },
       ],
      },
      to: Int {
       value: 9176,
       position: (8, 10),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "extraOpts",
         position: (9, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "statusPaths",
            position: (10, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (10, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (11, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (11, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (11, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (11, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (11, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (12, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Paths to OpenVPN status files. Please configure the OpenVPN option\n<literal>status</literal> accordingly.\n",
                 position: (13, 1),
                },
               ],
               position: (12, 21),
              },
             },
            ],
            recursive: false,
            position: (10, 28),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "telemetryPath",
            position: (17, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (18, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (18, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (18, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (19, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "/metrics",
                 position: (19, 18),
                },
               ],
               position: (19, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (20, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Path under which to expose metrics.\n",
                 position: (21, 1),
                },
               ],
               position: (20, 21),
              },
             },
            ],
            recursive: false,
            position: (17, 30),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (9, 15),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "serviceOpts",
         position: (26, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "serviceConfig",
            position: (27, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "PrivateDevices",
               position: (28, 7),
              },
             ],
            },
            to: Variable {
             identifier: "true",
             position: (28, 24),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ProtectKernelModules",
               position: (29, 7),
              },
             ],
            },
            to: Variable {
             identifier: "true",
             position: (29, 30),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "NoNewPrivileges",
               position: (30, 7),
              },
             ],
            },
            to: Variable {
             identifier: "true",
             position: (30, 25),
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ExecStart",
               position: (31, 7),
              },
             ],
            },
            to: String {
             parts: [
              Raw {
               content: "",
               position: (32, 1),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (32, 11),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "prometheus-openvpn-exporter",
                   position: (32, 16),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/openvpn_exporter \\\n  -openvpn.status_paths \"",
               position: (32, 44),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (33, 36),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: ",",
                    position: (33, 54),
                   },
                  ],
                  position: (33, 53),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (33, 57),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "statusPaths",
                     position: (33, 61),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: "\" \\\n  -web.listen-address ",
               position: (33, 73),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (34, 33),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listenAddress",
                   position: (34, 37),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: ":",
               position: (34, 51),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (34, 54),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (34, 63),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "port",
                     position: (34, 67),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  -web.telemetry-path ",
               position: (34, 72),
              },
              Interpolation {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (35, 33),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "telemetryPath",
                   position: (35, 37),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "\n",
               position: (35, 51),
              },
             ],
             position: (31, 19),
            },
           },
          ],
          recursive: false,
          position: (27, 21),
         },
        },
       ],
       recursive: false,
       position: (26, 17),
      },
     },
    ],
    recursive: false,
    position: (7, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}