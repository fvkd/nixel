---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "custom",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: Map {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "imports",
       position: (4, 3),
      },
     ],
    },
    BinaryOperation {
     operator: Concatenation,
     operands: [
      List {
       elements: [],
      },
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (5, 6),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "optional",
           position: (5, 10),
          },
         ],
        },
        default: None,
       },
       arguments: [
        Variable {
         identifier: "custom",
         position: (5, 19),
        },
        Path {
         parts: [
          Raw {
           content: "./define-enable-force.nix",
           position: (5, 26),
          },
         ],
        },
       ],
      },
     ],
    },
   ),
  ],
  recursive: false,
 },
}