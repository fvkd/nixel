---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (6, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "requiredPackages",
        position: (10, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "map",
       position: (10, 22),
      },
      arguments: [
       Parentheses {
        expression: Function {
         argument: Simple {
          identifier: "pkg",
         },
         definition: FunctionApplication {
          function: Variable {
           identifier: "setPrio",
           position: (10, 32),
          },
          arguments: [
           Parentheses {
            expression: BinaryOperation {
             operator: Addition,
             operands: [
              Parentheses {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkg",
                 position: (10, 42),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "meta",
                   position: (10, 46),
                  },
                  Raw {
                   content: "priority",
                   position: (10, 51),
                  },
                 ],
                },
                default: Some(
                 Int {
                  value: 5,
                  position: (10, 63),
                 },
                ),
               },
               position: (10, 41),
              },
              Int {
               value: 3,
               position: (10, 68),
              },
             ],
             position: (10, 66),
            },
            position: (10, 40),
           },
           Variable {
            identifier: "pkg",
            position: (10, 71),
           },
          ],
         },
         position: (10, 27),
        },
        position: (10, 26),
       },
       List {
        elements: [
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (11, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "acl",
             position: (11, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (12, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "attr",
             position: (12, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (13, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "bashInteractive",
             position: (13, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (14, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "bzip2",
             position: (14, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (15, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "coreutils-full",
             position: (15, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (16, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "cpio",
             position: (16, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (17, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "curl",
             position: (17, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (18, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "diffutils",
             position: (18, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (19, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "findutils",
             position: (19, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (20, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gawk",
             position: (20, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (21, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "stdenv",
             position: (21, 12),
            },
            Raw {
             content: "cc",
             position: (21, 19),
            },
            Raw {
             content: "libc",
             position: (21, 22),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (22, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "getent",
             position: (22, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (23, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "getconf",
             position: (23, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (24, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gnugrep",
             position: (24, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (25, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gnupatch",
             position: (25, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (26, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gnused",
             position: (26, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (27, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gnutar",
             position: (27, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (28, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gzip",
             position: (28, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (29, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "xz",
             position: (29, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (30, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "less",
             position: (30, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (31, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "libcap",
             position: (31, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (32, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "ncurses",
             position: (32, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (33, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "netcat",
             position: (33, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (34, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "programs",
             position: (34, 14),
            },
            Raw {
             content: "ssh",
             position: (34, 23),
            },
            Raw {
             content: "package",
             position: (34, 27),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (35, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "mkpasswd",
             position: (35, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (36, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "procps",
             position: (36, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (37, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "su",
             position: (37, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (38, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "time",
             position: (38, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (39, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "util-linux",
             position: (39, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (40, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "which",
             position: (40, 12),
            },
           ],
          },
          default: None,
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (41, 7),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "zstd",
             position: (41, 12),
            },
           ],
          },
          default: None,
         },
        ],
        position: (11, 5),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultPackageNames",
        position: (44, 3),
       },
      ],
     },
     to: List {
      elements: [
       String {
        parts: [
         Raw {
          content: "nano",
          position: (45, 8),
         },
        ],
        position: (45, 7),
       },
       String {
        parts: [
         Raw {
          content: "perl",
          position: (46, 8),
         },
        ],
        position: (46, 7),
       },
       String {
        parts: [
         Raw {
          content: "rsync",
          position: (47, 8),
         },
        ],
        position: (47, 7),
       },
       String {
        parts: [
         Raw {
          content: "strace",
          position: (48, 8),
         },
        ],
        position: (48, 7),
       },
      ],
      position: (45, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultPackages",
        position: (50, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "map",
       position: (51, 5),
      },
      arguments: [
       Parentheses {
        expression: Function {
         argument: Simple {
          identifier: "n",
         },
         definition: LetIn {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "pkg",
               position: (52, 15),
              },
             ],
            },
            to: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (52, 21),
             },
             attribute_path: AttributePath {
              parts: [
               Expression {
                expression: Variable {
                 identifier: "n",
                 position: (52, 28),
                },
               },
              ],
             },
             default: None,
            },
           },
          ],
          target: FunctionApplication {
           function: Variable {
            identifier: "setPrio",
            position: (52, 35),
           },
           arguments: [
            Parentheses {
             expression: BinaryOperation {
              operator: Addition,
              operands: [
               Parentheses {
                expression: PropertyAccess {
                 expression: Variable {
                  identifier: "pkg",
                  position: (52, 45),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "meta",
                    position: (52, 49),
                   },
                   Raw {
                    content: "priority",
                    position: (52, 54),
                   },
                  ],
                 },
                 default: Some(
                  Int {
                   value: 5,
                   position: (52, 66),
                  },
                 ),
                },
                position: (52, 44),
               },
               Int {
                value: 3,
                position: (52, 71),
               },
              ],
              position: (52, 69),
             },
             position: (52, 43),
            },
            Variable {
             identifier: "pkg",
             position: (52, 74),
            },
           ],
          },
          position: (52, 11),
         },
         position: (52, 8),
        },
        position: (52, 7),
       },
       Variable {
        identifier: "defaultPackageNames",
        position: (53, 7),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultPackagesText",
        position: (54, 3),
       },
      ],
     },
     to: String {
      parts: [
       Raw {
        content: "[ ",
        position: (54, 26),
       },
       Expression {
        expression: FunctionApplication {
         function: Variable {
          identifier: "concatMapStringsSep",
          position: (54, 30),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: " ",
             position: (54, 51),
            },
           ],
           position: (54, 50),
          },
          Parentheses {
           expression: Function {
            argument: Simple {
             identifier: "n",
            },
            definition: String {
             parts: [
              Raw {
               content: "pkgs.",
               position: (54, 59),
              },
              Expression {
               expression: Variable {
                identifier: "n",
                position: (54, 66),
               },
              },
             ],
             position: (54, 58),
            },
            position: (54, 55),
           },
           position: (54, 54),
          },
          Variable {
           identifier: "defaultPackageNames",
           position: (54, 71),
          },
         ],
        },
       },
       Raw {
        content: " ]",
        position: (54, 92),
       },
      ],
      position: (54, 25),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (59, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (61, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "systemPackages",
               position: (63, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (63, 24),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (64, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (64, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (64, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (64, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (65, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (66, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (66, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.firefox pkgs.thunderbird ]",
                      position: (66, 38),
                     },
                    ],
                    position: (66, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (67, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The set of packages that appear in\n/run/current-system/sw.  These packages are\nautomatically available to all users, and are\nautomatically updated every time you rebuild the system\nconfiguration.  (The latter is the main difference with\ninstalling them in the default profile,\n<filename>/nix/var/nix/profiles/default</filename>.\n",
                    position: (68, 1),
                   },
                  ],
                  position: (67, 23),
                 },
                },
               ],
               recursive: false,
               position: (63, 33),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "defaultPackages",
               position: (78, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (78, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (79, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (79, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (79, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (79, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (79, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (80, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "defaultPackages",
                  position: (80, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (81, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalDocBook",
                   position: (81, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "these packages, with their <literal>meta.priority</literal> numerically increased\n(thus lowering their installation priority):\n<programlisting>",
                      position: (82, 1),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "defaultPackagesText",
                       position: (84, 29),
                      },
                     },
                     Raw {
                      content: "</programlisting>\n",
                      position: (84, 49),
                     },
                    ],
                    position: (81, 38),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (86, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (86, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (87, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Set of default packages that aren't strictly necessary\nfor a running system, entries can be removed for a more\nminimal NixOS installation.\n\nNote: If <package>pkgs.nano</package> is removed from this list,\nmake sure another editor is installed and the\n<literal>EDITOR</literal> environment variable is set to it.\nEnvironment variables can be set using\n<option>environment.variables</option>.\n\nLike with systemPackages, packages are installed to\n<filename>/run/current-system/sw</filename>. They are\nautomatically available to all users, and are\nautomatically updated every time you rebuild the system\nconfiguration.\n",
                    position: (88, 1),
                   },
                  ],
                  position: (87, 23),
                 },
                },
               ],
               recursive: false,
               position: (78, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "pathsToLink",
               position: (106, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (106, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (107, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (107, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (107, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (107, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (107, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (110, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (110, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (111, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "/",
                      position: (111, 21),
                     },
                    ],
                    position: (111, 20),
                   },
                  ],
                  position: (111, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (112, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of directories to be symlinked in <filename>/run/current-system/sw</filename>.",
                    position: (112, 24),
                   },
                  ],
                  position: (112, 23),
                 },
                },
               ],
               recursive: false,
               position: (106, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraOutputsToInstall",
               position: (115, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (115, 31),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (116, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (116, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (116, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (116, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (116, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (117, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (117, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (118, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "doc",
                      position: (118, 22),
                     },
                    ],
                    position: (118, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "info",
                      position: (118, 28),
                     },
                    ],
                    position: (118, 27),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "devdoc",
                      position: (118, 35),
                     },
                    ],
                    position: (118, 34),
                   },
                  ],
                  position: (118, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (119, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of additional package outputs to be symlinked into <filename>/run/current-system/sw</filename>.",
                    position: (119, 24),
                   },
                  ],
                  position: (119, 23),
                 },
                },
               ],
               recursive: false,
               position: (115, 40),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraSetup",
               position: (122, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (122, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (123, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (123, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (123, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (124, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (124, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (125, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Shell fragments to be run after the system environment has been created. This should only be used for things that need to modify the internals of the environment, e.g. generating MIME caches. The environment being built can be accessed at $out.",
                    position: (125, 24),
                   },
                  ],
                  position: (125, 23),
                 },
                },
               ],
               recursive: false,
               position: (122, 29),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (61, 19),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "system",
            position: (130, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "path",
               position: (132, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (132, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (133, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (133, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (134, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The packages you want in the boot environment.\n",
                    position: (135, 1),
                   },
                  ],
                  position: (134, 23),
                 },
                },
               ],
               recursive: false,
               position: (132, 23),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (130, 14),
         },
        },
       ],
       recursive: false,
       position: (59, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (143, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (145, 5),
           },
           Raw {
            content: "systemPackages",
            position: (145, 17),
           },
          ],
         },
         to: BinaryOperation {
          operator: Concatenation,
          operands: [
           Variable {
            identifier: "requiredPackages",
            position: (145, 34),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "config",
             position: (145, 54),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "environment",
               position: (145, 61),
              },
              Raw {
               content: "defaultPackages",
               position: (145, 73),
              },
             ],
            },
            default: None,
           },
          ],
          position: (145, 51),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (147, 5),
           },
           Raw {
            content: "pathsToLink",
            position: (147, 17),
           },
          ],
         },
         to: List {
          elements: [
           String {
            parts: [
             Raw {
              content: "/bin",
              position: (148, 10),
             },
            ],
            position: (148, 9),
           },
           String {
            parts: [
             Raw {
              content: "/etc/xdg",
              position: (149, 10),
             },
            ],
            position: (149, 9),
           },
           String {
            parts: [
             Raw {
              content: "/etc/gtk-2.0",
              position: (150, 10),
             },
            ],
            position: (150, 9),
           },
           String {
            parts: [
             Raw {
              content: "/etc/gtk-3.0",
              position: (151, 10),
             },
            ],
            position: (151, 9),
           },
           String {
            parts: [
             Raw {
              content: "/lib",
              position: (152, 10),
             },
            ],
            position: (152, 9),
           },
           String {
            parts: [
             Raw {
              content: "/sbin",
              position: (153, 10),
             },
            ],
            position: (153, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/emacs",
              position: (154, 10),
             },
            ],
            position: (154, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/hunspell",
              position: (155, 10),
             },
            ],
            position: (155, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/nano",
              position: (156, 10),
             },
            ],
            position: (156, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/org",
              position: (157, 10),
             },
            ],
            position: (157, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/themes",
              position: (158, 10),
             },
            ],
            position: (158, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/vim-plugins",
              position: (159, 10),
             },
            ],
            position: (159, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/vulkan",
              position: (160, 10),
             },
            ],
            position: (160, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/kservices5",
              position: (161, 10),
             },
            ],
            position: (161, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/kservicetypes5",
              position: (162, 10),
             },
            ],
            position: (162, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/kxmlgui5",
              position: (163, 10),
             },
            ],
            position: (163, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/systemd",
              position: (164, 10),
             },
            ],
            position: (164, 9),
           },
           String {
            parts: [
             Raw {
              content: "/share/thumbnailers",
              position: (165, 10),
             },
            ],
            position: (165, 9),
           },
          ],
          position: (148, 7),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "system",
            position: (168, 5),
           },
           Raw {
            content: "path",
            position: (168, 12),
           },
          ],
         },
         to: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (168, 19),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "buildEnv",
              position: (168, 24),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "name",
                 position: (169, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "system-path",
                 position: (169, 15),
                },
               ],
               position: (169, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "paths",
                 position: (170, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (170, 15),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "environment",
                  position: (170, 22),
                 },
                 Raw {
                  content: "systemPackages",
                  position: (170, 34),
                 },
                ],
               },
               default: None,
              },
             },
             Inherit {
              from: Some(
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (171, 16),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "environment",
                   position: (171, 23),
                  },
                 ],
                },
                default: None,
               },
              ),
              attributes: [
               Raw {
                content: "pathsToLink",
                position: (171, 36),
               },
               Raw {
                content: "extraOutputsToInstall",
                position: (171, 48),
               },
              ],
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "ignoreCollisions",
                 position: (172, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (172, 26),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "postBuild",
                 position: (175, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "# Remove wrapped binaries, they shouldn't be accessible via PATH.\nfind $out/bin -maxdepth 1 -name \".*-wrapped\" -type l -delete\n\nif [ -x $out/bin/glib-compile-schemas -a -w $out/share/glib-2.0/schemas ]; then\n    $out/bin/glib-compile-schemas $out/share/glib-2.0/schemas\nfi\n\n",
                 position: (177, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (184, 13),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "environment",
                     position: (184, 20),
                    },
                    Raw {
                     content: "extraSetup",
                     position: (184, 32),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\n",
                 position: (184, 43),
                },
               ],
               position: (176, 9),
              },
             },
            ],
            recursive: false,
            position: (168, 33),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (143, 12),
      },
     },
    ],
    recursive: false,
    position: (58, 1),
   },
   position: (8, 1),
  },
  position: (6, 1),
 },
 position: (4, 1),
}