---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (5, 16),
        },
        Raw {
         content: "undervolt",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "mkPLimit",
        position: (7, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "limit",
      },
      definition: Function {
       argument: Simple {
        identifier: "window",
       },
       definition: IfThenElse {
        predicate: Parentheses {
         expression: BinaryOperation {
          operator: LogicalAnd,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "isNull",
             position: (8, 9),
            },
            arguments: [
             Variable {
              identifier: "limit",
              position: (8, 16),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "isNull",
             position: (8, 25),
            },
            arguments: [
             Variable {
              identifier: "window",
              position: (8, 32),
             },
            ],
           },
          ],
          position: (8, 22),
         },
         position: (8, 8),
        },
        then: Variable {
         identifier: "null",
         position: (8, 45),
        },
        else_: Assert {
         expression: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "asserts",
            position: (9, 17),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "assertMsg",
              position: (9, 25),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Parentheses {
            expression: BinaryOperation {
             operator: LogicalAnd,
             operands: [
              UnaryOperation {
               operator: Not,
               operand: FunctionApplication {
                function: Variable {
                 identifier: "isNull",
                 position: (9, 37),
                },
                arguments: [
                 Variable {
                  identifier: "limit",
                  position: (9, 44),
                 },
                ],
               },
               position: (9, 36),
              },
              UnaryOperation {
               operator: Not,
               operand: FunctionApplication {
                function: Variable {
                 identifier: "isNull",
                 position: (9, 54),
                },
                arguments: [
                 Variable {
                  identifier: "window",
                  position: (9, 61),
                 },
                ],
               },
               position: (9, 53),
              },
             ],
             position: (9, 50),
            },
            position: (9, 35),
           },
           String {
            parts: [
             Raw {
              content: "Both power limit and window must be set",
              position: (9, 70),
             },
            ],
            position: (9, 69),
           },
          ],
         },
         target: String {
          parts: [
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (10, 10),
             },
             arguments: [
              Variable {
               identifier: "limit",
               position: (10, 19),
              },
             ],
            },
           },
           Raw {
            content: " ",
            position: (10, 25),
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (10, 28),
             },
             arguments: [
              Variable {
               identifier: "window",
               position: (10, 37),
              },
             ],
            },
           },
          ],
          position: (10, 7),
         },
         position: (9, 10),
        },
        position: (8, 5),
       },
       position: (7, 21),
      },
      position: (7, 14),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cliArgs",
        position: (11, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (11, 13),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "cli",
          position: (11, 17),
         },
         Raw {
          content: "toGNUCommandLine",
          position: (11, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [],
        recursive: false,
        position: (11, 38),
       },
       Map {
        bindings: [
         Inherit {
          from: Some(
           Variable {
            identifier: "cfg",
            position: (12, 14),
           },
          ),
          attributes: [
           Raw {
            content: "verbose",
            position: (13, 7),
           },
           Raw {
            content: "temp",
            position: (14, 7),
           },
          ],
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "core",
             position: (21, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (21, 12),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "coreOffset",
              position: (21, 16),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "cache",
             position: (22, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (22, 13),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "coreOffset",
              position: (22, 17),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "gpu",
             position: (23, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (23, 11),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "gpuOffset",
              position: (23, 15),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "uncore",
             position: (24, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (24, 14),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "uncoreOffset",
              position: (24, 18),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "analogio",
             position: (25, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (25, 16),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "analogioOffset",
              position: (25, 20),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "temp-bat",
             position: (27, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (27, 16),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "tempBat",
              position: (27, 20),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "temp-ac",
             position: (28, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (28, 15),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "tempAc",
              position: (28, 19),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "power-limit-long",
             position: (30, 5),
            },
           ],
          },
          to: FunctionApplication {
           function: Variable {
            identifier: "mkPLimit",
            position: (30, 24),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (30, 33),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "p1",
                position: (30, 37),
               },
               Raw {
                content: "limit",
                position: (30, 40),
               },
              ],
             },
             default: None,
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (30, 46),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "p1",
                position: (30, 50),
               },
               Raw {
                content: "window",
                position: (30, 53),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "power-limit-short",
             position: (31, 5),
            },
           ],
          },
          to: FunctionApplication {
           function: Variable {
            identifier: "mkPLimit",
            position: (31, 25),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (31, 34),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "p2",
                position: (31, 38),
               },
               Raw {
                content: "limit",
                position: (31, 41),
               },
              ],
             },
             default: None,
            },
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (31, 47),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "p2",
                position: (31, 51),
               },
               Raw {
                content: "window",
                position: (31, 54),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
        ],
        recursive: false,
        position: (11, 41),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (35, 3),
        },
        Raw {
         content: "services",
         position: (35, 11),
        },
        Raw {
         content: "undervolt",
         position: (35, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (36, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (36, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Undervolting service for Intel CPUs.\n\nWarning: This service is not endorsed by Intel and may permanently damage your hardware. Use at your own risk!\n",
              position: (37, 1),
             },
            ],
            position: (36, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "verbose",
            position: (42, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (42, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (43, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (43, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (43, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (44, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (44, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (45, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to enable verbose logging.\n",
                 position: (46, 1),
                },
               ],
               position: (45, 21),
              },
             },
            ],
            recursive: false,
            position: (42, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "package",
            position: (50, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (50, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (51, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (51, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (51, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (52, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (52, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "undervolt",
                  position: (52, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (53, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (53, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.undervolt",
                   position: (53, 40),
                  },
                 ],
                 position: (53, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (54, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "undervolt derivation to use.\n",
                 position: (55, 1),
                },
               ],
               position: (54, 21),
              },
             },
            ],
            recursive: false,
            position: (50, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "coreOffset",
            position: (59, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (59, 18),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (60, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (60, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (60, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (60, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (60, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (61, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (61, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (62, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The amount of voltage in mV to offset the CPU cores by.\n",
                 position: (63, 1),
                },
               ],
               position: (62, 21),
              },
             },
            ],
            recursive: false,
            position: (59, 27),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "gpuOffset",
            position: (67, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (67, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (68, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (68, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (68, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (68, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (68, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (69, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (69, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (70, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The amount of voltage in mV to offset the GPU by.\n",
                 position: (71, 1),
                },
               ],
               position: (70, 21),
              },
             },
            ],
            recursive: false,
            position: (67, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "uncoreOffset",
            position: (75, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (75, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (76, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (76, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (76, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (76, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (76, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (77, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (77, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (78, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The amount of voltage in mV to offset uncore by.\n",
                 position: (79, 1),
                },
               ],
               position: (78, 21),
              },
             },
            ],
            recursive: false,
            position: (75, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "analogioOffset",
            position: (83, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (83, 22),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (84, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (84, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (84, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (84, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (84, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (85, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (85, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (86, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The amount of voltage in mV to offset analogio by.\n",
                 position: (87, 1),
                },
               ],
               position: (86, 21),
              },
             },
            ],
            recursive: false,
            position: (83, 31),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "temp",
            position: (91, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (91, 12),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (92, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (92, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (92, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (92, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (92, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (93, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (93, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (94, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The temperature target in Celsius degrees.\n",
                 position: (95, 1),
                },
               ],
               position: (94, 21),
              },
             },
            ],
            recursive: false,
            position: (91, 21),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "tempAc",
            position: (99, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (99, 14),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (100, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (100, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (100, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (100, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (100, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (101, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (101, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (102, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The temperature target on AC power in Celsius degrees.\n",
                 position: (103, 1),
                },
               ],
               position: (102, 21),
              },
             },
            ],
            recursive: false,
            position: (99, 23),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "tempBat",
            position: (107, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (107, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (108, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (108, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "nullOr",
                   position: (108, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (108, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (108, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (109, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (109, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (110, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The temperature target on battery power in Celsius degrees.\n",
                 position: (111, 1),
                },
               ],
               position: (110, 21),
              },
             },
            ],
            recursive: false,
            position: (107, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "p1",
            position: (115, 5),
           },
           Raw {
            content: "limit",
            position: (115, 8),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (115, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (116, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (116, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (116, 26),
                },
                arguments: [
                 Variable {
                  identifier: "int",
                  position: (116, 33),
                 },
                ],
               },
               position: (116, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (117, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (117, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (118, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The P1 Power Limit in Watts.\nBoth limit and window must be set.\n",
                 position: (119, 1),
                },
               ],
               position: (118, 21),
              },
             },
            ],
            recursive: false,
            position: (115, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "p1",
            position: (123, 5),
           },
           Raw {
            content: "window",
            position: (123, 8),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (123, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (124, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (124, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (124, 26),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "oneOf",
                    position: (124, 34),
                   },
                   arguments: [
                    List {
                     elements: [
                      Variable {
                       identifier: "float",
                       position: (124, 42),
                      },
                      Variable {
                       identifier: "int",
                       position: (124, 48),
                      },
                     ],
                     position: (124, 40),
                    },
                   ],
                  },
                  position: (124, 33),
                 },
                ],
               },
               position: (124, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (125, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (125, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (126, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The P1 Time Window in seconds.\nBoth limit and window must be set.\n",
                 position: (127, 1),
                },
               ],
               position: (126, 21),
              },
             },
            ],
            recursive: false,
            position: (123, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "p2",
            position: (132, 5),
           },
           Raw {
            content: "limit",
            position: (132, 8),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (132, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (133, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (133, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (133, 26),
                },
                arguments: [
                 Variable {
                  identifier: "int",
                  position: (133, 33),
                 },
                ],
               },
               position: (133, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (134, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (134, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (135, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The P2 Power Limit in Watts.\nBoth limit and window must be set.\n",
                 position: (136, 1),
                },
               ],
               position: (135, 21),
              },
             },
            ],
            recursive: false,
            position: (132, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "p2",
            position: (140, 5),
           },
           Raw {
            content: "window",
            position: (140, 8),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (140, 17),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (141, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (141, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (141, 26),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "oneOf",
                    position: (141, 34),
                   },
                   arguments: [
                    List {
                     elements: [
                      Variable {
                       identifier: "float",
                       position: (141, 42),
                      },
                      Variable {
                       identifier: "int",
                       position: (141, 48),
                      },
                     ],
                     position: (141, 40),
                    },
                   ],
                  },
                  position: (141, 33),
                 },
                ],
               },
               position: (141, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (142, 7),
                },
               ],
              },
              to: Variable {
               identifier: "null",
               position: (142, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (143, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The P2 Time Window in seconds.\nBoth limit and window must be set.\n",
                 position: (144, 1),
                },
               ],
               position: (143, 21),
              },
             },
            ],
            recursive: false,
            position: (140, 26),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "useTimer",
            position: (149, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (149, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (150, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (150, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (150, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (151, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (151, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (152, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to set a timer that applies the undervolt settings every 30s.\nThis will cause spam in the journal but might be required for some\nhardware under specific conditions.\nEnable this if your undervolt settings don't hold.\n",
                 position: (153, 1),
                },
               ],
               position: (152, 21),
              },
             },
            ],
            recursive: false,
            position: (149, 25),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (35, 32),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (161, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (161, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (161, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (161, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (162, 5),
             },
             Raw {
              content: "kernelModules",
              position: (162, 10),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "msr",
                position: (162, 29),
               },
              ],
              position: (162, 28),
             },
            ],
            position: (162, 26),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (164, 5),
             },
             Raw {
              content: "systemPackages",
              position: (164, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (164, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (164, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (164, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (166, 5),
             },
             Raw {
              content: "services",
              position: (166, 13),
             },
             Raw {
              content: "undervolt",
              position: (166, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (167, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Intel Undervolting Service",
                 position: (167, 22),
                },
               ],
               position: (167, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (170, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (170, 21),
                  },
                 ],
                 position: (170, 20),
                },
                String {
                 parts: [
                  Raw {
                   content: "post-resume.target",
                   position: (170, 41),
                  },
                 ],
                 position: (170, 40),
                },
               ],
               position: (170, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (171, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "post-resume.target",
                   position: (171, 18),
                  },
                 ],
                 position: (171, 17),
                },
               ],
               position: (171, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (173, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Type",
                    position: (174, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "oneshot",
                    position: (174, 17),
                   },
                  ],
                  position: (174, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (175, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "no",
                    position: (175, 20),
                   },
                  ],
                  position: (175, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (176, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (176, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "package",
                        position: (176, 28),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/undervolt ",
                    position: (176, 36),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (176, 53),
                     },
                     arguments: [
                      Variable {
                       identifier: "cliArgs",
                       position: (176, 62),
                      },
                     ],
                    },
                   },
                  ],
                  position: (176, 21),
                 },
                },
               ],
               recursive: false,
               position: (173, 23),
              },
             },
            ],
            recursive: false,
            position: (166, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (180, 5),
             },
             Raw {
              content: "timers",
              position: (180, 13),
             },
             Raw {
              content: "undervolt",
              position: (180, 20),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (180, 32),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (180, 37),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "useTimer",
                 position: (180, 41),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (181, 7),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Undervolt timer to ensure voltage settings are always applied",
                   position: (181, 22),
                  },
                 ],
                 position: (181, 21),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "partOf",
                   position: (182, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "undervolt.service",
                     position: (182, 19),
                    },
                   ],
                   position: (182, 18),
                  },
                 ],
                 position: (182, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "wantedBy",
                   position: (183, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "multi-user.target",
                     position: (183, 21),
                    },
                   ],
                   position: (183, 20),
                  },
                 ],
                 position: (183, 18),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "timerConfig",
                   position: (184, 7),
                  },
                 ],
                },
                to: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "OnBootSec",
                      position: (185, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "2min",
                      position: (185, 22),
                     },
                    ],
                    position: (185, 21),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "OnUnitActiveSec",
                      position: (186, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "30",
                      position: (186, 28),
                     },
                    ],
                    position: (186, 27),
                   },
                  },
                 ],
                 recursive: false,
                 position: (184, 21),
                },
               },
              ],
              recursive: false,
              position: (180, 50),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (161, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (34, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}