---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "xss-lock",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (9, 3),
        },
        Raw {
         content: "programs",
         position: (9, 11),
        },
        Raw {
         content: "xss-lock",
         position: (9, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (10, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (10, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "xss-lock",
              position: (10, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "lockerCommand",
            position: (12, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (12, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (13, 7),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (13, 20),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "i3lock",
                     position: (13, 25),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/i3lock",
                 position: (13, 32),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (14, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (14, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (14, 41),
                  },
                  Raw {
                   content: "$",
                   position: (14, 42),
                  },
                  Raw {
                   content: "{pkgs.i3lock}/bin/i3lock\"",
                   position: (14, 45),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (15, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (15, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (15, 37),
                  },
                  Raw {
                   content: "$",
                   position: (15, 38),
                  },
                  Raw {
                   content: "{pkgs.i3lock-fancy}/bin/i3lock-fancy\"",
                   position: (15, 41),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (16, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (16, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "separatedString",
                   position: (16, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: " ",
                   position: (16, 37),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (17, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Locker to be used with xsslock",
                 position: (17, 22),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraOptions",
            position: (20, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (20, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (21, 7),
                },
               ],
              },
              List {
               elements: [],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (22, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "--ignore-sleep",
                   position: (22, 20),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (23, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (23, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (23, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (23, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (23, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (24, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional command-line arguments to pass to\n<command>xss-lock</command>.\n",
                 position: (25, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (31, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (31, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (31, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (31, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (32, 5),
             },
             Raw {
              content: "user",
              position: (32, 13),
             },
             Raw {
              content: "services",
              position: (32, 18),
             },
             Raw {
              content: "xss-lock",
              position: (32, 27),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (33, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "XSS Lock Daemon",
                 position: (33, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (34, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "graphical-session.target",
                   position: (34, 21),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "partOf",
                 position: (35, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "graphical-session.target",
                   position: (35, 19),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (36, 7),
                },
                Raw {
                 content: "ExecStart",
                 position: (36, 21),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "lib",
                position: (36, 38),
               },
               target: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "strings",
                  position: (37, 9),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "concatStringsSep",
                    position: (37, 17),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: " ",
                    position: (37, 35),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (38, 16),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "xss-lock",
                            position: (38, 21),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/xss-lock",
                        position: (38, 30),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "--session ${XDG_SESSION_ID}",
                        position: (38, 46),
                       },
                      ],
                     },
                    ],
                   },
                   BinaryOperation {
                    operator: Concatenation,
                    operands: [
                     FunctionApplication {
                      function: Variable {
                       identifier: "map",
                       position: (39, 17),
                      },
                      arguments: [
                       Variable {
                        identifier: "escapeShellArg",
                        position: (39, 21),
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (39, 36),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "extraOptions",
                           position: (39, 40),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Raw {
                          content: "--",
                          position: (40, 14),
                         },
                        ],
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (41, 13),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "lockerCommand",
                           position: (41, 17),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    ],
                    position: (39, 54),
                   },
                  ],
                  position: (39, 13),
                 },
                ],
               },
               position: (36, 33),
              },
             ),
            ],
            recursive: false,
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}