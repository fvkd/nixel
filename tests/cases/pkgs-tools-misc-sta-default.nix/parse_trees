---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "stdenv" (1, 3)
        , := lexemes ","
          , "," (2, 1)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "lib" (2, 3)
          , := lexemes ","
            , "," (3, 1)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchFromGitHub" (3, 3)
            , := lexemes ","
              , "," (4, 1)
            formals := rules "formal"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "autoreconfHook" (4, 3)
      } := lexemes "}"
        } "}" (5, 1)
      : := lexemes ":"
        : ":" (5, 2)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (7, 1)
                  . := lexemes "."
                    . "." (7, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (7, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "{" "binds" "}"
                  { := lexemes "{"
                    { "{" (7, 21)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules 
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "pname" (8, 3)
                            = := lexemes "="
                              = "=" (8, 9)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (8, 11)
                                          string_parts := rules "STR"
                                            STR := lexemes "STR"
                                              STR "sta" (8, 12)
                                          " := lexemes "\""
                                            " "\"" (8, 15)
                            ; := lexemes ";"
                              ; ";" (8, 16)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "version" (9, 3)
                          = := lexemes "="
                            = "=" (9, 11)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "\"" "string_parts" "\""
                                        " := lexemes "\""
                                          " "\"" (9, 13)
                                        string_parts := rules "STR"
                                          STR := lexemes "STR"
                                            STR "unstable-2020-05-10" (9, 14)
                                        " := lexemes "\""
                                          " "\"" (9, 33)
                          ; := lexemes ";"
                            ; ";" (9, 34)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "src" (11, 3)
                        = := lexemes "="
                          = "=" (11, 7)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_app" "expr_select"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "ID"
                                        ID := lexemes "ID"
                                          ID "fetchFromGitHub" (11, 9)
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "{" "binds" "}"
                                      { := lexemes "{"
                                        { "{" (11, 25)
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules 
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "owner" (12, 5)
                                              = := lexemes "="
                                                = "=" (12, 11)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (12, 13)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "simonccarter" (12, 14)
                                                            " := lexemes "\""
                                                              " "\"" (12, 26)
                                              ; := lexemes ";"
                                                ; ";" (12, 27)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "repo" (13, 5)
                                            = := lexemes "="
                                              = "=" (13, 10)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (13, 12)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "sta" (13, 13)
                                                          " := lexemes "\""
                                                            " "\"" (13, 16)
                                            ; := lexemes ";"
                                              ; ";" (13, 17)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "rev" (14, 5)
                                          = := lexemes "="
                                            = "=" (14, 9)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (14, 11)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "566e3a77b103aa27a5f77ada8e068edf700f26ef" (14, 12)
                                                        " := lexemes "\""
                                                          " "\"" (14, 52)
                                          ; := lexemes ";"
                                            ; ";" (14, 53)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "sha256" (15, 5)
                                        = := lexemes "="
                                          = "=" (15, 12)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "\"" "string_parts" "\""
                                                      " := lexemes "\""
                                                        " "\"" (15, 14)
                                                      string_parts := rules "STR"
                                                        STR := lexemes "STR"
                                                          STR "1v20di90ckl405rj5pn6lxlpxh2m2b3y9h2snjvk0k9sihk7w7d5" (15, 15)
                                                      " := lexemes "\""
                                                        " "\"" (15, 67)
                                        ; := lexemes ";"
                                          ; ";" (15, 68)
                                      } := lexemes "}"
                                        } "}" (16, 3)
                        ; := lexemes ";"
                          ; ";" (16, 4)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "nativeBuildInputs" (18, 3)
                      = := lexemes "="
                        = "=" (18, 21)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "[" "expr_list" "]"
                                    [ := lexemes "["
                                      [ "[" (18, 23)
                                    expr_list := rules "expr_list" "expr_select"
                                      expr_list := rules 
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "autoreconfHook" (18, 25)
                                    ] := lexemes "]"
                                      ] "]" (18, 40)
                      ; := lexemes ";"
                        ; ";" (18, 41)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (20, 3)
                    = := lexemes "="
                      = "=" (20, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (20, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (20, 15)
                        ; := lexemes ";"
                          ; ";" (20, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (20, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                                    binds := rules 
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "description" (21, 5)
                                                    = := lexemes "="
                                                      = "=" (21, 17)
                                                    expr := rules "expr_function"
                                                      expr_function := rules "expr_if"
                                                        expr_if := rules "expr_op"
                                                          expr_op := rules "expr_app"
                                                            expr_app := rules "expr_select"
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "\"" "string_parts" "\""
                                                                  " := lexemes "\""
                                                                    " "\"" (21, 19)
                                                                  string_parts := rules "STR"
                                                                    STR := lexemes "STR"
                                                                      STR "Simple statistics from the command line interface (CLI), fast" (21, 20)
                                                                  " := lexemes "\""
                                                                    " "\"" (21, 81)
                                                    ; := lexemes ";"
                                                      ; ";" (21, 82)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "longDescription" (22, 5)
                                                  = := lexemes "="
                                                    = "=" (22, 21)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                                IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                                  IND_STRING_OPEN "''\n" (22, 23)
                                                                ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                                  ind_string_parts := rules 
                                                                  IND_STR := lexemes "IND_STR"
                                                                    IND_STR "      This is a lightweight, fast tool for calculating basic descriptive\n      statistics from the command line. Inspired by\n      https://github.com/nferraz/st, this project differs in that it is written\n      in C++, allowing for faster computation of statistics given larger\n      non-trivial data sets.\n    " (23, 1)
                                                                IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                                  IND_STRING_CLOSE "''" (28, 5)
                                                  ; := lexemes ";"
                                                    ; ";" (28, 7)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "license" (29, 5)
                                                = := lexemes "="
                                                  = "=" (29, 13)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple" "." "attrpath"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "licenses" (29, 15)
                                                            . := lexemes "."
                                                              . "." (29, 23)
                                                            attrpath := rules "attr"
                                                              attr := rules "ID"
                                                                ID := lexemes "ID"
                                                                  ID "mit" (29, 24)
                                                ; := lexemes ";"
                                                  ; ";" (29, 27)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "homepage" (30, 5)
                                              = := lexemes "="
                                                = "=" (30, 14)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (30, 16)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "https://github.com/simonccarter/sta" (30, 17)
                                                            " := lexemes "\""
                                                              " "\"" (30, 52)
                                              ; := lexemes ";"
                                                ; ";" (30, 53)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "maintainers" (31, 5)
                                            = := lexemes "="
                                              = "=" (31, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "WITH" "expr" ";" "expr_function"
                                                WITH := lexemes "WITH"
                                                  WITH "with" (31, 19)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "maintainers" (31, 24)
                                                ; := lexemes ";"
                                                  ; ";" (31, 35)
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "[" "expr_list" "]"
                                                            [ := lexemes "["
                                                              [ "[" (31, 37)
                                                            expr_list := rules "expr_list" "expr_select"
                                                              expr_list := rules 
                                                              expr_select := rules "expr_simple"
                                                                expr_simple := rules "ID"
                                                                  ID := lexemes "ID"
                                                                    ID "infinisil" (31, 39)
                                                            ] := lexemes "]"
                                                              ] "]" (31, 49)
                                            ; := lexemes ";"
                                              ; ";" (31, 50)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "platforms" (32, 5)
                                          = := lexemes "="
                                            = "=" (32, 15)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "platforms" (32, 17)
                                                      . := lexemes "."
                                                        . "." (32, 26)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "all" (32, 27)
                                          ; := lexemes ";"
                                            ; ";" (32, 30)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "badPlatforms" (33, 5)
                                        = := lexemes "="
                                          = "=" (33, 18)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "platforms" (33, 20)
                                                    . := lexemes "."
                                                      . "." (33, 29)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "darwin" (33, 30)
                                        ; := lexemes ";"
                                          ; ";" (33, 36)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "mainProgram" (34, 5)
                                      = := lexemes "="
                                        = "=" (34, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (34, 19)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "sta" (34, 20)
                                                    " := lexemes "\""
                                                      " "\"" (34, 23)
                                      ; := lexemes ";"
                                        ; ";" (34, 24)
                                    } := lexemes "}"
                                      } "}" (35, 3)
                    ; := lexemes ";"
                      ; ";" (35, 4)
                  } := lexemes "}"
                    } "}" (36, 1)