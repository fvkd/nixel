---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "utils",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "utils",
   position: (3, 6),
  },
  target: With {
   expression: Variable {
    identifier: "lib",
    position: (4, 6),
   },
   target: LetIn {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "randomEncryptionCoerce",
         position: (8, 3),
        },
       ],
      },
      Function {
       argument: Some(
        "enable",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Map {
        bindings: [
         Inherit(
          None,
          [
           Raw {
            content: "enable",
            position: (8, 46),
           },
          ],
         ),
        ],
        recursive: false,
        position: (8, 36),
       },
       position: (8, 28),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "randomEncryptionOpts",
         position: (10, 3),
        },
       ],
      },
      Function {
       argument: None,
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: true,
       },
       definition: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (12, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "enable",
                position: (14, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (14, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (15, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "false",
                   position: (15, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (16, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (16, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (16, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (17, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Encrypt swap device with a random key. This way you won't have a persistent swap device.\n\nWARNING: Don't try to hibernate when you have at least one swap partition with\nthis option enabled! We have no way to set the partition into which hibernation image\nis saved, so if your image ends up on an encrypted one you would lose it!\n\nWARNING #2: Do not use /dev/disk/by-uuid/… or /dev/disk/by-label/… as your swap device\nwhen using randomEncryption as the UUIDs and labels will get erased on every boot when\nthe partition is encrypted. Best to use /dev/disk/by-partuuid/…\n",
                    },
                   ],
                   position: (17, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (14, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "cipher",
                position: (30, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (30, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (31, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "aes-xts-plain64",
                    },
                   ],
                   position: (31, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (32, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "serpent-xts-plain64",
                    },
                   ],
                   position: (32, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (33, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (33, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (33, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (34, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Use specified cipher for randomEncryption.\n\nHint: Run \"cryptsetup benchmark\" to see which one is fastest on your machine.\n",
                    },
                   ],
                   position: (34, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (30, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "source",
                position: (41, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (41, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (42, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/dev/urandom",
                    },
                   ],
                   position: (42, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (43, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/dev/random",
                    },
                   ],
                   position: (43, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (44, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (44, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (44, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (45, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Define the source of randomness to obtain a random key for encryption.\n",
                    },
                   ],
                   position: (45, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (41, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "allowDiscards",
                position: (50, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (50, 23),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (51, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "false",
                   position: (51, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (52, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (52, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "bool",
                      position: (52, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (53, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Whether to allow TRIM requests to the underlying device. This option\nhas security implications; please read the LUKS documentation before\nactivating it.\n",
                    },
                   ],
                   position: (53, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (50, 32),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (12, 15),
          },
         ),
        ],
        recursive: false,
        position: (10, 35),
       },
       position: (10, 26),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "swapCfg",
         position: (63, 3),
        },
       ],
      },
      Function {
       argument: None,
       arguments: FunctionArguments {
        arguments: [
         FunctionArgument {
          identifier: "options",
          default: None,
         },
         FunctionArgument {
          identifier: "config",
          default: None,
         },
        ],
        ellipsis: true,
       },
       definition: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "options",
             position: (65, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "device",
                position: (67, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (67, 16),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (68, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "/dev/sda3",
                    },
                   ],
                   position: (68, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (69, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (69, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (69, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (70, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Path of the device or swap file.",
                    },
                   ],
                   position: (70, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (67, 25),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "label",
                position: (73, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (73, 15),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (74, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "swap",
                    },
                   ],
                   position: (74, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (75, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (75, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (75, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (76, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Label of the device.  Can be used instead of <varname>device</varname>.\n",
                    },
                   ],
                   position: (76, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (73, 24),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "size",
                position: (81, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (81, 14),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (82, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (82, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (83, 9),
                    },
                   ],
                  },
                  Int {
                   value: 2048,
                   position: (83, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (84, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (84, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (84, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (84, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "int",
                        position: (84, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (85, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "If this option is set, ‘device’ is interpreted as the\npath of a swapfile that will be created automatically\nwith the indicated size (in megabytes).\n",
                    },
                   ],
                   position: (85, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (81, 23),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "priority",
                position: (92, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (92, 18),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (93, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (93, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (94, 9),
                    },
                   ],
                  },
                  Int {
                   value: 2048,
                   position: (94, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (95, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (95, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (95, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (95, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "int",
                        position: (95, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (96, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Specify the priority of the swap device. Priority is a value between 0 and 32767.\nHigher numbers indicate higher priority.\nnull lets the kernel choose a priority, which will show up as a negative value.\n",
                    },
                   ],
                   position: (96, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (92, 27),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "randomEncryption",
                position: (103, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (103, 26),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (104, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "false",
                   position: (104, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (105, 9),
                    },
                   ],
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "enable",
                        position: (106, 11),
                       },
                      ],
                     },
                     Variable {
                      identifier: "true",
                      position: (106, 20),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "cipher",
                        position: (107, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "serpent-xts-plain64",
                       },
                      ],
                      position: (107, 20),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "source",
                        position: (108, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "/dev/random",
                       },
                      ],
                      position: (108, 20),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (105, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (110, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (110, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "coercedTo",
                       position: (110, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (110, 32),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "bool",
                        position: (110, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                    Variable {
                     identifier: "randomEncryptionCoerce",
                     position: (110, 43),
                    },
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (110, 67),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "submodule",
                         position: (110, 73),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      Variable {
                       identifier: "randomEncryptionOpts",
                       position: (110, 83),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (111, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Encrypt swap device with a random key. This way you won't have a persistent swap device.\n\nHINT: run \"cryptsetup benchmark\" to test cipher performance on your machine.\n\nWARNING: Don't try to hibernate when you have at least one swap partition with\nthis option enabled! We have no way to set the partition into which hibernation image\nis saved, so if your image ends up on an encrypted one you would lose it!\n\nWARNING #2: Do not use /dev/disk/by-uuid/… or /dev/disk/by-label/… as your swap device\nwhen using randomEncryption as the UUIDs and labels will get erased on every boot when\nthe partition is encrypted. Best to use /dev/disk/by-partuuid/…\n",
                    },
                   ],
                   position: (111, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (103, 35),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "discardPolicy",
                position: (126, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (126, 23),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (127, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "null",
                   position: (127, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (128, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "once",
                    },
                   ],
                   position: (128, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (129, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (129, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "nullOr",
                       position: (129, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "types",
                       position: (129, 30),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "enum",
                         position: (129, 36),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "once",
                          },
                         ],
                         position: (129, 42),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "pages",
                          },
                         ],
                         position: (129, 49),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "both",
                          },
                         ],
                         position: (129, 57),
                        },
                       ],
                       position: (129, 41),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (130, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Specify the discard policy for the swap device. If \"once\", then the\nwhole swap space is discarded at swapon invocation. If \"pages\",\nasynchronous discard on freed pages is performed, before returning to\nthe available pages pool. With \"both\", both policies are activated.\nSee swapon(8) for more information.\n",
                    },
                   ],
                   position: (130, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (126, 32),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "options",
                position: (139, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (139, 17),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "default",
                     position: (140, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "defaults",
                      },
                     ],
                     position: (140, 21),
                    },
                   ],
                   position: (140, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "example",
                     position: (141, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "nofail",
                      },
                     ],
                     position: (141, 21),
                    },
                   ],
                   position: (141, 19),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (142, 9),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (142, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "listOf",
                       position: (142, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (142, 29),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "nonEmptyStr",
                        position: (142, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (143, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "Options used to mount the swap.\n",
                    },
                   ],
                   position: (143, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (139, 26),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "deviceName",
                position: (148, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (148, 20),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (149, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (149, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "str",
                      position: (149, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "internal",
                     position: (150, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (150, 20),
                  },
                 ),
                ],
                recursive: false,
                position: (148, 29),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "realDevice",
                position: (153, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOption",
               position: (153, 20),
              },
              arguments: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "type",
                     position: (154, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (154, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "path",
                      position: (154, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "internal",
                     position: (155, 9),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (155, 20),
                  },
                 ),
                ],
                recursive: false,
                position: (153, 29),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (65, 15),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "config",
             position: (160, 5),
            },
           ],
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "device",
                position: (161, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (161, 16),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "options",
                 position: (161, 21),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "label",
                   position: (161, 29),
                  },
                  Raw {
                   content: "isDefined",
                   position: (161, 35),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "/dev/disk/by-label/",
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (162, 31),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "label",
                      position: (162, 38),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                ],
                position: (162, 9),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "deviceName",
                position: (163, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "lib",
                position: (163, 20),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "replaceChars",
                  position: (163, 24),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "\\",
                   },
                  ],
                  position: (163, 38),
                 },
                ],
                position: (163, 37),
               },
               List {
                elements: [
                 String {
                  parts: [],
                  position: (163, 45),
                 },
                ],
                position: (163, 44),
               },
               FunctionApplication {
                function: Variable {
                 identifier: "escapeSystemdPath",
                 position: (163, 50),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (163, 68),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "device",
                     position: (163, 75),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "realDevice",
                position: (164, 7),
               },
              ],
             },
             IfThenElse {
              predicate: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (164, 23),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "randomEncryption",
                  position: (164, 30),
                 },
                 Raw {
                  content: "enable",
                  position: (164, 47),
                 },
                ],
               },
               default: None,
              },
              then: String {
               parts: [
                Raw {
                 content: "/dev/mapper/",
                },
                Expression {
                 expression: Variable {
                  identifier: "deviceName",
                  position: (164, 74),
                 },
                },
               ],
               position: (164, 59),
              },
              else_: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (164, 92),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "device",
                  position: (164, 99),
                 },
                ],
               },
               default: None,
              },
              position: (164, 20),
             },
            ),
           ],
           recursive: true,
           position: (160, 14),
          },
         ),
        ],
        recursive: false,
        position: (63, 37),
       },
       position: (63, 13),
      },
     ),
    ],
    target: Map {
     bindings: [
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "options",
          position: (175, 3),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "swapDevices",
             position: (177, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (177, 19),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (178, 7),
                 },
                ],
               },
               List {
                elements: [],
                position: (178, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "example",
                  position: (179, 7),
                 },
                ],
               },
               List {
                elements: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "device",
                       position: (180, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "/dev/hda7",
                      },
                     ],
                     position: (180, 20),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (180, 9),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "device",
                       position: (181, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "/var/swapfile",
                      },
                     ],
                     position: (181, 20),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (181, 9),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "label",
                       position: (182, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "bigswap",
                      },
                     ],
                     position: (182, 19),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (182, 9),
                 },
                ],
                position: (179, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (184, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "The swap devices and swap files.  These must have been\ninitialised using <command>mkswap</command>.  Each element\nshould be an attribute set specifying either the path of the\nswap device or file (<literal>device</literal>) or the label\nof the swap device (<literal>label</literal>, see\n<command>mkswap -L</command>).  Using a label is\nrecommended.\n",
                 },
                ],
                position: (184, 21),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (194, 7),
                 },
                ],
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (194, 14),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "listOf",
                    position: (194, 20),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (194, 28),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "submodule",
                      position: (194, 34),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Variable {
                    identifier: "swapCfg",
                    position: (194, 44),
                   },
                  ],
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (177, 28),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (175, 13),
       },
      ),
      KeyValue(
       AttributePath {
        attributes: [
         Raw {
          content: "config",
          position: (199, 3),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "mkIf",
         position: (199, 12),
        },
        arguments: [
         BinaryOperation {
          operator: NotEqualTo,
          operands: [
           FunctionApplication {
            function: Variable {
             identifier: "length",
             position: (199, 19),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (199, 26),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "swapDevices",
                 position: (199, 33),
                },
               ],
              },
              default: None,
             },
            ],
           },
           Int {
            value: 0,
            position: (199, 49),
           },
          ],
          position: (199, 46),
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "system",
               position: (201, 5),
              },
              Raw {
               content: "requiredKernelConfig",
               position: (201, 12),
              },
             ],
            },
            With {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (201, 40),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "lib",
                 position: (201, 47),
                },
                Raw {
                 content: "kernelConfig",
                 position: (201, 51),
                },
               ],
              },
              default: None,
             },
             target: List {
              elements: [
               FunctionApplication {
                function: Variable {
                 identifier: "isYes",
                 position: (202, 8),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "SWAP",
                   },
                  ],
                  position: (202, 14),
                 },
                ],
               },
              ],
              position: (201, 65),
             },
             position: (201, 35),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (206, 5),
              },
              Raw {
               content: "services",
               position: (206, 13),
              },
             ],
            },
            LetIn {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "createSwapDevice",
                  position: (209, 9),
                 },
                ],
               },
               Function {
                argument: Some(
                 "sw",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Assert {
                 expression: BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "sw",
                     position: (210, 18),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "device",
                       position: (210, 21),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [],
                    position: (210, 31),
                   },
                  ],
                  position: (210, 28),
                 },
                 target: Assert {
                  expression: UnaryOperation {
                   operator: Not,
                   operand: BinaryOperation {
                    operator: LogicalAnd,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "sw",
                       position: (211, 20),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "randomEncryption",
                         position: (211, 23),
                        },
                        Raw {
                         content: "enable",
                         position: (211, 40),
                        },
                       ],
                      },
                      default: None,
                     },
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "lib",
                        position: (211, 50),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "hasPrefix",
                          position: (211, 54),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "/dev/disk/by-uuid",
                         },
                        ],
                        position: (211, 64),
                       },
                       PropertyAccess {
                        expression: Variable {
                         identifier: "sw",
                         position: (211, 85),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "device",
                           position: (211, 88),
                          },
                         ],
                        },
                        default: None,
                       },
                      ],
                     },
                    ],
                    position: (211, 47),
                   },
                   position: (211, 18),
                  },
                  target: Assert {
                   expression: UnaryOperation {
                    operator: Not,
                    operand: BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "sw",
                        position: (212, 20),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "randomEncryption",
                          position: (212, 23),
                         },
                         Raw {
                          content: "enable",
                          position: (212, 40),
                         },
                        ],
                       },
                       default: None,
                      },
                      FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "lib",
                         position: (212, 50),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "hasPrefix",
                           position: (212, 54),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "/dev/disk/by-label",
                          },
                         ],
                         position: (212, 64),
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "sw",
                          position: (212, 85),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "device",
                            position: (212, 88),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     ],
                     position: (212, 47),
                    },
                    position: (212, 18),
                   },
                   target: LetIn {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "realDevice'",
                         position: (213, 15),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "escapeSystemdPath",
                        position: (213, 29),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "sw",
                          position: (213, 47),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "realDevice",
                            position: (213, 50),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     ),
                    ],
                    target: FunctionApplication {
                     function: Variable {
                      identifier: "nameValuePair",
                      position: (214, 14),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: "mkswap-",
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "sw",
                           position: (214, 38),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "deviceName",
                             position: (214, 41),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                       ],
                       position: (214, 28),
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "description",
                            position: (215, 13),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "Initialisation of swap device ",
                           },
                           Expression {
                            expression: PropertyAccess {
                             expression: Variable {
                              identifier: "sw",
                              position: (215, 60),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "device",
                                position: (215, 63),
                               },
                              ],
                             },
                             default: None,
                            },
                           },
                          ],
                          position: (215, 27),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "wantedBy",
                            position: (216, 13),
                           },
                          ],
                         },
                         List {
                          elements: [
                           String {
                            parts: [
                             Expression {
                              expression: Variable {
                               identifier: "realDevice'",
                               position: (216, 29),
                              },
                             },
                             Raw {
                              content: ".swap",
                             },
                            ],
                            position: (216, 26),
                           },
                          ],
                          position: (216, 24),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "before",
                            position: (217, 13),
                           },
                          ],
                         },
                         List {
                          elements: [
                           String {
                            parts: [
                             Expression {
                              expression: Variable {
                               identifier: "realDevice'",
                               position: (217, 27),
                              },
                             },
                             Raw {
                              content: ".swap",
                             },
                            ],
                            position: (217, 24),
                           },
                          ],
                          position: (217, 22),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "path",
                            position: (218, 13),
                           },
                          ],
                         },
                         BinaryOperation {
                          operator: Concatenation,
                          operands: [
                           List {
                            elements: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "pkgs",
                               position: (218, 22),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "util-linux",
                                 position: (218, 27),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                            position: (218, 20),
                           },
                           FunctionApplication {
                            function: Variable {
                             identifier: "optional",
                             position: (218, 43),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "sw",
                               position: (218, 52),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "randomEncryption",
                                 position: (218, 55),
                                },
                                Raw {
                                 content: "enable",
                                 position: (218, 72),
                                },
                               ],
                              },
                              default: None,
                             },
                             PropertyAccess {
                              expression: Variable {
                               identifier: "pkgs",
                               position: (218, 79),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "cryptsetup",
                                 position: (218, 84),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          ],
                          position: (218, 40),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "script",
                            position: (220, 13),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "",
                           },
                           Expression {
                            expression: FunctionApplication {
                             function: Variable {
                              identifier: "optionalString",
                              position: (222, 19),
                             },
                             arguments: [
                              BinaryOperation {
                               operator: NotEqualTo,
                               operands: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "sw",
                                  position: (222, 35),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "size",
                                    position: (222, 38),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                Variable {
                                 identifier: "null",
                                 position: (222, 46),
                                },
                               ],
                               position: (222, 43),
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "currentSize=$(( $(stat -c \"%s\" \"",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (223, 53),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "device",
                                     position: (223, 56),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: "\" 2>/dev/null || echo 0) / 1024 / 1024 ))\nif [ \"",
                                },
                                Expression {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "toString",
                                   position: (224, 27),
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "sw",
                                     position: (224, 36),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "size",
                                       position: (224, 39),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                },
                                Raw {
                                 content: "\" != \"$currentSize\" ]; then\n  dd if=/dev/zero of=\"",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (225, 43),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "device",
                                     position: (225, 46),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: "\" bs=1M count=",
                                },
                                Expression {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "toString",
                                   position: (225, 69),
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "sw",
                                     position: (225, 78),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "size",
                                       position: (225, 81),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                  ],
                                 },
                                },
                                Raw {
                                 content: "\n  chmod 0600 ",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (226, 34),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "device",
                                     position: (226, 37),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: "\n  ",
                                },
                                Expression {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "optionalString",
                                   position: (227, 23),
                                  },
                                  arguments: [
                                   UnaryOperation {
                                    operator: Not,
                                    operand: PropertyAccess {
                                     expression: Variable {
                                      identifier: "sw",
                                      position: (227, 40),
                                     },
                                     attribute_path: AttributePath {
                                      attributes: [
                                       Raw {
                                        content: "randomEncryption",
                                        position: (227, 43),
                                       },
                                       Raw {
                                        content: "enable",
                                        position: (227, 60),
                                       },
                                      ],
                                     },
                                     default: None,
                                    },
                                    position: (227, 39),
                                   },
                                   String {
                                    parts: [
                                     Raw {
                                      content: "mkswap ",
                                     },
                                     Expression {
                                      expression: PropertyAccess {
                                       expression: Variable {
                                        identifier: "sw",
                                        position: (227, 78),
                                       },
                                       attribute_path: AttributePath {
                                        attributes: [
                                         Raw {
                                          content: "realDevice",
                                          position: (227, 81),
                                         },
                                        ],
                                       },
                                       default: None,
                                      },
                                     },
                                    ],
                                    position: (227, 68),
                                   },
                                  ],
                                 },
                                },
                                Raw {
                                 content: "\nfi\n",
                                },
                               ],
                               position: (222, 52),
                              },
                             ],
                            },
                           },
                           Raw {
                            content: "\n",
                           },
                           Expression {
                            expression: FunctionApplication {
                             function: Variable {
                              identifier: "optionalString",
                              position: (230, 19),
                             },
                             arguments: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "sw",
                                position: (230, 34),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "randomEncryption",
                                  position: (230, 37),
                                 },
                                 Raw {
                                  content: "enable",
                                  position: (230, 54),
                                 },
                                ],
                               },
                               default: None,
                              },
                              String {
                               parts: [
                                Raw {
                                 content: "cryptsetup plainOpen -c ",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (231, 45),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "randomEncryption",
                                     position: (231, 48),
                                    },
                                    Raw {
                                     content: "cipher",
                                     position: (231, 65),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: " -d ",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (231, 78),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "randomEncryption",
                                     position: (231, 81),
                                    },
                                    Raw {
                                     content: "source",
                                     position: (231, 98),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: " \\\n  ",
                                },
                                Expression {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "optionalString",
                                   position: (232, 23),
                                  },
                                  arguments: [
                                   PropertyAccess {
                                    expression: Variable {
                                     identifier: "sw",
                                     position: (232, 38),
                                    },
                                    attribute_path: AttributePath {
                                     attributes: [
                                      Raw {
                                       content: "randomEncryption",
                                       position: (232, 41),
                                      },
                                      Raw {
                                       content: "allowDiscards",
                                       position: (232, 58),
                                      },
                                     ],
                                    },
                                    default: None,
                                   },
                                   String {
                                    parts: [
                                     Raw {
                                      content: "--allow-discards",
                                     },
                                    ],
                                    position: (232, 72),
                                   },
                                  ],
                                 },
                                },
                                Raw {
                                 content: " ",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (232, 94),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "device",
                                     position: (232, 97),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: " ",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (232, 107),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "deviceName",
                                     position: (232, 110),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: "\nmkswap ",
                                },
                                Expression {
                                 expression: PropertyAccess {
                                  expression: Variable {
                                   identifier: "sw",
                                   position: (233, 28),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "realDevice",
                                     position: (233, 31),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                },
                                Raw {
                                 content: "\n",
                                },
                               ],
                               position: (230, 61),
                              },
                             ],
                            },
                           },
                           Raw {
                            content: "\n",
                           },
                          ],
                          position: (221, 15),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "unitConfig",
                            position: (237, 13),
                           },
                           Raw {
                            content: "RequiresMountsFor",
                            position: (237, 24),
                           },
                          ],
                         },
                         List {
                          elements: [
                           String {
                            parts: [
                             Expression {
                              expression: FunctionApplication {
                               function: Variable {
                                identifier: "dirOf",
                                position: (237, 49),
                               },
                               arguments: [
                                PropertyAccess {
                                 expression: Variable {
                                  identifier: "sw",
                                  position: (237, 55),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "device",
                                    position: (237, 58),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                               ],
                              },
                             },
                            ],
                            position: (237, 46),
                           },
                          ],
                          position: (237, 44),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "unitConfig",
                            position: (238, 13),
                           },
                           Raw {
                            content: "DefaultDependencies",
                            position: (238, 24),
                           },
                          ],
                         },
                         Variable {
                          identifier: "false",
                          position: (238, 46),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "serviceConfig",
                            position: (239, 13),
                           },
                           Raw {
                            content: "Type",
                            position: (239, 27),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "oneshot",
                           },
                          ],
                          position: (239, 34),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "serviceConfig",
                            position: (240, 13),
                           },
                           Raw {
                            content: "RemainAfterExit",
                            position: (240, 27),
                           },
                          ],
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "sw",
                           position: (240, 45),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "randomEncryption",
                             position: (240, 48),
                            },
                            Raw {
                             content: "enable",
                             position: (240, 65),
                            },
                           ],
                          },
                          default: None,
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "serviceConfig",
                            position: (241, 13),
                           },
                           Raw {
                            content: "ExecStop",
                            position: (241, 27),
                           },
                          ],
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "optionalString",
                           position: (241, 38),
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "sw",
                             position: (241, 53),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "randomEncryption",
                               position: (241, 56),
                              },
                              Raw {
                               content: "enable",
                               position: (241, 73),
                              },
                             ],
                            },
                            default: None,
                           },
                           String {
                            parts: [
                             Expression {
                              expression: PropertyAccess {
                               expression: Variable {
                                identifier: "pkgs",
                                position: (241, 83),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "cryptsetup",
                                  position: (241, 88),
                                 },
                                ],
                               },
                               default: None,
                              },
                             },
                             Raw {
                              content: "/bin/cryptsetup luksClose ",
                             },
                             Expression {
                              expression: PropertyAccess {
                               expression: Variable {
                                identifier: "sw",
                                position: (241, 127),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "deviceName",
                                  position: (241, 130),
                                 },
                                ],
                               },
                               default: None,
                              },
                             },
                            ],
                            position: (241, 80),
                           },
                          ],
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "restartIfChanged",
                            position: (242, 13),
                           },
                          ],
                         },
                         Variable {
                          identifier: "false",
                          position: (242, 32),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (215, 11),
                      },
                     ],
                    },
                    position: (213, 11),
                   },
                   position: (212, 11),
                  },
                  position: (211, 11),
                 },
                 position: (210, 11),
                },
                position: (209, 28),
               },
              ),
             ],
             target: FunctionApplication {
              function: Variable {
               identifier: "listToAttrs",
               position: (245, 10),
              },
              arguments: [
               FunctionApplication {
                function: Variable {
                 identifier: "map",
                 position: (245, 23),
                },
                arguments: [
                 Variable {
                  identifier: "createSwapDevice",
                  position: (245, 27),
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "filter",
                   position: (245, 45),
                  },
                  arguments: [
                   Function {
                    argument: Some(
                     "sw",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: BinaryOperation {
                     operator: LogicalOr,
                     operands: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "sw",
                          position: (245, 57),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "size",
                            position: (245, 60),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (245, 68),
                        },
                       ],
                       position: (245, 65),
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "sw",
                        position: (245, 76),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "randomEncryption",
                          position: (245, 79),
                         },
                         Raw {
                          content: "enable",
                          position: (245, 96),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (245, 73),
                    },
                    position: (245, 53),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (245, 104),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "swapDevices",
                       position: (245, 111),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ],
               },
              ],
             },
             position: (207, 7),
            },
           ),
          ],
          recursive: false,
          position: (199, 52),
         },
        ],
       },
      ),
     ],
     recursive: false,
     position: (171, 1),
    },
    position: (6, 1),
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}