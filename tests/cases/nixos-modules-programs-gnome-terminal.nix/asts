---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (9, 16),
        },
        Raw {
         content: "gnome-terminal",
         position: (9, 25),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (15, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (16, 5),
           },
          ],
         },
         to: PropertyAccess {
          expression: Variable {
           identifier: "teams",
           position: (16, 19),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "gnome",
             position: (16, 25),
            },
            Raw {
             content: "members",
             position: (16, 31),
            },
           ],
          },
          default: None,
         },
        },
       ],
       recursive: false,
       position: (15, 10),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (20, 3),
        },
       ],
      },
      to: List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (21, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (22, 10),
              },
             ],
             position: (22, 9),
            },
            String {
             parts: [
              Raw {
               content: "gnome3",
               position: (22, 21),
              },
             ],
             position: (22, 20),
            },
            String {
             parts: [
              Raw {
               content: "gnome-terminal-server",
               position: (22, 30),
              },
             ],
             position: (22, 29),
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (22, 54),
              },
             ],
             position: (22, 53),
            },
           ],
           position: (22, 7),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (23, 10),
              },
             ],
             position: (23, 9),
            },
            String {
             parts: [
              Raw {
               content: "gnome-terminal",
               position: (23, 21),
              },
             ],
             position: (23, 20),
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (23, 38),
              },
             ],
             position: (23, 37),
            },
           ],
           position: (23, 7),
          },
         ],
        },
       ],
       position: (20, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (26, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "programs",
            position: (27, 5),
           },
           Raw {
            content: "gnome-terminal",
            position: (27, 14),
           },
           Raw {
            content: "enable",
            position: (27, 29),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (27, 38),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "GNOME Terminal",
              position: (27, 54),
             },
            ],
            position: (27, 53),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (26, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (30, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (30, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (30, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (30, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (31, 5),
             },
             Raw {
              content: "systemPackages",
              position: (31, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (31, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "gnome",
                 position: (31, 41),
                },
                Raw {
                 content: "gnome-terminal",
                 position: (31, 47),
                },
               ],
              },
              default: None,
             },
            ],
            position: (31, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (32, 5),
             },
             Raw {
              content: "dbus",
              position: (32, 14),
             },
             Raw {
              content: "packages",
              position: (32, 19),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (32, 32),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "gnome",
                 position: (32, 37),
                },
                Raw {
                 content: "gnome-terminal",
                 position: (32, 43),
                },
               ],
              },
              default: None,
             },
            ],
            position: (32, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (33, 5),
             },
             Raw {
              content: "packages",
              position: (33, 13),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (33, 26),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "gnome",
                 position: (33, 31),
                },
                Raw {
                 content: "gnome-terminal",
                 position: (33, 37),
                },
               ],
              },
              default: None,
             },
            ],
            position: (33, 24),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (35, 5),
             },
             Raw {
              content: "bash",
              position: (35, 14),
             },
             Raw {
              content: "vteIntegration",
              position: (35, 19),
             },
            ],
           },
           to: Variable {
            identifier: "true",
            position: (35, 36),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (36, 5),
             },
             Raw {
              content: "zsh",
              position: (36, 14),
             },
             Raw {
              content: "vteIntegration",
              position: (36, 18),
             },
            ],
           },
           to: Variable {
            identifier: "true",
            position: (36, 35),
           },
          },
         ],
         recursive: false,
         position: (30, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (13, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}