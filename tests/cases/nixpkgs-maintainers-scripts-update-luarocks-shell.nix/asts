---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "nixpkgs",
    default: Some(
     FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (1, 13),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "../..",
          position: (1, 20),
         },
        ],
        position: (1, 20),
       },
       Map {
        bindings: [],
        recursive: false,
        position: (1, 26),
       },
      ],
     },
    ),
   },
  ],
  ellipsis: false,
 },
 definition: With {
  expression: Variable {
   identifier: "nixpkgs",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "pyEnv",
        position: (5, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "python3",
        position: (5, 11),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "withPackages",
          position: (5, 19),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Parentheses {
        expression: Function {
         argument: Simple {
          identifier: "ps",
         },
         definition: List {
          elements: [
           PropertyAccess {
            expression: Variable {
             identifier: "ps",
             position: (5, 38),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "GitPython",
               position: (5, 41),
              },
             ],
            },
            default: None,
           },
          ],
          position: (5, 36),
         },
         position: (5, 32),
        },
        position: (5, 31),
       },
      ],
     },
    },
   ],
   target: FunctionApplication {
    function: Variable {
     identifier: "mkShell",
     position: (7, 1),
    },
    arguments: [
     Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "packages",
           position: (8, 3),
          },
         ],
        },
        to: List {
         elements: [
          Variable {
           identifier: "pyEnv",
           position: (9, 5),
          },
          Variable {
           identifier: "luarocks-nix",
           position: (10, 5),
          },
          Variable {
           identifier: "nix-prefetch-scripts",
           position: (11, 5),
          },
         ],
         position: (8, 14),
        },
       },
      ],
      recursive: false,
      position: (7, 9),
     },
    ],
   },
   position: (4, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}