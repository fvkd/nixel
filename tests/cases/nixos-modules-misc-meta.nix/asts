---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "maintainer",
        position: (6, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkOptionType",
       position: (6, 16),
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (7, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "maintainer",
             position: (7, 13),
            },
           ],
           position: (7, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "check",
             position: (8, 5),
            },
           ],
          },
          to: Function {
           argument: Simple {
            identifier: "email",
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "elem",
             position: (8, 20),
            },
            arguments: [
             Variable {
              identifier: "email",
              position: (8, 25),
             },
             Parentheses {
              expression: FunctionApplication {
               function: Variable {
                identifier: "attrValues",
                position: (8, 32),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (8, 43),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "maintainers",
                    position: (8, 47),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
              position: (8, 31),
             },
            ],
           },
           position: (8, 13),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "merge",
             position: (9, 5),
            },
           ],
          },
          to: Function {
           argument: Simple {
            identifier: "loc",
           },
           definition: Function {
            argument: Simple {
             identifier: "defs",
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "listToAttrs",
              position: (9, 24),
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "singleton",
                 position: (9, 37),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "nameValuePair",
                    position: (9, 48),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Parentheses {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "last",
                        position: (9, 63),
                       },
                       arguments: [
                        Variable {
                         identifier: "defs",
                         position: (9, 68),
                        },
                       ],
                      },
                      position: (9, 62),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "file",
                        position: (9, 74),
                       },
                      ],
                     },
                     default: None,
                    },
                    PropertyAccess {
                     expression: Parentheses {
                      expression: FunctionApplication {
                       function: Variable {
                        identifier: "last",
                        position: (9, 80),
                       },
                       arguments: [
                        Variable {
                         identifier: "defs",
                         position: (9, 85),
                        },
                       ],
                      },
                      position: (9, 79),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "value",
                        position: (9, 91),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                  position: (9, 47),
                 },
                ],
               },
               position: (9, 36),
              },
             ],
            },
            position: (9, 18),
           },
           position: (9, 13),
          },
         },
        ],
        recursive: false,
        position: (6, 29),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "listOfMaintainers",
        position: (12, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Update,
      operands: [
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "types",
          position: (12, 23),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "listOf",
            position: (12, 29),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Variable {
          identifier: "maintainer",
          position: (12, 36),
         },
        ],
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "merge",
             position: (18, 5),
            },
           ],
          },
          to: Function {
           argument: Simple {
            identifier: "loc",
           },
           definition: Function {
            argument: Simple {
             identifier: "defs",
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "zipAttrs",
              position: (19, 7),
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "flatten",
                 position: (20, 10),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "imap1",
                    position: (20, 19),
                   },
                   arguments: [
                    Parentheses {
                     expression: Function {
                      argument: Simple {
                       identifier: "n",
                      },
                      definition: Function {
                       argument: Simple {
                        identifier: "def",
                       },
                       definition: FunctionApplication {
                        function: Variable {
                         identifier: "imap1",
                         position: (20, 34),
                        },
                        arguments: [
                         Parentheses {
                          expression: Function {
                           argument: Simple {
                            identifier: "m",
                           },
                           definition: Function {
                            argument: Simple {
                             identifier: "def'",
                            },
                            definition: FunctionApplication {
                             function: PropertyAccess {
                              expression: Variable {
                               identifier: "maintainer",
                               position: (21, 11),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "merge",
                                 position: (21, 22),
                                },
                               ],
                              },
                              default: None,
                             },
                             arguments: [
                              Parentheses {
                               expression: BinaryOperation {
                                operator: Concatenation,
                                operands: [
                                 Variable {
                                  identifier: "loc",
                                  position: (21, 29),
                                 },
                                 List {
                                  elements: [
                                   String {
                                    parts: [
                                     Raw {
                                      content: "[",
                                      position: (21, 38),
                                     },
                                     Expression {
                                      expression: FunctionApplication {
                                       function: Variable {
                                        identifier: "toString",
                                        position: (21, 41),
                                       },
                                       arguments: [
                                        Variable {
                                         identifier: "n",
                                         position: (21, 50),
                                        },
                                       ],
                                      },
                                     },
                                     Raw {
                                      content: "-",
                                      position: (21, 52),
                                     },
                                     Expression {
                                      expression: FunctionApplication {
                                       function: Variable {
                                        identifier: "toString",
                                        position: (21, 55),
                                       },
                                       arguments: [
                                        Variable {
                                         identifier: "m",
                                         position: (21, 64),
                                        },
                                       ],
                                      },
                                     },
                                     Raw {
                                      content: "]",
                                      position: (21, 66),
                                     },
                                    ],
                                    position: (21, 37),
                                   },
                                  ],
                                  position: (21, 36),
                                 },
                                ],
                                position: (21, 33),
                               },
                               position: (21, 28),
                              },
                              List {
                               elements: [
                                Map {
                                 bindings: [
                                  Inherit {
                                   from: Some(
                                    Variable {
                                     identifier: "def",
                                     position: (22, 25),
                                    },
                                   ),
                                   attributes: [
                                    Raw {
                                     content: "file",
                                     position: (22, 30),
                                    },
                                   ],
                                  },
                                  Binding {
                                   from: AttributePath {
                                    parts: [
                                     Raw {
                                      content: "value",
                                      position: (22, 36),
                                     },
                                    ],
                                   },
                                   to: Variable {
                                    identifier: "def'",
                                    position: (22, 44),
                                   },
                                  },
                                 ],
                                 recursive: false,
                                 position: (22, 14),
                                },
                               ],
                               position: (22, 13),
                              },
                             ],
                            },
                            position: (20, 44),
                           },
                           position: (20, 41),
                          },
                          position: (20, 40),
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "def",
                           position: (22, 54),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "value",
                             position: (22, 58),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                       position: (20, 29),
                      },
                      position: (20, 26),
                     },
                     position: (20, 25),
                    },
                    Variable {
                     identifier: "defs",
                     position: (22, 65),
                    },
                   ],
                  },
                  position: (20, 18),
                 },
                ],
               },
               position: (20, 9),
              },
             ],
            },
            position: (18, 18),
           },
           position: (18, 13),
          },
         },
        ],
        recursive: false,
        position: (12, 50),
       },
      ],
      position: (12, 47),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "docFile",
        position: (25, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Update,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "types",
         position: (25, 13),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "path",
           position: (25, 19),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "merge",
             position: (28, 5),
            },
           ],
          },
          to: Function {
           argument: Simple {
            identifier: "loc",
           },
           definition: Function {
            argument: Simple {
             identifier: "defs",
            },
            definition: Variable {
             identifier: "defs",
             position: (28, 24),
            },
            position: (28, 18),
           },
           position: (28, 13),
          },
         },
        ],
        recursive: false,
        position: (25, 27),
       },
      ],
      position: (25, 24),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (33, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "meta",
            position: (34, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "maintainers",
               position: (36, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (36, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (37, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "listOfMaintainers",
                  position: (37, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (38, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (39, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (39, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (40, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (40, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ lib.maintainers.all ]",
                      position: (40, 39),
                     },
                    ],
                    position: (40, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (41, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "List of maintainers of each module.  This option should be defined at\nmost once per module.\n",
                    position: (42, 1),
                   },
                  ],
                  position: (41, 23),
                 },
                },
               ],
               recursive: false,
               position: (36, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "doc",
               position: (47, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (47, 13),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (48, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "docFile",
                  position: (48, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (49, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (50, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "./meta.chapter.xml",
                    position: (50, 20),
                   },
                  ],
                  position: (50, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Documentation prologue for the set of options of each module.  This\noption should be defined at most once per module.\n",
                    position: (52, 1),
                   },
                  ],
                  position: (51, 23),
                 },
                },
               ],
               recursive: false,
               position: (47, 22),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "buildDocsInSandbox",
               position: (57, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (57, 28),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: BinaryOperation {
                  operator: Update,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (58, 16),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "bool",
                       position: (58, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   Map {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "merge",
                         position: (59, 11),
                        },
                       ],
                      },
                      to: Function {
                       argument: Simple {
                        identifier: "loc",
                       },
                       definition: Function {
                        argument: Simple {
                         identifier: "defs",
                        },
                        definition: Variable {
                         identifier: "defs",
                         position: (59, 30),
                        },
                        position: (59, 24),
                       },
                       position: (59, 19),
                      },
                     },
                    ],
                    recursive: false,
                    position: (58, 30),
                   },
                  ],
                  position: (58, 27),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "internal",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (61, 20),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (62, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to include this module in the split options doc build.\nDisable if the module references `config`, `pkgs` or other module\narguments that cannot be evaluated as constants.\n\nThis option should be defined at most once per module.\n",
                    position: (64, 1),
                   },
                  ],
                  position: (63, 23),
                 },
                },
               ],
               recursive: false,
               position: (57, 37),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (34, 12),
         },
        },
       ],
       recursive: false,
       position: (33, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (75, 3),
        },
        Raw {
         content: "maintainers",
         position: (75, 8),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "singleton",
        position: (75, 22),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (75, 32),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (75, 36),
           },
           Raw {
            content: "pierron",
            position: (75, 48),
           },
          ],
         },
         default: None,
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (32, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}