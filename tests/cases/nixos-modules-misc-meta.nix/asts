---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "maintainer",
        position: (6, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkOptionType",
       position: (6, 16),
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (7, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "maintainer",
             position: (7, 13),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "check",
             position: (8, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "email",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: FunctionApplication {
            function: Variable {
             identifier: "elem",
             position: (8, 20),
            },
            arguments: [
             Variable {
              identifier: "email",
              position: (8, 25),
             },
             FunctionApplication {
              function: Variable {
               identifier: "attrValues",
               position: (8, 32),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (8, 43),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "maintainers",
                   position: (8, 47),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ],
           },
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "merge",
             position: (9, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "loc",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "defs",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "listToAttrs",
              position: (9, 24),
             },
             arguments: [
              FunctionApplication {
               function: Variable {
                identifier: "singleton",
                position: (9, 37),
               },
               arguments: [
                FunctionApplication {
                 function: Variable {
                  identifier: "nameValuePair",
                  position: (9, 48),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "last",
                     position: (9, 63),
                    },
                    arguments: [
                     Variable {
                      identifier: "defs",
                      position: (9, 68),
                     },
                    ],
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "file",
                      position: (9, 74),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "last",
                     position: (9, 80),
                    },
                    arguments: [
                     Variable {
                      identifier: "defs",
                      position: (9, 85),
                     },
                    ],
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "value",
                      position: (9, 91),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ],
              },
             ],
            },
           },
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "listOfMaintainers",
        position: (12, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Update,
      operands: [
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "types",
          position: (12, 23),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "listOf",
            position: (12, 29),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Variable {
          identifier: "maintainer",
          position: (12, 36),
         },
        ],
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "merge",
             position: (18, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "loc",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "defs",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: FunctionApplication {
             function: Variable {
              identifier: "zipAttrs",
              position: (19, 7),
             },
             arguments: [
              FunctionApplication {
               function: Variable {
                identifier: "flatten",
                position: (20, 10),
               },
               arguments: [
                FunctionApplication {
                 function: Variable {
                  identifier: "imap1",
                  position: (20, 19),
                 },
                 arguments: [
                  Function {
                   argument: Some(
                    "n",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Function {
                    argument: Some(
                     "def",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: FunctionApplication {
                     function: Variable {
                      identifier: "imap1",
                      position: (20, 34),
                     },
                     arguments: [
                      Function {
                       argument: Some(
                        "m",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Function {
                        argument: Some(
                         "def'",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "maintainer",
                           position: (21, 11),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "merge",
                             position: (21, 22),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          BinaryOperation {
                           operator: Concatenation,
                           operands: [
                            Variable {
                             identifier: "loc",
                             position: (21, 29),
                            },
                            List {
                             elements: [
                              String {
                               parts: [
                                Raw {
                                 content: "[",
                                 position: (21, 38),
                                },
                                Expression {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "toString",
                                   position: (21, 41),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "n",
                                    position: (21, 50),
                                   },
                                  ],
                                 },
                                },
                                Raw {
                                 content: "-",
                                 position: (21, 52),
                                },
                                Expression {
                                 expression: FunctionApplication {
                                  function: Variable {
                                   identifier: "toString",
                                   position: (21, 55),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "m",
                                    position: (21, 64),
                                   },
                                  ],
                                 },
                                },
                                Raw {
                                 content: "]",
                                 position: (21, 66),
                                },
                               ],
                              },
                             ],
                            },
                           ],
                          },
                          List {
                           elements: [
                            Map {
                             bindings: [
                              Inherit(
                               Some(
                                Variable {
                                 identifier: "def",
                                 position: (22, 25),
                                },
                               ),
                               [
                                Raw {
                                 content: "file",
                                 position: (22, 30),
                                },
                               ],
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "value",
                                  position: (22, 36),
                                 },
                                ],
                               },
                               Variable {
                                identifier: "def'",
                                position: (22, 44),
                               },
                              ),
                             ],
                             recursive: false,
                            },
                           ],
                          },
                         ],
                        },
                       },
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "def",
                        position: (22, 54),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "value",
                          position: (22, 58),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                  },
                  Variable {
                   identifier: "defs",
                   position: (22, 65),
                  },
                 ],
                },
               ],
              },
             ],
            },
           },
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "docFile",
        position: (25, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Update,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "types",
         position: (25, 13),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "path",
           position: (25, 19),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "merge",
             position: (28, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "loc",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: Function {
            argument: Some(
             "defs",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Variable {
             identifier: "defs",
             position: (28, 24),
            },
           },
          },
         ),
        ],
        recursive: false,
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (33, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "meta",
            position: (34, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "maintainers",
               position: (36, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (36, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (37, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "listOfMaintainers",
                  position: (37, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "internal",
                    position: (38, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (38, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (39, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (40, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (40, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ lib.maintainers.all ]",
                      position: (40, 39),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (41, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of maintainers of each module.  This option should be defined at\nmost once per module.\n",
                    position: (42, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "doc",
               position: (47, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (47, 13),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (48, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "docFile",
                  position: (48, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "internal",
                    position: (49, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (49, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (50, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "./meta.chapter.xml",
                    position: (50, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (51, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Documentation prologue for the set of options of each module.  This\noption should be defined at most once per module.\n",
                    position: (52, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "buildDocsInSandbox",
               position: (57, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (57, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (58, 9),
                   },
                  ],
                 },
                 BinaryOperation {
                  operator: Update,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (58, 16),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "bool",
                       position: (58, 22),
                      },
                     ],
                    },
                    default: None,
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "merge",
                         position: (59, 11),
                        },
                       ],
                      },
                      Function {
                       argument: Some(
                        "loc",
                       ),
                       arguments: FunctionArguments {
                        arguments: [],
                        ellipsis: false,
                       },
                       definition: Function {
                        argument: Some(
                         "defs",
                        ),
                        arguments: FunctionArguments {
                         arguments: [],
                         ellipsis: false,
                        },
                        definition: Variable {
                         identifier: "defs",
                         position: (59, 30),
                        },
                       },
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "internal",
                    position: (61, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (61, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (62, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (62, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (63, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to include this module in the split options doc build.\nDisable if the module references `config`, `pkgs` or other module\narguments that cannot be evaluated as constants.\n\nThis option should be defined at most once per module.\n",
                    position: (64, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (75, 3),
        },
        Raw {
         content: "maintainers",
         position: (75, 8),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "singleton",
        position: (75, 22),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "lib",
          position: (75, 32),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "maintainers",
            position: (75, 36),
           },
           Raw {
            content: "pierron",
            position: (75, 48),
           },
          ],
         },
         default: None,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}