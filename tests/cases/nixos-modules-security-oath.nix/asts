---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (8, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "security",
           position: (10, 5),
          },
          Raw {
           content: "pam",
           position: (10, 14),
          },
          Raw {
           content: "oath",
           position: (10, 18),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (11, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (11, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (12, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (12, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bool",
                    position: (12, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (13, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (13, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (14, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Enable the OATH (one-time password) PAM module.\n",
                  },
                 ],
                 position: (14, 23),
                },
               ),
              ],
              recursive: false,
              position: (11, 25),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "digits",
              position: (19, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (19, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (20, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (20, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "enum",
                     position: (20, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  List {
                   elements: [
                    Int {
                     value: 6,
                     position: (20, 29),
                    },
                    Int {
                     value: 7,
                     position: (20, 31),
                    },
                    Int {
                     value: 8,
                     position: (20, 33),
                    },
                   ],
                   position: (20, 27),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (21, 9),
                  },
                 ],
                },
                Int {
                 value: 6,
                 position: (21, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (22, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Specify the length of the one-time password in number of\ndigits.\n",
                  },
                 ],
                 position: (22, 23),
                },
               ),
              ],
              recursive: false,
              position: (19, 25),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "window",
              position: (28, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (28, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (29, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (29, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "int",
                    position: (29, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (30, 9),
                  },
                 ],
                },
                Int {
                 value: 5,
                 position: (30, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (31, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Specify the number of one-time passwords to check in order\nto accommodate for situations where the system and the\nclient are slightly out of sync (iteration for HOTP or time\nsteps for TOTP).\n",
                  },
                 ],
                 position: (31, 23),
                },
               ),
              ],
              recursive: false,
              position: (28, 25),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "usersFile",
              position: (39, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (39, 19),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (40, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (40, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (40, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (41, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "/etc/users.oath",
                  },
                 ],
                 position: (41, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (42, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Set the path to file where the user's credentials are\nstored. This file must not be world readable!\n",
                  },
                 ],
                 position: (42, 23),
                },
               ),
              ],
              recursive: false,
              position: (39, 28),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (10, 25),
        },
       ),
      ],
      recursive: false,
      position: (8, 13),
     },
    ),
   ],
   recursive: false,
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}