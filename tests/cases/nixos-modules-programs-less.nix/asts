---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (7, 16),
        },
        Raw {
         content: "less",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configText",
        position: (9, 3),
       },
      ],
     },
     IfThenElse {
      predicate: BinaryOperation {
       operator: NotEqualTo,
       operands: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (9, 20),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "configFile",
            position: (9, 24),
           },
          ],
         },
         default: None,
        },
        Variable {
         identifier: "null",
         position: (9, 38),
        },
       ],
       position: (9, 35),
      },
      then: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "builtins",
         position: (9, 50),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "readFile",
           position: (9, 59),
          },
         ],
        },
        default: None,
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (9, 68),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "configFile",
            position: (9, 72),
           },
          ],
         },
         default: None,
        },
       ],
      },
      else_: String {
       parts: [
        Raw {
         content: "#command\n",
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "concatStringsSep",
           position: (11, 7),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
             },
            ],
            position: (11, 24),
           },
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrsToList",
             position: (12, 8),
            },
            arguments: [
             Function {
              argument: Simple {
               identifier: "command",
              },
              definition: Function {
               argument: Simple {
                identifier: "action",
               },
               definition: String {
                parts: [
                 Expression {
                  expression: Variable {
                   identifier: "command",
                   position: (12, 44),
                  },
                 },
                 Raw {
                  content: " ",
                 },
                 Expression {
                  expression: Variable {
                   identifier: "action",
                   position: (12, 55),
                  },
                 },
                ],
                position: (12, 41),
               },
               position: (12, 33),
              },
              position: (12, 24),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (12, 65),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "commands",
                 position: (12, 69),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ],
         },
        },
        Raw {
         content: "\n",
        },
        Expression {
         expression: IfThenElse {
          predicate: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (14, 10),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "clearDefaultCommands",
              position: (14, 14),
             },
            ],
           },
           default: None,
          },
          then: String {
           parts: [
            Raw {
             content: "#stop",
            },
           ],
           position: (14, 40),
          },
          else_: String {
           parts: [],
           position: (14, 53),
          },
          position: (14, 7),
         },
        },
        Raw {
         content: "\n\n#line-edit\n",
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "concatStringsSep",
           position: (17, 7),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
             },
            ],
            position: (17, 24),
           },
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrsToList",
             position: (18, 8),
            },
            arguments: [
             Function {
              argument: Simple {
               identifier: "command",
              },
              definition: Function {
               argument: Simple {
                identifier: "action",
               },
               definition: String {
                parts: [
                 Expression {
                  expression: Variable {
                   identifier: "command",
                   position: (18, 44),
                  },
                 },
                 Raw {
                  content: " ",
                 },
                 Expression {
                  expression: Variable {
                   identifier: "action",
                   position: (18, 55),
                  },
                 },
                ],
                position: (18, 41),
               },
               position: (18, 33),
              },
              position: (18, 24),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (18, 65),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "lineEditingKeys",
                 position: (18, 69),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ],
         },
        },
        Raw {
         content: "\n\n#env\n",
        },
        Expression {
         expression: FunctionApplication {
          function: Variable {
           identifier: "concatStringsSep",
           position: (22, 7),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "\n",
             },
            ],
            position: (22, 24),
           },
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrsToList",
             position: (23, 8),
            },
            arguments: [
             Function {
              argument: Simple {
               identifier: "variable",
              },
              definition: Function {
               argument: Simple {
                identifier: "values",
               },
               definition: String {
                parts: [
                 Expression {
                  expression: Variable {
                   identifier: "variable",
                   position: (23, 45),
                  },
                 },
                 Raw {
                  content: "=",
                 },
                 Expression {
                  expression: Variable {
                   identifier: "values",
                   position: (23, 57),
                  },
                 },
                ],
                position: (23, 42),
               },
               position: (23, 34),
              },
              position: (23, 24),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (23, 67),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "envVariables",
                 position: (23, 71),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ],
         },
        },
        Raw {
         content: "\n",
        },
       ],
       position: (9, 89),
      },
      position: (9, 16),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "lessKey",
        position: (27, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (27, 13),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (27, 18),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "lessconfig",
         },
        ],
        position: (27, 28),
       },
       Variable {
        identifier: "configText",
        position: (27, 41),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (32, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (34, 5),
           },
           Raw {
            content: "less",
            position: (34, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (38, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (38, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "less",
                },
               ],
               position: (38, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "configFile",
               position: (40, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (40, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (41, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (41, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (41, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (41, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (41, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (42, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (42, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (43, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (43, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{pkgs.my-configs}/lesskey\"",
                     },
                    ],
                    position: (43, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (44, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Path to lesskey configuration file.\n\n<option>configFile</option> takes precedence over <option>commands</option>,\n<option>clearDefaultCommands</option>, <option>lineEditingKeys</option>, and\n<option>envVariables</option>.\n",
                   },
                  ],
                  position: (44, 23),
                 },
                ),
               ],
               recursive: false,
               position: (40, 29),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "commands",
               position: (53, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (53, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (54, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (54, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (54, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (54, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (54, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (55, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (55, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (56, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "h",
                       position: (57, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "noaction 5\\e(",
                      },
                     ],
                     position: (57, 15),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "l",
                       position: (58, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "noaction 5\\e)",
                      },
                     ],
                     position: (58, 15),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (56, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (60, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Defines new command keys.",
                   },
                  ],
                  position: (60, 23),
                 },
                ),
               ],
               recursive: false,
               position: (53, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "clearDefaultCommands",
               position: (63, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (63, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (64, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (64, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (64, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (65, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (65, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (66, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Clear all default commands.\nYou should remember to set the quit key.\nOtherwise you will not be able to leave less without killing it.\n",
                   },
                  ],
                  position: (66, 23),
                 },
                ),
               ],
               recursive: false,
               position: (63, 39),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "lineEditingKeys",
               position: (73, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (73, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (74, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (74, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (74, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (74, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (74, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (75, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (75, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (76, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "e",
                       position: (77, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "abort",
                      },
                     ],
                     position: (77, 15),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (76, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (79, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Defines new line-editing keys.",
                   },
                  ],
                  position: (79, 23),
                 },
                ),
               ],
               recursive: false,
               position: (73, 34),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "envVariables",
               position: (82, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (82, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (83, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (83, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "attrsOf",
                      position: (83, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (83, 30),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (83, 36),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (84, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "LESS",
                       position: (85, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "-R",
                      },
                     ],
                     position: (85, 18),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (84, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (87, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "LESS",
                       position: (88, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "--quit-if-one-screen",
                      },
                     ],
                     position: (88, 18),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (87, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (90, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Defines environment variables.",
                   },
                  ],
                  position: (90, 23),
                 },
                ),
               ],
               recursive: false,
               position: (82, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "lessopen",
               position: (93, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (94, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (94, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (94, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (94, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (94, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "|",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (95, 23),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "lesspipe",
                        position: (95, 28),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/lesspipe.sh %s",
                   },
                  ],
                  position: (95, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (96, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (96, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "\"|",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{pkgs.lesspipe}/bin/lesspipe.sh %s\"",
                     },
                    ],
                    position: (96, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (97, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Before less opens a file, it first gives your input preprocessor a chance to modify the way the contents of the file are displayed.\n",
                   },
                  ],
                  position: (97, 23),
                 },
                ),
               ],
               recursive: false,
               position: (93, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "lessclose",
               position: (102, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (102, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (103, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (103, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (103, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (103, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "str",
                       position: (103, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (104, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (104, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "When less closes a file opened in such a way, it will call another program, called the input postprocessor, which may  perform  any  desired  clean-up  action (such  as deleting the replacement file created by LESSOPEN).\n",
                   },
                  ],
                  position: (105, 23),
                 },
                ),
               ],
               recursive: false,
               position: (102, 28),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (34, 21),
         },
        ),
       ],
       recursive: false,
       position: (32, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (112, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (112, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (112, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (112, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (114, 5),
             },
             Raw {
              content: "systemPackages",
              position: (114, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (114, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "less",
                 position: (114, 41),
                },
               ],
              },
              default: None,
             },
            ],
            position: (114, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (116, 5),
             },
             Raw {
              content: "variables",
              position: (116, 17),
             },
            ],
           },
           BinaryOperation {
            operator: Update,
            operands: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "LESSKEYIN_SYSTEM",
                   position: (117, 7),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "toString",
                  position: (117, 26),
                 },
                 arguments: [
                  Variable {
                   identifier: "lessKey",
                   position: (117, 35),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
              position: (116, 29),
             },
             BinaryOperation {
              operator: Update,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optionalAttrs",
                 position: (118, 10),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (118, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "lessopen",
                       position: (118, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (118, 41),
                   },
                  ],
                  position: (118, 38),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "LESSOPEN",
                       position: (119, 7),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (119, 18),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "lessopen",
                        position: (119, 22),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                  position: (118, 47),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optionalAttrs",
                 position: (120, 10),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (120, 25),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "lessclose",
                       position: (120, 29),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (120, 42),
                   },
                  ],
                  position: (120, 39),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "LESSCLOSE",
                       position: (121, 7),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (121, 19),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "lessclose",
                        position: (121, 23),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                  position: (120, 48),
                 },
                ],
               },
              ],
              position: (120, 7),
             },
            ],
            position: (118, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "warnings",
              position: (124, 5),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "optional",
             position: (124, 16),
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (125, 7),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "clearDefaultCommands",
                   position: (125, 11),
                  },
                 ],
                },
                default: None,
               },
               FunctionApplication {
                function: Variable {
                 identifier: "all",
                 position: (125, 36),
                },
                arguments: [
                 Function {
                  argument: Simple {
                   identifier: "x",
                  },
                  definition: BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    Variable {
                     identifier: "x",
                     position: (125, 44),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "quit",
                      },
                     ],
                     position: (125, 49),
                    },
                   ],
                   position: (125, 46),
                  },
                  position: (125, 41),
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "attrValues",
                   position: (125, 58),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (125, 69),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "commands",
                       position: (125, 73),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ],
               },
              ],
              position: (125, 32),
             },
             String {
              parts: [
               Raw {
                content: "config.programs.less.clearDefaultCommands clears all default commands of less but there is no alternative binding for exiting.\nConsider adding a binding for 'quit'.\n",
               },
              ],
              position: (126, 7),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (112, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (132, 3),
        },
        Raw {
         content: "maintainers",
         position: (132, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (132, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "johnazoidberg",
          position: (132, 42),
         },
        ],
        position: (132, 40),
       },
       position: (132, 22),
      },
     ),
    ],
    recursive: false,
    position: (31, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}