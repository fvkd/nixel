---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "nixpkgs",
    default: Some(
     Map {
      bindings: [],
      recursive: false,
     },
    ),
   },
   FunctionArgument {
    identifier: "pkgs",
    default: Some(
     FunctionApplication {
      function: Variable {
       identifier: "import",
       position: (1, 11),
      },
      arguments: [
       Path {
        parts: [
         Raw {
          content: "./..",
          position: (1, 18),
         },
        ],
       },
       Map {
        bindings: [],
        recursive: false,
       },
      ],
     },
    ),
   },
  ],
  ellipsis: false,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "revision",
       position: (3, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (3, 14),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "lib",
         position: (3, 19),
        },
        Raw {
         content: "trivial",
         position: (3, 23),
        },
        Raw {
         content: "revisionWithDefault",
         position: (3, 31),
        },
       ],
      },
      default: None,
     },
     arguments: [
      PropertyAccess {
       expression: Variable {
        identifier: "nixpkgs",
        position: (3, 52),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "revision",
          position: (3, 60),
         },
        ],
       },
       default: Some(
        String {
         parts: [
          Raw {
           content: "master",
           position: (3, 73),
          },
         ],
        },
       ),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "libDefPos",
       position: (5, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "set",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "builtins",
        position: (6, 5),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "map",
          position: (6, 14),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Function {
        argument: Some(
         "name",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "name",
              position: (8, 9),
             },
            ],
           },
           Variable {
            identifier: "name",
            position: (8, 16),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "location",
              position: (9, 9),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (9, 20),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "unsafeGetAttrPos",
                position: (9, 29),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Variable {
              identifier: "name",
              position: (9, 46),
             },
             Variable {
              identifier: "set",
              position: (9, 51),
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
        position: (7, 8),
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "builtins",
          position: (11, 8),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "attrNames",
            position: (11, 17),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Variable {
          identifier: "set",
          position: (11, 27),
         },
        ],
       },
      ],
     },
     position: (5, 15),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "libset",
       position: (13, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "toplib",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "builtins",
        position: (14, 5),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "map",
          position: (14, 14),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Function {
        argument: Some(
         "subsetname",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "subsetname",
              position: (16, 9),
             },
            ],
           },
           Variable {
            identifier: "subsetname",
            position: (16, 22),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "functions",
              position: (17, 9),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "libDefPos",
             position: (17, 21),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "toplib",
               position: (17, 31),
              },
              attribute_path: AttributePath {
               attributes: [
                Expression {
                 expression: Variable {
                  identifier: "subsetname",
                  position: (17, 40),
                 },
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
        position: (15, 8),
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "builtins",
          position: (19, 8),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "filter",
            position: (19, 17),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Function {
          argument: Some(
           "name",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "builtins",
             position: (20, 16),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "isAttrs",
               position: (20, 25),
              },
             ],
            },
            default: None,
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "toplib",
              position: (20, 33),
             },
             attribute_path: AttributePath {
              attributes: [
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (20, 42),
                },
               },
              ],
             },
             default: None,
            },
           ],
          },
          position: (20, 10),
         },
         FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "builtins",
            position: (21, 10),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "attrNames",
              position: (21, 19),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Variable {
            identifier: "toplib",
            position: (21, 29),
           },
          ],
         },
        ],
       },
      ],
     },
     position: (13, 12),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "nixpkgsLib",
       position: (23, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "pkgs",
      position: (23, 16),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "lib",
        position: (23, 21),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "flattenedLibSubset",
       position: (25, 3),
      },
     ],
    },
    Function {
     argument: None,
     arguments: FunctionArguments {
      arguments: [
       FunctionArgument {
        identifier: "functions",
        default: None,
       },
       FunctionArgument {
        identifier: "subsetname",
        default: None,
       },
      ],
      ellipsis: false,
     },
     definition: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "builtins",
        position: (26, 3),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "map",
          position: (26, 12),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Function {
        argument: Some(
         "fn",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "name",
              position: (28, 7),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "lib.",
              position: (28, 15),
             },
             Expression {
              expression: Variable {
               identifier: "subsetname",
               position: (28, 21),
              },
             },
             Raw {
              content: ".",
              position: (28, 32),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "fn",
                position: (28, 35),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "name",
                  position: (28, 38),
                 },
                ],
               },
               default: None,
              },
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "value",
              position: (29, 7),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "fn",
             position: (29, 15),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "location",
               position: (29, 18),
              },
             ],
            },
            default: None,
           },
          ),
         ],
         recursive: false,
        },
        position: (27, 6),
       },
       Variable {
        identifier: "functions",
        position: (31, 5),
       },
      ],
     },
     position: (25, 24),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "locatedlibsets",
       position: (33, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "libs",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "builtins",
        position: (33, 26),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "map",
          position: (33, 35),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Variable {
        identifier: "flattenedLibSubset",
        position: (33, 39),
       },
       FunctionApplication {
        function: Variable {
         identifier: "libset",
         position: (33, 59),
        },
        arguments: [
         Variable {
          identifier: "libs",
          position: (33, 66),
         },
        ],
       },
      ],
     },
     position: (33, 20),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "removeFilenamePrefix",
       position: (34, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "prefix",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: Function {
      argument: Some(
       "filename",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: LetIn {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "prefixLen",
            position: (36, 5),
           },
          ],
         },
         BinaryOperation {
          operator: Addition,
          operands: [
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (36, 18),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "stringLength",
                position: (36, 27),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Variable {
              identifier: "prefix",
              position: (36, 40),
             },
            ],
           },
           Int {
            value: 1,
            position: (36, 50),
           },
          ],
          position: (36, 48),
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "filenameLen",
            position: (37, 7),
           },
          ],
         },
         FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "builtins",
            position: (37, 21),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "stringLength",
              position: (37, 30),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Variable {
            identifier: "filename",
            position: (37, 43),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "substr",
            position: (38, 7),
           },
          ],
         },
         FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "builtins",
            position: (38, 16),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "substring",
              position: (38, 25),
             },
            ],
           },
           default: None,
          },
          arguments: [
           Variable {
            identifier: "prefixLen",
            position: (38, 35),
           },
           Variable {
            identifier: "filenameLen",
            position: (38, 45),
           },
           Variable {
            identifier: "filename",
            position: (38, 57),
           },
          ],
         },
        ),
       ],
       target: Variable {
        identifier: "substr",
        position: (39, 10),
       },
       position: (35, 5),
      },
      position: (34, 34),
     },
     position: (34, 26),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "removeNixpkgs",
       position: (41, 3),
      },
     ],
    },
    FunctionApplication {
     function: Variable {
      identifier: "removeFilenamePrefix",
      position: (41, 19),
     },
     arguments: [
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "builtins",
         position: (41, 41),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "toString",
           position: (41, 50),
          },
         ],
        },
        default: None,
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (41, 59),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "path",
            position: (41, 64),
           },
          ],
         },
         default: None,
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "liblocations",
       position: (43, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "builtins",
       position: (44, 5),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "filter",
         position: (44, 14),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Function {
       argument: Some(
        "elem",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: BinaryOperation {
        operator: NotEqualTo,
        operands: [
         PropertyAccess {
          expression: Variable {
           identifier: "elem",
           position: (45, 14),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "value",
             position: (45, 19),
            },
           ],
          },
          default: None,
         },
         Variable {
          identifier: "null",
          position: (45, 28),
         },
        ],
        position: (45, 25),
       },
       position: (45, 8),
      },
      FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "nixpkgsLib",
         position: (46, 8),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "lists",
           position: (46, 19),
          },
          Raw {
           content: "flatten",
           position: (46, 25),
          },
         ],
        },
        default: None,
       },
       arguments: [
        FunctionApplication {
         function: Variable {
          identifier: "locatedlibsets",
          position: (47, 10),
         },
         arguments: [
          Variable {
           identifier: "nixpkgsLib",
           position: (47, 25),
          },
         ],
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "fnLocationRelative",
       position: (49, 3),
      },
     ],
    },
    Function {
     argument: None,
     arguments: FunctionArguments {
      arguments: [
       FunctionArgument {
        identifier: "value",
        default: None,
       },
       FunctionArgument {
        identifier: "name",
        default: None,
       },
      ],
      ellipsis: false,
     },
     definition: Map {
      bindings: [
       Inherit(
        None,
        [
         Raw {
          content: "name",
          position: (51, 15),
         },
        ],
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "value",
           position: (52, 7),
          },
         ],
        },
        BinaryOperation {
         operator: Update,
         operands: [
          Variable {
           identifier: "value",
           position: (52, 15),
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "file",
                position: (52, 26),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "removeNixpkgs",
               position: (52, 33),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "value",
                 position: (52, 47),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "file",
                   position: (52, 53),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
         position: (52, 21),
        },
       ),
      ],
      recursive: false,
     },
     position: (49, 24),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "relativeLocs",
       position: (55, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "builtins",
       position: (55, 19),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "map",
         position: (55, 28),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Variable {
       identifier: "fnLocationRelative",
       position: (55, 32),
      },
      Variable {
       identifier: "liblocations",
       position: (55, 51),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "sanitizeId",
       position: (56, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "builtins",
       position: (56, 16),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "replaceStrings",
         position: (56, 25),
        },
       ],
      },
      default: None,
     },
     arguments: [
      List {
       elements: [
        String {
         parts: [
          Raw {
           content: "'",
           position: (57, 8),
          },
         ],
        },
       ],
      },
      List {
       elements: [
        String {
         parts: [
          Raw {
           content: "-prime",
           position: (58, 8),
          },
         ],
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "urlPrefix",
       position: (60, 3),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "https://github.com/NixOS/nixpkgs/blob/",
       position: (60, 16),
      },
      Expression {
       expression: Variable {
        identifier: "revision",
        position: (60, 56),
       },
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "xmlstrings",
       position: (61, 3),
      },
     ],
    },
    FunctionApplication {
     function: PropertyAccess {
      expression: Variable {
       identifier: "nixpkgsLib",
       position: (61, 17),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "strings",
         position: (61, 28),
        },
        Raw {
         content: "concatMapStrings",
         position: (61, 36),
        },
       ],
      },
      default: None,
     },
     arguments: [
      Function {
       argument: None,
       arguments: FunctionArguments {
        arguments: [
         FunctionArgument {
          identifier: "value",
          default: None,
         },
         FunctionArgument {
          identifier: "name",
          default: None,
         },
        ],
        ellipsis: false,
       },
       definition: String {
        parts: [
         Raw {
          content: "<section><title>",
          position: (64, 1),
         },
         Expression {
          expression: Variable {
           identifier: "name",
           position: (64, 25),
          },
         },
         Raw {
          content: "</title>\n  <para xml:id=\"",
          position: (64, 30),
         },
         Expression {
          expression: FunctionApplication {
           function: Variable {
            identifier: "sanitizeId",
            position: (65, 25),
           },
           arguments: [
            Variable {
             identifier: "name",
             position: (65, 36),
            },
           ],
          },
         },
         Raw {
          content: "\">\n  Located at\n  <link\n    xlink:href=\"",
          position: (65, 41),
         },
         Expression {
          expression: Variable {
           identifier: "urlPrefix",
           position: (68, 25),
          },
         },
         Raw {
          content: "/",
          position: (68, 35),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "value",
            position: (68, 38),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "file",
              position: (68, 44),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "#L",
          position: (68, 49),
         },
         Expression {
          expression: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "builtins",
             position: (68, 53),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "toString",
               position: (68, 62),
              },
             ],
            },
            default: None,
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "value",
              position: (68, 71),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "line",
                position: (68, 77),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\">",
          position: (68, 82),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "value",
            position: (68, 86),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "file",
              position: (68, 92),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: ":",
          position: (68, 97),
         },
         Expression {
          expression: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "builtins",
             position: (68, 100),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "toString",
               position: (68, 109),
              },
             ],
            },
            default: None,
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "value",
              position: (68, 118),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "line",
                position: (68, 124),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "</link>\n  in  <literal>&lt;nixpkgs&gt;</literal>.\n  </para>\n  </section>\n",
          position: (68, 129),
         },
        ],
       },
       position: (62, 8),
      },
      Variable {
       identifier: "relativeLocs",
       position: (73, 7),
      },
     ],
    },
   ),
  ],
  target: FunctionApplication {
   function: PropertyAccess {
    expression: Variable {
     identifier: "pkgs",
     position: (75, 4),
    },
    attribute_path: AttributePath {
     attributes: [
      Raw {
       content: "writeText",
       position: (75, 9),
      },
     ],
    },
    default: None,
   },
   arguments: [
    String {
     parts: [
      Raw {
       content: "locations.xml",
       position: (76, 6),
      },
     ],
    },
    String {
     parts: [
      Raw {
       content: "<section xmlns=\"http://docbook.org/ns/docbook\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"5\">\n     <title>All the locations for every lib function</title>\n     <para>This file is only for inclusion by other files.</para>\n     ",
       position: (78, 1),
      },
      Expression {
       expression: Variable {
        identifier: "xmlstrings",
        position: (83, 12),
       },
      },
      Raw {
       content: "\n</section>\n",
       position: (83, 23),
      },
     ],
    },
   ],
  },
  position: (2, 1),
 },
 position: (1, 1),
}