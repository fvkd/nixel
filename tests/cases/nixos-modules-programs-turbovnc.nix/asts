---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (8, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (8, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (8, 16),
        },
        Raw {
         content: "turbovnc",
         position: (8, 25),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (11, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (13, 5),
           },
           Raw {
            content: "turbovnc",
            position: (13, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "ensureHeadlessSoftwareOpenGL",
               position: (15, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (15, 38),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (16, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (16, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (16, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (17, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (17, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (18, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to set up NixOS such that TurboVNC's built-in software OpenGL\nimplementation works.\n\nThis will enable <option>hardware.opengl.enable</option> so that OpenGL\nprograms can find Mesa's llvmpipe drivers.\n\nSetting this option to <code>false</code> does not mean that software\nOpenGL won't work; it may still work depending on your system\nconfiguration.\n\nThis option is also intended to generate warnings if you are using some\nconfiguration that's incompatible with using headless software OpenGL\nin TurboVNC.\n",
                   },
                  ],
                  position: (18, 23),
                 },
                ),
               ],
               recursive: false,
               position: (15, 47),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (13, 25),
         },
        ),
       ],
       recursive: false,
       position: (11, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (39, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (39, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (39, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "ensureHeadlessSoftwareOpenGL",
            position: (39, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "hardware",
              position: (51, 5),
             },
             Raw {
              content: "opengl",
              position: (51, 14),
             },
             Raw {
              content: "enable",
              position: (51, 21),
             },
            ],
           },
           Variable {
            identifier: "true",
            position: (51, 30),
           },
          ),
         ],
         recursive: false,
         position: (39, 50),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (10, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}