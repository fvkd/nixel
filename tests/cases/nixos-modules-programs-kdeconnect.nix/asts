---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (2, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (4, 3),
       },
       Raw {
        content: "programs",
        position: (4, 11),
       },
       Raw {
        content: "kdeconnect",
        position: (4, 20),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (5, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkEnableOption",
          position: (5, 14),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "kdeconnect.\n\nNote that it will open the TCP and UDP port from\n1714 to 1764 as they are needed for it to function properly.\nYou can use the <option>package</option> to use\n<code>gnomeExtensions.gsconnect</code> as an alternative\nimplementation if you use Gnome.\n",
             position: (6, 1),
            },
           ],
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "package",
           position: (14, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (14, 15),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (15, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (15, 17),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "kdeconnect",
                 position: (15, 22),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "defaultText",
                position: (16, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "literalExpression",
               position: (16, 21),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "pkgs.kdeconnect",
                  position: (16, 40),
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (17, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (17, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (17, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "example",
                position: (18, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "literalExpression",
               position: (18, 17),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "pkgs.gnomeExtensions.gsconnect",
                  position: (18, 36),
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (19, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "The package providing the implementation for kdeconnect.\n",
                position: (20, 1),
               },
              ],
             },
            ),
           ],
           recursive: false,
           position: (14, 24),
          },
         ],
        },
       ),
      ],
      recursive: false,
      position: (4, 33),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (24, 3),
       },
      ],
     },
     LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "cfg",
           position: (26, 7),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "config",
          position: (26, 13),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (26, 20),
           },
           Raw {
            content: "kdeconnect",
            position: (26, 29),
           },
          ],
         },
         default: None,
        },
       ),
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (28, 7),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (28, 12),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (28, 16),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (29, 9),
             },
             Raw {
              content: "systemPackages",
              position: (29, 21),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (29, 40),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (29, 44),
                },
               ],
              },
              default: None,
             },
            ],
            position: (29, 38),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "networking",
              position: (30, 9),
             },
             Raw {
              content: "firewall",
              position: (30, 20),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "allowedTCPPortRanges",
                 position: (31, 11),
                },
               ],
              },
              List {
               elements: [
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "from",
                      position: (31, 38),
                     },
                    ],
                   },
                   Int {
                    value: 1714,
                    position: (31, 45),
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "to",
                      position: (31, 51),
                     },
                    ],
                   },
                   Int {
                    value: 1764,
                    position: (31, 56),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (31, 36),
                },
               ],
               position: (31, 34),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "allowedUDPPortRanges",
                 position: (32, 11),
                },
               ],
              },
              Variable {
               identifier: "allowedTCPPortRanges",
               position: (32, 34),
              },
             ),
            ],
            recursive: true,
            position: (30, 31),
           },
          ),
         ],
         recursive: false,
         position: (28, 23),
        },
       ],
      },
      position: (25, 5),
     },
    ),
   ],
   recursive: false,
   position: (3, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}