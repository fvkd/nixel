---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (2, 1)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "buildPythonPackage" (2, 3)
          , := lexemes ","
            , "," (3, 1)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "pythonOlder" (3, 3)
            , := lexemes ","
              , "," (4, 1)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "fetchPypi" (4, 3)
              , := lexemes ","
                , "," (5, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "sphinx" (5, 3)
                , := lexemes ","
                  , "," (6, 1)
                formals := rules "formal"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "beautifulsoup4" (6, 3)
      } := lexemes "}"
        } "}" (7, 1)
      : := lexemes ":"
        : ":" (7, 2)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildPythonPackage" (9, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (9, 20)
                  { := lexemes "{"
                    { "{" (9, 24)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules 
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "pname" (10, 3)
                                    = := lexemes "="
                                      = "=" (10, 9)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "\"" "string_parts" "\""
                                                  " := lexemes "\""
                                                    " "\"" (10, 11)
                                                  string_parts := rules "STR"
                                                    STR := lexemes "STR"
                                                      STR "furo" (10, 12)
                                                  " := lexemes "\""
                                                    " "\"" (10, 16)
                                    ; := lexemes ";"
                                      ; ";" (10, 17)
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "version" (11, 3)
                                  = := lexemes "="
                                    = "=" (11, 11)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (11, 13)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "2022.3.4" (11, 14)
                                                " := lexemes "\""
                                                  " "\"" (11, 22)
                                  ; := lexemes ";"
                                    ; ";" (11, 23)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "format" (12, 3)
                                = := lexemes "="
                                  = "=" (12, 10)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (12, 12)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "wheel" (12, 13)
                                              " := lexemes "\""
                                                " "\"" (12, 18)
                                ; := lexemes ";"
                                  ; ";" (12, 19)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "disable" (13, 3)
                              = := lexemes "="
                                = "=" (13, 11)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "pythonOlder" (13, 13)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (13, 25)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "3.6" (13, 26)
                                            " := lexemes "\""
                                              " "\"" (13, 29)
                              ; := lexemes ";"
                                ; ";" (13, 30)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "src" (15, 3)
                            = := lexemes "="
                              = "=" (15, 7)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "fetchPypi" (15, 9)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "{" "binds" "}"
                                          { := lexemes "{"
                                            { "{" (15, 19)
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "INHERIT" "attrs" ";"
                                                  binds := rules 
                                                  INHERIT := lexemes "INHERIT"
                                                    INHERIT "inherit" (16, 5)
                                                  attrs := rules "attrs" "attr"
                                                    attrs := rules "attrs" "attr"
                                                      attrs := rules "attrs" "attr"
                                                        attrs := rules 
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "pname" (16, 13)
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "version" (16, 19)
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "format" (16, 27)
                                                  ; := lexemes ";"
                                                    ; ";" (16, 33)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "dist" (17, 5)
                                                = := lexemes "="
                                                  = "=" (17, 10)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (17, 12)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "py3" (17, 13)
                                                              " := lexemes "\""
                                                                " "\"" (17, 16)
                                                ; := lexemes ";"
                                                  ; ";" (17, 17)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "python" (18, 5)
                                              = := lexemes "="
                                                = "=" (18, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (18, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "py3" (18, 15)
                                                            " := lexemes "\""
                                                              " "\"" (18, 18)
                                              ; := lexemes ";"
                                                ; ";" (18, 19)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "sha256" (19, 5)
                                            = := lexemes "="
                                              = "=" (19, 12)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (19, 14)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "sha256-bHGCk+v4d1XwufFIseaXyeOqvXr5VWRNS8ruXOddt4E=" (19, 15)
                                                          " := lexemes "\""
                                                            " "\"" (19, 66)
                                            ; := lexemes ";"
                                              ; ";" (19, 67)
                                          } := lexemes "}"
                                            } "}" (20, 3)
                            ; := lexemes ";"
                              ; ";" (20, 4)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "propagatedBuildInputs" (22, 3)
                          = := lexemes "="
                            = "=" (22, 25)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (22, 27)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules 
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "sphinx" (23, 5)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "beautifulsoup4" (24, 5)
                                        ] := lexemes "]"
                                          ] "]" (25, 3)
                          ; := lexemes ";"
                            ; ";" (25, 4)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "installCheckPhase" (27, 3)
                        = := lexemes "="
                          = "=" (27, 21)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (27, 23)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    # furo was built incorrectly if this directory is empty\n    # Ignore the hidden file .gitignore\n    cd \"$out/lib/python\"*\n    if [ \"$(ls 'site-packages/furo/theme/furo/static/' | wc -l)\" -le 0 ]; then\n      echo 'static directory must not be empty'\n      exit 1\n    fi\n    cd -\n  " (28, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (36, 3)
                        ; := lexemes ";"
                          ; ";" (36, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "pythonImportsCheck" (38, 3)
                      = := lexemes "="
                        = "=" (38, 22)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "[" "expr_list" "]"
                                    [ := lexemes "["
                                      [ "[" (38, 24)
                                    expr_list := rules "expr_list" "expr_select"
                                      expr_list := rules 
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (38, 26)
                                          string_parts := rules "STR"
                                            STR := lexemes "STR"
                                              STR "furo" (38, 27)
                                          " := lexemes "\""
                                            " "\"" (38, 31)
                                    ] := lexemes "]"
                                      ] "]" (38, 33)
                      ; := lexemes ";"
                        ; ";" (38, 34)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (40, 3)
                    = := lexemes "="
                      = "=" (40, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (40, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (40, 15)
                        ; := lexemes ";"
                          ; ";" (40, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (40, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "description" (41, 5)
                                            = := lexemes "="
                                              = "=" (41, 17)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (41, 19)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "A clean customizable documentation theme for Sphinx" (41, 20)
                                                          " := lexemes "\""
                                                            " "\"" (41, 71)
                                            ; := lexemes ";"
                                              ; ";" (41, 72)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (42, 5)
                                          = := lexemes "="
                                            = "=" (42, 14)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (42, 16)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "https://github.com/pradyunsg/furo" (42, 17)
                                                        " := lexemes "\""
                                                          " "\"" (42, 50)
                                          ; := lexemes ";"
                                            ; ";" (42, 51)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (43, 5)
                                        = := lexemes "="
                                          = "=" (43, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "licenses" (43, 15)
                                                    . := lexemes "."
                                                      . "." (43, 23)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "mit" (43, 24)
                                        ; := lexemes ";"
                                          ; ";" (43, 27)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (44, 5)
                                      = := lexemes "="
                                        = "=" (44, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "WITH" "expr" ";" "expr_function"
                                          WITH := lexemes "WITH"
                                            WITH "with" (44, 19)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (44, 24)
                                          ; := lexemes ";"
                                            ; ";" (44, 35)
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (44, 37)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "Luflosi" (44, 39)
                                                      ] := lexemes "]"
                                                        ] "]" (44, 47)
                                      ; := lexemes ";"
                                        ; ";" (44, 48)
                                    } := lexemes "}"
                                      } "}" (45, 3)
                    ; := lexemes ";"
                      ; ";" (45, 4)
                  } := lexemes "}"
                    } "}" (46, 1)