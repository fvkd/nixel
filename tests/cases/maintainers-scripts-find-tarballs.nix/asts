---
With {
 expression: FunctionApplication {
  function: Variable {
   identifier: "import",
   position: (3, 6),
  },
  arguments: [
   Path {
    parts: [
     Raw {
      content: "../..",
      position: (3, 13),
     },
    ],
   },
   Map {
    bindings: [],
    recursive: false,
   },
  ],
 },
 target: With {
  expression: Variable {
   identifier: "lib",
   position: (4, 6),
  },
  target: Function {
   argument: None,
   arguments: FunctionArguments {
    arguments: [
     FunctionArgument {
      identifier: "expr",
      default: None,
     },
    ],
    ellipsis: false,
   },
   definition: LetIn {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "root",
         position: (10, 3),
        },
       ],
      },
      Variable {
       identifier: "expr",
       position: (10, 10),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "uniqueUrls",
         position: (12, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "map",
        position: (12, 16),
       },
       arguments: [
        Function {
         argument: Some(
          "x",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: PropertyAccess {
          expression: Variable {
           identifier: "x",
           position: (12, 24),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "file",
             position: (12, 26),
            },
           ],
          },
          default: None,
         },
         position: (12, 21),
        },
        FunctionApplication {
         function: Variable {
          identifier: "genericClosure",
          position: (12, 33),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "startSet",
                position: (13, 5),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "map",
               position: (13, 16),
              },
              arguments: [
               Function {
                argument: Some(
                 "file",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "key",
                      position: (13, 29),
                     },
                    ],
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "file",
                     position: (13, 35),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "url",
                       position: (13, 40),
                      },
                     ],
                    },
                    default: None,
                   },
                  ),
                  Inherit(
                   None,
                   [
                    Raw {
                     content: "file",
                     position: (13, 53),
                    },
                   ],
                  ),
                 ],
                 recursive: false,
                },
                position: (13, 21),
               },
               Variable {
                identifier: "urls",
                position: (13, 62),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "operator",
                position: (14, 5),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "const",
               position: (14, 16),
              },
              arguments: [
               List {
                elements: [],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "urls",
         position: (17, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "map",
        position: (17, 10),
       },
       arguments: [
        Function {
         argument: Some(
          "drv",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "url",
               position: (17, 22),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "head",
              position: (17, 28),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "drv",
                position: (17, 34),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "urls",
                  position: (17, 38),
                 },
                ],
               },
               default: Some(
                List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "drv",
                    position: (17, 48),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "url",
                      position: (17, 52),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "hash",
               position: (17, 60),
              },
             ],
            },
            PropertyAccess {
             expression: Variable {
              identifier: "drv",
              position: (17, 67),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "outputHash",
                position: (17, 71),
               },
              ],
             },
             default: None,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "type",
               position: (17, 83),
              },
             ],
            },
            PropertyAccess {
             expression: Variable {
              identifier: "drv",
              position: (17, 90),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "outputHashAlgo",
                position: (17, 94),
               },
              ],
             },
             default: None,
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "name",
               position: (17, 110),
              },
             ],
            },
            PropertyAccess {
             expression: Variable {
              identifier: "drv",
              position: (17, 117),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "name",
                position: (17, 121),
               },
              ],
             },
             default: None,
            },
           ),
          ],
          recursive: false,
         },
         position: (17, 15),
        },
        Variable {
         identifier: "fetchurlDependencies",
         position: (17, 130),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "fetchurlDependencies",
         position: (19, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "filter",
        position: (20, 5),
       },
       arguments: [
        Function {
         argument: Some(
          "drv",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: BinaryOperation {
          operator: LogicalAnd,
          operands: [
           BinaryOperation {
            operator: LogicalAnd,
            operands: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "drv",
                   position: (21, 13),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "outputHash",
                     position: (21, 17),
                    },
                   ],
                  },
                  default: Some(
                   String {
                    parts: [],
                   },
                  ),
                 },
                 String {
                  parts: [],
                 },
                ],
                position: (21, 34),
               },
               BinaryOperation {
                operator: EqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "drv",
                   position: (21, 43),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "outputHashMode",
                     position: (21, 47),
                    },
                   ],
                  },
                  default: Some(
                   String {
                    parts: [
                     Raw {
                      content: "flat",
                      position: (21, 66),
                     },
                    ],
                   },
                  ),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "flat",
                    position: (21, 76),
                   },
                  ],
                 },
                ],
                position: (21, 72),
               },
              ],
              position: (21, 40),
             },
             BinaryOperation {
              operator: EqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "drv",
                 position: (22, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "postFetch",
                   position: (22, 18),
                  },
                 ],
                },
                default: Some(
                 String {
                  parts: [],
                 },
                ),
               },
               String {
                parts: [],
               },
              ],
              position: (22, 34),
             },
            ],
            position: (22, 11),
           },
           BinaryOperation {
            operator: LogicalOr,
            operands: [
             HasProperty {
              expression: Variable {
               identifier: "drv",
               position: (22, 44),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "url",
                 position: (22, 50),
                },
               ],
              },
             },
             HasProperty {
              expression: Variable {
               identifier: "drv",
               position: (22, 57),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "urls",
                 position: (22, 63),
                },
               ],
              },
             },
            ],
            position: (22, 54),
           },
          ],
          position: (22, 40),
         },
         position: (21, 8),
        },
        Variable {
         identifier: "dependencies",
         position: (23, 7),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "dependencies",
         position: (25, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "map",
        position: (25, 18),
       },
       arguments: [
        Function {
         argument: Some(
          "x",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: PropertyAccess {
          expression: Variable {
           identifier: "x",
           position: (25, 26),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "value",
             position: (25, 28),
            },
           ],
          },
          default: None,
         },
         position: (25, 23),
        },
        FunctionApplication {
         function: Variable {
          identifier: "genericClosure",
          position: (25, 36),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "startSet",
                position: (26, 5),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "map",
               position: (26, 16),
              },
              arguments: [
               Variable {
                identifier: "keyDrv",
                position: (26, 20),
               },
               FunctionApplication {
                function: Variable {
                 identifier: "derivationsIn'",
                 position: (26, 28),
                },
                arguments: [
                 Variable {
                  identifier: "root",
                  position: (26, 43),
                 },
                ],
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "operator",
                position: (27, 5),
               },
              ],
             },
             Function {
              argument: None,
              arguments: FunctionArguments {
               arguments: [
                FunctionArgument {
                 identifier: "value",
                 default: None,
                },
                FunctionArgument {
                 identifier: "key",
                 default: None,
                },
               ],
               ellipsis: false,
              },
              definition: FunctionApplication {
               function: Variable {
                identifier: "map",
                position: (27, 32),
               },
               arguments: [
                Variable {
                 identifier: "keyDrv",
                 position: (27, 36),
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "immediateDependenciesOf",
                  position: (27, 44),
                 },
                 arguments: [
                  Variable {
                   identifier: "value",
                   position: (27, 68),
                  },
                 ],
                },
               ],
              },
              position: (27, 16),
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "derivationsIn'",
         position: (30, 3),
        },
       ],
      },
      Function {
       argument: Some(
        "x",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: IfThenElse {
        predicate: UnaryOperation {
         operator: Not,
         operand: FunctionApplication {
          function: Variable {
           identifier: "canEval",
           position: (31, 9),
          },
          arguments: [
           Variable {
            identifier: "x",
            position: (31, 17),
           },
          ],
         },
         position: (31, 8),
        },
        then: List {
         elements: [],
        },
        else_: IfThenElse {
         predicate: FunctionApplication {
          function: Variable {
           identifier: "isDerivation",
           position: (32, 13),
          },
          arguments: [
           Variable {
            identifier: "x",
            position: (32, 26),
           },
          ],
         },
         then: FunctionApplication {
          function: Variable {
           identifier: "optional",
           position: (32, 33),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "canEval",
             position: (32, 43),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (32, 51),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "drvPath",
                 position: (32, 53),
                },
               ],
              },
              default: None,
             },
            ],
           },
           Variable {
            identifier: "x",
            position: (32, 62),
           },
          ],
         },
         else_: IfThenElse {
          predicate: FunctionApplication {
           function: Variable {
            identifier: "isList",
            position: (33, 13),
           },
           arguments: [
            Variable {
             identifier: "x",
             position: (33, 20),
            },
           ],
          },
          then: FunctionApplication {
           function: Variable {
            identifier: "concatLists",
            position: (33, 27),
           },
           arguments: [
            FunctionApplication {
             function: Variable {
              identifier: "map",
              position: (33, 40),
             },
             arguments: [
              Variable {
               identifier: "derivationsIn'",
               position: (33, 44),
              },
              Variable {
               identifier: "x",
               position: (33, 59),
              },
             ],
            },
           ],
          },
          else_: IfThenElse {
           predicate: FunctionApplication {
            function: Variable {
             identifier: "isAttrs",
             position: (34, 13),
            },
            arguments: [
             Variable {
              identifier: "x",
              position: (34, 21),
             },
            ],
           },
           then: FunctionApplication {
            function: Variable {
             identifier: "concatLists",
             position: (34, 28),
            },
            arguments: [
             FunctionApplication {
              function: Variable {
               identifier: "mapAttrsToList",
               position: (34, 41),
              },
              arguments: [
               Function {
                argument: Some(
                 "n",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "v",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "addErrorContext",
                   position: (34, 63),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "while finding tarballs in '",
                      position: (34, 80),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "n",
                       position: (34, 109),
                      },
                     },
                     Raw {
                      content: "':",
                      position: (34, 111),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "derivationsIn'",
                     position: (34, 116),
                    },
                    arguments: [
                     Variable {
                      identifier: "v",
                      position: (34, 131),
                     },
                    ],
                   },
                  ],
                 },
                 position: (34, 60),
                },
                position: (34, 57),
               },
               Variable {
                identifier: "x",
                position: (34, 135),
               },
              ],
             },
            ],
           },
           else_: List {
            elements: [],
           },
           position: (34, 10),
          },
          position: (33, 10),
         },
         position: (32, 10),
        },
        position: (31, 5),
       },
       position: (30, 20),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "keyDrv",
         position: (37, 3),
        },
       ],
      },
      Function {
       argument: Some(
        "drv",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: IfThenElse {
        predicate: FunctionApplication {
         function: Variable {
          identifier: "canEval",
          position: (37, 20),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "drv",
            position: (37, 28),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "drvPath",
              position: (37, 32),
             },
            ],
           },
           default: None,
          },
         ],
        },
        then: Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "key",
              position: (37, 47),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "drv",
             position: (37, 53),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "drvPath",
               position: (37, 57),
              },
             ],
            },
            default: None,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "value",
              position: (37, 66),
             },
            ],
           },
           Variable {
            identifier: "drv",
            position: (37, 74),
           },
          ),
         ],
         recursive: false,
        },
        else_: Map {
         bindings: [],
         recursive: false,
        },
        position: (37, 17),
       },
       position: (37, 12),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "immediateDependenciesOf",
         position: (39, 3),
        },
       ],
      },
      Function {
       argument: Some(
        "drv",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "concatLists",
         position: (40, 5),
        },
        arguments: [
         FunctionApplication {
          function: Variable {
           identifier: "mapAttrsToList",
           position: (40, 18),
          },
          arguments: [
           Function {
            argument: Some(
             "n",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Function {
             argument: Some(
              "v",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: FunctionApplication {
              function: Variable {
               identifier: "derivationsIn",
               position: (40, 40),
              },
              arguments: [
               Variable {
                identifier: "v",
                position: (40, 54),
               },
              ],
             },
             position: (40, 37),
            },
            position: (40, 34),
           },
           FunctionApplication {
            function: Variable {
             identifier: "removeAttrs",
             position: (40, 58),
            },
            arguments: [
             Variable {
              identifier: "drv",
              position: (40, 70),
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "meta",
                    position: (40, 77),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "passthru",
                    position: (40, 84),
                   },
                  ],
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optionals",
                 position: (40, 98),
                },
                arguments: [
                 HasProperty {
                  expression: Variable {
                   identifier: "drv",
                   position: (40, 109),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "passthru",
                     position: (40, 113),
                    },
                   ],
                  },
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "attrNames",
                   position: (40, 124),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "drv",
                     position: (40, 134),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "passthru",
                       position: (40, 138),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ],
               },
              ],
              position: (40, 95),
             },
            ],
           },
          ],
         },
        ],
       },
       position: (39, 29),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "derivationsIn",
         position: (42, 3),
        },
       ],
      },
      Function {
       argument: Some(
        "x",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: IfThenElse {
        predicate: UnaryOperation {
         operator: Not,
         operand: FunctionApplication {
          function: Variable {
           identifier: "canEval",
           position: (43, 9),
          },
          arguments: [
           Variable {
            identifier: "x",
            position: (43, 17),
           },
          ],
         },
         position: (43, 8),
        },
        then: List {
         elements: [],
        },
        else_: IfThenElse {
         predicate: FunctionApplication {
          function: Variable {
           identifier: "isDerivation",
           position: (44, 13),
          },
          arguments: [
           Variable {
            identifier: "x",
            position: (44, 26),
           },
          ],
         },
         then: FunctionApplication {
          function: Variable {
           identifier: "optional",
           position: (44, 33),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "canEval",
             position: (44, 43),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (44, 51),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "drvPath",
                 position: (44, 53),
                },
               ],
              },
              default: None,
             },
            ],
           },
           Variable {
            identifier: "x",
            position: (44, 62),
           },
          ],
         },
         else_: IfThenElse {
          predicate: FunctionApplication {
           function: Variable {
            identifier: "isList",
            position: (45, 13),
           },
           arguments: [
            Variable {
             identifier: "x",
             position: (45, 20),
            },
           ],
          },
          then: FunctionApplication {
           function: Variable {
            identifier: "concatLists",
            position: (45, 27),
           },
           arguments: [
            FunctionApplication {
             function: Variable {
              identifier: "map",
              position: (45, 40),
             },
             arguments: [
              Variable {
               identifier: "derivationsIn",
               position: (45, 44),
              },
              Variable {
               identifier: "x",
               position: (45, 58),
              },
             ],
            },
           ],
          },
          else_: List {
           elements: [],
          },
          position: (45, 10),
         },
         position: (44, 10),
        },
        position: (43, 5),
       },
       position: (42, 19),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "canEval",
         position: (48, 3),
        },
       ],
      },
      Function {
       argument: Some(
        "val",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: PropertyAccess {
        expression: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "builtins",
           position: (48, 19),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "tryEval",
             position: (48, 28),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "val",
           position: (48, 36),
          },
         ],
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "success",
           position: (48, 41),
          },
         ],
        },
        default: None,
       },
       position: (48, 13),
      },
     ),
    ],
    target: Variable {
     identifier: "uniqueUrls",
     position: (50, 4),
    },
    position: (8, 1),
   },
   position: (6, 1),
  },
  position: (4, 1),
 },
 position: (3, 1),
}