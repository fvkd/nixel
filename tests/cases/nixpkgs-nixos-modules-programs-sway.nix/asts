---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "sway",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "wrapperOptions",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "types",
        position: (8, 20),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "submodule",
          position: (8, 26),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "options",
             position: (9, 5),
            },
           ],
          },
          to: LetIn {
           bindings: [
            Binding {
             from: AttributePath {
              parts: [
               Raw {
                content: "mkWrapperFeature",
                position: (11, 9),
               },
              ],
             },
             to: Function {
              argument: Simple {
               identifier: "default",
              },
              definition: Function {
               argument: Simple {
                identifier: "description",
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (11, 51),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (12, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (12, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (12, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Inherit {
                    from: None,
                    attributes: [
                     Raw {
                      content: "default",
                      position: (13, 19),
                     },
                    ],
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "example",
                       position: (14, 11),
                      },
                     ],
                    },
                    to: UnaryOperation {
                     operator: Not,
                     operand: Variable {
                      identifier: "default",
                      position: (14, 22),
                     },
                     position: (14, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (15, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Whether to make use of the ",
                       position: (15, 26),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "description",
                        position: (15, 55),
                       },
                      },
                     ],
                     position: (15, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (11, 60),
                 },
                ],
               },
               position: (11, 38),
              },
              position: (11, 29),
             },
            },
           ],
           target: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "base",
                 position: (18, 9),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mkWrapperFeature",
                position: (18, 16),
               },
               arguments: [
                Variable {
                 identifier: "true",
                 position: (18, 33),
                },
                String {
                 parts: [
                  Raw {
                   content: "base wrapper to execute extra session commands and prepend a\ndbus-run-session to the sway command.\n",
                   position: (19, 1),
                  },
                 ],
                 position: (18, 38),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "gtk",
                 position: (22, 9),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mkWrapperFeature",
                position: (22, 15),
               },
               arguments: [
                Variable {
                 identifier: "false",
                 position: (22, 32),
                },
                String {
                 parts: [
                  Raw {
                   content: "wrapGAppsHook wrapper to execute sway with required environment\nvariables for GTK applications.\n",
                   position: (23, 1),
                  },
                 ],
                 position: (22, 38),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (17, 10),
           },
           position: (10, 7),
          },
         },
        ],
        recursive: false,
        position: (8, 36),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "swayPackage",
        position: (29, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (29, 17),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "sway",
          position: (29, 22),
         },
         Raw {
          content: "override",
          position: (29, 27),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "extraSessionCommands",
             position: (30, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (30, 28),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "extraSessionCommands",
              position: (30, 32),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "extraOptions",
             position: (31, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (31, 20),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "extraOptions",
              position: (31, 24),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "withBaseWrapper",
             position: (32, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (32, 23),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "wrapperFeatures",
              position: (32, 27),
             },
             Raw {
              content: "base",
              position: (32, 43),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "withGtkWrapper",
             position: (33, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (33, 22),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "wrapperFeatures",
              position: (33, 26),
             },
             Raw {
              content: "gtk",
              position: (33, 42),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "isNixOS",
             position: (34, 5),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (34, 15),
          },
         },
        ],
        recursive: false,
        position: (29, 36),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (37, 3),
        },
        Raw {
         content: "programs",
         position: (37, 11),
        },
        Raw {
         content: "sway",
         position: (37, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (38, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (38, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "      Sway, the i3-compatible tiling Wayland compositor. You can manually launch\nSway by executing \"exec sway\" on a TTY. Copy /etc/sway/config to\n~/.config/sway/config to modify the default configuration. See\n<link xlink:href=\"https://github.com/swaywm/sway/wiki\" /> and\n\"man 5 sway\" for more information",
              position: (39, 1),
             },
            ],
            position: (38, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "wrapperFeatures",
            position: (45, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (45, 23),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (46, 7),
                },
               ],
              },
              to: Variable {
               identifier: "wrapperOptions",
               position: (46, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (47, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (47, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (48, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "gtk",
                    position: (48, 19),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (48, 25),
                 },
                },
               ],
               recursive: false,
               position: (48, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (49, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Attribute set of features to enable in the wrapper.\n",
                 position: (50, 1),
                },
               ],
               position: (49, 21),
              },
             },
            ],
            recursive: false,
            position: (45, 32),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraSessionCommands",
            position: (54, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (54, 28),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (55, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (55, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (55, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (56, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (56, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (57, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "# SDL:\nexport SDL_VIDEODRIVER=wayland\n# QT (needs qt5.qtwayland in systemPackages):\nexport QT_QPA_PLATFORM=wayland-egl\nexport QT_WAYLAND_DISABLE_WINDOWDECORATION=\"1\"\n# Fix for some Java AWT applications (e.g. Android Studio),\n# use this if they aren't displayed properly:\nexport _JAVA_AWT_WM_NONREPARENTING=1\n",
                 position: (58, 1),
                },
               ],
               position: (57, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (67, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Shell commands executed just before Sway is started. See\n<link xlink:href=\"https://github.com/swaywm/sway/wiki/Running-programs-natively-under-wayland\" />\nand <link xlink:href=\"https://github.com/swaywm/wlroots/blob/master/docs/env_vars.md\" />\nfor some useful environment variables.\n",
                 position: (68, 1),
                },
               ],
               position: (67, 21),
              },
             },
            ],
            recursive: false,
            position: (54, 37),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraOptions",
            position: (75, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (75, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (76, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (76, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (76, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (76, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (76, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (77, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (77, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (78, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "--verbose",
                   position: (79, 10),
                  },
                 ],
                 position: (79, 9),
                },
                String {
                 parts: [
                  Raw {
                   content: "--debug",
                   position: (80, 10),
                  },
                 ],
                 position: (80, 9),
                },
                String {
                 parts: [
                  Raw {
                   content: "--unsupported-gpu",
                   position: (81, 10),
                  },
                 ],
                 position: (81, 9),
                },
                String {
                 parts: [
                  Raw {
                   content: "--my-next-gpu-wont-be-nvidia",
                   position: (82, 10),
                  },
                 ],
                 position: (82, 9),
                },
               ],
               position: (78, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (84, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Command line arguments passed to launch Sway. Please DO NOT report\nissues if you use an unsupported GPU (proprietary drivers).\n",
                 position: (85, 1),
                },
               ],
               position: (84, 21),
              },
             },
            ],
            recursive: false,
            position: (75, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraPackages",
            position: (90, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (90, 21),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (91, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (91, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (91, 26),
                },
                arguments: [
                 Variable {
                  identifier: "package",
                  position: (91, 33),
                 },
                ],
               },
               position: (91, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (92, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "pkgs",
                position: (92, 22),
               },
               target: List {
                elements: [
                 Variable {
                  identifier: "swaylock",
                  position: (93, 9),
                 },
                 Variable {
                  identifier: "swayidle",
                  position: (93, 18),
                 },
                 Variable {
                  identifier: "foot",
                  position: (93, 27),
                 },
                 Variable {
                  identifier: "dmenu",
                  position: (93, 32),
                 },
                ],
                position: (92, 28),
               },
               position: (92, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (95, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (95, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "with pkgs; [ swaylock swayidle foot dmenu ];\n",
                   position: (96, 1),
                  },
                 ],
                 position: (95, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (98, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (98, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "with pkgs; [\n  i3status i3status-rust\n  termite rofi light\n]\n",
                   position: (99, 1),
                  },
                 ],
                 position: (98, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (104, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Extra packages to be installed system wide. See\n<link xlink:href=\"https://github.com/swaywm/sway/wiki/Useful-add-ons-for-sway\" /> and\n<link xlink:href=\"https://github.com/swaywm/sway/wiki/i3-Migration-Guide#common-x11-apps-used-on-i3-with-wayland-alternatives\" />\nfor a list of useful software.\n",
                 position: (105, 1),
                },
               ],
               position: (104, 21),
              },
             },
            ],
            recursive: false,
            position: (90, 30),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (37, 27),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (114, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (114, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (114, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (114, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (115, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (117, 9),
                  },
                 ],
                },
                to: BinaryOperation {
                 operator: Implication,
                 operands: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (117, 21),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "extraSessionCommands",
                        position: (117, 25),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [],
                     position: (117, 49),
                    },
                   ],
                   position: (117, 46),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (117, 55),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "wrapperFeatures",
                      position: (117, 59),
                     },
                     Raw {
                      content: "base",
                      position: (117, 75),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (117, 52),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (118, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "The extraSessionCommands for Sway will not be run if\nwrapperFeatures.base is disabled.\n",
                   position: (119, 1),
                  },
                 ],
                 position: (118, 19),
                },
               },
              ],
              recursive: false,
              position: (116, 7),
             },
            ],
            position: (115, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (124, 5),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "systemPackages",
                 position: (125, 7),
                },
               ],
              },
              to: BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  Variable {
                   identifier: "swayPackage",
                   position: (125, 26),
                  },
                 ],
                 position: (125, 24),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (125, 43),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "extraPackages",
                    position: (125, 47),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (125, 40),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "pathsToLink",
                 position: (127, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "/share/backgrounds/sway",
                   position: (127, 24),
                  },
                 ],
                 position: (127, 23),
                },
               ],
               position: (127, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "etc",
                 position: (128, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Expression {
                    expression: String {
                     parts: [
                      Raw {
                       content: "sway/config",
                       position: (129, 10),
                      },
                     ],
                     position: (129, 9),
                    },
                   },
                   Raw {
                    content: "source",
                    position: (129, 23),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "mkOptionDefault",
                   position: (129, 32),
                  },
                  arguments: [
                   String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "swayPackage",
                       position: (129, 51),
                      },
                     },
                     Raw {
                      content: "/etc/sway/config",
                      position: (129, 63),
                     },
                    ],
                    position: (129, 48),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Expression {
                    expression: String {
                     parts: [
                      Raw {
                       content: "sway/config.d/nixos.conf",
                       position: (130, 10),
                      },
                     ],
                     position: (130, 9),
                    },
                   },
                   Raw {
                    content: "source",
                    position: (130, 36),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (130, 45),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "writeText",
                      position: (130, 50),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "nixos.conf",
                      position: (130, 61),
                     },
                    ],
                    position: (130, 60),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "# Import the most important environment variables into the D-Bus and systemd\n# user environments (e.g. required for screen sharing and Pinentry prompts):\nexec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP\n",
                      position: (131, 1),
                     },
                    ],
                    position: (130, 73),
                   },
                  ],
                 },
                },
               ],
               recursive: false,
               position: (128, 13),
              },
             },
            ],
            recursive: false,
            position: (124, 19),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "security",
              position: (137, 5),
             },
             Raw {
              content: "polkit",
              position: (137, 14),
             },
             Raw {
              content: "enable",
              position: (137, 21),
             },
            ],
           },
           to: Variable {
            identifier: "true",
            position: (137, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "security",
              position: (138, 5),
             },
             Raw {
              content: "pam",
              position: (138, 14),
             },
             Raw {
              content: "services",
              position: (138, 18),
             },
             Raw {
              content: "swaylock",
              position: (138, 27),
             },
            ],
           },
           to: Map {
            bindings: [],
            recursive: false,
            position: (138, 38),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "hardware",
              position: (139, 5),
             },
             Raw {
              content: "opengl",
              position: (139, 14),
             },
             Raw {
              content: "enable",
              position: (139, 21),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (139, 30),
            },
            arguments: [
             Variable {
              identifier: "true",
              position: (139, 40),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "fonts",
              position: (140, 5),
             },
             Raw {
              content: "enableDefaultFonts",
              position: (140, 11),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (140, 32),
            },
            arguments: [
             Variable {
              identifier: "true",
              position: (140, 42),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (141, 5),
             },
             Raw {
              content: "dconf",
              position: (141, 14),
             },
             Raw {
              content: "enable",
              position: (141, 20),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (141, 29),
            },
            arguments: [
             Variable {
              identifier: "true",
              position: (141, 39),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (143, 5),
             },
             Raw {
              content: "xserver",
              position: (143, 14),
             },
             Raw {
              content: "displayManager",
              position: (143, 22),
             },
             Raw {
              content: "sessionPackages",
              position: (143, 37),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "swayPackage",
              position: (143, 57),
             },
            ],
            position: (143, 55),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "programs",
              position: (144, 5),
             },
             Raw {
              content: "xwayland",
              position: (144, 14),
             },
             Raw {
              content: "enable",
              position: (144, 23),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (144, 32),
            },
            arguments: [
             Variable {
              identifier: "true",
              position: (144, 42),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "xdg",
              position: (146, 5),
             },
             Raw {
              content: "portal",
              position: (146, 9),
             },
             Raw {
              content: "extraPortals",
              position: (146, 16),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (146, 33),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "xdg-desktop-portal-wlr",
                 position: (146, 38),
                },
               ],
              },
              default: None,
             },
            ],
            position: (146, 31),
           },
          },
         ],
         recursive: false,
         position: (114, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (149, 3),
        },
        Raw {
         content: "maintainers",
         position: (149, 8),
        },
       ],
      },
      to: With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (149, 27),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "maintainers",
           position: (149, 31),
          },
         ],
        },
        default: None,
       },
       target: List {
        elements: [
         Variable {
          identifier: "primeos",
          position: (149, 46),
         },
         Variable {
          identifier: "colemickens",
          position: (149, 54),
         },
        ],
        position: (149, 44),
       },
       position: (149, 22),
      },
     },
    ],
    recursive: false,
    position: (36, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}