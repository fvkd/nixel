---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "hardware",
         position: (6, 16),
        },
        Raw {
         content: "openrazer",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "kernelPackages",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 20),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "boot",
         position: (7, 27),
        },
        Raw {
         content: "kernelPackages",
         position: (7, 32),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "toPyBoolStr",
        position: (9, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "b",
      },
      definition: IfThenElse {
       predicate: Variable {
        identifier: "b",
        position: (9, 23),
       },
       then: String {
        parts: [
         Raw {
          content: "True",
          position: (9, 31),
         },
        ],
        position: (9, 30),
       },
       else_: String {
        parts: [
         Raw {
          content: "False",
          position: (9, 43),
         },
        ],
        position: (9, 42),
       },
       position: (9, 20),
      },
      position: (9, 17),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "daemonExe",
        position: (11, 3),
       },
      ],
     },
     to: String {
      parts: [
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (11, 18),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "openrazer-daemon",
            position: (11, 23),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "/bin/openrazer-daemon --config ",
        position: (11, 40),
       },
       Expression {
        expression: Variable {
         identifier: "daemonConfFile",
         position: (11, 73),
        },
       },
      ],
      position: (11, 15),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "daemonConfFile",
        position: (13, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (13, 20),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeTextFile",
          position: (13, 25),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (14, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "razer.conf",
             position: (14, 13),
            },
           ],
           position: (14, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "text",
             position: (15, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "[General]\nverbose_logging = ",
             position: (16, 1),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "toPyBoolStr",
               position: (17, 27),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (17, 39),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "verboseLogging",
                   position: (17, 43),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: "\n\n[Startup]\nsync_effects_enabled = ",
             position: (17, 58),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "toPyBoolStr",
               position: (20, 32),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (20, 44),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "syncEffectsEnabled",
                   position: (20, 48),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: "\ndevices_off_on_screensaver = ",
             position: (20, 67),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "toPyBoolStr",
               position: (21, 38),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (21, 50),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "devicesOffOnScreensaver",
                   position: (21, 54),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: "\nmouse_battery_notifier = ",
             position: (21, 78),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "toPyBoolStr",
               position: (22, 34),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (22, 46),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "mouseBatteryNotifier",
                   position: (22, 50),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: "\n\n[Statistics]\nkey_statistics = ",
             position: (22, 71),
            },
            Expression {
             expression: FunctionApplication {
              function: Variable {
               identifier: "toPyBoolStr",
               position: (25, 26),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (25, 38),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "keyStatistics",
                   position: (25, 42),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
            Raw {
             content: "\n",
             position: (25, 56),
            },
           ],
           position: (15, 12),
          },
         },
        ],
        recursive: false,
        position: (13, 39),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "dbusServiceFile",
        position: (29, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (29, 21),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeTextFile",
          position: (29, 26),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (30, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "org.razer.service",
             position: (30, 13),
            },
           ],
           position: (30, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "destination",
             position: (31, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "/share/dbus-1/services/",
             position: (31, 20),
            },
            Expression {
             expression: Variable {
              identifier: "name",
              position: (31, 45),
             },
            },
           ],
           position: (31, 19),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "text",
             position: (32, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "[D-BUS Service]\nName=org.razer\nExec=",
             position: (33, 1),
            },
            Expression {
             expression: Variable {
              identifier: "daemonExe",
              position: (35, 14),
             },
            },
            Raw {
             content: "\nSystemdService=openrazer-daemon.service\n",
             position: (35, 24),
            },
           ],
           position: (32, 12),
          },
         },
        ],
        recursive: true,
        position: (29, 40),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "drivers",
        position: (40, 3),
       },
      ],
     },
     to: List {
      elements: [
       String {
        parts: [
         Raw {
          content: "razerkbd",
          position: (41, 6),
         },
        ],
        position: (41, 5),
       },
       String {
        parts: [
         Raw {
          content: "razermouse",
          position: (42, 6),
         },
        ],
        position: (42, 5),
       },
       String {
        parts: [
         Raw {
          content: "razerfirefly",
          position: (43, 6),
         },
        ],
        position: (43, 5),
       },
       String {
        parts: [
         Raw {
          content: "razerkraken",
          position: (44, 6),
         },
        ],
        position: (44, 5),
       },
       String {
        parts: [
         Raw {
          content: "razermug",
          position: (45, 6),
         },
        ],
        position: (45, 5),
       },
       String {
        parts: [
         Raw {
          content: "razercore",
          position: (46, 6),
         },
        ],
        position: (46, 5),
       },
      ],
      position: (40, 13),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (50, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "hardware",
            position: (51, 5),
           },
           Raw {
            content: "openrazer",
            position: (51, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (52, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (52, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "OpenRazer drivers and userspace daemon.\n",
                 position: (53, 1),
                },
               ],
               position: (52, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "verboseLogging",
               position: (56, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (56, 24),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (57, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (57, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (58, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable verbose logging. Logs debug messages.\n",
                    position: (60, 1),
                   },
                  ],
                  position: (59, 23),
                 },
                },
               ],
               recursive: false,
               position: (56, 33),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "syncEffectsEnabled",
               position: (64, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (64, 28),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (65, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (65, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (66, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (66, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (67, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Set the sync effects flag to true so any assignment of\neffects will work across devices.\n",
                    position: (68, 1),
                   },
                  ],
                  position: (67, 23),
                 },
                },
               ],
               recursive: false,
               position: (64, 37),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "devicesOffOnScreensaver",
               position: (73, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (73, 33),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (74, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (74, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (75, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (76, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Turn off the devices when the systems screensaver kicks in.\n",
                    position: (77, 1),
                   },
                  ],
                  position: (76, 23),
                 },
                },
               ],
               recursive: false,
               position: (73, 42),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "mouseBatteryNotifier",
               position: (81, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (81, 30),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (82, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (82, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (82, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (83, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "true",
                  position: (83, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (84, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Mouse battery notifier.\n",
                    position: (85, 1),
                   },
                  ],
                  position: (84, 23),
                 },
                },
               ],
               recursive: false,
               position: (81, 39),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "keyStatistics",
               position: (89, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (89, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (90, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (90, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (91, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (92, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Collects number of keypresses per hour per key used to\ngenerate a heatmap.\n",
                    position: (93, 1),
                   },
                  ],
                  position: (92, 23),
                 },
                },
               ],
               recursive: false,
               position: (89, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "users",
               position: (98, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (98, 15),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (99, 9),
                   },
                  ],
                 },
                 to: With {
                  expression: Variable {
                   identifier: "types",
                   position: (99, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "listOf",
                    position: (99, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (99, 35),
                    },
                   ],
                  },
                  position: (99, 16),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (100, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (100, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Usernames to be added to the \"openrazer\" group, so that they\ncan start and interact with the OpenRazer userspace daemon.\n",
                    position: (102, 1),
                   },
                  ],
                  position: (101, 23),
                 },
                },
               ],
               recursive: false,
               position: (98, 24),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (51, 26),
         },
        },
       ],
       recursive: false,
       position: (50, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (109, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (109, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (109, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (109, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (110, 5),
             },
             Raw {
              content: "extraModulePackages",
              position: (110, 10),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "kernelPackages",
               position: (110, 34),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "openrazer",
                 position: (110, 49),
                },
               ],
              },
              default: None,
             },
            ],
            position: (110, 32),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "boot",
              position: (111, 5),
             },
             Raw {
              content: "kernelModules",
              position: (111, 10),
             },
            ],
           },
           to: Variable {
            identifier: "drivers",
            position: (111, 26),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (115, 5),
             },
             Raw {
              content: "systemPackages",
              position: (115, 17),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (115, 36),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "python3Packages",
                 position: (115, 41),
                },
                Raw {
                 content: "openrazer-daemon",
                 position: (115, 57),
                },
                Raw {
                 content: "man",
                 position: (115, 74),
                },
               ],
              },
              default: None,
             },
            ],
            position: (115, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (117, 5),
             },
             Raw {
              content: "udev",
              position: (117, 14),
             },
             Raw {
              content: "packages",
              position: (117, 19),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "kernelPackages",
               position: (117, 32),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "openrazer",
                 position: (117, 47),
                },
               ],
              },
              default: None,
             },
            ],
            position: (117, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (118, 5),
             },
             Raw {
              content: "dbus",
              position: (118, 14),
             },
             Raw {
              content: "packages",
              position: (118, 19),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "dbusServiceFile",
              position: (118, 32),
             },
            ],
            position: (118, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (123, 5),
             },
             Raw {
              content: "groups",
              position: (123, 11),
             },
             Raw {
              content: "openrazer",
              position: (123, 18),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "members",
                 position: (124, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (124, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "users",
                  position: (124, 21),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (123, 30),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (127, 5),
             },
             Raw {
              content: "user",
              position: (127, 13),
             },
             Raw {
              content: "services",
              position: (127, 18),
             },
             Raw {
              content: "openrazer-daemon",
              position: (127, 27),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (128, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Daemon to manage razer devices in userspace",
                 position: (128, 22),
                },
               ],
               position: (128, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "unitConfig",
                 position: (129, 7),
                },
                Raw {
                 content: "Documentation",
                 position: (129, 18),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "man:openrazer-daemon(8)",
                 position: (129, 35),
                },
               ],
               position: (129, 34),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (132, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "graphical-session.target",
                   position: (132, 23),
                  },
                 ],
                 position: (132, 22),
                },
               ],
               position: (132, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "partOf",
                 position: (133, 9),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "graphical-session.target",
                   position: (133, 21),
                  },
                 ],
                 position: (133, 20),
                },
               ],
               position: (133, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (134, 9),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Type",
                    position: (135, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "dbus",
                    position: (135, 19),
                   },
                  ],
                  position: (135, 18),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "BusName",
                    position: (136, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "org.razer",
                    position: (136, 22),
                   },
                  ],
                  position: (136, 21),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (137, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "daemonExe",
                     position: (137, 26),
                    },
                   },
                   Raw {
                    content: " --foreground",
                    position: (137, 36),
                   },
                  ],
                  position: (137, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "Restart",
                    position: (138, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "always",
                    position: (138, 22),
                   },
                  ],
                  position: (138, 21),
                 },
                },
               ],
               recursive: false,
               position: (134, 25),
              },
             },
            ],
            recursive: false,
            position: (127, 46),
           },
          },
         ],
         recursive: false,
         position: (109, 28),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (143, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (144, 5),
           },
          ],
         },
         to: With {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "lib",
            position: (144, 24),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "maintainers",
              position: (144, 28),
             },
            ],
           },
           default: None,
          },
          target: List {
           elements: [
            Variable {
             identifier: "roelvandijk",
             position: (144, 43),
            },
           ],
           position: (144, 41),
          },
          position: (144, 19),
         },
        },
       ],
       recursive: false,
       position: (143, 10),
      },
     },
    ],
    recursive: false,
    position: (49, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}