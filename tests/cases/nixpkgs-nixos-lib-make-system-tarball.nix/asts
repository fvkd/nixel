---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "extraInputs",
    default: Some(
     List {
      elements: [
       Variable {
        identifier: "pixz",
        position: (29, 19),
       },
      ],
      position: (29, 17),
     },
    ),
   },
   DestructuredArgument {
    identifier: "compressionExtension",
    default: Some(
     String {
      parts: [
       Raw {
        content: ".xz",
        position: (27, 27),
       },
      ],
      position: (27, 26),
     },
    ),
   },
   DestructuredArgument {
    identifier: "compressCommand",
    default: Some(
     String {
      parts: [
       Raw {
        content: "pixz",
        position: (25, 22),
       },
      ],
      position: (25, 21),
     },
    ),
   },
   DestructuredArgument {
    identifier: "extraArgs",
    default: Some(
     String {
      parts: [],
      position: (23, 15),
     },
    ),
   },
   DestructuredArgument {
    identifier: "extraCommands",
    default: Some(
     String {
      parts: [],
      position: (20, 19),
     },
    ),
   },
   DestructuredArgument {
    identifier: "storeContents",
    default: Some(
     List {
      elements: [],
      position: (17, 19),
     },
    ),
   },
   DestructuredArgument {
    identifier: "contents",
    default: None,
   },
   DestructuredArgument {
    identifier: "fileName",
    default: Some(
     String {
      parts: [
       Raw {
        content: "nixos-system-",
        position: (4, 15),
       },
       Expression {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "stdenv",
          position: (4, 30),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "hostPlatform",
            position: (4, 37),
           },
           Raw {
            content: "system",
            position: (4, 50),
           },
          ],
         },
         default: None,
        },
       },
      ],
      position: (4, 14),
     },
    ),
   },
   DestructuredArgument {
    identifier: "pixz",
    default: None,
   },
   DestructuredArgument {
    identifier: "closureInfo",
    default: None,
   },
   DestructuredArgument {
    identifier: "stdenv",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: LetIn {
  bindings: [
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "symlinks",
       position: (33, 3),
      },
     ],
    },
    to: FunctionApplication {
     function: Variable {
      identifier: "map",
      position: (33, 14),
     },
     arguments: [
      Parentheses {
       expression: Function {
        argument: Simple {
         identifier: "x",
        },
        definition: PropertyAccess {
         expression: Variable {
          identifier: "x",
          position: (33, 22),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "symlink",
            position: (33, 24),
           },
          ],
         },
         default: None,
        },
        position: (33, 19),
       },
       position: (33, 18),
      },
      Variable {
       identifier: "storeContents",
       position: (33, 33),
      },
     ],
    },
   },
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "objects",
       position: (34, 3),
      },
     ],
    },
    to: FunctionApplication {
     function: Variable {
      identifier: "map",
      position: (34, 13),
     },
     arguments: [
      Parentheses {
       expression: Function {
        argument: Simple {
         identifier: "x",
        },
        definition: PropertyAccess {
         expression: Variable {
          identifier: "x",
          position: (34, 21),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "object",
            position: (34, 23),
           },
          ],
         },
         default: None,
        },
        position: (34, 18),
       },
       position: (34, 17),
      },
      Variable {
       identifier: "storeContents",
       position: (34, 31),
      },
     ],
    },
   },
  ],
  target: FunctionApplication {
   function: PropertyAccess {
    expression: Variable {
     identifier: "stdenv",
     position: (37, 1),
    },
    attribute_path: AttributePath {
     parts: [
      Raw {
       content: "mkDerivation",
       position: (37, 8),
      },
     ],
    },
    default: None,
   },
   arguments: [
    Map {
     bindings: [
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "name",
          position: (38, 3),
         },
        ],
       },
       to: String {
        parts: [
         Raw {
          content: "tarball",
          position: (38, 11),
         },
        ],
        position: (38, 10),
       },
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "builder",
          position: (39, 3),
         },
        ],
       },
       to: Path {
        parts: [
         Raw {
          content: "./make-system-tarball.sh",
          position: (39, 13),
         },
        ],
        position: (39, 13),
       },
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "nativeBuildInputs",
          position: (40, 3),
         },
        ],
       },
       to: Variable {
        identifier: "extraInputs",
        position: (40, 23),
       },
      },
      Inherit {
       from: None,
       attributes: [
        Raw {
         content: "fileName",
         position: (42, 11),
        },
        Raw {
         content: "extraArgs",
         position: (42, 20),
        },
        Raw {
         content: "extraCommands",
         position: (42, 30),
        },
        Raw {
         content: "compressCommand",
         position: (42, 44),
        },
       ],
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "sources",
          position: (45, 3),
         },
        ],
       },
       to: FunctionApplication {
        function: Variable {
         identifier: "map",
         position: (45, 13),
        },
        arguments: [
         Parentheses {
          expression: Function {
           argument: Simple {
            identifier: "x",
           },
           definition: PropertyAccess {
            expression: Variable {
             identifier: "x",
             position: (45, 21),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "source",
               position: (45, 23),
              },
             ],
            },
            default: None,
           },
           position: (45, 18),
          },
          position: (45, 17),
         },
         Variable {
          identifier: "contents",
          position: (45, 31),
         },
        ],
       },
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "targets",
          position: (46, 3),
         },
        ],
       },
       to: FunctionApplication {
        function: Variable {
         identifier: "map",
         position: (46, 13),
        },
        arguments: [
         Parentheses {
          expression: Function {
           argument: Simple {
            identifier: "x",
           },
           definition: PropertyAccess {
            expression: Variable {
             identifier: "x",
             position: (46, 21),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "target",
               position: (46, 23),
              },
             ],
            },
            default: None,
           },
           position: (46, 18),
          },
          position: (46, 17),
         },
         Variable {
          identifier: "contents",
          position: (46, 31),
         },
        ],
       },
      },
      Inherit {
       from: None,
       attributes: [
        Raw {
         content: "symlinks",
         position: (49, 11),
        },
        Raw {
         content: "objects",
         position: (49, 20),
        },
       ],
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "closureInfo",
          position: (51, 3),
         },
        ],
       },
       to: FunctionApplication {
        function: Variable {
         identifier: "closureInfo",
         position: (51, 17),
        },
        arguments: [
         Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "rootPaths",
               position: (52, 5),
              },
             ],
            },
            to: Variable {
             identifier: "objects",
             position: (52, 17),
            },
           },
          ],
          recursive: false,
          position: (51, 29),
         },
        ],
       },
      },
      Binding {
       from: AttributePath {
        parts: [
         Raw {
          content: "extension",
          position: (55, 3),
         },
        ],
       },
       to: Variable {
        identifier: "compressionExtension",
        position: (55, 15),
       },
      },
     ],
     recursive: false,
     position: (37, 21),
    },
   ],
  },
  position: (32, 1),
 },
 position: (1, 1),
}