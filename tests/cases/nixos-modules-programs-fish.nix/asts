---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfge",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "environment",
         position: (7, 17),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (9, 16),
        },
        Raw {
         content: "fish",
         position: (9, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "fishAbbrs",
        position: (11, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "concatStringsSep",
       position: (11, 15),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "\n",
          position: (11, 33),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "mapAttrsFlatten",
         position: (12, 5),
        },
        arguments: [
         Function {
          argument: Some(
           "k",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: Function {
           argument: Some(
            "v",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: String {
            parts: [
             Raw {
              content: "abbr -ag ",
              position: (12, 29),
             },
             Expression {
              expression: Variable {
               identifier: "k",
               position: (12, 40),
              },
             },
             Raw {
              content: " ",
              position: (12, 42),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "escapeShellArg",
                position: (12, 45),
               },
               arguments: [
                Variable {
                 identifier: "v",
                 position: (12, 60),
                },
               ],
              },
             },
            ],
           },
           position: (12, 25),
          },
          position: (12, 22),
         },
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (13, 7),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "shellAbbrs",
             position: (13, 11),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "fishAliases",
        position: (16, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "concatStringsSep",
       position: (16, 17),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "\n",
          position: (16, 35),
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "mapAttrsFlatten",
         position: (17, 5),
        },
        arguments: [
         Function {
          argument: Some(
           "k",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: Function {
           argument: Some(
            "v",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: String {
            parts: [
             Raw {
              content: "alias ",
              position: (17, 29),
             },
             Expression {
              expression: Variable {
               identifier: "k",
               position: (17, 37),
              },
             },
             Raw {
              content: " ",
              position: (17, 39),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "escapeShellArg",
                position: (17, 42),
               },
               arguments: [
                Variable {
                 identifier: "v",
                 position: (17, 57),
                },
               ],
              },
             },
            ],
           },
           position: (17, 25),
          },
          position: (17, 22),
         },
         FunctionApplication {
          function: Variable {
           identifier: "filterAttrs",
           position: (18, 8),
          },
          arguments: [
           Function {
            argument: Some(
             "k",
            ),
            arguments: FunctionArguments {
             arguments: [],
             ellipsis: false,
            },
            definition: Function {
             argument: Some(
              "v",
             ),
             arguments: FunctionArguments {
              arguments: [],
              ellipsis: false,
             },
             definition: BinaryOperation {
              operator: NotEqualTo,
              operands: [
               Variable {
                identifier: "v",
                position: (18, 27),
               },
               Variable {
                identifier: "null",
                position: (18, 32),
               },
              ],
              position: (18, 29),
             },
             position: (18, 24),
            },
            position: (18, 21),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (18, 38),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "shellAliases",
               position: (18, 42),
              },
             ],
            },
            default: None,
           },
          ],
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "envShellInit",
        position: (21, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (21, 18),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (21, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "shellInit",
          position: (21, 34),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfge",
         position: (21, 45),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "shellInit",
           position: (21, 50),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "envLoginShellInit",
        position: (23, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (23, 23),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (23, 28),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "loginShellInit",
          position: (23, 39),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfge",
         position: (23, 55),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "loginShellInit",
           position: (23, 60),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "envInteractiveShellInit",
        position: (25, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (25, 29),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (25, 34),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "interactiveShellInit",
          position: (25, 45),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfge",
         position: (25, 67),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "interactiveShellInit",
           position: (25, 72),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "sourceEnv",
        position: (27, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "file",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: IfThenElse {
       predicate: PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (28, 6),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "useBabelfish",
           position: (28, 10),
          },
         ],
        },
        default: None,
       },
       then: String {
        parts: [
         Raw {
          content: "source /etc/fish/",
          position: (29, 6),
         },
         Expression {
          expression: Variable {
           identifier: "file",
           position: (29, 25),
          },
         },
         Raw {
          content: ".fish",
          position: (29, 30),
         },
        ],
       },
       else_: String {
        parts: [
         Raw {
          content: "set fish_function_path ",
          position: (32, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (32, 32),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "fishPlugins",
              position: (32, 37),
             },
             Raw {
              content: "foreign-env",
              position: (32, 49),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/share/fish/vendor_functions.d $fish_function_path\nfenv source /etc/fish/foreign-env/",
          position: (32, 61),
         },
         Expression {
          expression: Variable {
           identifier: "file",
           position: (33, 43),
          },
         },
         Raw {
          content: " > /dev/null\nset -e fish_function_path[1]\n",
          position: (33, 48),
         },
        ],
       },
       position: (28, 3),
      },
      position: (27, 15),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "babelfishTranslate",
        position: (37, 3),
       },
      ],
     },
     Function {
      argument: Some(
       "path",
      ),
      arguments: FunctionArguments {
       arguments: [],
       ellipsis: false,
      },
      definition: Function {
       argument: Some(
        "name",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (38, 5),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "runCommand",
            position: (38, 10),
           },
          ],
         },
         default: None,
        },
        arguments: [
         String {
          parts: [
           Expression {
            expression: Variable {
             identifier: "name",
             position: (38, 24),
            },
           },
           Raw {
            content: ".fish",
            position: (38, 29),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nativeBuildInputs",
               position: (39, 7),
              },
             ],
            },
            List {
             elements: [
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (39, 29),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "babelfish",
                  position: (39, 34),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
         String {
          parts: [
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (40, 10),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "babelfish",
                position: (40, 15),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "/bin/babelfish < ",
            position: (40, 25),
           },
           Expression {
            expression: Variable {
             identifier: "path",
             position: (40, 44),
            },
           },
           Raw {
            content: " > $out;",
            position: (40, 49),
           },
          ],
         },
        ],
       },
       position: (37, 30),
      },
      position: (37, 24),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (46, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "programs",
            position: (48, 5),
           },
           Raw {
            content: "fish",
            position: (48, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (50, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (51, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (51, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (52, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether to configure fish as an interactive shell.\n",
                    position: (53, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (55, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (55, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (55, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "useBabelfish",
               position: (58, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (58, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (59, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (59, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (59, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (60, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (60, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (61, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "If enabled, the configured environment will be translated to native fish using <link xlink:href=\"https://github.com/bouk/babelfish\">babelfish</link>.\nOtherwise, <link xlink:href=\"https://github.com/oh-my-fish/plugin-foreign-env\">foreign-env</link> will be used.\n",
                    position: (62, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "vendor",
               position: (67, 7),
              },
              Raw {
               content: "config",
               position: (67, 14),
              },
              Raw {
               content: "enable",
               position: (67, 21),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (67, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (68, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (68, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (68, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (69, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (69, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (70, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether fish should source configuration snippets provided by other packages.\n",
                    position: (71, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "vendor",
               position: (75, 7),
              },
              Raw {
               content: "completions",
               position: (75, 14),
              },
              Raw {
               content: "enable",
               position: (75, 26),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (75, 35),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (76, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (76, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (77, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (77, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (78, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether fish should use completion files provided by other packages.\n",
                    position: (79, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "vendor",
               position: (83, 7),
              },
              Raw {
               content: "functions",
               position: (83, 14),
              },
              Raw {
               content: "enable",
               position: (83, 24),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (83, 33),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (84, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (84, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (84, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (85, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (85, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (86, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Whether fish should autoload fish functions provided by other packages.\n",
                    position: (87, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "shellAbbrs",
               position: (91, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (91, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (92, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (93, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "gco",
                       position: (94, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "git checkout",
                       position: (94, 18),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "npu",
                       position: (95, 11),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "nix-prefetch-url",
                       position: (95, 18),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (97, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Set of fish abbreviations.\n",
                    position: (98, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (100, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (100, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (100, 28),
                   },
                   arguments: [
                    Variable {
                     identifier: "str",
                     position: (100, 36),
                    },
                   ],
                  },
                  position: (100, 16),
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "shellAliases",
               position: (103, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (103, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (104, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Set of aliases for fish shell, which overrides <option>environment.shellAliases</option>.\nSee <option>environment.shellAliases</option> for an option format description.\n",
                    position: (106, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (109, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (109, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (109, 28),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "nullOr",
                      position: (109, 37),
                     },
                     arguments: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "either",
                        position: (109, 45),
                       },
                       arguments: [
                        Variable {
                         identifier: "str",
                         position: (109, 52),
                        },
                        Variable {
                         identifier: "path",
                         position: (109, 56),
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                  position: (109, 16),
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "shellInit",
               position: (112, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (112, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (113, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (114, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Shell script code called during fish shell initialisation.\n",
                    position: (115, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (117, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (117, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (117, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "loginShellInit",
               position: (120, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (120, 24),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (121, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (122, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Shell script code called during fish login shell initialisation.\n",
                    position: (123, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (125, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (125, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (125, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "interactiveShellInit",
               position: (128, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (128, 30),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (129, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (130, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Shell script code called during interactive fish shell initialisation.\n",
                    position: (131, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (133, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (133, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (133, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "promptInit",
               position: (136, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (136, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (137, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (138, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Shell script code used to initialise fish prompt.\n",
                    position: (139, 1),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (141, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (141, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (141, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (148, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (148, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (148, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (148, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "programs",
              position: (150, 5),
             },
             Raw {
              content: "fish",
              position: (150, 14),
             },
             Raw {
              content: "shellAliases",
              position: (150, 19),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mapAttrs",
             position: (150, 34),
            },
            arguments: [
             Function {
              argument: Some(
               "name",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Variable {
               identifier: "mkDefault",
               position: (150, 50),
              },
              position: (150, 44),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "cfge",
               position: (150, 61),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "shellAliases",
                 position: (150, 66),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "documentation",
              position: (153, 5),
             },
             Raw {
              content: "man",
              position: (153, 19),
             },
             Raw {
              content: "generateCaches",
              position: (153, 23),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (153, 40),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "mkDefault",
                position: (153, 44),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Variable {
              identifier: "true",
              position: (153, 54),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (155, 5),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (155, 19),
            },
            arguments: [
             List {
              elements: [
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (156, 8),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (156, 13),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "useBabelfish",
                     position: (156, 17),
                    },
                   ],
                  },
                  default: None,
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (158, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/setEnvironment.fish",
                          position: (158, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (158, 40),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "babelfishTranslate",
                      position: (158, 49),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (158, 68),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "system",
                          position: (158, 75),
                         },
                         Raw {
                          content: "build",
                          position: (158, 82),
                         },
                         Raw {
                          content: "setEnvironment",
                          position: (158, 88),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "setEnvironment",
                         position: (158, 104),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (159, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/shellInit.fish",
                          position: (159, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (159, 35),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "babelfishTranslate",
                      position: (159, 44),
                     },
                     arguments: [
                      Variable {
                       identifier: "envShellInit",
                       position: (159, 63),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "shellInit",
                         position: (159, 77),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (160, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/loginShellInit.fish",
                          position: (160, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (160, 40),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "babelfishTranslate",
                      position: (160, 49),
                     },
                     arguments: [
                      Variable {
                       identifier: "envLoginShellInit",
                       position: (160, 68),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "loginShellInit",
                         position: (160, 87),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (161, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/interactiveShellInit.fish",
                          position: (161, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (161, 46),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "babelfishTranslate",
                      position: (161, 55),
                     },
                     arguments: [
                      Variable {
                       identifier: "envInteractiveShellInit",
                       position: (161, 74),
                      },
                      String {
                       parts: [
                        Raw {
                         content: "interactiveShellInit",
                         position: (161, 99),
                        },
                       ],
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (164, 8),
                },
                arguments: [
                 UnaryOperation {
                  operator: Not,
                  operand: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (164, 15),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "useBabelfish",
                      position: (164, 19),
                     },
                    ],
                   },
                   default: None,
                  },
                  position: (164, 14),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (166, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/foreign-env/shellInit",
                          position: (166, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (166, 42),
                      },
                     ],
                    },
                    Variable {
                     identifier: "envShellInit",
                     position: (166, 51),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (167, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/foreign-env/loginShellInit",
                          position: (167, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (167, 47),
                      },
                     ],
                    },
                    Variable {
                     identifier: "envLoginShellInit",
                     position: (167, 56),
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "etc",
                       position: (168, 9),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "fish/foreign-env/interactiveShellInit",
                          position: (168, 14),
                         },
                        ],
                       },
                      },
                      Raw {
                       content: "source",
                       position: (168, 53),
                      },
                     ],
                    },
                    Variable {
                     identifier: "envInteractiveShellInit",
                     position: (168, 62),
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "etc",
                     position: (172, 9),
                    },
                    Expression {
                     expression: String {
                      parts: [
                       Raw {
                        content: "fish/nixos-env-preinit.fish",
                        position: (172, 14),
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "text",
                     position: (172, 43),
                    },
                   ],
                  },
                  IfThenElse {
                   predicate: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (173, 12),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "useBabelfish",
                       position: (173, 16),
                      },
                     ],
                    },
                    default: None,
                   },
                   then: String {
                    parts: [
                     Raw {
                      content: "# source the NixOS environment config\nif [ -z \"$__NIXOS_SET_ENVIRONMENT_DONE\" ]\n  source /etc/fish/setEnvironment.fish\nend\n",
                      position: (175, 1),
                     },
                    ],
                   },
                   else_: String {
                    parts: [
                     Raw {
                      content: "# This happens before $__fish_datadir/config.fish sets fish_function_path, so it is currently\n# unset. We set it and then completely erase it, leaving its configuration to $__fish_datadir/config.fish\nset fish_function_path ",
                      position: (181, 1),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (183, 36),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "fishPlugins",
                          position: (183, 41),
                         },
                         Raw {
                          content: "foreign-env",
                          position: (183, 53),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/share/fish/vendor_functions.d $__fish_datadir/functions\n\n# source the NixOS environment config\nif [ -z \"$__NIXOS_SET_ENVIRONMENT_DONE\" ]\n  fenv source ",
                      position: (183, 65),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (187, 27),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "system",
                          position: (187, 34),
                         },
                         Raw {
                          content: "build",
                          position: (187, 41),
                         },
                         Raw {
                          content: "setEnvironment",
                          position: (187, 47),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "\nend\n\n# clear fish_function_path so that it will be correctly set when we return to $__fish_datadir/config.fish\nset -e fish_function_path\n",
                      position: (187, 62),
                     },
                    ],
                   },
                   position: (173, 9),
                  },
                 ),
                ],
                recursive: false,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "etc",
                     position: (196, 9),
                    },
                    Expression {
                     expression: String {
                      parts: [
                       Raw {
                        content: "fish/config.fish",
                        position: (196, 14),
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "text",
                     position: (196, 32),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "# /etc/fish/config.fish: DO NOT EDIT -- this file has been generated automatically.\n\n# if we haven't sourced the general config, do it\nif not set -q __fish_nixos_general_config_sourced\n  ",
                     position: (197, 1),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "sourceEnv",
                       position: (201, 13),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "shellInit",
                          position: (201, 24),
                         },
                        ],
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n\n  ",
                     position: (201, 35),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (203, 13),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "shellInit",
                         position: (203, 17),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "\n\n  # and leave a note so we don't source this config section again from\n  # this very shell (children will source the general config anew)\n  set -g __fish_nixos_general_config_sourced 1\nend\n\n# if we haven't sourced the login config, do it\nstatus --is-login; and not set -q __fish_nixos_login_config_sourced\nand begin\n  ",
                     position: (203, 27),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "sourceEnv",
                       position: (213, 13),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "loginShellInit",
                          position: (213, 24),
                         },
                        ],
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n\n  ",
                     position: (213, 40),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (215, 13),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "loginShellInit",
                         position: (215, 17),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "\n\n  # and leave a note so we don't source this config section again from\n  # this very shell (children will source the general config anew)\n  set -g __fish_nixos_login_config_sourced 1\nend\n\n# if we haven't sourced the interactive config, do it\nstatus --is-interactive; and not set -q __fish_nixos_interactive_config_sourced\nand begin\n  ",
                     position: (215, 32),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "fishAbbrs",
                      position: (225, 13),
                     },
                    },
                    Raw {
                     content: "\n  ",
                     position: (225, 23),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "fishAliases",
                      position: (226, 13),
                     },
                    },
                    Raw {
                     content: "\n\n  ",
                     position: (226, 25),
                    },
                    Expression {
                     expression: FunctionApplication {
                      function: Variable {
                       identifier: "sourceEnv",
                       position: (228, 13),
                      },
                      arguments: [
                       String {
                        parts: [
                         Raw {
                          content: "interactiveShellInit",
                          position: (228, 24),
                         },
                        ],
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "\n\n  ",
                     position: (228, 46),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (230, 13),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "promptInit",
                         position: (230, 17),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "\n  ",
                     position: (230, 28),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (231, 13),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "interactiveShellInit",
                         position: (231, 17),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "\n\n  # and leave a note so we don't source this config section again from\n  # this very shell (children will source the general config anew,\n  # allowing configuration changes in, e.g, aliases, to propagate)\n  set -g __fish_nixos_interactive_config_sourced 1\nend\n",
                     position: (231, 38),
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "etc",
                     position: (242, 9),
                    },
                    Expression {
                     expression: String {
                      parts: [
                       Raw {
                        content: "fish/generated_completions",
                        position: (242, 14),
                       },
                      ],
                     },
                    },
                    Raw {
                     content: "source",
                     position: (242, 42),
                    },
                   ],
                  },
                  LetIn {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "patchedGenerator",
                        position: (244, 11),
                       },
                      ],
                     },
                     FunctionApplication {
                      function: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (244, 30),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "stdenv",
                          position: (244, 35),
                         },
                         Raw {
                          content: "mkDerivation",
                          position: (244, 42),
                         },
                        ],
                       },
                       default: None,
                      },
                      arguments: [
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "name",
                             position: (245, 13),
                            },
                           ],
                          },
                          String {
                           parts: [
                            Raw {
                             content: "fish_patched-completion-generator",
                             position: (245, 21),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "srcs",
                             position: (246, 13),
                            },
                           ],
                          },
                          List {
                           elements: [
                            String {
                             parts: [
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "pkgs",
                                 position: (247, 18),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "fish",
                                   position: (247, 23),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                              Raw {
                               content: "/share/fish/tools/create_manpage_completions.py",
                               position: (247, 28),
                              },
                             ],
                            },
                            String {
                             parts: [
                              Expression {
                               expression: PropertyAccess {
                                expression: Variable {
                                 identifier: "pkgs",
                                 position: (248, 18),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "fish",
                                   position: (248, 23),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              },
                              Raw {
                               content: "/share/fish/tools/deroff.py",
                               position: (248, 28),
                              },
                             ],
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "unpackCmd",
                             position: (250, 13),
                            },
                           ],
                          },
                          String {
                           parts: [
                            Raw {
                             content: "cp $curSrc $(basename $curSrc)",
                             position: (250, 26),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "sourceRoot",
                             position: (251, 13),
                            },
                           ],
                          },
                          String {
                           parts: [
                            Raw {
                             content: ".",
                             position: (251, 27),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "patches",
                             position: (252, 13),
                            },
                           ],
                          },
                          List {
                           elements: [
                            Path {
                             parts: [
                              Raw {
                               content: "./fish_completion-generator.patch",
                               position: (252, 25),
                              },
                             ],
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "dontBuild",
                             position: (253, 13),
                            },
                           ],
                          },
                          Variable {
                           identifier: "true",
                           position: (253, 25),
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "installPhase",
                             position: (254, 13),
                            },
                           ],
                          },
                          String {
                           parts: [
                            Raw {
                             content: "mkdir -p $out\ncp * $out/\n",
                             position: (255, 1),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "preferLocalBuild",
                             position: (258, 13),
                            },
                           ],
                          },
                          Variable {
                           identifier: "true",
                           position: (258, 32),
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "allowSubstitutes",
                             position: (259, 13),
                            },
                           ],
                          },
                          Variable {
                           identifier: "false",
                           position: (259, 32),
                          },
                         ),
                        ],
                        recursive: false,
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "generateCompletions",
                        position: (261, 11),
                       },
                      ],
                     },
                     Function {
                      argument: Some(
                       "package",
                      ),
                      arguments: FunctionArguments {
                       arguments: [],
                       ellipsis: false,
                      },
                      definition: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (261, 42),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "runCommand",
                           position: (261, 47),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        String {
                         parts: [
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "package",
                             position: (262, 16),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "name",
                               position: (262, 24),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                          Raw {
                           content: "_fish-completions",
                           position: (262, 29),
                          },
                         ],
                        },
                        BinaryOperation {
                         operator: Update,
                         operands: [
                          Map {
                           bindings: [
                            Inherit(
                             None,
                             [
                              Raw {
                               content: "package",
                               position: (265, 25),
                              },
                             ],
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "preferLocalBuild",
                                position: (266, 17),
                               },
                              ],
                             },
                             Variable {
                              identifier: "true",
                              position: (266, 36),
                             },
                            ),
                            KeyValue(
                             AttributePath {
                              attributes: [
                               Raw {
                                content: "allowSubstitutes",
                                position: (267, 17),
                               },
                              ],
                             },
                             Variable {
                              identifier: "false",
                              position: (267, 36),
                             },
                            ),
                           ],
                           recursive: false,
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "optionalAttrs",
                            position: (269, 18),
                           },
                           arguments: [
                            HasProperty {
                             expression: Variable {
                              identifier: "package",
                              position: (269, 33),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "meta",
                                position: (269, 43),
                               },
                               Raw {
                                content: "priority",
                                position: (269, 48),
                               },
                              ],
                             },
                            },
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "meta",
                                  position: (269, 60),
                                 },
                                 Raw {
                                  content: "priority",
                                  position: (269, 65),
                                 },
                                ],
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "package",
                                 position: (269, 76),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "meta",
                                   position: (269, 84),
                                  },
                                  Raw {
                                   content: "priority",
                                   position: (269, 89),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ),
                             ],
                             recursive: false,
                            },
                           ],
                          },
                         ],
                         position: (269, 15),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "mkdir -p $out\nif [ -d $package/share/man ]; then\n  find $package/share/man -type f | xargs ",
                           position: (272, 1),
                          },
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "pkgs",
                             position: (274, 59),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "python3",
                               position: (274, 64),
                              },
                              Raw {
                               content: "interpreter",
                               position: (274, 72),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                          Raw {
                           content: " ",
                           position: (274, 84),
                          },
                          Expression {
                           expression: Variable {
                            identifier: "patchedGenerator",
                            position: (274, 87),
                           },
                          },
                          Raw {
                           content: "/create_manpage_completions.py --directory $out >/dev/null\nfi\n",
                           position: (274, 104),
                          },
                         ],
                        },
                       ],
                      },
                      position: (261, 33),
                     },
                    ),
                   ],
                   target: FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (278, 11),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "buildEnv",
                        position: (278, 16),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Map {
                      bindings: [
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "name",
                           position: (279, 13),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "system_fish-completions",
                           position: (279, 21),
                          },
                         ],
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "ignoreCollisions",
                           position: (280, 13),
                          },
                         ],
                        },
                        Variable {
                         identifier: "true",
                         position: (280, 32),
                        },
                       ),
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "paths",
                           position: (281, 13),
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "map",
                          position: (281, 21),
                         },
                         arguments: [
                          Variable {
                           identifier: "generateCompletions",
                           position: (281, 25),
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "config",
                            position: (281, 45),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "environment",
                              position: (281, 52),
                             },
                             Raw {
                              content: "systemPackages",
                              position: (281, 64),
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       ),
                      ],
                      recursive: false,
                     },
                    ],
                   },
                   position: (243, 9),
                  },
                 ),
                ],
                recursive: false,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "pathsToLink",
                     position: (287, 9),
                    },
                   ],
                  },
                  BinaryOperation {
                   operator: Concatenation,
                   operands: [
                    List {
                     elements: [],
                    },
                    BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optional",
                        position: (288, 12),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (288, 21),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "vendor",
                            position: (288, 25),
                           },
                           Raw {
                            content: "config",
                            position: (288, 32),
                           },
                           Raw {
                            content: "enable",
                            position: (288, 39),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "/share/fish/vendor_conf.d",
                           position: (288, 47),
                          },
                         ],
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Concatenation,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (289, 12),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (289, 21),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "vendor",
                              position: (289, 25),
                             },
                             Raw {
                              content: "completions",
                              position: (289, 32),
                             },
                             Raw {
                              content: "enable",
                              position: (289, 44),
                             },
                            ],
                           },
                           default: None,
                          },
                          String {
                           parts: [
                            Raw {
                             content: "/share/fish/vendor_completions.d",
                             position: (289, 52),
                            },
                           ],
                          },
                         ],
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "optional",
                          position: (290, 12),
                         },
                         arguments: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (290, 21),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "vendor",
                              position: (290, 25),
                             },
                             Raw {
                              content: "functions",
                              position: (290, 32),
                             },
                             Raw {
                              content: "enable",
                              position: (290, 42),
                             },
                            ],
                           },
                           default: None,
                          },
                          String {
                           parts: [
                            Raw {
                             content: "/share/fish/vendor_functions.d",
                             position: (290, 50),
                            },
                           ],
                          },
                         ],
                        },
                       ],
                       position: (290, 9),
                      },
                     ],
                     position: (289, 9),
                    },
                   ],
                   position: (288, 9),
                  },
                 ),
                ],
                recursive: false,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "systemPackages",
                     position: (293, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (293, 28),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "fish",
                        position: (293, 33),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "shells",
                     position: (296, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "/run/current-system/sw/bin/fish",
                       position: (297, 12),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "pkgs",
                         position: (298, 14),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "fish",
                           position: (298, 19),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "/bin/fish",
                       position: (298, 24),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "programs",
              position: (303, 5),
             },
             Raw {
              content: "fish",
              position: (303, 14),
             },
             Raw {
              content: "interactiveShellInit",
              position: (303, 19),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "# add completions generated by NixOS to $fish_complete_path\nbegin\n  # joins with null byte to acommodate all characters in paths, then respectively gets all paths before (exclusive) / after (inclusive) the first one including \"generated_completions\",\n  # splits by null byte, and then removes all empty lines produced by using 'string'\n  set -l prev (string join0 $fish_complete_path | string match --regex \"^.*?(?=\\x00[^\\x00]*generated_completions.*)\" | string split0 | string match -er \".\")\n  set -l post (string join0 $fish_complete_path | string match --regex \"[^\\x00]*generated_completions.*\" | string split0 | string match -er \".\")\n  set fish_complete_path $prev \"/etc/fish/generated_completions\" $post\nend\n# prevent fish from generating completions on first run\nif not test -d $__fish_user_data_dir/generated_completions\n  ",
              position: (304, 1),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (314, 11),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "coreutils",
                  position: (314, 16),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "/bin/mkdir $__fish_user_data_dir/generated_completions\nend\n",
              position: (314, 26),
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}