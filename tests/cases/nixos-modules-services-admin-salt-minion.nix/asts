---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 10),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (7, 17),
        },
        Raw {
         content: "salt",
         position: (7, 26),
        },
        Raw {
         content: "minion",
         position: (7, 31),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "fullConfig",
        position: (9, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (9, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "recursiveUpdate",
          position: (9, 20),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "default_include",
             position: (14, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "/var/lib/salt/minion.d/*.conf",
            },
           ],
           position: (14, 23),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "pki_dir",
             position: (16, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "/var/lib/salt/pki/minion",
            },
           ],
           position: (16, 15),
          },
         ),
        ],
        recursive: false,
        position: (9, 36),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (17, 5),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "configuration",
           position: (17, 9),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (22, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (23, 5),
           },
           Raw {
            content: "salt",
            position: (23, 14),
           },
           Raw {
            content: "minion",
            position: (23, 19),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (24, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (24, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Salt minion service",
                },
               ],
               position: (24, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "configuration",
               position: (25, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (25, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (26, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (26, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "attrs",
                     position: (26, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (27, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (27, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (28, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Salt minion configuration as Nix attribute set.\nSee <link xlink:href=\"https://docs.saltstack.com/en/latest/ref/configuration/minion.html\"/>\nfor details.\n",
                   },
                  ],
                  position: (28, 23),
                 },
                ),
               ],
               recursive: false,
               position: (25, 32),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (23, 28),
         },
        ),
       ],
       recursive: false,
       position: (22, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (37, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (37, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (37, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (37, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (38, 5),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "etc",
                 position: (43, 7),
                },
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "salt/minion",
                   },
                  ],
                  position: (43, 11),
                 },
                },
                Raw {
                 content: "source",
                 position: (43, 25),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (43, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "writeText",
                   position: (43, 39),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "minion",
                  },
                 ],
                 position: (43, 49),
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "builtins",
                   position: (44, 9),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "toJSON",
                     position: (44, 18),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Variable {
                   identifier: "fullConfig",
                   position: (44, 25),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "systemPackages",
                 position: (46, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "pkgs",
                position: (46, 29),
               },
               target: List {
                elements: [
                 Variable {
                  identifier: "salt",
                  position: (46, 37),
                 },
                ],
                position: (46, 35),
               },
               position: (46, 24),
              },
             ),
            ],
            recursive: false,
            position: (38, 19),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (48, 5),
             },
             Raw {
              content: "services",
              position: (48, 13),
             },
             Raw {
              content: "salt-minion",
              position: (48, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (49, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Salt Minion",
                },
               ],
               position: (49, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (50, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (50, 20),
                },
               ],
               position: (50, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (51, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                  },
                 ],
                 position: (51, 17),
                },
               ],
               position: (51, 15),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (52, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "pkgs",
                position: (52, 19),
               },
               target: List {
                elements: [
                 Variable {
                  identifier: "util-linux",
                  position: (53, 9),
                 },
                ],
                position: (52, 25),
               },
               position: (52, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (55, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (56, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (56, 24),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "salt",
                        position: (56, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/salt-minion",
                   },
                  ],
                  position: (56, 21),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "LimitNOFILE",
                    position: (57, 9),
                   },
                  ],
                 },
                 Int {
                  value: 8192,
                  position: (57, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "Type",
                    position: (58, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "notify",
                   },
                  ],
                  position: (58, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "NotifyAccess",
                    position: (59, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "all",
                   },
                  ],
                  position: (59, 24),
                 },
                ),
               ],
               recursive: false,
               position: (55, 23),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "restartTriggers",
                 position: (61, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "config",
                  position: (62, 9),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "environment",
                    position: (62, 16),
                   },
                   Raw {
                    content: "etc",
                    position: (62, 28),
                   },
                   Expression {
                    expression: String {
                     parts: [
                      Raw {
                       content: "salt/minion",
                      },
                     ],
                     position: (62, 32),
                    },
                   },
                   Raw {
                    content: "source",
                    position: (62, 46),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (61, 25),
              },
             ),
            ],
            recursive: false,
            position: (48, 36),
           },
          ),
         ],
         recursive: false,
         position: (37, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (21, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}