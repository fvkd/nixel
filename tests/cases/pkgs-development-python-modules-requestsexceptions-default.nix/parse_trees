---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "buildPythonPackage" (1, 8)
          , := lexemes ","
            , "," (1, 26)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchPypi" (1, 28)
            , := lexemes ","
              , "," (1, 37)
            formals := rules "formal"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "pbr" (1, 39)
      } := lexemes "}"
        } "}" (1, 43)
      : := lexemes ":"
        : ":" (1, 44)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildPythonPackage" (3, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 20)
                  { := lexemes "{"
                    { "{" (3, 24)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules 
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "pname" (4, 3)
                              = := lexemes "="
                                = "=" (4, 9)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (4, 11)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "requestsexceptions" (4, 12)
                                            " := lexemes "\""
                                              " "\"" (4, 30)
                              ; := lexemes ";"
                                ; ";" (4, 31)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "version" (5, 3)
                            = := lexemes "="
                              = "=" (5, 11)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "\"" "string_parts" "\""
                                          " := lexemes "\""
                                            " "\"" (5, 13)
                                          string_parts := rules "STR"
                                            STR := lexemes "STR"
                                              STR "1.4.0" (5, 14)
                                          " := lexemes "\""
                                            " "\"" (5, 19)
                            ; := lexemes ";"
                              ; ";" (5, 20)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "src" (7, 3)
                          = := lexemes "="
                            = "=" (7, 7)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_app" "expr_select"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "fetchPypi" (7, 9)
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "{" "binds" "}"
                                        { := lexemes "{"
                                          { "{" (7, 19)
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "INHERIT" "attrs" ";"
                                            binds := rules 
                                            INHERIT := lexemes "INHERIT"
                                              INHERIT "inherit" (8, 5)
                                            attrs := rules "attrs" "attr"
                                              attrs := rules "attrs" "attr"
                                                attrs := rules 
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "pname" (8, 13)
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "version" (8, 19)
                                            ; := lexemes ";"
                                              ; ";" (8, 26)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "sha256" (9, 5)
                                          = := lexemes "="
                                            = "=" (9, 12)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (9, 14)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "b095cbc77618f066d459a02b137b020c37da9f46d9b057704019c9f77dba3065" (9, 15)
                                                        " := lexemes "\""
                                                          " "\"" (9, 79)
                                          ; := lexemes ";"
                                            ; ";" (9, 80)
                                        } := lexemes "}"
                                          } "}" (10, 3)
                          ; := lexemes ";"
                            ; ";" (10, 4)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "propagatedBuildInputs" (12, 3)
                        = := lexemes "="
                          = "=" (12, 25)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "[" "expr_list" "]"
                                      [ := lexemes "["
                                        [ "[" (12, 27)
                                      expr_list := rules "expr_list" "expr_select"
                                        expr_list := rules 
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "pbr" (12, 29)
                                      ] := lexemes "]"
                                        ] "]" (12, 33)
                        ; := lexemes ";"
                          ; ";" (12, 34)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "patchPhase" (15, 3)
                      = := lexemes "="
                        = "=" (15, 14)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (15, 16)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules 
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "    sed -i '/^hacking/d' test-requirements.txt\n  " (16, 1)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (17, 3)
                      ; := lexemes ";"
                        ; ";" (17, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (19, 3)
                    = := lexemes "="
                      = "=" (19, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (19, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (19, 15)
                        ; := lexemes ";"
                          ; ";" (19, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (19, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules 
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "description" (20, 5)
                                              = := lexemes "="
                                                = "=" (20, 17)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (20, 19)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "Import exceptions from potentially bundled packages in requests." (20, 20)
                                                            " := lexemes "\""
                                                              " "\"" (20, 84)
                                              ; := lexemes ";"
                                                ; ";" (20, 85)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (21, 5)
                                            = := lexemes "="
                                              = "=" (21, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (21, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "https://pypi.python.org/pypi/requestsexceptions" (21, 17)
                                                          " := lexemes "\""
                                                            " "\"" (21, 64)
                                            ; := lexemes ";"
                                              ; ";" (21, 65)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "license" (22, 5)
                                          = := lexemes "="
                                            = "=" (22, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "licenses" (22, 15)
                                                      . := lexemes "."
                                                        . "." (22, 23)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "asl20" (22, 24)
                                          ; := lexemes ";"
                                            ; ";" (22, 29)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "maintainers" (23, 5)
                                        = := lexemes "="
                                          = "=" (23, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "WITH" "expr" ";" "expr_function"
                                            WITH := lexemes "WITH"
                                              WITH "with" (23, 19)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "maintainers" (23, 24)
                                            ; := lexemes ";"
                                              ; ";" (23, 35)
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "[" "expr_list" "]"
                                                        [ := lexemes "["
                                                          [ "[" (23, 37)
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "makefu" (23, 39)
                                                        ] := lexemes "]"
                                                          ] "]" (23, 46)
                                        ; := lexemes ";"
                                          ; ";" (23, 47)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "platforms" (24, 5)
                                      = := lexemes "="
                                        = "=" (24, 15)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "platforms" (24, 17)
                                                  . := lexemes "."
                                                    . "." (24, 26)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "all" (24, 27)
                                      ; := lexemes ";"
                                        ; ";" (24, 30)
                                    } := lexemes "}"
                                      } "}" (25, 3)
                    ; := lexemes ";"
                      ; ";" (25, 4)
                  } := lexemes "}"
                    } "}" (26, 1)