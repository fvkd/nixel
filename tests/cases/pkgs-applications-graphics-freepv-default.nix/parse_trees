---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (2, 1)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (2, 3)
          , := lexemes ","
            , "," (3, 1)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchurl" (3, 3)
            , := lexemes ","
              , "," (4, 1)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "libjpeg" (4, 3)
              , := lexemes ","
                , "," (5, 1)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "libGLU" (5, 3)
                , := lexemes ","
                  , "," (6, 1)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "libGL" (6, 3)
                  , := lexemes ","
                    , "," (7, 1)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "freeglut" (7, 3)
                    , := lexemes ","
                      , "," (8, 1)
                    formals := rules "formal" "," "formals"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "zlib" (8, 3)
                      , := lexemes ","
                        , "," (9, 1)
                      formals := rules "formal" "," "formals"
                        formal := rules "ID"
                          ID := lexemes "ID"
                            ID "cmake" (9, 3)
                        , := lexemes ","
                          , "," (10, 1)
                        formals := rules "formal" "," "formals"
                          formal := rules "ID"
                            ID := lexemes "ID"
                              ID "libX11" (10, 3)
                          , := lexemes ","
                            , "," (11, 1)
                          formals := rules "formal" "," "formals"
                            formal := rules "ID"
                              ID := lexemes "ID"
                                ID "libxml2" (11, 3)
                            , := lexemes ","
                              , "," (12, 1)
                            formals := rules "formal" "," "formals"
                              formal := rules "ID"
                                ID := lexemes "ID"
                                  ID "libpng" (12, 3)
                              , := lexemes ","
                                , "," (13, 1)
                              formals := rules "formal"
                                formal := rules "ID"
                                  ID := lexemes "ID"
                                    ID "libXxf86vm" (13, 3)
      } := lexemes "}"
        } "}" (14, 1)
      : := lexemes ":"
        : ":" (14, 2)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (16, 1)
                  . := lexemes "."
                    . "." (16, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (16, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (16, 21)
                  { := lexemes "{"
                    { "{" (16, 25)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules 
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "pname" (17, 3)
                                  = := lexemes "="
                                    = "=" (17, 9)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (17, 11)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "freepv" (17, 12)
                                                " := lexemes "\""
                                                  " "\"" (17, 18)
                                  ; := lexemes ";"
                                    ; ";" (17, 19)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "version" (18, 3)
                                = := lexemes "="
                                  = "=" (18, 11)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (18, 13)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "0.3.0" (18, 14)
                                              " := lexemes "\""
                                                " "\"" (18, 19)
                                ; := lexemes ";"
                                  ; ";" (18, 20)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "src" (20, 3)
                              = := lexemes "="
                                = "=" (20, 7)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "fetchurl" (20, 9)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "{" "binds" "}"
                                            { := lexemes "{"
                                              { "{" (20, 18)
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "url" (21, 5)
                                                = := lexemes "="
                                                  = "=" (21, 9)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (21, 11)
                                                              string_parts := rules "string_parts_interpolated"
                                                                string_parts_interpolated := rules "string_parts_interpolated" "STR"
                                                                  string_parts_interpolated := rules "STR" "DOLLAR_CURLY" "expr" "}"
                                                                    STR := lexemes "STR"
                                                                      STR "mirror://sourceforge/freepv/freepv-" (21, 12)
                                                                    DOLLAR_CURLY := lexemes "DOLLAR_CURLY"
                                                                      DOLLAR_CURLY "${" (21, 47)
                                                                    expr := rules "expr_function"
                                                                      expr_function := rules "expr_if"
                                                                        expr_if := rules "expr_op"
                                                                          expr_op := rules "expr_app"
                                                                            expr_app := rules "expr_select"
                                                                              expr_select := rules "expr_simple"
                                                                                expr_simple := rules "ID"
                                                                                  ID := lexemes "ID"
                                                                                    ID "version" (21, 49)
                                                                    } := lexemes "}"
                                                                      } "}" (21, 56)
                                                                  STR := lexemes "STR"
                                                                    STR ".tar.gz" (21, 57)
                                                              " := lexemes "\""
                                                                " "\"" (21, 64)
                                                ; := lexemes ";"
                                                  ; ";" (21, 65)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "sha256" (22, 5)
                                              = := lexemes "="
                                                = "=" (22, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (22, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "1w19abqjn64w47m35alg7bcdl1p97nf11zn64cp4p0dydihmhv56" (22, 15)
                                                            " := lexemes "\""
                                                              " "\"" (22, 67)
                                              ; := lexemes ";"
                                                ; ";" (22, 68)
                                            } := lexemes "}"
                                              } "}" (23, 3)
                              ; := lexemes ";"
                                ; ";" (23, 4)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "nativeBuildInputs" (25, 3)
                            = := lexemes "="
                              = "=" (25, 21)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (25, 23)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules 
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "cmake" (25, 25)
                                          ] := lexemes "]"
                                            ] "]" (25, 31)
                            ; := lexemes ";"
                              ; ";" (25, 32)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "buildInputs" (26, 3)
                          = := lexemes "="
                            = "=" (26, 15)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (26, 17)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules "expr_list" "expr_select"
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules "expr_list" "expr_select"
                                                          expr_list := rules 
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "libjpeg" (26, 19)
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "libGLU" (26, 27)
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "libGL" (26, 34)
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "freeglut" (26, 40)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "zlib" (26, 49)
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "libX11" (26, 54)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "libxml2" (26, 61)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "libpng" (26, 69)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "libXxf86vm" (26, 76)
                                        ] := lexemes "]"
                                          ] "]" (26, 87)
                          ; := lexemes ";"
                            ; ";" (26, 88)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "postPatch" (28, 3)
                        = := lexemes "="
                          = "=" (28, 13)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                      IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                        IND_STRING_OPEN "''\n" (28, 15)
                                      ind_string_parts := rules "ind_string_parts" "IND_STR"
                                        ind_string_parts := rules 
                                        IND_STR := lexemes "IND_STR"
                                          IND_STR "    sed -i -e '/GECKO/d' CMakeLists.txt\n    sed -i -e '/mozilla/d' src/CMakeLists.txt\n    sed -i -e '1i \\\n      #include <cstdio>' src/libfreepv/OpenGLRenderer.cpp\n    sed -i -e '1i \\\n      #include <cstring>' src/libfreepv/Image.cpp\n    substituteInPlace src/libfreepv/Action.h \\\n      --replace NULL nullptr\n    substituteInPlace src/libfreepv/pngReader.cpp \\\n      --replace png_set_gray_1_2_4_to_8 png_set_expand_gray_1_2_4_to_8\n  " (29, 1)
                                      IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                        IND_STRING_CLOSE "''" (39, 3)
                        ; := lexemes ";"
                          ; ";" (39, 5)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "NIX_CFLAGS_COMPILE" (41, 3)
                      = := lexemes "="
                        = "=" (41, 22)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "\"" "string_parts" "\""
                                    " := lexemes "\""
                                      " "\"" (41, 24)
                                    string_parts := rules "STR"
                                      STR := lexemes "STR"
                                        STR "-fpermissive -Wno-narrowing" (41, 25)
                                    " := lexemes "\""
                                      " "\"" (41, 52)
                      ; := lexemes ";"
                        ; ";" (41, 53)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (43, 3)
                    = := lexemes "="
                      = "=" (43, 8)
                    expr := rules "expr_function"
                      expr_function := rules "expr_if"
                        expr_if := rules "expr_op"
                          expr_op := rules "expr_app"
                            expr_app := rules "expr_select"
                              expr_select := rules "expr_simple"
                                expr_simple := rules "{" "binds" "}"
                                  { := lexemes "{"
                                    { "{" (43, 10)
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules 
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "description" (44, 5)
                                        = := lexemes "="
                                          = "=" (44, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "\"" "string_parts" "\""
                                                      " := lexemes "\""
                                                        " "\"" (44, 19)
                                                      string_parts := rules "STR"
                                                        STR := lexemes "STR"
                                                          STR "Open source panorama viewer using GL" (44, 20)
                                                      " := lexemes "\""
                                                        " "\"" (44, 56)
                                        ; := lexemes ";"
                                          ; ";" (44, 57)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "homepage" (45, 5)
                                      = := lexemes "="
                                        = "=" (45, 14)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (45, 16)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "http://freepv.sourceforge.net/" (45, 17)
                                                    " := lexemes "\""
                                                      " "\"" (45, 47)
                                      ; := lexemes ";"
                                        ; ";" (45, 48)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "license" (46, 5)
                                    = := lexemes "="
                                      = "=" (46, 13)
                                    expr := rules "expr_function"
                                      expr_function := rules "expr_if"
                                        expr_if := rules "expr_op"
                                          expr_op := rules "expr_app"
                                            expr_app := rules "expr_select"
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "[" "expr_list" "]"
                                                  [ := lexemes "["
                                                    [ "[" (46, 15)
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules 
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "lib" (46, 17)
                                                      . := lexemes "."
                                                        . "." (46, 20)
                                                      attrpath := rules "attrpath" "." "attr"
                                                        attrpath := rules "attr"
                                                          attr := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "licenses" (46, 21)
                                                        . := lexemes "."
                                                          . "." (46, 29)
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "lgpl21" (46, 30)
                                                  ] := lexemes "]"
                                                    ] "]" (46, 37)
                                    ; := lexemes ";"
                                      ; ";" (46, 38)
                                  } := lexemes "}"
                                    } "}" (47, 3)
                    ; := lexemes ";"
                      ; ";" (47, 4)
                  } := lexemes "}"
                    } "}" (48, 1)