---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "longview",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "runDir",
        position: (8, 3),
       },
      ],
     },
     String {
      parts: [
       Raw {
        content: "/run/longview",
        position: (8, 13),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "configsDir",
        position: (9, 3),
       },
      ],
     },
     String {
      parts: [
       Expression {
        expression: Variable {
         identifier: "runDir",
         position: (9, 19),
        },
       },
       Raw {
        content: "/longview.d",
        position: (9, 26),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (12, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (14, 5),
           },
           Raw {
            content: "longview",
            position: (14, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (16, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (16, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (17, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (17, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (17, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (18, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (18, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (19, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "If enabled, system metrics will be sent to Linode LongView.\n",
                    position: (20, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "apiKey",
               position: (24, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (24, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (25, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (25, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (25, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (26, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (27, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "01234567-89AB-CDEF-0123456789ABCDEF",
                    position: (27, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (28, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Longview API key. To get this, look in Longview settings which\nare found at https://manager.linode.com/longview/.\n\nWarning: this secret is stored in the world-readable Nix store!\nUse <option>apiKeyFile</option> instead.\n",
                    position: (29, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "apiKeyFile",
               position: (37, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (37, 20),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (38, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (38, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (38, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (38, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (38, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (39, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (39, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (40, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/keys/longview-api-key",
                    position: (40, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (41, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A file containing the Longview API key.\nTo get this, look in Longview settings which\nare found at https://manager.linode.com/longview/.\n\n<option>apiKeyFile</option> takes precedence over <option>apiKey</option>.\n",
                    position: (42, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "apacheStatusUrl",
               position: (50, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (51, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (51, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (51, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (52, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (53, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "http://127.0.0.1/server-status",
                    position: (53, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (54, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The Apache status page URL. If provided, Longview will\ngather statistics from this location. This requires Apache\nmod_status to be loaded and enabled.\n",
                    position: (55, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "nginxStatusUrl",
               position: (61, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (61, 24),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (62, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (62, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (62, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (63, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (64, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "http://127.0.0.1/nginx_status",
                    position: (64, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (65, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The Nginx status page URL. Longview will gather statistics\nfrom this URL. This requires the Nginx stub_status module to\nbe enabled and configured at the given location.\n",
                    position: (66, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "mysqlUser",
               position: (72, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (72, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (73, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (73, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (73, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (74, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (75, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The user for connecting to the MySQL database. If provided,\nLongview will connect to MySQL and collect statistics about\nqueries, etc. This user does not need to have been granted\nany extra privileges.\n",
                    position: (76, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "mysqlPassword",
               position: (83, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (83, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (84, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (84, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (84, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (85, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (86, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The password corresponding to <option>mysqlUser</option>.\nWarning: this is stored in cleartext in the Nix store!\nUse <option>mysqlPasswordFile</option> instead.\n",
                    position: (87, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "mysqlPasswordFile",
               position: (93, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (93, 27),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (94, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (94, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "nullOr",
                      position: (94, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (94, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (94, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "null",
                  position: (95, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (96, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/keys/dbpassword",
                    position: (96, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (97, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A file containing the password corresponding to <option>mysqlUser</option>.\n",
                    position: (98, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (106, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (106, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (106, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (106, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (107, 5),
             },
             Raw {
              content: "services",
              position: (107, 13),
             },
             Raw {
              content: "longview",
              position: (107, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (108, 9),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Longview Metrics Collection",
                 position: (108, 24),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (109, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (109, 20),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (110, 9),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (110, 23),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (111, 9),
                },
                Raw {
                 content: "Type",
                 position: (111, 23),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "forking",
                 position: (111, 31),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (112, 9),
                },
                Raw {
                 content: "ExecStop",
                 position: (112, 23),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "-",
                 position: (112, 35),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (112, 38),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "coreutils",
                     position: (112, 43),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/kill -TERM $MAINPID",
                 position: (112, 53),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (113, 9),
                },
                Raw {
                 content: "ExecReload",
                 position: (113, 23),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "-",
                 position: (113, 37),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (113, 40),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "coreutils",
                     position: (113, 45),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/kill -HUP $MAINPID",
                 position: (113, 55),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (114, 9),
                },
                Raw {
                 content: "PIDFile",
                 position: (114, 23),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "runDir",
                  position: (114, 36),
                 },
                },
                Raw {
                 content: "/longview.pid",
                 position: (114, 43),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (115, 9),
                },
                Raw {
                 content: "ExecStart",
                 position: (115, 23),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (115, 38),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "longview",
                     position: (115, 43),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/longview",
                 position: (115, 52),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "preStart",
                 position: (116, 9),
                },
               ],
              },
              BinaryOperation {
               operator: Addition,
               operands: [
                BinaryOperation {
                 operator: Addition,
                 operands: [
                  BinaryOperation {
                   operator: Addition,
                   operands: [
                    BinaryOperation {
                     operator: Addition,
                     operands: [
                      String {
                       parts: [
                        Raw {
                         content: "umask 077\nmkdir -p ",
                         position: (117, 1),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "configsDir",
                          position: (118, 22),
                         },
                        },
                        Raw {
                         content: "\n",
                         position: (118, 33),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionalString",
                        position: (119, 15),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (119, 31),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "apiKeyFile",
                              position: (119, 35),
                             },
                            ],
                           },
                           default: None,
                          },
                          Variable {
                           identifier: "null",
                           position: (119, 49),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "cp --no-preserve=all \"",
                           position: (120, 1),
                          },
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (120, 35),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "apiKeyFile",
                               position: (120, 39),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                          Raw {
                           content: "\" ",
                           position: (120, 50),
                          },
                          Expression {
                           expression: Variable {
                            identifier: "runDir",
                            position: (120, 54),
                           },
                          },
                          Raw {
                           content: "/longview.key\n",
                           position: (120, 61),
                          },
                         ],
                        },
                       ],
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "optionalString",
                      position: (121, 16),
                     },
                     arguments: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (121, 32),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "apacheStatusUrl",
                            position: (121, 36),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "cat > ",
                         position: (122, 1),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "configsDir",
                          position: (122, 19),
                         },
                        },
                        Raw {
                         content: "/Apache.conf <<EOF\nlocation ",
                         position: (122, 30),
                        },
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (123, 22),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "apacheStatusUrl",
                             position: (123, 26),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "?auto\nEOF\n",
                         position: (123, 42),
                        },
                       ],
                      },
                     ],
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (125, 16),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (125, 32),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "mysqlUser",
                            position: (125, 36),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (125, 55),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "mysqlPasswordFile",
                            position: (125, 59),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (125, 80),
                        },
                       ],
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "cat > ",
                       position: (126, 1),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "configsDir",
                        position: (126, 19),
                       },
                      },
                      Raw {
                       content: "/MySQL.conf <<EOF\nusername ",
                       position: (126, 30),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (127, 22),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mysqlUser",
                           position: (127, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "\npassword `head -n1 \"",
                       position: (127, 36),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (128, 33),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mysqlPasswordFile",
                           position: (128, 37),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Raw {
                       content: "\"`\nEOF\n",
                       position: (128, 55),
                      },
                     ],
                    },
                   ],
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "optionalString",
                  position: (130, 16),
                 },
                 arguments: [
                  BinaryOperation {
                   operator: NotEqualTo,
                   operands: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (130, 32),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "nginxStatusUrl",
                        position: (130, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    String {
                     parts: [],
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "cat > ",
                     position: (131, 1),
                    },
                    Expression {
                     expression: Variable {
                      identifier: "configsDir",
                      position: (131, 19),
                     },
                    },
                    Raw {
                     content: "/Nginx.conf <<EOF\nlocation ",
                     position: (131, 30),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (132, 22),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "nginxStatusUrl",
                         position: (132, 26),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "\nEOF\n",
                     position: (132, 41),
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "warnings",
              position: (137, 5),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "warn",
                 position: (137, 20),
                },
               ],
              },
              Function {
               argument: Some(
                "k",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (137, 30),
                },
                arguments: [
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (137, 40),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Expression {
                       expression: Variable {
                        identifier: "k",
                        position: (137, 46),
                       },
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [],
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "config.services.longview.",
                    position: (138, 19),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "k",
                     position: (138, 46),
                    },
                   },
                   Raw {
                    content: " is insecure. Use ",
                    position: (138, 48),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "k",
                     position: (138, 68),
                    },
                   },
                   Raw {
                    content: "File instead.",
                    position: (138, 70),
                   },
                  ],
                 },
                ],
               },
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "concatMap",
              position: (139, 19),
             },
             arguments: [
              Variable {
               identifier: "warn",
               position: (139, 29),
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "apiKey",
                   position: (139, 37),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "mysqlPassword",
                   position: (139, 46),
                  },
                 ],
                },
               ],
              },
             ],
            },
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "assertions",
              position: (141, 5),
             },
            ],
           },
           List {
            elements: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "assertion",
                   position: (142, 9),
                  },
                 ],
                },
                BinaryOperation {
                 operator: NotEqualTo,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (142, 21),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "apiKeyFile",
                      position: (142, 25),
                     },
                    ],
                   },
                   default: None,
                  },
                  Variable {
                   identifier: "null",
                   position: (142, 39),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "message",
                   position: (143, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Longview needs an API key configured",
                   position: (143, 20),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (148, 5),
             },
             Raw {
              content: "longview",
              position: (148, 14),
             },
             Raw {
              content: "apiKeyFile",
              position: (148, 23),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (148, 36),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (148, 42),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "apiKey",
                   position: (148, 46),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [],
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkDefault",
               position: (149, 8),
              },
              arguments: [
               FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (149, 19),
                },
                arguments: [
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (149, 29),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "writeTextFile",
                      position: (149, 34),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "name",
                         position: (150, 9),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "longview.key",
                         position: (150, 17),
                        },
                       ],
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "text",
                         position: (151, 9),
                        },
                       ],
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (151, 16),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "apiKey",
                          position: (151, 20),
                         },
                        ],
                       },
                       default: None,
                      },
                     ),
                    ],
                    recursive: false,
                   },
                  ],
                 },
                ],
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "services",
              position: (155, 5),
             },
             Raw {
              content: "longview",
              position: (155, 14),
             },
             Raw {
              content: "mysqlPasswordFile",
              position: (155, 23),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkDefault",
             position: (155, 43),
            },
            arguments: [
             FunctionApplication {
              function: Variable {
               identifier: "toString",
               position: (155, 54),
              },
              arguments: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (155, 64),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "writeTextFile",
                    position: (155, 69),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "name",
                       position: (156, 7),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "mysql-password-file",
                       position: (156, 15),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "text",
                       position: (157, 7),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (157, 14),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "mysqlPassword",
                        position: (157, 18),
                       },
                      ],
                     },
                     default: None,
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
              ],
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}