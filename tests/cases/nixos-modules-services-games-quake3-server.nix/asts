---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (2, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (5, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (5, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (5, 16),
        },
        Raw {
         content: "quake3-server",
         position: (5, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "configFile",
        position: (6, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (6, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (6, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "q3ds-extra.cfg",
          position: (6, 32),
         },
        ],
        position: (6, 31),
       },
       String {
        parts: [
         Raw {
          content: "set net_port ",
          position: (7, 1),
         },
         Expression {
          expression: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "builtins",
             position: (7, 20),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "toString",
               position: (7, 29),
              },
             ],
            },
            default: None,
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (7, 38),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "port",
                position: (7, 42),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n\n",
          position: (7, 47),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (9, 7),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "extraConfig",
              position: (9, 11),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n",
          position: (9, 23),
         },
        ],
        position: (6, 48),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultBaseq3",
        position: (11, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (11, 19),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "requireFile",
          position: (11, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (12, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "baseq3",
             position: (12, 13),
            },
           ],
           position: (12, 12),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "hashMode",
             position: (13, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "recursive",
             position: (13, 17),
            },
           ],
           position: (13, 16),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "sha256",
             position: (14, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "5dd8ee09eabd45e80450f31d7a8b69b846f59738726929298d8a813ce5725ed3",
             position: (14, 15),
            },
           ],
           position: (14, 14),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "message",
             position: (15, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "Unfortunately, we cannot download ",
             position: (16, 1),
            },
            Expression {
             expression: Variable {
              identifier: "name",
              position: (16, 43),
             },
            },
            Raw {
             content: " automatically.\nPlease purchase a legitimate copy of Quake 3 and change into the installation directory.\n\nYou can either add all relevant files to the nix-store like this:\nmkdir /tmp/baseq3\ncp baseq3/pak*.pk3 /tmp/baseq3\nnix-store --add-fixed sha256 --recursive /tmp/baseq3\n\nAlternatively you can set services.quake3-server.baseq3 to a path and copy the baseq3 directory into\n$services.quake3-server.baseq3/.q3a/\n",
             position: (16, 48),
            },
           ],
           position: (15, 15),
          },
         },
        ],
        recursive: true,
        position: (11, 36),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "home",
        position: (28, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (28, 10),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "runCommand",
          position: (28, 15),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "quake3-home",
          position: (28, 27),
         },
        ],
        position: (28, 26),
       },
       Map {
        bindings: [],
        recursive: false,
        position: (28, 40),
       },
       String {
        parts: [
         Raw {
          content: "mkdir -p $out/.q3a/baseq3\n\nfor file in ",
          position: (29, 1),
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (31, 21),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "baseq3",
              position: (31, 25),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/*; do\n  ln -s $file $out/.q3a/baseq3/$(basename $file)\ndone\n\nln -s ",
          position: (31, 32),
         },
         Expression {
          expression: Variable {
           identifier: "configFile",
           position: (35, 15),
          },
         },
         Raw {
          content: " $out/.q3a/baseq3/nix.cfg\n",
          position: (35, 26),
         },
        ],
        position: (28, 43),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (38, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (39, 5),
           },
           Raw {
            content: "quake3-server",
            position: (39, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (40, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (40, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Quake 3 dedicated server",
                 position: (40, 32),
                },
               ],
               position: (40, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "port",
               position: (42, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (42, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (43, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (43, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "port",
                     position: (43, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (44, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 27960,
                  position: (44, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (45, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "UDP Port the server should listen on.\n",
                    position: (46, 1),
                   },
                  ],
                  position: (45, 23),
                 },
                },
               ],
               recursive: false,
               position: (42, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "openFirewall",
               position: (50, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (51, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (51, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (52, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (52, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Open the firewall.\n",
                    position: (54, 1),
                   },
                  ],
                  position: (53, 23),
                 },
                },
               ],
               recursive: false,
               position: (50, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraConfig",
               position: (58, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (58, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (59, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (59, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (60, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "seta rconPassword \"superSecret\"      // sets RCON password for remote console\nseta sv_hostname \"My Quake 3 server\"      // name that appears in server list\n",
                    position: (62, 1),
                   },
                  ],
                  position: (61, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra configuration options. Note that options changed via RCON will not be persisted. To list all possible\noptions, use \"cvarlist 1\" via RCON.\n",
                    position: (66, 1),
                   },
                  ],
                  position: (65, 23),
                 },
                },
               ],
               recursive: false,
               position: (58, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "baseq3",
               position: (71, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (71, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (72, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "either",
                      position: (72, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (72, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "package",
                       position: (72, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (72, 43),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (72, 49),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (73, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "defaultBaseq3",
                  position: (73, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalDocBook",
                   position: (74, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "Manually downloaded Quake 3 installation directory.",
                      position: (74, 39),
                     },
                    ],
                    position: (74, 38),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/var/lib/q3ds",
                    position: (75, 20),
                   },
                  ],
                  position: (75, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (76, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Path to the baseq3 files (pak*.pk3). If this is on the nix store (type = package) all .pk3 files should be saved\nin the top-level directory. If this is on another filesystem (e.g /var/lib/baseq3) the .pk3 files are searched in\n$baseq3/.q3a/baseq3/\n",
                    position: (77, 1),
                   },
                  ],
                  position: (76, 23),
                 },
                },
               ],
               recursive: false,
               position: (71, 25),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (39, 30),
         },
        },
       ],
       recursive: false,
       position: (38, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (85, 3),
        },
       ],
      },
      to: LetIn {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "baseq3InStore",
            position: (86, 5),
           },
          ],
         },
         to: BinaryOperation {
          operator: EqualTo,
          operands: [
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (86, 21),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "typeOf",
                position: (86, 30),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (86, 37),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "baseq3",
                 position: (86, 41),
                },
               ],
              },
              default: None,
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "set",
              position: (86, 52),
             },
            ],
            position: (86, 51),
           },
          ],
          position: (86, 48),
         },
        },
       ],
       target: FunctionApplication {
        function: Variable {
         identifier: "mkIf",
         position: (87, 6),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (87, 11),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "enable",
             position: (87, 15),
            },
           ],
          },
          default: None,
         },
         Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "networking",
               position: (88, 5),
              },
              Raw {
               content: "firewall",
               position: (88, 16),
              },
              Raw {
               content: "allowedUDPPorts",
               position: (88, 25),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (88, 43),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (88, 48),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "openFirewall",
                  position: (88, 52),
                 },
                ],
               },
               default: None,
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (88, 67),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "port",
                    position: (88, 71),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (88, 65),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "systemd",
               position: (90, 5),
              },
              Raw {
               content: "services",
               position: (90, 13),
              },
              Raw {
               content: "q3ds",
               position: (90, 22),
              },
             ],
            },
            to: Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "description",
                  position: (91, 7),
                 },
                ],
               },
               to: String {
                parts: [
                 Raw {
                  content: "Quake 3 dedicated server",
                  position: (91, 22),
                 },
                ],
                position: (91, 21),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "wantedBy",
                  position: (92, 7),
                 },
                ],
               },
               to: List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "multi-user.target",
                    position: (92, 21),
                   },
                  ],
                  position: (92, 20),
                 },
                ],
                position: (92, 18),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "after",
                  position: (93, 7),
                 },
                ],
               },
               to: List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "networking.target",
                    position: (93, 18),
                   },
                  ],
                  position: (93, 17),
                 },
                ],
                position: (93, 15),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "environment",
                  position: (95, 7),
                 },
                 Raw {
                  content: "HOME",
                  position: (95, 19),
                 },
                ],
               },
               to: IfThenElse {
                predicate: Variable {
                 identifier: "baseq3InStore",
                 position: (95, 29),
                },
                then: Variable {
                 identifier: "home",
                 position: (95, 48),
                },
                else_: PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (95, 58),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "baseq3",
                    position: (95, 62),
                   },
                  ],
                 },
                 default: None,
                },
                position: (95, 26),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "serviceConfig",
                  position: (97, 7),
                 },
                ],
               },
               to: With {
                expression: Variable {
                 identifier: "lib",
                 position: (97, 28),
                },
                target: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "Restart",
                      position: (98, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "always",
                      position: (98, 20),
                     },
                    ],
                    position: (98, 19),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "DynamicUser",
                      position: (99, 9),
                     },
                    ],
                   },
                   to: Variable {
                    identifier: "true",
                    position: (99, 23),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "WorkingDirectory",
                      position: (100, 9),
                     },
                    ],
                   },
                   to: Variable {
                    identifier: "home",
                    position: (100, 28),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "ReadOnlyPaths",
                      position: (103, 9),
                     },
                    ],
                   },
                   to: IfThenElse {
                    predicate: Variable {
                     identifier: "baseq3InStore",
                     position: (103, 28),
                    },
                    then: Variable {
                     identifier: "home",
                     position: (103, 47),
                    },
                    else_: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (103, 57),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "baseq3",
                        position: (103, 61),
                       },
                      ],
                     },
                     default: None,
                    },
                    position: (103, 25),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "ExecStartPre",
                      position: (104, 9),
                     },
                    ],
                   },
                   to: FunctionApplication {
                    function: Variable {
                     identifier: "optionalString",
                     position: (104, 24),
                    },
                    arguments: [
                     UnaryOperation {
                      operator: Not,
                      operand: Variable {
                       identifier: "baseq3InStore",
                       position: (104, 41),
                      },
                      position: (104, 40),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "+",
                        position: (104, 57),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (104, 60),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "coreutils",
                            position: (104, 65),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/cp ",
                        position: (104, 75),
                       },
                       Expression {
                        expression: Variable {
                         identifier: "configFile",
                         position: (104, 85),
                        },
                       },
                       Raw {
                        content: " ",
                        position: (104, 96),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (104, 99),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "baseq3",
                            position: (104, 103),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/.q3a/baseq3/nix.cfg",
                        position: (104, 110),
                       },
                      ],
                      position: (104, 56),
                     },
                    ],
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "ExecStart",
                      position: (106, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (106, 24),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "ioquake3",
                          position: (106, 29),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/ioq3ded.x86_64 +exec nix.cfg",
                      position: (106, 38),
                     },
                    ],
                    position: (106, 21),
                   },
                  },
                 ],
                 recursive: false,
                 position: (97, 33),
                },
                position: (97, 23),
               },
              },
             ],
             recursive: false,
             position: (90, 29),
            },
           },
          ],
          recursive: false,
          position: (87, 22),
         },
        ],
       },
       position: (85, 12),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (111, 3),
        },
        Raw {
         content: "maintainers",
         position: (111, 8),
        },
       ],
      },
      to: With {
       expression: Variable {
        identifier: "maintainers",
        position: (111, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "f4814n",
          position: (111, 42),
         },
        ],
        position: (111, 40),
       },
       position: (111, 22),
      },
     },
    ],
    recursive: false,
    position: (37, 4),
   },
   position: (4, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}