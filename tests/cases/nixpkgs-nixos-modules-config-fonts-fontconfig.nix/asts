---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (14, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (17, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (17, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "fonts",
         position: (17, 16),
        },
        Raw {
         content: "fontconfig",
         position: (17, 22),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fcBool",
        position: (19, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "x",
      },
      definition: BinaryOperation {
       operator: Addition,
       operands: [
        BinaryOperation {
         operator: Addition,
         operands: [
          String {
           parts: [
            Raw {
             content: "<bool>",
             position: (19, 16),
            },
           ],
           position: (19, 15),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "boolToString",
             position: (19, 27),
            },
            arguments: [
             Variable {
              identifier: "x",
              position: (19, 40),
             },
            ],
           },
           position: (19, 26),
          },
         ],
         position: (19, 24),
        },
        String {
         parts: [
          Raw {
           content: "</bool>",
           position: (19, 46),
          },
         ],
         position: (19, 45),
        },
       ],
       position: (19, 43),
      },
      position: (19, 12),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "pkg",
        position: (20, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (20, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "fontconfig",
         position: (20, 14),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cacheConf",
        position: (24, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "makeCacheConf",
       position: (24, 16),
      },
      arguments: [
       Map {
        bindings: [],
        recursive: false,
        position: (24, 30),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "makeCacheConf",
        position: (30, 3),
       },
      ],
     },
     to: Function {
      argument: Destructured {
       identifier: None,
       arguments: [],
       ellipsis: false,
      },
      definition: LetIn {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "makeCache",
            position: (32, 7),
           },
          ],
         },
         to: Function {
          argument: Simple {
           identifier: "fontconfig",
          },
          definition: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (32, 31),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "makeFontsCache",
               position: (32, 36),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [
              Inherit {
               from: None,
               attributes: [
                Raw {
                 content: "fontconfig",
                 position: (32, 61),
                },
               ],
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "fontDirectories",
                  position: (32, 73),
                 },
                ],
               },
               to: PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (32, 91),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "fonts",
                   position: (32, 98),
                  },
                  Raw {
                   content: "fonts",
                   position: (32, 104),
                  },
                 ],
                },
                default: None,
               },
              },
             ],
             recursive: false,
             position: (32, 51),
            },
           ],
          },
          position: (32, 19),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "cache",
            position: (33, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "makeCache",
           position: (33, 19),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (33, 29),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "fontconfig",
               position: (33, 34),
              },
             ],
            },
            default: None,
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "cache32",
            position: (34, 7),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "makeCache",
           position: (34, 19),
          },
          arguments: [
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (34, 29),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "pkgsi686Linux",
               position: (34, 34),
              },
              Raw {
               content: "fontconfig",
               position: (34, 48),
              },
             ],
            },
            default: None,
           },
          ],
         },
        },
       ],
       target: FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "pkgs",
          position: (36, 5),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "writeText",
            position: (36, 10),
           },
          ],
         },
         default: None,
        },
        arguments: [
         String {
          parts: [
           Raw {
            content: "fc-00-nixos-cache.conf",
            position: (36, 21),
           },
          ],
          position: (36, 20),
         },
         String {
          parts: [
           Raw {
            content: "<?xml version='1.0'?>\n<!DOCTYPE fontconfig SYSTEM 'urn:fontconfig:fonts.dtd'>\n<fontconfig>\n  <!-- Font directories -->\n  ",
            position: (37, 1),
           },
           Interpolation {
            expression: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (41, 11),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "\n",
                 position: (41, 29),
                },
               ],
               position: (41, 28),
              },
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "map",
                 position: (41, 34),
                },
                arguments: [
                 Parentheses {
                  expression: Function {
                   argument: Simple {
                    identifier: "font",
                   },
                   definition: String {
                    parts: [
                     Raw {
                      content: "<dir>",
                      position: (41, 46),
                     },
                     Interpolation {
                      expression: Variable {
                       identifier: "font",
                       position: (41, 53),
                      },
                     },
                     Raw {
                      content: "</dir>",
                      position: (41, 58),
                     },
                    ],
                    position: (41, 45),
                   },
                   position: (41, 39),
                  },
                  position: (41, 38),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (41, 67),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "fonts",
                     position: (41, 74),
                    },
                    Raw {
                     content: "fonts",
                     position: (41, 80),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               position: (41, 33),
              },
             ],
            },
           },
           Raw {
            content: "\n  ",
            position: (41, 87),
           },
           Interpolation {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optionalString",
              position: (42, 11),
             },
             arguments: [
              Parentheses {
               expression: BinaryOperation {
                operator: EqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (42, 27),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "stdenv",
                     position: (42, 32),
                    },
                    Raw {
                     content: "hostPlatform",
                     position: (42, 39),
                    },
                   ],
                  },
                  default: None,
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (42, 55),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "stdenv",
                     position: (42, 60),
                    },
                    Raw {
                     content: "buildPlatform",
                     position: (42, 67),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
                position: (42, 52),
               },
               position: (42, 26),
              },
              String {
               parts: [
                Raw {
                 content: "<!-- Pre-generated font caches -->\n<cachedir>",
                 position: (43, 1),
                },
                Interpolation {
                 expression: Variable {
                  identifier: "cache",
                  position: (44, 21),
                 },
                },
                Raw {
                 content: "</cachedir>\n",
                 position: (44, 27),
                },
                Interpolation {
                 expression: FunctionApplication {
                  function: Variable {
                   identifier: "optionalString",
                   position: (45, 11),
                  },
                  arguments: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "pkgs",
                        position: (45, 27),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "stdenv",
                          position: (45, 32),
                         },
                         Raw {
                          content: "isx86_64",
                          position: (45, 39),
                         },
                        ],
                       },
                       default: None,
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (45, 51),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "cache32Bit",
                          position: (45, 55),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (45, 48),
                    },
                    position: (45, 26),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "<cachedir>",
                      position: (46, 1),
                     },
                     Interpolation {
                      expression: Variable {
                       identifier: "cache32",
                       position: (46, 23),
                      },
                     },
                     Raw {
                      content: "</cachedir>\n",
                      position: (46, 31),
                     },
                    ],
                    position: (45, 67),
                   },
                  ],
                 },
                },
                Raw {
                 content: "\n",
                 position: (47, 12),
                },
               ],
               position: (42, 82),
              },
             ],
            },
           },
           Raw {
            content: "\n</fontconfig>\n",
            position: (48, 12),
           },
          ],
          position: (36, 45),
         },
        ],
       },
       position: (31, 5),
      },
      position: (30, 19),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "renderConf",
        position: (54, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (54, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (54, 21),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "fc-10-nixos-rendering.conf",
          position: (54, 32),
         },
        ],
        position: (54, 31),
       },
       String {
        parts: [
         Raw {
          content: "<?xml version='1.0'?>\n<!DOCTYPE fontconfig SYSTEM 'urn:fontconfig:fonts.dtd'>\n<fontconfig>\n\n  <!-- Default rendering settings -->\n  <match target=\"pattern\">\n    <edit mode=\"append\" name=\"hinting\">\n      ",
          position: (55, 1),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "fcBool",
            position: (62, 13),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (62, 20),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "hinting",
                position: (62, 24),
               },
               Raw {
                content: "enable",
                position: (62, 32),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n    </edit>\n    <edit mode=\"append\" name=\"autohint\">\n      ",
          position: (62, 39),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "fcBool",
            position: (65, 13),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (65, 20),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "hinting",
                position: (65, 24),
               },
               Raw {
                content: "autohint",
                position: (65, 32),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n    </edit>\n    <edit mode=\"append\" name=\"hintstyle\">\n      <const>hintslight</const>\n    </edit>\n    <edit mode=\"append\" name=\"antialias\">\n      ",
          position: (65, 41),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "fcBool",
            position: (71, 13),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (71, 20),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "antialias",
                position: (71, 24),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n    </edit>\n    <edit mode=\"append\" name=\"rgba\">\n      <const>",
          position: (71, 34),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (74, 20),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "subpixel",
              position: (74, 24),
             },
             Raw {
              content: "rgba",
              position: (74, 33),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "</const>\n    </edit>\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcd",
          position: (74, 38),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (77, 23),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "subpixel",
              position: (77, 27),
             },
             Raw {
              content: "lcdfilter",
              position: (77, 36),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "</const>\n    </edit>\n  </match>\n\n</fontconfig>\n",
          position: (77, 46),
         },
        ],
        position: (54, 60),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "localConf",
        position: (85, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (85, 15),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (85, 20),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "fc-local.conf",
          position: (85, 31),
         },
        ],
        position: (85, 30),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (85, 46),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "localConf",
           position: (85, 50),
          },
         ],
        },
        default: None,
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "defaultFontsConf",
        position: (89, 3),
       },
      ],
     },
     to: LetIn {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "genDefault",
           position: (90, 9),
          },
         ],
        },
        to: Function {
         argument: Simple {
          identifier: "fonts",
         },
         definition: Function {
          argument: Simple {
           identifier: "name",
          },
          definition: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (91, 7),
           },
           arguments: [
            Parentheses {
             expression: BinaryOperation {
              operator: NotEqualTo,
              operands: [
               Variable {
                identifier: "fonts",
                position: (91, 23),
               },
               List {
                elements: [],
                position: (91, 32),
               },
              ],
              position: (91, 29),
             },
             position: (91, 22),
            },
            String {
             parts: [
              Raw {
               content: "<alias binding=\"same\">\n  <family>",
               position: (92, 1),
              },
              Interpolation {
               expression: Variable {
                identifier: "name",
                position: (93, 21),
               },
              },
              Raw {
               content: "</family>\n  <prefer>\n  ",
               position: (93, 26),
              },
              Interpolation {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (95, 13),
                },
                arguments: [
                 String {
                  parts: [],
                  position: (95, 30),
                 },
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "map",
                    position: (96, 12),
                   },
                   arguments: [
                    Parentheses {
                     expression: Function {
                      argument: Simple {
                       identifier: "font",
                      },
                      definition: String {
                       parts: [
                        Raw {
                         content: "<family>",
                         position: (97, 1),
                        },
                        Interpolation {
                         expression: Variable {
                          identifier: "font",
                          position: (97, 23),
                         },
                        },
                        Raw {
                         content: "</family>\n",
                         position: (97, 28),
                        },
                       ],
                       position: (96, 23),
                      },
                      position: (96, 17),
                     },
                     position: (96, 16),
                    },
                    Variable {
                     identifier: "fonts",
                     position: (98, 15),
                    },
                   ],
                  },
                  position: (96, 11),
                 },
                ],
               },
              },
              Raw {
               content: "\n  </prefer>\n</alias>\n",
               position: (98, 22),
              },
             ],
             position: (91, 36),
            },
           ],
          },
          position: (90, 29),
         },
         position: (90, 22),
        },
       },
      ],
      target: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (103, 5),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "writeText",
           position: (103, 10),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "fc-52-nixos-default-fonts.conf",
           position: (103, 21),
          },
         ],
         position: (103, 20),
        },
        String {
         parts: [
          Raw {
           content: "<?xml version='1.0'?>\n<!DOCTYPE fontconfig SYSTEM 'urn:fontconfig:fonts.dtd'>\n<fontconfig>\n\n  <!-- Default fonts -->\n  ",
           position: (104, 1),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "genDefault",
             position: (109, 9),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (109, 20),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "defaultFonts",
                 position: (109, 24),
                },
                Raw {
                 content: "sansSerif",
                 position: (109, 37),
                },
               ],
              },
              default: None,
             },
             String {
              parts: [
               Raw {
                content: "sans-serif",
                position: (109, 48),
               },
              ],
              position: (109, 47),
             },
            ],
           },
          },
          Raw {
           content: "\n\n  ",
           position: (109, 60),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "genDefault",
             position: (111, 9),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (111, 20),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "defaultFonts",
                 position: (111, 24),
                },
                Raw {
                 content: "serif",
                 position: (111, 37),
                },
               ],
              },
              default: None,
             },
             String {
              parts: [
               Raw {
                content: "serif",
                position: (111, 48),
               },
              ],
              position: (111, 47),
             },
            ],
           },
          },
          Raw {
           content: "\n\n  ",
           position: (111, 55),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "genDefault",
             position: (113, 9),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (113, 20),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "defaultFonts",
                 position: (113, 24),
                },
                Raw {
                 content: "monospace",
                 position: (113, 37),
                },
               ],
              },
              default: None,
             },
             String {
              parts: [
               Raw {
                content: "monospace",
                position: (113, 48),
               },
              ],
              position: (113, 47),
             },
            ],
           },
          },
          Raw {
           content: "\n\n  ",
           position: (113, 59),
          },
          Interpolation {
           expression: FunctionApplication {
            function: Variable {
             identifier: "genDefault",
             position: (115, 9),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (115, 20),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "defaultFonts",
                 position: (115, 24),
                },
                Raw {
                 content: "emoji",
                 position: (115, 37),
                },
               ],
              },
              default: None,
             },
             String {
              parts: [
               Raw {
                content: "emoji",
                position: (115, 44),
               },
              ],
              position: (115, 43),
             },
            ],
           },
          },
          Raw {
           content: "\n\n</fontconfig>\n",
           position: (115, 51),
          },
         ],
         position: (103, 53),
        },
       ],
      },
      position: (90, 5),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "rejectBitmaps",
        position: (122, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (122, 19),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (122, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "fc-53-no-bitmaps.conf",
          position: (122, 35),
         },
        ],
        position: (122, 34),
       },
       String {
        parts: [
         Raw {
          content: "<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM \"urn:fontconfig:fonts.dtd\">\n<fontconfig>\n\n",
          position: (123, 1),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (127, 7),
           },
           arguments: [
            Parentheses {
             expression: UnaryOperation {
              operator: Not,
              operand: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (127, 24),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "allowBitmaps",
                  position: (127, 28),
                 },
                ],
               },
               default: None,
              },
              position: (127, 23),
             },
             position: (127, 22),
            },
            String {
             parts: [
              Raw {
               content: "<!-- Reject bitmap fonts -->\n<selectfont>\n  <rejectfont>\n    <pattern>\n      <patelt name=\"scalable\"><bool>false</bool></patelt>\n    </pattern>\n  </rejectfont>\n</selectfont>\n",
               position: (128, 1),
              },
             ],
             position: (127, 42),
            },
           ],
          },
         },
         Raw {
          content: "\n\n<!-- Use embedded bitmaps in fonts like Calibri? -->\n<match target=\"font\">\n  <edit name=\"embeddedbitmap\" mode=\"assign\">\n    ",
          position: (136, 8),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "fcBool",
            position: (141, 11),
           },
           arguments: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (141, 18),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "useEmbeddedBitmaps",
                position: (141, 22),
               },
              ],
             },
             default: None,
            },
           ],
          },
         },
         Raw {
          content: "\n  </edit>\n</match>\n\n</fontconfig>\n",
          position: (141, 41),
         },
        ],
        position: (122, 58),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "rejectType1",
        position: (150, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (150, 17),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (150, 22),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "fc-53-nixos-reject-type1.conf",
          position: (150, 33),
         },
        ],
        position: (150, 32),
       },
       String {
        parts: [
         Raw {
          content: "<?xml version=\"1.0\"?>\n<!DOCTYPE fontconfig SYSTEM \"urn:fontconfig:fonts.dtd\">\n<fontconfig>\n\n<!-- Reject Type 1 fonts -->\n<selectfont>\n  <rejectfont>\n    <pattern>\n      <patelt name=\"fontformat\"><string>Type 1</string></patelt>\n    </pattern>\n  </rejectfont>\n</selectfont>\n\n</fontconfig>\n",
          position: (151, 1),
         },
        ],
        position: (150, 64),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "confPkg",
        position: (168, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (168, 13),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "runCommand",
          position: (168, 18),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "fontconfig-conf",
          position: (168, 30),
         },
        ],
        position: (168, 29),
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "preferLocalBuild",
             position: (169, 5),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (169, 24),
          },
         },
        ],
        recursive: false,
        position: (168, 47),
       },
       String {
        parts: [
         Raw {
          content: "dst=$out/etc/fonts/conf.d\nmkdir -p $dst\n\n# fonts.conf\nln -s ",
          position: (171, 1),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkg",
            position: (175, 13),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "out",
              position: (175, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/etc/fonts/fonts.conf \\\n      $dst/../fonts.conf\n# TODO: remove this legacy symlink once people stop using packages built before #95358 was merged\nmkdir -p $out/etc/fonts/2.11\nln -s /etc/fonts/fonts.conf \\\n      $out/etc/fonts/2.11/fonts.conf\n\n# fontconfig default config files\nln -s ",
          position: (175, 21),
         },
         Interpolation {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "pkg",
            position: (183, 13),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "out",
              position: (183, 17),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "/etc/fonts/conf.d/*.conf \\\n      $dst/\n\n# 00-nixos-cache.conf\nln -s ",
          position: (183, 21),
         },
         Interpolation {
          expression: Variable {
           identifier: "cacheConf",
           position: (187, 13),
          },
         },
         Raw {
          content: "  $dst/00-nixos-cache.conf\n\n# 10-nixos-rendering.conf\nln -s ",
          position: (187, 23),
         },
         Interpolation {
          expression: Variable {
           identifier: "renderConf",
           position: (190, 13),
          },
         },
         Raw {
          content: "       $dst/10-nixos-rendering.conf\n\n# 50-user.conf\n",
          position: (190, 24),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (193, 7),
           },
           arguments: [
            Parentheses {
             expression: UnaryOperation {
              operator: Not,
              operand: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (193, 24),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "includeUserConf",
                  position: (193, 28),
                 },
                ],
               },
               default: None,
              },
              position: (193, 23),
             },
             position: (193, 22),
            },
            String {
             parts: [
              Raw {
               content: "rm $dst/50-user.conf\n",
               position: (194, 1),
              },
             ],
             position: (193, 45),
            },
           ],
          },
         },
         Raw {
          content: "\n\n# local.conf (indirect priority 51)\n",
          position: (195, 8),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (198, 7),
           },
           arguments: [
            Parentheses {
             expression: BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (198, 23),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "localConf",
                   position: (198, 27),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [],
                position: (198, 40),
               },
              ],
              position: (198, 37),
             },
             position: (198, 22),
            },
            String {
             parts: [
              Raw {
               content: "ln -s ",
               position: (199, 1),
              },
              Interpolation {
               expression: Variable {
                identifier: "localConf",
                position: (199, 13),
               },
              },
              Raw {
               content: "        $dst/../local.conf\n",
               position: (199, 23),
              },
             ],
             position: (198, 44),
            },
           ],
          },
         },
         Raw {
          content: "\n\n# 52-nixos-default-fonts.conf\nln -s ",
          position: (200, 8),
         },
         Interpolation {
          expression: Variable {
           identifier: "defaultFontsConf",
           position: (203, 13),
          },
         },
         Raw {
          content: " $dst/52-nixos-default-fonts.conf\n\n# 53-no-bitmaps.conf\nln -s ",
          position: (203, 30),
         },
         Interpolation {
          expression: Variable {
           identifier: "rejectBitmaps",
           position: (206, 13),
          },
         },
         Raw {
          content: " $dst/53-no-bitmaps.conf\n\n",
          position: (206, 27),
         },
         Interpolation {
          expression: FunctionApplication {
           function: Variable {
            identifier: "optionalString",
            position: (208, 7),
           },
           arguments: [
            Parentheses {
             expression: UnaryOperation {
              operator: Not,
              operand: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (208, 24),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "allowType1",
                  position: (208, 28),
                 },
                ],
               },
               default: None,
              },
              position: (208, 23),
             },
             position: (208, 22),
            },
            String {
             parts: [
              Raw {
               content: "# 53-nixos-reject-type1.conf\nln -s ",
               position: (209, 1),
              },
              Interpolation {
               expression: Variable {
                identifier: "rejectType1",
                position: (210, 13),
               },
              },
              Raw {
               content: " $dst/53-nixos-reject-type1.conf\n",
               position: (210, 25),
              },
             ],
             position: (208, 40),
            },
           ],
          },
         },
         Raw {
          content: "\n",
          position: (211, 8),
         },
        ],
        position: (170, 5),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fontconfigEtc",
        position: (216, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (216, 19),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "buildEnv",
          position: (216, 24),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "name",
             position: (217, 5),
            },
           ],
          },
          to: String {
           parts: [
            Raw {
             content: "fontconfig-etc",
             position: (217, 14),
            },
           ],
           position: (217, 13),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "paths",
             position: (218, 5),
            },
           ],
          },
          to: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (218, 13),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "confPackages",
              position: (218, 17),
             },
            ],
           },
           default: None,
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "ignoreCollisions",
             position: (219, 5),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (219, 24),
          },
         },
        ],
        recursive: false,
        position: (216, 33),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (223, 3),
        },
       ],
      },
      to: BinaryOperation {
       operator: Concatenation,
       operands: [
        List {
         elements: [
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRenamedOptionModule",
             position: (224, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (224, 31),
                 },
                ],
                position: (224, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (224, 39),
                 },
                ],
                position: (224, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "ultimate",
                  position: (224, 52),
                 },
                ],
                position: (224, 51),
               },
               String {
                parts: [
                 Raw {
                  content: "allowBitmaps",
                  position: (224, 63),
                 },
                ],
                position: (224, 62),
               },
              ],
              position: (224, 28),
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (224, 82),
                 },
                ],
                position: (224, 81),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (224, 90),
                 },
                ],
                position: (224, 89),
               },
               String {
                parts: [
                 Raw {
                  content: "allowBitmaps",
                  position: (224, 103),
                 },
                ],
                position: (224, 102),
               },
              ],
              position: (224, 79),
             },
            ],
           },
           position: (224, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRenamedOptionModule",
             position: (225, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (225, 31),
                 },
                ],
                position: (225, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (225, 39),
                 },
                ],
                position: (225, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "ultimate",
                  position: (225, 52),
                 },
                ],
                position: (225, 51),
               },
               String {
                parts: [
                 Raw {
                  content: "allowType1",
                  position: (225, 63),
                 },
                ],
                position: (225, 62),
               },
              ],
              position: (225, 28),
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (225, 80),
                 },
                ],
                position: (225, 79),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (225, 88),
                 },
                ],
                position: (225, 87),
               },
               String {
                parts: [
                 Raw {
                  content: "allowType1",
                  position: (225, 101),
                 },
                ],
                position: (225, 100),
               },
              ],
              position: (225, 77),
             },
            ],
           },
           position: (225, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRenamedOptionModule",
             position: (226, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (226, 31),
                 },
                ],
                position: (226, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (226, 39),
                 },
                ],
                position: (226, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "ultimate",
                  position: (226, 52),
                 },
                ],
                position: (226, 51),
               },
               String {
                parts: [
                 Raw {
                  content: "useEmbeddedBitmaps",
                  position: (226, 63),
                 },
                ],
                position: (226, 62),
               },
              ],
              position: (226, 28),
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (226, 88),
                 },
                ],
                position: (226, 87),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (226, 96),
                 },
                ],
                position: (226, 95),
               },
               String {
                parts: [
                 Raw {
                  content: "useEmbeddedBitmaps",
                  position: (226, 109),
                 },
                ],
                position: (226, 108),
               },
              ],
              position: (226, 85),
             },
            ],
           },
           position: (226, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRenamedOptionModule",
             position: (227, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (227, 31),
                 },
                ],
                position: (227, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (227, 39),
                 },
                ],
                position: (227, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "ultimate",
                  position: (227, 52),
                 },
                ],
                position: (227, 51),
               },
               String {
                parts: [
                 Raw {
                  content: "forceAutohint",
                  position: (227, 63),
                 },
                ],
                position: (227, 62),
               },
              ],
              position: (227, 28),
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (227, 83),
                 },
                ],
                position: (227, 82),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (227, 91),
                 },
                ],
                position: (227, 90),
               },
               String {
                parts: [
                 Raw {
                  content: "forceAutohint",
                  position: (227, 104),
                 },
                ],
                position: (227, 103),
               },
              ],
              position: (227, 80),
             },
            ],
           },
           position: (227, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRenamedOptionModule",
             position: (228, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (228, 31),
                 },
                ],
                position: (228, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (228, 39),
                 },
                ],
                position: (228, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "ultimate",
                  position: (228, 52),
                 },
                ],
                position: (228, 51),
               },
               String {
                parts: [
                 Raw {
                  content: "renderMonoTTFAsBitmap",
                  position: (228, 63),
                 },
                ],
                position: (228, 62),
               },
              ],
              position: (228, 28),
             },
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (228, 91),
                 },
                ],
                position: (228, 90),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (228, 99),
                 },
                ],
                position: (228, 98),
               },
               String {
                parts: [
                 Raw {
                  content: "renderMonoTTFAsBitmap",
                  position: (228, 112),
                 },
                ],
                position: (228, 111),
               },
              ],
              position: (228, 88),
             },
            ],
           },
           position: (228, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRemovedOptionModule",
             position: (229, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (229, 31),
                 },
                ],
                position: (229, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (229, 39),
                 },
                ],
                position: (229, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "hinting",
                  position: (229, 52),
                 },
                ],
                position: (229, 51),
               },
               String {
                parts: [
                 Raw {
                  content: "style",
                  position: (229, 62),
                 },
                ],
                position: (229, 61),
               },
              ],
              position: (229, 28),
             },
             String {
              parts: [],
              position: (229, 71),
             },
            ],
           },
           position: (229, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRemovedOptionModule",
             position: (230, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (230, 31),
                 },
                ],
                position: (230, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (230, 39),
                 },
                ],
                position: (230, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "forceAutohint",
                  position: (230, 52),
                 },
                ],
                position: (230, 51),
               },
              ],
              position: (230, 28),
             },
             String {
              parts: [],
              position: (230, 69),
             },
            ],
           },
           position: (230, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRemovedOptionModule",
             position: (231, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (231, 31),
                 },
                ],
                position: (231, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (231, 39),
                 },
                ],
                position: (231, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "renderMonoTTFAsBitmap",
                  position: (231, 52),
                 },
                ],
                position: (231, 51),
               },
              ],
              position: (231, 28),
             },
             String {
              parts: [],
              position: (231, 77),
             },
            ],
           },
           position: (231, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkRemovedOptionModule",
             position: (232, 6),
            },
            arguments: [
             List {
              elements: [
               String {
                parts: [
                 Raw {
                  content: "fonts",
                  position: (232, 31),
                 },
                ],
                position: (232, 30),
               },
               String {
                parts: [
                 Raw {
                  content: "fontconfig",
                  position: (232, 39),
                 },
                ],
                position: (232, 38),
               },
               String {
                parts: [
                 Raw {
                  content: "dpi",
                  position: (232, 52),
                 },
                ],
                position: (232, 51),
               },
              ],
              position: (232, 28),
             },
             String {
              parts: [
               Raw {
                content: "Use display server-specific options",
                position: (232, 60),
               },
              ],
              position: (232, 59),
             },
            ],
           },
           position: (232, 5),
          },
         ],
         position: (223, 13),
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (233, 8),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "forEach",
             position: (233, 12),
            },
           ],
          },
          default: None,
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "enable",
               position: (233, 23),
              },
             ],
             position: (233, 22),
            },
            String {
             parts: [
              Raw {
               content: "substitutions",
               position: (233, 32),
              },
             ],
             position: (233, 31),
            },
            String {
             parts: [
              Raw {
               content: "preset",
               position: (233, 48),
              },
             ],
             position: (233, 47),
            },
           ],
           position: (233, 20),
          },
          Parentheses {
           expression: Function {
            argument: Simple {
             identifier: "opt",
            },
            definition: FunctionApplication {
             function: PropertyAccess {
              expression: Variable {
               identifier: "lib",
               position: (234, 12),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "mkRemovedOptionModule",
                 position: (234, 16),
                },
               ],
              },
              default: None,
             },
             arguments: [
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "fonts",
                   position: (234, 41),
                  },
                 ],
                 position: (234, 40),
                },
                String {
                 parts: [
                  Raw {
                   content: "fontconfig",
                   position: (234, 49),
                  },
                 ],
                 position: (234, 48),
                },
                String {
                 parts: [
                  Raw {
                   content: "ultimate",
                   position: (234, 62),
                  },
                 ],
                 position: (234, 61),
                },
                String {
                 parts: [
                  Interpolation {
                   expression: Variable {
                    identifier: "opt",
                    position: (234, 75),
                   },
                  },
                 ],
                 position: (234, 72),
                },
               ],
               position: (234, 38),
              },
              String {
               parts: [
                Raw {
                 content: "The fonts.fontconfig.ultimate module and configuration is obsolete.\nThe repository has since been archived and activity has ceased.\nhttps://github.com/bohoomil/fontconfig-ultimate/issues/171.\nNo action should be needed for font configuration, as the fonts.fontconfig\nmodule is already used by default.\n",
                 position: (235, 1),
                },
               ],
               position: (234, 83),
              },
             ],
            },
            position: (234, 7),
           },
           position: (234, 6),
          },
         ],
        },
       ],
       position: (233, 5),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (242, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "fonts",
            position: (244, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "fontconfig",
               position: (246, 7),
              },
             ],
            },
            to: Map {
             bindings: [
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "enable",
                  position: (247, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (247, 18),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (248, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (248, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (248, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (249, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "true",
                     position: (249, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (250, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "If enabled, a Fontconfig configuration file will be built\npointing to a set of default fonts.  If you don't care about\nrunning X11 applications or any other program that uses\nFontconfig, you can turn this option off and prevent a\ndependency on all those fonts.\n",
                       position: (251, 1),
                      },
                     ],
                     position: (250, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (247, 27),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "confPackages",
                  position: (259, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (259, 24),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "internal",
                       position: (260, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "true",
                     position: (260, 22),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (261, 11),
                      },
                     ],
                    },
                    to: With {
                     expression: Variable {
                      identifier: "types",
                      position: (261, 27),
                     },
                     target: FunctionApplication {
                      function: Variable {
                       identifier: "listOf",
                       position: (261, 34),
                      },
                      arguments: [
                       Variable {
                        identifier: "path",
                        position: (261, 41),
                       },
                      ],
                     },
                     position: (261, 22),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (262, 11),
                      },
                     ],
                    },
                    to: List {
                     elements: [],
                     position: (262, 22),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (263, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Fontconfig configuration packages.\n",
                       position: (264, 1),
                      },
                     ],
                     position: (263, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (259, 33),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "antialias",
                  position: (268, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (268, 21),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (269, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (269, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (269, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (270, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "true",
                     position: (270, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (271, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Enable font antialiasing. At high resolution (> 200 DPI),\nantialiasing has no visible effect; users of such displays may want\nto disable this option.\n",
                       position: (272, 1),
                      },
                     ],
                     position: (271, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (268, 30),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "localConf",
                  position: (278, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (278, 21),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (279, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (279, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "lines",
                        position: (279, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (280, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [],
                     position: (280, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (281, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "System-wide customization file contents, has higher priority than\n<literal>defaultFonts</literal> settings.\n",
                       position: (282, 1),
                      },
                     ],
                     position: (281, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (278, 30),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "defaultFonts",
                  position: (287, 9),
                 },
                ],
               },
               to: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "monospace",
                     position: (288, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (288, 23),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (289, 13),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (289, 20),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "listOf",
                            position: (289, 26),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "types",
                           position: (289, 33),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "str",
                             position: (289, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (290, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "DejaVu Sans Mono",
                            position: (290, 25),
                           },
                          ],
                          position: (290, 24),
                         },
                        ],
                        position: (290, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (291, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "System-wide default monospace font(s). Multiple fonts may be\nlisted in case multiple languages must be supported.\n",
                          position: (292, 1),
                         },
                        ],
                        position: (291, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (288, 32),
                    },
                   ],
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "sansSerif",
                     position: (297, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (297, 23),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (298, 13),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (298, 20),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "listOf",
                            position: (298, 26),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "types",
                           position: (298, 33),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "str",
                             position: (298, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (299, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "DejaVu Sans",
                            position: (299, 25),
                           },
                          ],
                          position: (299, 24),
                         },
                        ],
                        position: (299, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (300, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "System-wide default sans serif font(s). Multiple fonts may be\nlisted in case multiple languages must be supported.\n",
                          position: (301, 1),
                         },
                        ],
                        position: (300, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (297, 32),
                    },
                   ],
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "serif",
                     position: (306, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (306, 19),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (307, 13),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (307, 20),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "listOf",
                            position: (307, 26),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "types",
                           position: (307, 33),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "str",
                             position: (307, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (308, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "DejaVu Serif",
                            position: (308, 25),
                           },
                          ],
                          position: (308, 24),
                         },
                        ],
                        position: (308, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (309, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "System-wide default serif font(s). Multiple fonts may be listed\nin case multiple languages must be supported.\n",
                          position: (310, 1),
                         },
                        ],
                        position: (309, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (306, 28),
                    },
                   ],
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "emoji",
                     position: (315, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (315, 19),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (316, 13),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (316, 20),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "listOf",
                            position: (316, 26),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "types",
                           position: (316, 33),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "str",
                             position: (316, 39),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (317, 13),
                         },
                        ],
                       },
                       to: List {
                        elements: [
                         String {
                          parts: [
                           Raw {
                            content: "Noto Color Emoji",
                            position: (317, 25),
                           },
                          ],
                          position: (317, 24),
                         },
                        ],
                        position: (317, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (318, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "System-wide default emoji font(s). Multiple fonts may be listed\nin case a font does not support all emoji.\n\nNote that fontconfig matches color emoji fonts preferentially,\nso if you want to use a black and white font while having\na color font installed (eg. Noto Color Emoji installed alongside\nNoto Emoji), fontconfig will still choose the color font even\nwhen it is later in the list.\n",
                          position: (319, 1),
                         },
                        ],
                        position: (318, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (315, 28),
                    },
                   ],
                  },
                 },
                ],
                recursive: false,
                position: (287, 24),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "hinting",
                  position: (331, 9),
                 },
                ],
               },
               to: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "enable",
                     position: (332, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (332, 20),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (333, 13),
                         },
                        ],
                       },
                       to: PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (333, 20),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "bool",
                           position: (333, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (334, 13),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "true",
                        position: (334, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (335, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "Enable font hinting. Hinting aligns glyphs to pixel boundaries to\nimprove rendering sharpness at low resolution. At high resolution\n(> 200 dpi) hinting will do nothing (at best); users of such\ndisplays may want to disable this option.\n",
                          position: (336, 1),
                         },
                        ],
                        position: (335, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (332, 29),
                    },
                   ],
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "autohint",
                     position: (343, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (343, 22),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (344, 13),
                         },
                        ],
                       },
                       to: PropertyAccess {
                        expression: Variable {
                         identifier: "types",
                         position: (344, 20),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "bool",
                           position: (344, 26),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (345, 13),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "false",
                        position: (345, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (346, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "Enable the autohinter in place of the default interpreter.\nThe results are usually lower quality than correctly-hinted\nfonts, but better than unhinted fonts.\n",
                          position: (347, 1),
                         },
                        ],
                        position: (346, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (343, 31),
                    },
                   ],
                  },
                 },
                ],
                recursive: false,
                position: (331, 19),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "includeUserConf",
                  position: (354, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (354, 27),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (355, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (355, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (355, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (356, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "true",
                     position: (356, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (357, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Include the user configuration from\n<filename>~/.config/fontconfig/fonts.conf</filename> or\n<filename>~/.config/fontconfig/conf.d</filename>.\n",
                       position: (358, 1),
                      },
                     ],
                     position: (357, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (354, 36),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "subpixel",
                  position: (364, 9),
                 },
                ],
               },
               to: Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "rgba",
                     position: (366, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (366, 18),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (367, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "rgb",
                          position: (367, 24),
                         },
                        ],
                        position: (367, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (368, 13),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (368, 20),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "enum",
                            position: (368, 26),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         List {
                          elements: [
                           String {
                            parts: [
                             Raw {
                              content: "rgb",
                              position: (368, 33),
                             },
                            ],
                            position: (368, 32),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "bgr",
                              position: (368, 39),
                             },
                            ],
                            position: (368, 38),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "vrgb",
                              position: (368, 45),
                             },
                            ],
                            position: (368, 44),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "vbgr",
                              position: (368, 52),
                             },
                            ],
                            position: (368, 51),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "none",
                              position: (368, 59),
                             },
                            ],
                            position: (368, 58),
                           },
                          ],
                          position: (368, 31),
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (369, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "Subpixel order. The overwhelming majority of displays are\n<literal>rgb</literal> in their normal orientation. Select\n<literal>vrgb</literal> for mounting such a display 90 degrees\nclockwise from its normal orientation or <literal>vbgr</literal>\nfor mounting 90 degrees counter-clockwise. Select\n<literal>bgr</literal> in the unlikely event of mounting 180\ndegrees from the normal orientation. Reverse these directions in\nthe improbable event that the display's native subpixel order is\n<literal>bgr</literal>.\n",
                          position: (370, 1),
                         },
                        ],
                        position: (369, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (366, 27),
                    },
                   ],
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "lcdfilter",
                     position: (382, 11),
                    },
                   ],
                  },
                  to: FunctionApplication {
                   function: Variable {
                    identifier: "mkOption",
                    position: (382, 23),
                   },
                   arguments: [
                    Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "default",
                          position: (383, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "default",
                          position: (383, 24),
                         },
                        ],
                        position: (383, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "type",
                          position: (384, 13),
                         },
                        ],
                       },
                       to: FunctionApplication {
                        function: PropertyAccess {
                         expression: Variable {
                          identifier: "types",
                          position: (384, 20),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "enum",
                            position: (384, 26),
                           },
                          ],
                         },
                         default: None,
                        },
                        arguments: [
                         List {
                          elements: [
                           String {
                            parts: [
                             Raw {
                              content: "none",
                              position: (384, 33),
                             },
                            ],
                            position: (384, 32),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "default",
                              position: (384, 40),
                             },
                            ],
                            position: (384, 39),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "light",
                              position: (384, 50),
                             },
                            ],
                            position: (384, 49),
                           },
                           String {
                            parts: [
                             Raw {
                              content: "legacy",
                              position: (384, 58),
                             },
                            ],
                            position: (384, 57),
                           },
                          ],
                          position: (384, 31),
                         },
                        ],
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "description",
                          position: (385, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "FreeType LCD filter. At high resolution (> 200 DPI), LCD filtering\nhas no visible effect; users of such displays may want to select\n<literal>none</literal>.\n",
                          position: (386, 1),
                         },
                        ],
                        position: (385, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (382, 32),
                    },
                   ],
                  },
                 },
                ],
                recursive: false,
                position: (364, 20),
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "cache32Bit",
                  position: (394, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (394, 22),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (395, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "false",
                     position: (395, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (396, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (396, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (396, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (397, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Generate system fonts cache for 32-bit applications.\n",
                       position: (398, 1),
                      },
                     ],
                     position: (397, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (394, 31),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "allowBitmaps",
                  position: (402, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (402, 24),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (403, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (403, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (403, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (404, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "true",
                     position: (404, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (405, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Allow bitmap fonts. Set to <literal>false</literal> to ban all\nbitmap fonts.\n",
                       position: (406, 1),
                      },
                     ],
                     position: (405, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (402, 33),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "allowType1",
                  position: (411, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (411, 22),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (412, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (412, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (412, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (413, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "false",
                     position: (413, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (414, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Allow Type-1 fonts. Default is <literal>false</literal> because of\npoor rendering.\n",
                       position: (415, 1),
                      },
                     ],
                     position: (414, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (411, 31),
                 },
                ],
               },
              },
              Binding {
               from: AttributePath {
                parts: [
                 Raw {
                  content: "useEmbeddedBitmaps",
                  position: (420, 9),
                 },
                ],
               },
               to: FunctionApplication {
                function: Variable {
                 identifier: "mkOption",
                 position: (420, 30),
                },
                arguments: [
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (421, 11),
                      },
                     ],
                    },
                    to: PropertyAccess {
                     expression: Variable {
                      identifier: "types",
                      position: (421, 18),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "bool",
                        position: (421, 24),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "default",
                       position: (422, 11),
                      },
                     ],
                    },
                    to: Variable {
                     identifier: "false",
                     position: (422, 21),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "description",
                       position: (423, 11),
                      },
                     ],
                    },
                    to: String {
                     parts: [
                      Raw {
                       content: "Use embedded bitmaps in fonts like Calibri.",
                       position: (423, 26),
                      },
                     ],
                     position: (423, 25),
                    },
                   },
                  ],
                  recursive: false,
                  position: (420, 39),
                 },
                ],
               },
              },
             ],
             recursive: false,
             position: (246, 20),
            },
           },
          ],
          recursive: false,
          position: (244, 13),
         },
        },
       ],
       recursive: false,
       position: (242, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (431, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (431, 12),
       },
       arguments: [
        List {
         elements: [
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (432, 6),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (432, 11),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (432, 15),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "environment",
                   position: (433, 7),
                  },
                  Raw {
                   content: "systemPackages",
                   position: (433, 19),
                  },
                 ],
                },
                to: List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (433, 41),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "fontconfig",
                      position: (433, 46),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (433, 39),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "environment",
                   position: (434, 7),
                  },
                  Raw {
                   content: "etc",
                   position: (434, 19),
                  },
                  Raw {
                   content: "fonts",
                   position: (434, 23),
                  },
                  Raw {
                   content: "source",
                   position: (434, 29),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Interpolation {
                   expression: Variable {
                    identifier: "fontconfigEtc",
                    position: (434, 42),
                   },
                  },
                  Raw {
                   content: "/etc/fonts/",
                   position: (434, 56),
                  },
                 ],
                 position: (434, 39),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "security",
                   position: (435, 7),
                  },
                  Raw {
                   content: "apparmor",
                   position: (435, 16),
                  },
                  Raw {
                   content: "includes",
                   position: (435, 25),
                  },
                  Expression {
                   ast: String {
                    parts: [
                     Raw {
                      content: "abstractions/fonts",
                      position: (435, 35),
                     },
                    ],
                    position: (435, 34),
                   },
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "# fonts.conf\nr ",
                   position: (436, 1),
                  },
                  Interpolation {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkg",
                     position: (437, 13),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "out",
                       position: (437, 17),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/etc/fonts/fonts.conf,\n\n# fontconfig default config files\nr ",
                   position: (437, 21),
                  },
                  Interpolation {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "pkg",
                     position: (440, 13),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "out",
                       position: (440, 17),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/etc/fonts/conf.d/*.conf,\n\n# 00-nixos-cache.conf\nr ",
                   position: (440, 21),
                  },
                  Interpolation {
                   expression: Variable {
                    identifier: "cacheConf",
                    position: (443, 13),
                   },
                  },
                  Raw {
                   content: ",\n\n# 10-nixos-rendering.conf\nr ",
                   position: (443, 23),
                  },
                  Interpolation {
                   expression: Variable {
                    identifier: "renderConf",
                    position: (446, 13),
                   },
                  },
                  Raw {
                   content: ",\n\n# 50-user.conf\n",
                   position: (446, 24),
                  },
                  Interpolation {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "optionalString",
                     position: (449, 11),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (449, 26),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "includeUserConf",
                         position: (449, 30),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [
                       Raw {
                        content: "r ",
                        position: (450, 1),
                       },
                       Interpolation {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkg",
                          position: (450, 13),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "out",
                            position: (450, 17),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/etc/fonts/conf.d.bak/50-user.conf,\n",
                        position: (450, 21),
                       },
                      ],
                      position: (449, 46),
                     },
                    ],
                   },
                  },
                  Raw {
                   content: "\n\n# local.conf (indirect priority 51)\n",
                   position: (451, 12),
                  },
                  Interpolation {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "optionalString",
                     position: (454, 11),
                    },
                    arguments: [
                     Parentheses {
                      expression: BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (454, 27),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "localConf",
                            position: (454, 31),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                         position: (454, 44),
                        },
                       ],
                       position: (454, 41),
                      },
                      position: (454, 26),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "r ",
                        position: (455, 1),
                       },
                       Interpolation {
                        expression: Variable {
                         identifier: "localConf",
                         position: (455, 13),
                        },
                       },
                       Raw {
                        content: ",\n",
                        position: (455, 23),
                       },
                      ],
                      position: (454, 48),
                     },
                    ],
                   },
                  },
                  Raw {
                   content: "\n\n# 52-nixos-default-fonts.conf\nr ",
                   position: (456, 12),
                  },
                  Interpolation {
                   expression: Variable {
                    identifier: "defaultFontsConf",
                    position: (459, 13),
                   },
                  },
                  Raw {
                   content: ",\n\n# 53-no-bitmaps.conf\nr ",
                   position: (459, 30),
                  },
                  Interpolation {
                   expression: Variable {
                    identifier: "rejectBitmaps",
                    position: (462, 13),
                   },
                  },
                  Raw {
                   content: ",\n\n",
                   position: (462, 27),
                  },
                  Interpolation {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "optionalString",
                     position: (464, 11),
                    },
                    arguments: [
                     Parentheses {
                      expression: UnaryOperation {
                       operator: Not,
                       operand: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (464, 28),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "allowType1",
                           position: (464, 32),
                          },
                         ],
                        },
                        default: None,
                       },
                       position: (464, 27),
                      },
                      position: (464, 26),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "# 53-nixos-reject-type1.conf\nr ",
                        position: (465, 1),
                       },
                       Interpolation {
                        expression: Variable {
                         identifier: "rejectType1",
                         position: (466, 13),
                        },
                       },
                       Raw {
                        content: ",\n",
                        position: (466, 25),
                       },
                      ],
                      position: (464, 44),
                     },
                    ],
                   },
                  },
                  Raw {
                   content: "\n",
                   position: (467, 12),
                  },
                 ],
                 position: (435, 57),
                },
               },
              ],
              recursive: false,
              position: (432, 22),
             },
            ],
           },
           position: (432, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (470, 6),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (470, 11),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (470, 15),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "fonts",
                   position: (471, 7),
                  },
                  Raw {
                   content: "fontconfig",
                   position: (471, 13),
                  },
                  Raw {
                   content: "confPackages",
                   position: (471, 24),
                  },
                 ],
                },
                to: List {
                 elements: [
                  Variable {
                   identifier: "confPkg",
                   position: (471, 41),
                  },
                 ],
                 position: (471, 39),
                },
               },
              ],
              recursive: false,
              position: (470, 22),
             },
            ],
           },
           position: (470, 5),
          },
         ],
         position: (431, 20),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (222, 1),
   },
   position: (16, 1),
  },
  position: (14, 1),
 },
 position: (12, 1),
}