---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "prometheus",
         position: (6, 25),
        },
        Raw {
         content: "alertmanager",
         position: (6, 36),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "mkConfigFile",
        position: (7, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (7, 18),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "writeText",
          position: (7, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "alertmanager.yml",
          position: (7, 34),
         },
        ],
        position: (7, 33),
       },
       Parentheses {
        expression: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "builtins",
           position: (7, 53),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "toJSON",
             position: (7, 62),
            },
           ],
          },
          default: None,
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (7, 69),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "configuration",
              position: (7, 73),
             },
            ],
           },
           default: None,
          },
         ],
        },
        position: (7, 52),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "checkedConfig",
        position: (9, 3),
       },
      ],
     },
     to: Function {
      argument: Simple {
       identifier: "file",
      },
      definition: FunctionApplication {
       function: PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (9, 25),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "runCommand",
           position: (9, 30),
          },
         ],
        },
        default: None,
       },
       arguments: [
        String {
         parts: [
          Raw {
           content: "checked-config",
           position: (9, 42),
          },
         ],
         position: (9, 41),
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "buildInputs",
              position: (9, 60),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (9, 76),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "package",
                 position: (9, 80),
                },
               ],
              },
              default: None,
             },
            ],
            position: (9, 74),
           },
          },
         ],
         recursive: false,
         position: (9, 58),
        },
        String {
         parts: [
          Raw {
           content: "ln -s ",
           position: (10, 1),
          },
          Expression {
           expression: Variable {
            identifier: "file",
            position: (10, 13),
           },
          },
          Raw {
           content: " $out\namtool check-config $out\n",
           position: (10, 18),
          },
         ],
         position: (9, 93),
        },
       ],
      },
      position: (9, 19),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "alertmanagerYml",
        position: (14, 3),
       },
      ],
     },
     to: LetIn {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "yml",
           position: (15, 5),
          },
         ],
        },
        to: IfThenElse {
         predicate: BinaryOperation {
          operator: NotEqualTo,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (15, 14),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "configText",
               position: (15, 18),
              },
             ],
            },
            default: None,
           },
           Variable {
            identifier: "null",
            position: (15, 32),
           },
          ],
          position: (15, 29),
         },
         then: FunctionApplication {
          function: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (16, 9),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "writeText",
              position: (16, 14),
             },
            ],
           },
           default: None,
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "alertmanager.yml",
              position: (16, 25),
             },
            ],
            position: (16, 24),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (16, 43),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "configText",
               position: (16, 47),
              },
             ],
            },
            default: None,
           },
          ],
         },
         else_: Variable {
          identifier: "mkConfigFile",
          position: (17, 14),
         },
         position: (15, 11),
        },
       },
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "checkedConfig",
        position: (18, 8),
       },
       arguments: [
        Variable {
         identifier: "yml",
         position: (18, 22),
        },
       ],
      },
      position: (14, 21),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cmdlineArgs",
        position: (20, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: Concatenation,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (20, 17),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "extraFlags",
           position: (20, 21),
          },
         ],
        },
        default: None,
       },
       BinaryOperation {
        operator: Concatenation,
        operands: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "--config.file /tmp/alert-manager-substituted.yaml",
              position: (21, 6),
             },
            ],
            position: (21, 5),
           },
           String {
            parts: [
             Raw {
              content: "--web.listen-address ",
              position: (22, 6),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (22, 29),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "listenAddress",
                  position: (22, 33),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: ":",
              position: (22, 47),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "toString",
                position: (22, 50),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (22, 59),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "port",
                    position: (22, 63),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
            ],
            position: (22, 5),
           },
           String {
            parts: [
             Raw {
              content: "--log.level ",
              position: (23, 6),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (23, 20),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "logLevel",
                  position: (23, 24),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (23, 5),
           },
           String {
            parts: [
             Raw {
              content: "--storage.path /var/lib/alertmanager",
              position: (24, 6),
             },
            ],
            position: (24, 5),
           },
           Parentheses {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (25, 6),
             },
             arguments: [
              Parentheses {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "map",
                 position: (25, 16),
                },
                arguments: [
                 Parentheses {
                  expression: Function {
                   argument: Simple {
                    identifier: "peer",
                   },
                   definition: String {
                    parts: [
                     Raw {
                      content: "--cluster.peer ",
                      position: (25, 28),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "peer",
                       position: (25, 45),
                      },
                     },
                     Raw {
                      content: ":9094",
                      position: (25, 50),
                     },
                    ],
                    position: (25, 27),
                   },
                   position: (25, 21),
                  },
                  position: (25, 20),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (25, 58),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "clusterPeers",
                     position: (25, 62),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
               position: (25, 15),
              },
             ],
            },
            position: (25, 5),
           },
          ],
          position: (20, 35),
         },
         BinaryOperation {
          operator: Concatenation,
          operands: [
           Parentheses {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optional",
              position: (26, 11),
             },
             arguments: [
              Parentheses {
               expression: BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (26, 21),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "webExternalUrl",
                     position: (26, 25),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (26, 43),
                 },
                ],
                position: (26, 40),
               },
               position: (26, 20),
              },
              String {
               parts: [
                Raw {
                 content: "--web.external-url ",
                 position: (27, 8),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (27, 29),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "webExternalUrl",
                     position: (27, 33),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               position: (27, 7),
              },
             ],
            },
            position: (26, 10),
           },
           Parentheses {
            expression: FunctionApplication {
             function: Variable {
              identifier: "optional",
              position: (28, 11),
             },
             arguments: [
              Parentheses {
               expression: BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (28, 21),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "logFormat",
                     position: (28, 25),
                    },
                   ],
                  },
                  default: None,
                 },
                 Variable {
                  identifier: "null",
                  position: (28, 38),
                 },
                ],
                position: (28, 35),
               },
               position: (28, 20),
              },
              String {
               parts: [
                Raw {
                 content: "--log.format ",
                 position: (29, 8),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (29, 23),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "logFormat",
                     position: (29, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               position: (29, 7),
              },
             ],
            },
            position: (28, 10),
           },
          ],
          position: (28, 7),
         },
        ],
        position: (26, 7),
       },
      ],
      position: (20, 32),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (32, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (33, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (33, 31),
               },
              ],
              position: (33, 30),
             },
             String {
              parts: [
               Raw {
                content: "prometheus",
                position: (33, 42),
               },
              ],
              position: (33, 41),
             },
             String {
              parts: [
               Raw {
                content: "alertmanager",
                position: (33, 55),
               },
              ],
              position: (33, 54),
             },
             String {
              parts: [
               Raw {
                content: "user",
                position: (33, 70),
               },
              ],
              position: (33, 69),
             },
            ],
            position: (33, 28),
           },
           String {
            parts: [
             Raw {
              content: "The alertmanager service is now using systemd's DynamicUser mechanism which obviates a user setting.",
              position: (33, 79),
             },
            ],
            position: (33, 78),
           },
          ],
         },
         position: (33, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (34, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (34, 31),
               },
              ],
              position: (34, 30),
             },
             String {
              parts: [
               Raw {
                content: "prometheus",
                position: (34, 42),
               },
              ],
              position: (34, 41),
             },
             String {
              parts: [
               Raw {
                content: "alertmanager",
                position: (34, 55),
               },
              ],
              position: (34, 54),
             },
             String {
              parts: [
               Raw {
                content: "group",
                position: (34, 70),
               },
              ],
              position: (34, 69),
             },
            ],
            position: (34, 28),
           },
           String {
            parts: [
             Raw {
              content: "The alertmanager service is now using systemd's DynamicUser mechanism which obviates a group setting.",
              position: (34, 80),
             },
            ],
            position: (34, 79),
           },
          ],
         },
         position: (34, 5),
        },
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRemovedOptionModule",
           position: (35, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "services",
                position: (35, 31),
               },
              ],
              position: (35, 30),
             },
             String {
              parts: [
               Raw {
                content: "prometheus",
                position: (35, 42),
               },
              ],
              position: (35, 41),
             },
             String {
              parts: [
               Raw {
                content: "alertmanagerURL",
                position: (35, 55),
               },
              ],
              position: (35, 54),
             },
            ],
            position: (35, 28),
           },
           String {
            parts: [
             Raw {
              content: "Due to incompatibility, the alertmanagerURL option has been removed,\nplease use 'services.prometheus2.alertmanagers' instead.\n",
              position: (36, 1),
             },
            ],
            position: (35, 74),
           },
          ],
         },
         position: (35, 5),
        },
       ],
       position: (32, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (41, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (42, 5),
           },
           Raw {
            content: "prometheus",
            position: (42, 14),
           },
           Raw {
            content: "alertmanager",
            position: (42, 25),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (43, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkEnableOption",
              position: (43, 16),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: "Prometheus Alertmanager",
                 position: (43, 32),
                },
               ],
               position: (43, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "package",
               position: (45, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (45, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (46, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (46, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "package",
                     position: (46, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (47, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (47, 19),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "prometheus-alertmanager",
                     position: (47, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "defaultText",
                    position: (48, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (48, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.alertmanager",
                      position: (48, 42),
                     },
                    ],
                    position: (48, 41),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Package that should be used for alertmanager.\n",
                    position: (50, 1),
                   },
                  ],
                  position: (49, 23),
                 },
                },
               ],
               recursive: false,
               position: (45, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "configuration",
               position: (54, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (54, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (55, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (55, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (55, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "attrs",
                       position: (55, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (56, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (56, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Alertmanager configuration as nix attribute set.\n",
                    position: (58, 1),
                   },
                  ],
                  position: (57, 23),
                 },
                },
               ],
               recursive: false,
               position: (54, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "configText",
               position: (62, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (62, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (63, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (63, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (63, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "lines",
                       position: (63, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (64, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (64, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (65, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Alertmanager configuration as YAML text. If non-null, this option\ndefines the text that is written to alertmanager.yml. If null, the\ncontents of alertmanager.yml is generated from the structured config\noptions.\n",
                    position: (66, 1),
                   },
                  ],
                  position: (65, 23),
                 },
                },
               ],
               recursive: false,
               position: (62, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "logFormat",
               position: (73, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (73, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (74, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (74, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (74, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (74, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (74, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (75, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (76, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "If set use a syslog logger or JSON logging.\n",
                    position: (77, 1),
                   },
                  ],
                  position: (76, 23),
                 },
                },
               ],
               recursive: false,
               position: (73, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "logLevel",
               position: (81, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (81, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (82, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (82, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "enum",
                      position: (82, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "debug",
                        position: (82, 29),
                       },
                      ],
                      position: (82, 28),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "info",
                        position: (82, 37),
                       },
                      ],
                      position: (82, 36),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "warn",
                        position: (82, 44),
                       },
                      ],
                      position: (82, 43),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "error",
                        position: (82, 51),
                       },
                      ],
                      position: (82, 50),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "fatal",
                        position: (82, 59),
                       },
                      ],
                      position: (82, 58),
                     },
                    ],
                    position: (82, 27),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (83, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "warn",
                    position: (83, 20),
                   },
                  ],
                  position: (83, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (84, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Only log messages with the given severity or above.\n",
                    position: (85, 1),
                   },
                  ],
                  position: (84, 23),
                 },
                },
               ],
               recursive: false,
               position: (81, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "webExternalUrl",
               position: (89, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (89, 24),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (90, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (90, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (90, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (90, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (90, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (91, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (91, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (92, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "The URL under which Alertmanager is externally reachable (for example, if Alertmanager is served via a reverse proxy).\nUsed for generating relative and absolute links back to Alertmanager itself.\nIf the URL has a path portion, it will be used to prefix all HTTP endoints served by Alertmanager.\nIf omitted, relevant URL components will be derived automatically.\n",
                    position: (93, 1),
                   },
                  ],
                  position: (92, 23),
                 },
                },
               ],
               recursive: false,
               position: (89, 33),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "listenAddress",
               position: (100, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (100, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (101, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (101, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (101, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (102, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (102, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (103, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Address to listen on for the web interface and API. Empty string will listen on all interfaces.\n\"localhost\" will listen on 127.0.0.1 (but not ::1).\n",
                    position: (104, 1),
                   },
                  ],
                  position: (103, 23),
                 },
                },
               ],
               recursive: false,
               position: (100, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "port",
               position: (109, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (109, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (110, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (110, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (110, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (111, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 9093,
                  position: (111, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (112, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Port to listen on for the web interface and API.\n",
                    position: (113, 1),
                   },
                  ],
                  position: (112, 23),
                 },
                },
               ],
               recursive: false,
               position: (109, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "openFirewall",
               position: (117, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (117, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (118, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (118, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (118, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (119, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (119, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (120, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Open port in firewall for incoming connections.\n",
                    position: (121, 1),
                   },
                  ],
                  position: (120, 23),
                 },
                },
               ],
               recursive: false,
               position: (117, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "clusterPeers",
               position: (125, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (125, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (126, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (126, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (126, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (126, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (126, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (127, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (127, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (128, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Initial peers for HA cluster.\n",
                    position: (129, 1),
                   },
                  ],
                  position: (128, 23),
                 },
                },
               ],
               recursive: false,
               position: (125, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraFlags",
               position: (133, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (133, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (134, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (134, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (134, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (134, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (134, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (135, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (135, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (136, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra commandline options when launching the Alertmanager.\n",
                    position: (137, 1),
                   },
                  ],
                  position: (136, 23),
                 },
                },
               ],
               recursive: false,
               position: (133, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "environmentFile",
               position: (141, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (141, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (142, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (142, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "nullOr",
                      position: (142, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (142, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (142, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (143, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "null",
                  position: (143, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (144, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/root/alertmanager.env",
                    position: (144, 20),
                   },
                  ],
                  position: (144, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (145, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "File to load as environment file. Environment variables\nfrom this file will be interpolated into the config file\nusing envsubst with this syntax:\n<literal>$ENVIRONMENT ",
                    position: (146, 1),
                   },
                   Raw {
                    content: "$",
                    position: (149, 33),
                   },
                   Raw {
                    content: "{VARIABLE}</literal>\n",
                    position: (149, 36),
                   },
                  ],
                  position: (145, 23),
                 },
                },
               ],
               recursive: false,
               position: (141, 34),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (42, 40),
         },
        },
       ],
       recursive: false,
       position: (41, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (155, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (155, 12),
       },
       arguments: [
        List {
         elements: [
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (156, 6),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (156, 11),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (156, 15),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertions",
                   position: (157, 7),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "singleton",
                  position: (157, 20),
                 },
                 arguments: [
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "assertion",
                        position: (158, 9),
                       },
                      ],
                     },
                     to: BinaryOperation {
                      operator: LogicalOr,
                      operands: [
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (158, 21),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "configuration",
                             position: (158, 25),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "null",
                          position: (158, 42),
                         },
                        ],
                        position: (158, 39),
                       },
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (158, 50),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "configText",
                             position: (158, 54),
                            },
                           ],
                          },
                          default: None,
                         },
                         Variable {
                          identifier: "null",
                          position: (158, 68),
                         },
                        ],
                        position: (158, 65),
                       },
                      ],
                      position: (158, 47),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "message",
                        position: (159, 9),
                       },
                      ],
                     },
                     to: BinaryOperation {
                      operator: Addition,
                      operands: [
                       String {
                        parts: [
                         Raw {
                          content: "Can not enable alertmanager without a configuration. ",
                          position: (159, 20),
                         },
                        ],
                        position: (159, 19),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Set either the `configuration` or `configText` attribute.",
                          position: (160, 13),
                         },
                        ],
                        position: (160, 12),
                       },
                      ],
                      position: (160, 10),
                     },
                    },
                   ],
                   recursive: false,
                   position: (157, 30),
                  },
                 ],
                },
               },
              ],
              recursive: false,
              position: (156, 22),
             },
            ],
           },
           position: (156, 5),
          },
          Parentheses {
           expression: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (163, 6),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (163, 11),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (163, 15),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "networking",
                   position: (164, 7),
                  },
                  Raw {
                   content: "firewall",
                   position: (164, 18),
                  },
                  Raw {
                   content: "allowedTCPPorts",
                   position: (164, 27),
                  },
                 ],
                },
                to: FunctionApplication {
                 function: Variable {
                  identifier: "optional",
                  position: (164, 45),
                 },
                 arguments: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (164, 54),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "openFirewall",
                      position: (164, 58),
                     },
                    ],
                   },
                   default: None,
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (164, 71),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "port",
                      position: (164, 75),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "systemd",
                   position: (166, 7),
                  },
                  Raw {
                   content: "services",
                   position: (166, 15),
                  },
                  Raw {
                   content: "alertmanager",
                   position: (166, 24),
                  },
                 ],
                },
                to: Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "wantedBy",
                      position: (167, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "multi-user.target",
                        position: (167, 23),
                       },
                      ],
                      position: (167, 22),
                     },
                    ],
                    position: (167, 20),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "after",
                      position: (168, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "network-online.target",
                        position: (168, 23),
                       },
                      ],
                      position: (168, 22),
                     },
                    ],
                    position: (168, 20),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "preStart",
                      position: (169, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "",
                      position: (170, 1),
                     },
                     Expression {
                      expression: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "lib",
                         position: (170, 14),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "getBin",
                           position: (170, 18),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (170, 25),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "envsubst",
                            position: (170, 30),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                     Raw {
                      content: "/bin/envsubst -o \"/tmp/alert-manager-substituted.yaml\" \\\n                                         -i \"",
                      position: (170, 39),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "alertmanagerYml",
                       position: (171, 59),
                      },
                     },
                     Raw {
                      content: "\"\n",
                      position: (171, 75),
                     },
                    ],
                    position: (169, 20),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "serviceConfig",
                      position: (173, 9),
                     },
                    ],
                   },
                   to: Map {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "Restart",
                         position: (174, 11),
                        },
                       ],
                      },
                      to: String {
                       parts: [
                        Raw {
                         content: "always",
                         position: (174, 23),
                        },
                       ],
                       position: (174, 22),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "StateDirectory",
                         position: (175, 11),
                        },
                       ],
                      },
                      to: String {
                       parts: [
                        Raw {
                         content: "alertmanager",
                         position: (175, 29),
                        },
                       ],
                       position: (175, 28),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "DynamicUser",
                         position: (176, 11),
                        },
                       ],
                      },
                      to: Variable {
                       identifier: "true",
                       position: (176, 25),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "EnvironmentFile",
                         position: (177, 11),
                        },
                       ],
                      },
                      to: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "lib",
                         position: (177, 29),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "mkIf",
                           position: (177, 33),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        Parentheses {
                         expression: BinaryOperation {
                          operator: NotEqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (177, 39),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "environmentFile",
                               position: (177, 43),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (177, 62),
                           },
                          ],
                          position: (177, 59),
                         },
                         position: (177, 38),
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (177, 68),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "environmentFile",
                            position: (177, 72),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "WorkingDirectory",
                         position: (178, 11),
                        },
                       ],
                      },
                      to: String {
                       parts: [
                        Raw {
                         content: "/tmp",
                         position: (178, 31),
                        },
                       ],
                       position: (178, 30),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "ExecStart",
                         position: (179, 11),
                        },
                       ],
                      },
                      to: BinaryOperation {
                       operator: Addition,
                       operands: [
                        String {
                         parts: [
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (179, 26),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "package",
                               position: (179, 30),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                          Raw {
                           content: "/bin/alertmanager",
                           position: (179, 38),
                          },
                         ],
                         position: (179, 23),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "optionalString",
                          position: (180, 13),
                         },
                         arguments: [
                          Parentheses {
                           expression: BinaryOperation {
                            operator: NotEqualTo,
                            operands: [
                             FunctionApplication {
                              function: Variable {
                               identifier: "length",
                               position: (180, 29),
                              },
                              arguments: [
                               Variable {
                                identifier: "cmdlineArgs",
                                position: (180, 36),
                               },
                              ],
                             },
                             Int {
                              value: 0,
                              position: (180, 51),
                             },
                            ],
                            position: (180, 48),
                           },
                           position: (180, 28),
                          },
                          Parentheses {
                           expression: BinaryOperation {
                            operator: Addition,
                            operands: [
                             String {
                              parts: [
                               Raw {
                                content: " \\\n  ",
                                position: (180, 56),
                               },
                              ],
                              position: (180, 55),
                             },
                             FunctionApplication {
                              function: Variable {
                               identifier: "concatStringsSep",
                               position: (181, 15),
                              },
                              arguments: [
                               String {
                                parts: [
                                 Raw {
                                  content: " \\\n  ",
                                  position: (181, 33),
                                 },
                                ],
                                position: (181, 32),
                               },
                               Variable {
                                identifier: "cmdlineArgs",
                                position: (181, 42),
                               },
                              ],
                             },
                            ],
                            position: (180, 65),
                           },
                           position: (180, 54),
                          },
                         ],
                        },
                       ],
                       position: (179, 57),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "ExecReload",
                         position: (182, 11),
                        },
                       ],
                      },
                      to: String {
                       parts: [
                        Expression {
                         expression: PropertyAccess {
                          expression: Variable {
                           identifier: "pkgs",
                           position: (182, 27),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "coreutils",
                             position: (182, 32),
                            },
                           ],
                          },
                          default: None,
                         },
                        },
                        Raw {
                         content: "/bin/kill -HUP $MAINPID",
                         position: (182, 42),
                        },
                       ],
                       position: (182, 24),
                      },
                     },
                    ],
                    recursive: false,
                    position: (173, 25),
                   },
                  },
                 ],
                 recursive: false,
                 position: (166, 39),
                },
               },
              ],
              recursive: false,
              position: (163, 22),
             },
            ],
           },
           position: (163, 5),
          },
         ],
         position: (155, 20),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (31, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}