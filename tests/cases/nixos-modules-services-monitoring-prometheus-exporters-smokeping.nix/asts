---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "prometheus",
         position: (6, 25),
        },
        Raw {
         content: "exporters",
         position: (6, 36),
        },
        Raw {
         content: "smokeping",
         position: (6, 46),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "goDuration",
        position: (7, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "types",
        position: (7, 16),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "mkOptionType",
          position: (7, 22),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "name",
             position: (8, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "goDuration",
            },
           ],
           position: (8, 12),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "description",
             position: (9, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Go duration (https://golang.org/pkg/time/#ParseDuration)",
            },
           ],
           position: (9, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "check",
             position: (10, 5),
            },
           ],
          },
          Function {
           argument: Some(
            "x",
           ),
           arguments: FunctionArguments {
            arguments: [],
            ellipsis: false,
           },
           definition: BinaryOperation {
            operator: LogicalAnd,
            operands: [
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (10, 16),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (10, 22),
                 },
                 Raw {
                  content: "check",
                  position: (10, 26),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               Variable {
                identifier: "x",
                position: (10, 32),
               },
              ],
             },
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "builtins",
                  position: (10, 37),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "match",
                    position: (10, 46),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "(-?[0-9]+(.[0-9]+)?(ns|us|Âµs|ms|s|m|h))+",
                   },
                  ],
                  position: (10, 52),
                 },
                 Variable {
                  identifier: "x",
                  position: (10, 96),
                 },
                ],
               },
               Variable {
                identifier: "null",
                position: (10, 101),
               },
              ],
              position: (10, 98),
             },
            ],
            position: (10, 34),
           },
           position: (10, 13),
          },
         ),
         Inherit(
          Some(
           PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (11, 14),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "str",
               position: (11, 20),
              },
             ],
            },
            default: None,
           },
          ),
          [
           Raw {
            content: "merge",
            position: (11, 25),
           },
          ],
         ),
        ],
        recursive: false,
        position: (7, 35),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "port",
         position: (15, 3),
        },
       ],
      },
      Int {
       value: 9374,
       position: (15, 10),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "extraOpts",
         position: (16, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "telemetryPath",
            position: (17, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (18, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (18, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (18, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (19, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/metrics",
                },
               ],
               position: (19, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (20, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Path under which to expose metrics.\n",
                },
               ],
               position: (20, 21),
              },
             ),
            ],
            recursive: false,
            position: (17, 30),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "pingInterval",
            position: (24, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (24, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (25, 7),
                },
               ],
              },
              Variable {
               identifier: "goDuration",
               position: (25, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (26, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "1s",
                },
               ],
               position: (26, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (27, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Interval between pings.\n",
                },
               ],
               position: (27, 21),
              },
             ),
            ],
            recursive: false,
            position: (24, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "buckets",
            position: (31, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (31, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (32, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (32, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "commas",
                  position: (32, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (33, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "5e-05,0.0001,0.0002,0.0004,0.0008,0.0016,0.0032,0.0064,0.0128,0.0256,0.0512,0.1024,0.2048,0.4096,0.8192,1.6384,3.2768,6.5536,13.1072,26.2144",
                },
               ],
               position: (33, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (34, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "List of buckets to use for the response duration histogram.\n",
                },
               ],
               position: (34, 21),
              },
             ),
            ],
            recursive: false,
            position: (31, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "hosts",
            position: (38, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (38, 13),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (39, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (39, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (39, 26),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (39, 33),
                 },
                ],
               },
               position: (39, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (40, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "List of endpoints to probe.\n",
                },
               ],
               position: (40, 21),
              },
             ),
            ],
            recursive: false,
            position: (38, 22),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (16, 15),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "serviceOpts",
         position: (45, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "serviceConfig",
            position: (46, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "AmbientCapabilities",
               position: (47, 7),
              },
             ],
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "CAP_NET_RAW",
                },
               ],
               position: (47, 31),
              },
             ],
             position: (47, 29),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "CapabilityBoundingSet",
               position: (48, 7),
              },
             ],
            },
            List {
             elements: [
              String {
               parts: [
                Raw {
                 content: "CAP_NET_RAW",
                },
               ],
               position: (48, 33),
              },
             ],
             position: (48, 31),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "ExecStart",
               position: (49, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (50, 11),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "prometheus-smokeping-prober",
                   position: (50, 16),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/bin/smokeping_prober \\\n  --web.listen-address ",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (51, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listenAddress",
                   position: (51, 38),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: ":",
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (51, 55),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (51, 64),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "port",
                     position: (51, 68),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  --web.telemetry-path ",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (52, 34),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "telemetryPath",
                   position: (52, 38),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " \\\n  --buckets ",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (53, 23),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "buckets",
                   position: (53, 27),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " \\\n  --ping.interval ",
              },
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (54, 29),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "pingInterval",
                   position: (54, 33),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: " \\\n  --privileged \\\n  ",
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (56, 13),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: " \\\n  ",
                   },
                  ],
                  position: (56, 30),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (56, 40),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "extraFlags",
                     position: (56, 44),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: " \\\n  ",
              },
              Expression {
               expression: FunctionApplication {
                function: Variable {
                 identifier: "concatStringsSep",
                 position: (57, 13),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: " ",
                   },
                  ],
                  position: (57, 30),
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (57, 34),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "hosts",
                     position: (57, 38),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              },
              Raw {
               content: "\n",
              },
             ],
             position: (49, 19),
            },
           ),
          ],
          recursive: false,
          position: (46, 21),
         },
        ),
       ],
       recursive: false,
       position: (45, 17),
      },
     ),
    ],
    recursive: false,
    position: (14, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}