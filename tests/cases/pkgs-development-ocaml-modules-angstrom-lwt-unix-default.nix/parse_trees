---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "fetchFromGitHub" (1, 8)
          , := lexemes ","
            , "," (1, 23)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "buildDunePackage" (1, 25)
            , := lexemes ","
              , "," (1, 41)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "angstrom" (1, 43)
              , := lexemes ","
                , "," (1, 51)
              formals := rules "formal"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "ocaml_lwt" (1, 53)
      } := lexemes "}"
        } "}" (1, 63)
      : := lexemes ":"
        : ":" (1, 64)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildDunePackage" (3, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (3, 18)
                  { := lexemes "{"
                    { "{" (3, 22)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "INHERIT" "(" "expr" ")" "attrs" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules 
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "pname" (4, 3)
                              = := lexemes "="
                                = "=" (4, 9)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (4, 11)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "angstrom-lwt-unix" (4, 12)
                                            " := lexemes "\""
                                              " "\"" (4, 29)
                              ; := lexemes ";"
                                ; ";" (4, 30)
                            INHERIT := lexemes "INHERIT"
                              INHERIT "inherit" (6, 3)
                            ( := lexemes "("
                              ( "(" (6, 11)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "ID"
                                          ID := lexemes "ID"
                                            ID "angstrom" (6, 12)
                            ) := lexemes ")"
                              ) ")" (6, 20)
                            attrs := rules "attrs" "attr"
                              attrs := rules "attrs" "attr"
                                attrs := rules "attrs" "attr"
                                  attrs := rules 
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "version" (6, 22)
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "useDune2" (6, 30)
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "src" (6, 39)
                            ; := lexemes ";"
                              ; ";" (6, 42)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "minimumOCamlVersion" (8, 3)
                          = := lexemes "="
                            = "=" (8, 23)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "\"" "string_parts" "\""
                                        " := lexemes "\""
                                          " "\"" (8, 25)
                                        string_parts := rules "STR"
                                          STR := lexemes "STR"
                                            STR "4.03" (8, 26)
                                        " := lexemes "\""
                                          " "\"" (8, 30)
                          ; := lexemes ";"
                            ; ";" (8, 31)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "propagatedBuildInputs" (10, 3)
                        = := lexemes "="
                          = "=" (10, 25)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "[" "expr_list" "]"
                                      [ := lexemes "["
                                        [ "[" (10, 27)
                                      expr_list := rules "expr_list" "expr_select"
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules 
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "angstrom" (10, 29)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "ocaml_lwt" (10, 38)
                                      ] := lexemes "]"
                                        ] "]" (10, 48)
                        ; := lexemes ";"
                          ; ";" (10, 49)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "doCheck" (12, 3)
                      = := lexemes "="
                        = "=" (12, 11)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "ID"
                                    ID := lexemes "ID"
                                      ID "true" (12, 13)
                      ; := lexemes ";"
                        ; ";" (12, 17)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (14, 3)
                    = := lexemes "="
                      = "=" (14, 8)
                    expr := rules "expr_function"
                      expr_function := rules "expr_if"
                        expr_if := rules "expr_op"
                          expr_op := rules "expr_app"
                            expr_app := rules "expr_select"
                              expr_select := rules "expr_simple"
                                expr_simple := rules "{" "binds" "}"
                                  { := lexemes "{"
                                    { "{" (14, 10)
                                  binds := rules "binds" "attrpath" "=" "expr" ";"
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "INHERIT" "(" "expr" ")" "attrs" ";"
                                        binds := rules 
                                        INHERIT := lexemes "INHERIT"
                                          INHERIT "inherit" (15, 5)
                                        ( := lexemes "("
                                          ( "(" (15, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "angstrom" (15, 14)
                                                    . := lexemes "."
                                                      . "." (15, 22)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "meta" (15, 23)
                                        ) := lexemes ")"
                                          ) ")" (15, 27)
                                        attrs := rules "attrs" "attr"
                                          attrs := rules "attrs" "attr"
                                            attrs := rules 
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "homepage" (15, 29)
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (15, 38)
                                        ; := lexemes ";"
                                          ; ";" (15, 45)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "description" (16, 5)
                                      = := lexemes "="
                                        = "=" (16, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "\"" "string_parts" "\""
                                                    " := lexemes "\""
                                                      " "\"" (16, 19)
                                                    string_parts := rules "STR"
                                                      STR := lexemes "STR"
                                                        STR "Lwt_unix support for Angstrom" (16, 20)
                                                    " := lexemes "\""
                                                      " "\"" (16, 49)
                                      ; := lexemes ";"
                                        ; ";" (16, 50)
                                    attrpath := rules "attr"
                                      attr := rules "ID"
                                        ID := lexemes "ID"
                                          ID "maintainers" (17, 5)
                                    = := lexemes "="
                                      = "=" (17, 17)
                                    expr := rules "expr_function"
                                      expr_function := rules "WITH" "expr" ";" "expr_function"
                                        WITH := lexemes "WITH"
                                          WITH "with" (17, 19)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "lib" (17, 24)
                                                    . := lexemes "."
                                                      . "." (17, 27)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (17, 28)
                                        ; := lexemes ";"
                                          ; ";" (17, 39)
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "[" "expr_list" "]"
                                                    [ := lexemes "["
                                                      [ "[" (17, 41)
                                                    expr_list := rules "expr_list" "expr_select"
                                                      expr_list := rules 
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "romildo" (17, 43)
                                                    ] := lexemes "]"
                                                      ] "]" (17, 51)
                                    ; := lexemes ";"
                                      ; ";" (17, 52)
                                  } := lexemes "}"
                                    } "}" (18, 3)
                    ; := lexemes ";"
                      ; ";" (18, 4)
                  } := lexemes "}"
                    } "}" (19, 1)