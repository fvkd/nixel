---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "zsh",
         position: (6, 25),
        },
        Raw {
         content: "autosuggestions",
         position: (6, 29),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (9, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (10, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (10, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (10, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "enableAutosuggestions",
               position: (10, 48),
              },
             ],
            },
           ],
           position: (10, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "programs",
               position: (10, 76),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "zsh",
               position: (10, 87),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "autosuggestions",
               position: (10, 93),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (10, 111),
              },
             ],
            },
           ],
           position: (10, 73),
          },
         ],
        },
       ],
       position: (9, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (13, 3),
        },
        Raw {
         content: "programs",
         position: (13, 11),
        },
        Raw {
         content: "zsh",
         position: (13, 20),
        },
        Raw {
         content: "autosuggestions",
         position: (13, 24),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (15, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (15, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "zsh-autosuggestions",
              position: (15, 30),
             },
            ],
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "highlightStyle",
            position: (17, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 22),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (18, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (18, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (18, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (19, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "fg=8",
                 position: (19, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (20, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Highlight style for suggestions ({fore,back}ground color)",
                 position: (20, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (21, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "fg=cyan",
                 position: (21, 18),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (17, 31),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "strategy",
            position: (24, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (24, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (25, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (25, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "enum",
                   position: (25, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "history",
                     position: (25, 28),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "match_prev_cmd",
                     position: (25, 38),
                    },
                   ],
                  },
                 ],
                 position: (25, 25),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (26, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "history",
                 position: (26, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (27, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Set ZSH_AUTOSUGGEST_STRATEGY to choose the strategy for generating suggestions.\nThere are currently two to choose from:\n\n  * history: Chooses the most recent match.\n  * match_prev_cmd: Chooses the most recent match whose preceding history item matches\n    the most recently executed command (more info). Note that this strategy won't work as\n    expected with ZSH options that don't preserve the history order such as\n    HIST_IGNORE_ALL_DUPS or HIST_EXPIRE_DUPS_FIRST.\n",
                 position: (28, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (24, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "async",
            position: (39, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (39, 13),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (40, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (40, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (40, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (41, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (41, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (42, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Whether to fetch suggestions asynchronously",
                 position: (42, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (43, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (43, 17),
              },
             ),
            ],
            recursive: false,
            position: (39, 22),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraConfig",
            position: (46, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (46, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (47, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (47, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (47, 26),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (47, 34),
                 },
                ],
               },
               position: (47, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (48, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (48, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (49, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Attribute set with additional configuration values",
                 position: (49, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (50, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (50, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE\" = \"20\";\n}\n",
                   position: (51, 1),
                  },
                 ],
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (46, 28),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (13, 42),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (59, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (59, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (59, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (59, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "programs",
              position: (61, 5),
             },
             Raw {
              content: "zsh",
              position: (61, 14),
             },
             Raw {
              content: "interactiveShellInit",
              position: (61, 18),
             },
            ],
           },
           String {
            parts: [
             Raw {
              content: "source ",
              position: (62, 1),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (62, 16),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "zsh-autosuggestions",
                  position: (62, 21),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "/share/zsh-autosuggestions/zsh-autosuggestions.zsh\n\nexport ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=\"",
              position: (62, 41),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (64, 49),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "highlightStyle",
                  position: (64, 53),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\"\nexport ZSH_AUTOSUGGEST_STRATEGY=(\"",
              position: (64, 68),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (65, 43),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "strategy",
                  position: (65, 47),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\")\n",
              position: (65, 56),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "optionalString",
                position: (66, 9),
               },
               arguments: [
                UnaryOperation {
                 operator: Not,
                 operand: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (66, 26),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "async",
                     position: (66, 30),
                    },
                   ],
                  },
                  default: None,
                 },
                 position: (66, 25),
                },
                String {
                 parts: [
                  Raw {
                   content: "unset ZSH_AUTOSUGGEST_USE_ASYNC",
                   position: (66, 38),
                  },
                 ],
                },
               ],
              },
             },
             Raw {
              content: "\n\n",
              position: (66, 71),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatStringsSep",
                position: (68, 9),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\n",
                   position: (68, 27),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "mapAttrsToList",
                  position: (68, 32),
                 },
                 arguments: [
                  Function {
                   argument: Some(
                    "key",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Function {
                    argument: Some(
                     "value",
                    ),
                    arguments: FunctionArguments {
                     arguments: [],
                     ellipsis: false,
                    },
                    definition: String {
                     parts: [
                      Raw {
                       content: "export ",
                       position: (68, 62),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "key",
                        position: (68, 71),
                       },
                      },
                      Raw {
                       content: "=\"",
                       position: (68, 75),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "value",
                        position: (68, 79),
                       },
                      },
                      Raw {
                       content: "\"",
                       position: (68, 85),
                      },
                     ],
                    },
                    position: (68, 53),
                   },
                   position: (68, 48),
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (68, 90),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "extraConfig",
                      position: (68, 94),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                },
               ],
              },
             },
             Raw {
              content: "\n",
              position: (68, 107),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (59, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (8, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}