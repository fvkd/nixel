---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "fontcursormisc_hidpi",
        position: (11, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (11, 26),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "xorg",
          position: (11, 31),
         },
         Raw {
          content: "fontxfree86type1",
          position: (11, 36),
         },
         Raw {
          content: "overrideAttrs",
          position: (11, 53),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Function {
        argument: Some(
         "old",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: LetIn {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "size",
              position: (16, 7),
             },
            ],
           },
           BinaryOperation {
            operator: Multiplication,
            operands: [
             Float {
              value: 2.39583,
              position: (16, 14),
             },
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (16, 24),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "services",
                 position: (16, 31),
                },
                Raw {
                 content: "xserver",
                 position: (16, 40),
                },
                Raw {
                 content: "dpi",
                 position: (16, 48),
                },
               ],
              },
              default: None,
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "sizeString",
              position: (17, 7),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "builtins",
              position: (17, 20),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "head",
                position: (17, 29),
               },
              ],
             },
             default: None,
            },
            arguments: [
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "builtins",
                position: (17, 35),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "split",
                  position: (17, 44),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "\\.",
                  position: (17, 51),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "toString",
                 position: (17, 57),
                },
                arguments: [
                 Variable {
                  identifier: "size",
                  position: (17, 66),
                 },
                ],
               },
              ],
             },
            ],
           },
          ),
         ],
         target: Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "postInstall",
               position: (20, 7),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "alias='cursor -xfree86-cursor-medium-r-normal--0-",
               position: (21, 1),
              },
              Expression {
               expression: Variable {
                identifier: "sizeString",
                position: (21, 60),
               },
              },
              Raw {
               content: "-0-0-p-0-adobe-fontspecific'\necho \"$alias\" > $out/lib/X11/fonts/Type1/fonts.alias\n",
               position: (21, 71),
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        },
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "hasHidpi",
        position: (26, 3),
       },
      ],
     },
     BinaryOperation {
      operator: LogicalAnd,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (27, 5),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "hardware",
           position: (27, 12),
          },
          Raw {
           content: "video",
           position: (27, 21),
          },
          Raw {
           content: "hidpi",
           position: (27, 27),
          },
          Raw {
           content: "enable",
           position: (27, 33),
          },
         ],
        },
        default: None,
       },
       BinaryOperation {
        operator: NotEqualTo,
        operands: [
         PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (28, 5),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (28, 12),
            },
            Raw {
             content: "xserver",
             position: (28, 21),
            },
            Raw {
             content: "dpi",
             position: (28, 29),
            },
           ],
          },
          default: None,
         },
         Variable {
          identifier: "null",
          position: (28, 36),
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "defaultFonts",
        position: (30, 3),
       },
      ],
     },
     List {
      elements: [
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (31, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "dejavu_fonts",
           position: (31, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (32, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "freefont_ttf",
           position: (32, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (33, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "gyre-fonts",
           position: (33, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (34, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "liberation_ttf",
           position: (34, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (35, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "unifont",
           position: (35, 12),
          },
         ],
        },
        default: None,
       },
       PropertyAccess {
        expression: Variable {
         identifier: "pkgs",
         position: (36, 7),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "noto-fonts-emoji",
           position: (36, 12),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "defaultXFonts",
        position: (39, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Concatenation,
      operands: [
       List {
        elements: [
         IfThenElse {
          predicate: Variable {
           identifier: "hasHidpi",
           position: (40, 11),
          },
          then: Variable {
           identifier: "fontcursormisc_hidpi",
           position: (40, 25),
          },
          else_: PropertyAccess {
           expression: Variable {
            identifier: "pkgs",
            position: (40, 51),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "xorg",
              position: (40, 56),
             },
             Raw {
              content: "fontcursormisc",
              position: (40, 61),
             },
            ],
           },
           default: None,
          },
         },
         PropertyAccess {
          expression: Variable {
           identifier: "pkgs",
           position: (41, 7),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "xorg",
             position: (41, 12),
            },
            Raw {
             content: "fontmiscmisc",
             position: (41, 17),
            },
           ],
          },
          default: None,
         },
        ],
       },
       FunctionApplication {
        function: Variable {
         identifier: "optionals",
         position: (42, 10),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (42, 21),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "nixpkgs",
             position: (42, 28),
            },
            Raw {
             content: "config",
             position: (42, 36),
            },
            Raw {
             content: "allowUnfree",
             position: (42, 43),
            },
           ],
          },
          default: Some(
           Variable {
            identifier: "false",
            position: (42, 58),
           },
          ),
         },
         List {
          elements: [
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (44, 7),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "xorg",
               position: (44, 12),
              },
              Raw {
               content: "fontbhlucidatypewriter100dpi",
               position: (44, 17),
              },
             ],
            },
            default: None,
           },
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (45, 7),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "xorg",
               position: (45, 12),
              },
              Raw {
               content: "fontbhlucidatypewriter75dpi",
               position: (45, 17),
              },
             ],
            },
            default: None,
           },
           PropertyAccess {
            expression: Variable {
             identifier: "pkgs",
             position: (46, 7),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "xorg",
               position: (46, 12),
              },
              Raw {
               content: "fontbh100dpi",
               position: (46, 17),
              },
             ],
            },
            default: None,
           },
          ],
         },
        ],
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (52, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (53, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "fonts",
               position: (53, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "enableCoreFonts",
               position: (53, 39),
              },
             ],
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Use fonts.fonts = [ pkgs.corefonts ]; instead.",
             position: (53, 59),
            },
           ],
          },
         ],
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (56, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "fonts",
            position: (58, 5),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "fonts",
               position: (61, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (61, 15),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (62, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (62, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (62, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (62, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (62, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (63, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (64, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (64, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.dejavu_fonts ]",
                      position: (64, 38),
                     },
                    ],
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (65, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "List of primary font paths.",
                    position: (65, 24),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enableDefaultFonts",
               position: (68, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (68, 28),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (69, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (69, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (69, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (70, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (70, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (71, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enable a basic set of fonts providing several font styles\nand families and reasonable coverage of Unicode.\n",
                    position: (72, 1),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ],
            },
           ),
          ],
          recursive: false,
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (81, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkMerge",
        position: (81, 12),
       },
       arguments: [
        List {
         elements: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "fonts",
                position: (82, 7),
               },
               Raw {
                content: "fonts",
                position: (82, 13),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (82, 21),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (82, 26),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "fonts",
                   position: (82, 33),
                  },
                  Raw {
                   content: "enableDefaultFonts",
                   position: (82, 39),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "defaultFonts",
                position: (82, 58),
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "fonts",
                position: (83, 7),
               },
               Raw {
                content: "fonts",
                position: (83, 13),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (83, 21),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (83, 26),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "services",
                   position: (83, 33),
                  },
                  Raw {
                   content: "xserver",
                   position: (83, 42),
                  },
                  Raw {
                   content: "enable",
                   position: (83, 50),
                  },
                 ],
                },
                default: None,
               },
               Variable {
                identifier: "defaultXFonts",
                position: (83, 57),
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
  },
 },
}