---
With {
 expression: Parentheses {
  expression: FunctionApplication {
   function: Variable {
    identifier: "import",
    position: (1, 7),
   },
   arguments: [
    Path {
     parts: [
      Raw {
       content: "../../../../default.nix",
       position: (1, 14),
      },
     ],
     position: (1, 14),
    },
    Map {
     bindings: [],
     recursive: false,
     position: (1, 38),
    },
   ],
  },
  position: (1, 6),
 },
 target: FunctionApplication {
  function: PropertyAccess {
   expression: Variable {
    identifier: "stdenv",
    position: (2, 1),
   },
   attribute_path: AttributePath {
    parts: [
     Raw {
      content: "mkDerivation",
      position: (2, 8),
     },
    ],
   },
   default: None,
  },
  arguments: [
   Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "name",
         position: (3, 3),
        },
       ],
      },
      to: String {
       parts: [
        Raw {
         content: "nixcfg-azure-devenv",
         position: (3, 11),
        },
       ],
       position: (3, 10),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "nativeBuildInputs",
         position: (5, 3),
        },
       ],
      },
      to: List {
       elements: [
        Variable {
         identifier: "azure-cli",
         position: (6, 5),
        },
        Variable {
         identifier: "bash",
         position: (7, 5),
        },
        Variable {
         identifier: "cacert",
         position: (8, 5),
        },
        Variable {
         identifier: "azure-storage-azcopy",
         position: (9, 5),
        },
       ],
       position: (5, 23),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "AZURE_CONFIG_DIR",
         position: (12, 3),
        },
       ],
      },
      to: String {
       parts: [
        Raw {
         content: "/tmp/azure-cli/.azure",
         position: (12, 21),
        },
       ],
       position: (12, 20),
      },
     },
    ],
    recursive: false,
    position: (2, 21),
   },
  ],
 },
 position: (1, 1),
}