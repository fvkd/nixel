---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "roundcube",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fpm",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "phpfpm",
         position: (7, 25),
        },
        Raw {
         content: "pools",
         position: (7, 32),
        },
        Raw {
         content: "roundcube",
         position: (7, 38),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "localDB",
        position: (8, 3),
       },
      ],
     },
     to: BinaryOperation {
      operator: EqualTo,
      operands: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (8, 13),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "database",
           position: (8, 17),
          },
          Raw {
           content: "host",
           position: (8, 26),
          },
         ],
        },
        default: None,
       },
       String {
        parts: [
         Raw {
          content: "localhost",
          position: (8, 35),
         },
        ],
        position: (8, 34),
       },
      ],
      position: (8, 31),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "user",
        position: (9, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "cfg",
       position: (9, 10),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "database",
         position: (9, 14),
        },
        Raw {
         content: "username",
         position: (9, 23),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "phpWithPspell",
        position: (10, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (10, 19),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "php80",
          position: (10, 24),
         },
         Raw {
          content: "withExtensions",
          position: (10, 30),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Function {
        argument: Destructured {
         identifier: None,
         arguments: [
          DestructuredArgument {
           identifier: "all",
           default: None,
          },
          DestructuredArgument {
           identifier: "enabled",
           default: None,
          },
         ],
         ellipsis: false,
        },
        definition: BinaryOperation {
         operator: Concatenation,
         operands: [
          List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "all",
              position: (10, 66),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "pspell",
                position: (10, 70),
               },
              ],
             },
             default: None,
            },
           ],
           position: (10, 64),
          },
          Variable {
           identifier: "enabled",
           position: (10, 82),
          },
         ],
         position: (10, 79),
        },
        position: (10, 46),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (13, 3),
        },
        Raw {
         content: "services",
         position: (13, 11),
        },
        Raw {
         content: "roundcube",
         position: (13, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (14, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (14, 14),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (15, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (15, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "bool",
                  position: (15, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (16, 7),
                },
               ],
              },
              to: Variable {
               identifier: "false",
               position: (16, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (17, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Whether to enable roundcube.\n\nAlso enables nginx virtual host management.\nFurther nginx configuration can be done by adapting <literal>services.nginx.virtualHosts.&lt;name&gt;</literal>.\nSee <xref linkend=\"opt-services.nginx.virtualHosts\"/> for further information.\n",
                 position: (18, 1),
                },
               ],
               position: (17, 21),
              },
             },
            ],
            recursive: false,
            position: (14, 23),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "hostName",
            position: (26, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (26, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (27, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (27, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "str",
                  position: (27, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (28, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "webmail.example.com",
                 position: (28, 18),
                },
               ],
               position: (28, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (29, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Hostname to use for the nginx vhost",
                 position: (29, 22),
                },
               ],
               position: (29, 21),
              },
             },
            ],
            recursive: false,
            position: (26, 25),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "package",
            position: (32, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (32, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (33, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (33, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "package",
                  position: (33, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (34, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (34, 17),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "roundcube",
                  position: (34, 22),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "defaultText",
                 position: (35, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (35, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.roundcube",
                   position: (35, 40),
                  },
                 ],
                 position: (35, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (37, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (37, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "roundcube.withPlugins (plugins: [ plugins.persistent_login ])\n",
                   position: (38, 1),
                  },
                 ],
                 position: (37, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (41, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The package which contains roundcube's sources. Can be overriden to create\nan environment which contains roundcube and third-party plugins.\n",
                 position: (42, 1),
                },
               ],
               position: (41, 21),
              },
             },
            ],
            recursive: false,
            position: (32, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "database",
            position: (47, 5),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "username",
               position: (48, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (48, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (49, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (49, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (50, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "roundcube",
                    position: (50, 20),
                   },
                  ],
                  position: (50, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Username for the postgresql connection.\nIf <literal>database.host</literal> is set to <literal>localhost</literal>, a unix user and group of the same name will be created as well.\n",
                    position: (52, 1),
                   },
                  ],
                  position: (51, 23),
                 },
                },
               ],
               recursive: false,
               position: (48, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "host",
               position: (56, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (56, 14),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (57, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (57, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (57, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (58, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "localhost",
                    position: (58, 20),
                   },
                  ],
                  position: (58, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Host of the postgresql server. If this is not set to\n<literal>localhost</literal>, you have to create the\npostgresql user and database yourself, with appropriate\npermissions.\n",
                    position: (60, 1),
                   },
                  ],
                  position: (59, 23),
                 },
                },
               ],
               recursive: false,
               position: (56, 23),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "password",
               position: (66, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (66, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (67, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (67, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (67, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (68, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Password for the postgresql connection. Do not use: the password will be stored world readable in the store; use <literal>passwordFile</literal> instead.",
                    position: (68, 24),
                   },
                  ],
                  position: (68, 23),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (69, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (69, 19),
                 },
                },
               ],
               recursive: false,
               position: (66, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "passwordFile",
               position: (71, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (71, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (72, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (72, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (72, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (73, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Password file for the postgresql connection. Must be readable by user <literal>nginx</literal>. Ignored if <literal>database.host</literal> is set to <literal>localhost</literal>, as peer authentication will be used.",
                    position: (73, 24),
                   },
                  ],
                  position: (73, 23),
                 },
                },
               ],
               recursive: false,
               position: (71, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "dbname",
               position: (75, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (75, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (76, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (76, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (77, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "roundcube",
                    position: (77, 20),
                   },
                  ],
                  position: (77, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (78, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Name of the postgresql database",
                    position: (78, 24),
                   },
                  ],
                  position: (78, 23),
                 },
                },
               ],
               recursive: false,
               position: (75, 25),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (47, 16),
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "plugins",
            position: (82, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (82, 15),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (83, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (83, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (83, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (83, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (83, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (84, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (84, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (85, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "List of roundcube plugins to enable. Currently, only those directly shipped with Roundcube are supported.\n",
                 position: (86, 1),
                },
               ],
               position: (85, 21),
              },
             },
            ],
            recursive: false,
            position: (82, 24),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "dicts",
            position: (90, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (90, 13),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (91, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (91, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "listOf",
                   position: (91, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (91, 27),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "package",
                    position: (91, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (92, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (92, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (93, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (93, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "with pkgs.aspellDicts; [ en fr de ]",
                   position: (93, 36),
                  },
                 ],
                 position: (93, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (94, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "List of aspell dictionnaries for spell checking. If empty, spell checking is disabled.\n",
                 position: (95, 1),
                },
               ],
               position: (94, 21),
              },
             },
            ],
            recursive: false,
            position: (90, 22),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maxAttachmentSize",
            position: (99, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (99, 25),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (100, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (100, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "int",
                  position: (100, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (101, 7),
                },
               ],
              },
              to: Int {
               value: 18,
               position: (101, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (102, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "The maximum attachment size in MB.\n\nNote: Since roundcube only uses 70% of max upload values configured in php\n30% is added automatically to <xref linkend=\"opt-services.roundcube.maxAttachmentSize\"/>.\n",
                 position: (103, 1),
                },
               ],
               position: (102, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "apply",
                 position: (108, 7),
                },
               ],
              },
              to: Function {
               argument: Simple {
                identifier: "configuredMaxAttachmentSize",
               },
               definition: String {
                parts: [
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toString",
                    position: (108, 47),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: Multiplication,
                     operands: [
                      Variable {
                       identifier: "configuredMaxAttachmentSize",
                       position: (108, 57),
                      },
                      Float {
                       value: 1.3,
                       position: (108, 87),
                      },
                     ],
                     position: (108, 85),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "M",
                  position: (108, 92),
                 },
                ],
                position: (108, 44),
               },
               position: (108, 15),
              },
             },
            ],
            recursive: false,
            position: (99, 34),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "extraConfig",
            position: (111, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (111, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (112, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (112, 14),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "lines",
                  position: (112, 20),
                 },
                ],
               },
               default: None,
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (113, 7),
                },
               ],
              },
              to: String {
               parts: [],
               position: (113, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (114, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Extra configuration for roundcube webmail instance",
                 position: (114, 22),
                },
               ],
               position: (114, 21),
              },
             },
            ],
            recursive: false,
            position: (111, 28),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (13, 32),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (118, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (118, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (118, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (118, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (120, 5),
             },
             Raw {
              content: "roundcube",
              position: (120, 14),
             },
             Raw {
              content: "database",
              position: (120, 24),
             },
             Raw {
              content: "passwordFile",
              position: (120, 33),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (120, 48),
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               UnaryOperation {
                operator: Not,
                operand: Variable {
                 identifier: "localDB",
                 position: (120, 55),
                },
                position: (120, 54),
               },
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (120, 66),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "database",
                     position: (120, 70),
                    },
                    Raw {
                     content: "password",
                     position: (120, 79),
                    },
                   ],
                  },
                  default: None,
                 },
                 String {
                  parts: [],
                  position: (120, 91),
                 },
                ],
                position: (120, 88),
               },
              ],
              position: (120, 63),
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkDefault",
               position: (120, 96),
              },
              arguments: [
               String {
                parts: [
                 Expression {
                  expression: FunctionApplication {
                   function: PropertyAccess {
                    expression: Variable {
                     identifier: "pkgs",
                     position: (120, 110),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "writeText",
                       position: (120, 115),
                      },
                     ],
                    },
                    default: None,
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "roundcube-password",
                       position: (120, 126),
                      },
                     ],
                     position: (120, 125),
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (120, 146),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "database",
                        position: (120, 150),
                       },
                       Raw {
                        content: "password",
                        position: (120, 159),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                ],
                position: (120, 107),
               },
              ],
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "warnings",
              position: (121, 5),
             },
            ],
           },
           to: FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (121, 16),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "optional",
                position: (121, 20),
               },
              ],
             },
             default: None,
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               UnaryOperation {
                operator: Not,
                operand: Variable {
                 identifier: "localDB",
                 position: (121, 31),
                },
                position: (121, 30),
               },
               BinaryOperation {
                operator: NotEqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (121, 42),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "database",
                     position: (121, 46),
                    },
                    Raw {
                     content: "password",
                     position: (121, 55),
                    },
                   ],
                  },
                  default: None,
                 },
                 String {
                  parts: [],
                  position: (121, 67),
                 },
                ],
                position: (121, 64),
               },
              ],
              position: (121, 39),
             },
             String {
              parts: [
               Raw {
                content: "services.roundcube.database.password is deprecated and insecure; use services.roundcube.database.passwordFile instead",
                position: (121, 72),
               },
              ],
              position: (121, 71),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (123, 5),
             },
             Raw {
              content: "etc",
              position: (123, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "roundcube/config.inc.php",
                 position: (123, 22),
                },
               ],
               position: (123, 21),
              },
             },
             Raw {
              content: "text",
              position: (123, 48),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "<?php\n\n",
              position: (124, 1),
             },
             Expression {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (126, 9),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "optionalString",
                   position: (126, 13),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                UnaryOperation {
                 operator: Not,
                 operand: Variable {
                  identifier: "localDB",
                  position: (126, 30),
                 },
                 position: (126, 29),
                },
                String {
                 parts: [
                  Raw {
                   content: "$password = file_get_contents('",
                   position: (126, 40),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (126, 73),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "database",
                       position: (126, 77),
                      },
                      Raw {
                       content: "passwordFile",
                       position: (126, 86),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "');",
                   position: (126, 99),
                  },
                 ],
                 position: (126, 39),
                },
               ],
              },
             },
             Raw {
              content: "\n\n$config = array();\n$config['db_dsnw'] = 'pgsql://",
              position: (126, 104),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (129, 39),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "database",
                  position: (129, 43),
                 },
                 Raw {
                  content: "username",
                  position: (129, 52),
                 },
                ],
               },
               default: None,
              },
             },
             Expression {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (129, 63),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "optionalString",
                   position: (129, 67),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                UnaryOperation {
                 operator: Not,
                 operand: Variable {
                  identifier: "localDB",
                  position: (129, 84),
                 },
                 position: (129, 83),
                },
                String {
                 parts: [
                  Raw {
                   content: ":' . $password . '",
                   position: (129, 94),
                  },
                 ],
                 position: (129, 93),
                },
               ],
              },
             },
             Raw {
              content: "@",
              position: (129, 114),
             },
             Expression {
              expression: IfThenElse {
               predicate: Variable {
                identifier: "localDB",
                position: (129, 120),
               },
               then: String {
                parts: [
                 Raw {
                  content: "unix(/run/postgresql)",
                  position: (129, 134),
                 },
                ],
                position: (129, 133),
               },
               else_: PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (129, 162),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "database",
                   position: (129, 166),
                  },
                  Raw {
                   content: "host",
                   position: (129, 175),
                  },
                 ],
                },
                default: None,
               },
               position: (129, 117),
              },
             },
             Raw {
              content: "/",
              position: (129, 180),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (129, 183),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "database",
                  position: (129, 187),
                 },
                 Raw {
                  content: "dbname",
                  position: (129, 196),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "';\n$config['log_driver'] = 'syslog';\n$config['max_message_size'] =  ",
              position: (129, 203),
             },
             Raw {
              content: "'",
              position: (131, 38),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (131, 41),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "maxAttachmentSize",
                  position: (131, 45),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "';\n$config['plugins'] = [",
              position: (131, 63),
             },
             Expression {
              expression: FunctionApplication {
               function: Variable {
                identifier: "concatMapStringsSep",
                position: (132, 31),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: ",",
                   position: (132, 52),
                  },
                 ],
                 position: (132, 51),
                },
                Function {
                 argument: Simple {
                  identifier: "p",
                 },
                 definition: String {
                  parts: [
                   Raw {
                    content: "'",
                    position: (132, 60),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "p",
                     position: (132, 63),
                    },
                   },
                   Raw {
                    content: "'",
                    position: (132, 65),
                   },
                  ],
                  position: (132, 59),
                 },
                 position: (132, 56),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (132, 69),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "plugins",
                    position: (132, 73),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: "];\n$config['des_key'] = file_get_contents('/var/lib/roundcube/des_key');\n$config['mime_types'] = ",
              position: (132, 81),
             },
             Raw {
              content: "'",
              position: (134, 31),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (134, 34),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "nginx",
                  position: (134, 39),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "/conf/mime.types';\n$config['enable_spellcheck'] = ",
              position: (134, 45),
             },
             Expression {
              expression: IfThenElse {
               predicate: BinaryOperation {
                operator: EqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (135, 43),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "dicts",
                     position: (135, 47),
                    },
                   ],
                  },
                  default: None,
                 },
                 List {
                  elements: [],
                  position: (135, 56),
                 },
                ],
                position: (135, 53),
               },
               then: String {
                parts: [
                 Raw {
                  content: "false",
                  position: (135, 65),
                 },
                ],
                position: (135, 64),
               },
               else_: String {
                parts: [
                 Raw {
                  content: "true",
                  position: (135, 78),
                 },
                ],
                position: (135, 77),
               },
               position: (135, 40),
              },
             },
             Raw {
              content: ";\n# by default, spellchecking uses a third-party cloud services\n$config['spellcheck_engine'] = 'pspell';\n$config['spellcheck_languages'] = array(",
              position: (135, 84),
             },
             Expression {
              expression: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "lib",
                 position: (138, 49),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "concatMapStringsSep",
                   position: (138, 53),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: ", ",
                   position: (138, 74),
                  },
                 ],
                 position: (138, 73),
                },
                Function {
                 argument: Simple {
                  identifier: "dict",
                 },
                 definition: LetIn {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "p",
                       position: (138, 89),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "builtins",
                       position: (138, 93),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "parseDrvName",
                         position: (138, 102),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "dict",
                        position: (138, 115),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "shortName",
                          position: (138, 120),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                  ],
                  target: String {
                   parts: [
                    Raw {
                     content: "'",
                     position: (138, 135),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "p",
                       position: (138, 138),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "name",
                         position: (138, 140),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "' => '",
                     position: (138, 145),
                    },
                    Expression {
                     expression: PropertyAccess {
                      expression: Variable {
                       identifier: "dict",
                       position: (138, 153),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "fullName",
                         position: (138, 158),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Raw {
                     content: "'",
                     position: (138, 167),
                    },
                   ],
                   position: (138, 134),
                  },
                  position: (138, 85),
                 },
                 position: (138, 79),
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (138, 171),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "dicts",
                    position: (138, 175),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Raw {
              content: ");\n\n",
              position: (138, 181),
             },
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (140, 9),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "extraConfig",
                  position: (140, 13),
                 },
                ],
               },
               default: None,
              },
             },
             Raw {
              content: "\n",
              position: (140, 25),
             },
            ],
            position: (123, 55),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (143, 5),
             },
             Raw {
              content: "nginx",
              position: (143, 14),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (144, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (144, 16),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "virtualHosts",
                 position: (145, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (146, 11),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "hostName",
                        position: (146, 15),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                 to: Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "forceSSL",
                       position: (147, 11),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: Variable {
                      identifier: "mkDefault",
                      position: (147, 22),
                     },
                     arguments: [
                      Variable {
                       identifier: "true",
                       position: (147, 32),
                      },
                     ],
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "enableACME",
                       position: (148, 11),
                      },
                     ],
                    },
                    to: FunctionApplication {
                     function: Variable {
                      identifier: "mkDefault",
                      position: (148, 24),
                     },
                     arguments: [
                      Variable {
                       identifier: "true",
                       position: (148, 34),
                      },
                     ],
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "locations",
                       position: (149, 11),
                      },
                      Expression {
                       expression: String {
                        parts: [
                         Raw {
                          content: "/",
                          position: (149, 22),
                         },
                        ],
                        position: (149, 21),
                       },
                      },
                     ],
                    },
                    to: Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "root",
                          position: (150, 13),
                         },
                        ],
                       },
                       to: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (150, 20),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "package",
                           position: (150, 24),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "index",
                          position: (151, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "index.php",
                          position: (151, 22),
                         },
                        ],
                        position: (151, 21),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "extraConfig",
                          position: (152, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "location ~* \\.php$ {\n  fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n  fastcgi_pass unix:",
                          position: (153, 1),
                         },
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "fpm",
                            position: (155, 37),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "socket",
                              position: (155, 41),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: ";\n  include ",
                          position: (155, 48),
                         },
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "config",
                            position: (156, 27),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "services",
                              position: (156, 34),
                             },
                             Raw {
                              content: "nginx",
                              position: (156, 43),
                             },
                             Raw {
                              content: "package",
                              position: (156, 49),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/conf/fastcgi_params;\n  include ",
                          position: (156, 57),
                         },
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "pkgs",
                            position: (157, 27),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "nginx",
                              position: (157, 32),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/conf/fastcgi.conf;\n}\n",
                          position: (157, 38),
                         },
                        ],
                        position: (152, 27),
                       },
                      },
                     ],
                     recursive: false,
                     position: (149, 27),
                    },
                   },
                  ],
                  recursive: false,
                  position: (146, 27),
                 },
                },
               ],
               recursive: false,
               position: (145, 22),
              },
             },
            ],
            recursive: false,
            position: (143, 22),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (165, 5),
             },
             Raw {
              content: "postgresql",
              position: (165, 14),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (165, 27),
            },
            arguments: [
             Variable {
              identifier: "localDB",
              position: (165, 32),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "enable",
                   position: (166, 7),
                  },
                 ],
                },
                to: Variable {
                 identifier: "true",
                 position: (166, 16),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "ensureDatabases",
                   position: (167, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (167, 27),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "database",
                      position: (167, 31),
                     },
                     Raw {
                      content: "dbname",
                      position: (167, 40),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (167, 25),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "ensureUsers",
                   position: (168, 7),
                  },
                 ],
                },
                to: List {
                 elements: [
                  Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "name",
                        position: (169, 9),
                       },
                      ],
                     },
                     to: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (169, 16),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "database",
                         position: (169, 20),
                        },
                        Raw {
                         content: "username",
                         position: (169, 29),
                        },
                       ],
                      },
                      default: None,
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "ensurePermissions",
                        position: (170, 9),
                       },
                      ],
                     },
                     to: Map {
                      bindings: [
                       Binding {
                        from: AttributePath {
                         parts: [
                          Expression {
                           expression: String {
                            parts: [
                             Raw {
                              content: "DATABASE ",
                              position: (171, 12),
                             },
                             Expression {
                              expression: PropertyAccess {
                               expression: Variable {
                                identifier: "cfg",
                                position: (171, 23),
                               },
                               attribute_path: AttributePath {
                                parts: [
                                 Raw {
                                  content: "database",
                                  position: (171, 27),
                                 },
                                 Raw {
                                  content: "username",
                                  position: (171, 36),
                                 },
                                ],
                               },
                               default: None,
                              },
                             },
                            ],
                            position: (171, 11),
                           },
                          },
                         ],
                        },
                        to: String {
                         parts: [
                          Raw {
                           content: "ALL PRIVILEGES",
                           position: (171, 50),
                          },
                         ],
                         position: (171, 49),
                        },
                       },
                      ],
                      recursive: false,
                      position: (170, 29),
                     },
                    },
                   ],
                   recursive: false,
                   position: (168, 23),
                  },
                 ],
                 position: (168, 21),
                },
               },
              ],
              recursive: false,
              position: (165, 40),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (176, 5),
             },
             Raw {
              content: "users",
              position: (176, 11),
             },
             Expression {
              expression: Variable {
               identifier: "user",
               position: (176, 19),
              },
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (176, 27),
            },
            arguments: [
             Variable {
              identifier: "localDB",
              position: (176, 32),
             },
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "group",
                   position: (177, 7),
                  },
                 ],
                },
                to: Variable {
                 identifier: "user",
                 position: (177, 15),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "isSystemUser",
                   position: (178, 7),
                  },
                 ],
                },
                to: Variable {
                 identifier: "true",
                 position: (178, 22),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "createHome",
                   position: (179, 7),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (179, 20),
                },
               },
              ],
              recursive: false,
              position: (176, 40),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (181, 5),
             },
             Raw {
              content: "groups",
              position: (181, 11),
             },
             Expression {
              expression: Variable {
               identifier: "user",
               position: (181, 20),
              },
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (181, 28),
            },
            arguments: [
             Variable {
              identifier: "localDB",
              position: (181, 33),
             },
             Map {
              bindings: [],
              recursive: false,
              position: (181, 41),
             },
            ],
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "services",
              position: (183, 5),
             },
             Raw {
              content: "phpfpm",
              position: (183, 14),
             },
             Raw {
              content: "pools",
              position: (183, 21),
             },
             Raw {
              content: "roundcube",
              position: (183, 27),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "user",
                 position: (184, 7),
                },
               ],
              },
              to: IfThenElse {
               predicate: Variable {
                identifier: "localDB",
                position: (184, 17),
               },
               then: Variable {
                identifier: "user",
                position: (184, 30),
               },
               else_: String {
                parts: [
                 Raw {
                  content: "nginx",
                  position: (184, 41),
                 },
                ],
                position: (184, 40),
               },
               position: (184, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "phpOptions",
                 position: (185, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "error_log = 'stderr'\nlog_errors = on\npost_max_size = ",
                 position: (186, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (188, 27),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "maxAttachmentSize",
                     position: (188, 31),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\nupload_max_filesize = ",
                 position: (188, 49),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (189, 33),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "maxAttachmentSize",
                     position: (189, 37),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\n",
                 position: (189, 55),
                },
               ],
               position: (185, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "settings",
                 position: (191, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "mapAttrs",
                position: (191, 18),
               },
               arguments: [
                Function {
                 argument: Simple {
                  identifier: "name",
                 },
                 definition: Variable {
                  identifier: "mkDefault",
                  position: (191, 34),
                 },
                 position: (191, 28),
                },
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "listen.owner",
                         position: (192, 10),
                        },
                       ],
                       position: (192, 9),
                      },
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "nginx",
                      position: (192, 27),
                     },
                    ],
                    position: (192, 26),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "listen.group",
                         position: (193, 10),
                        },
                       ],
                       position: (193, 9),
                      },
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "nginx",
                      position: (193, 27),
                     },
                    ],
                    position: (193, 26),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "listen.mode",
                         position: (194, 10),
                        },
                       ],
                       position: (194, 9),
                      },
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "0660",
                      position: (194, 26),
                     },
                    ],
                    position: (194, 25),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "pm",
                         position: (195, 10),
                        },
                       ],
                       position: (195, 9),
                      },
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "dynamic",
                      position: (195, 17),
                     },
                    ],
                    position: (195, 16),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "pm.max_children",
                         position: (196, 10),
                        },
                       ],
                       position: (196, 9),
                      },
                     },
                    ],
                   },
                   to: Int {
                    value: 75,
                    position: (196, 29),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "pm.start_servers",
                         position: (197, 10),
                        },
                       ],
                       position: (197, 9),
                      },
                     },
                    ],
                   },
                   to: Int {
                    value: 2,
                    position: (197, 30),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "pm.min_spare_servers",
                         position: (198, 10),
                        },
                       ],
                       position: (198, 9),
                      },
                     },
                    ],
                   },
                   to: Int {
                    value: 1,
                    position: (198, 34),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "pm.max_spare_servers",
                         position: (199, 10),
                        },
                       ],
                       position: (199, 9),
                      },
                     },
                    ],
                   },
                   to: Int {
                    value: 20,
                    position: (199, 34),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "pm.max_requests",
                         position: (200, 10),
                        },
                       ],
                       position: (200, 9),
                      },
                     },
                    ],
                   },
                   to: Int {
                    value: 500,
                    position: (200, 29),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Expression {
                      expression: String {
                       parts: [
                        Raw {
                         content: "catch_workers_output",
                         position: (201, 10),
                        },
                       ],
                       position: (201, 9),
                      },
                     },
                    ],
                   },
                   to: Variable {
                    identifier: "true",
                    position: (201, 34),
                   },
                  },
                 ],
                 recursive: false,
                 position: (191, 45),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "phpPackage",
                 position: (203, 7),
                },
               ],
              },
              to: Variable {
               identifier: "phpWithPspell",
               position: (203, 20),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "phpEnv",
                 position: (204, 7),
                },
                Raw {
                 content: "ASPELL_CONF",
                 position: (204, 14),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "dict-dir ",
                 position: (204, 29),
                },
                Expression {
                 expression: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (204, 40),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "aspellWithDicts",
                      position: (204, 45),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   Function {
                    argument: Simple {
                     identifier: "_",
                    },
                    definition: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (204, 65),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "dicts",
                        position: (204, 69),
                       },
                      ],
                     },
                     default: None,
                    },
                    position: (204, 62),
                   },
                  ],
                 },
                },
                Raw {
                 content: "/lib/aspell",
                 position: (204, 76),
                },
               ],
               position: (204, 28),
              },
             },
            ],
            recursive: false,
            position: (183, 39),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (206, 5),
             },
             Raw {
              content: "services",
              position: (206, 13),
             },
             Raw {
              content: "phpfpm-roundcube",
              position: (206, 22),
             },
             Raw {
              content: "after",
              position: (206, 39),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [
               Raw {
                content: "roundcube-setup.service",
                position: (206, 50),
               },
              ],
              position: (206, 49),
             },
            ],
            position: (206, 47),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (209, 5),
             },
             Raw {
              content: "services",
              position: (209, 13),
             },
             Raw {
              content: "phpfpm-roundcube",
              position: (209, 22),
             },
             Raw {
              content: "restartTriggers",
              position: (209, 39),
             },
            ],
           },
           to: List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "config",
               position: (210, 7),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "environment",
                 position: (210, 14),
                },
                Raw {
                 content: "etc",
                 position: (210, 26),
                },
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "roundcube/config.inc.php",
                    position: (210, 31),
                   },
                  ],
                  position: (210, 30),
                 },
                },
                Raw {
                 content: "source",
                 position: (210, 57),
                },
               ],
              },
              default: None,
             },
            ],
            position: (209, 57),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (213, 5),
             },
             Raw {
              content: "services",
              position: (213, 13),
             },
             Raw {
              content: "roundcube-setup",
              position: (213, 22),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (213, 40),
            },
            arguments: [
             List {
              elements: [
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (214, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: EqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (214, 14),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "database",
                       position: (214, 18),
                      },
                      Raw {
                       content: "host",
                       position: (214, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [
                     Raw {
                      content: "localhost",
                      position: (214, 36),
                     },
                    ],
                    position: (214, 35),
                   },
                  ],
                  position: (214, 32),
                 },
                 Map {
                  bindings: [
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "requires",
                       position: (215, 9),
                      },
                     ],
                    },
                    to: List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "postgresql.service",
                         position: (215, 23),
                        },
                       ],
                       position: (215, 22),
                      },
                     ],
                     position: (215, 20),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "after",
                       position: (216, 9),
                      },
                     ],
                    },
                    to: List {
                     elements: [
                      String {
                       parts: [
                        Raw {
                         content: "postgresql.service",
                         position: (216, 20),
                        },
                       ],
                       position: (216, 19),
                      },
                     ],
                     position: (216, 17),
                    },
                   },
                   Binding {
                    from: AttributePath {
                     parts: [
                      Raw {
                       content: "path",
                       position: (217, 9),
                      },
                     ],
                    },
                    to: List {
                     elements: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "config",
                        position: (217, 18),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "services",
                          position: (217, 25),
                         },
                         Raw {
                          content: "postgresql",
                          position: (217, 34),
                         },
                         Raw {
                          content: "package",
                          position: (217, 45),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                     position: (217, 16),
                    },
                   },
                  ],
                  recursive: false,
                  position: (214, 48),
                 },
                ],
               },
               Map {
                bindings: [
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "wantedBy",
                     position: (220, 9),
                    },
                   ],
                  },
                  to: List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "multi-user.target",
                       position: (220, 23),
                      },
                     ],
                     position: (220, 22),
                    },
                   ],
                   position: (220, 20),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "script",
                     position: (221, 9),
                    },
                   ],
                  },
                  to: LetIn {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "psql",
                        position: (222, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Expression {
                        expression: FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (222, 21),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "optionalString",
                             position: (222, 25),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          UnaryOperation {
                           operator: Not,
                           operand: Variable {
                            identifier: "localDB",
                            position: (222, 42),
                           },
                           position: (222, 41),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "PGPASSFILE=",
                             position: (222, 52),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (222, 65),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "database",
                                 position: (222, 69),
                                },
                                Raw {
                                 content: "passwordFile",
                                 position: (222, 78),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                           ],
                           position: (222, 51),
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " ",
                        position: (222, 93),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "pkgs",
                          position: (222, 96),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "postgresql",
                            position: (222, 101),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/psql ",
                        position: (222, 112),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (222, 124),
                          },
                          attribute_path: AttributePath {
                           parts: [
                            Raw {
                             content: "optionalString",
                             position: (222, 128),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          UnaryOperation {
                           operator: Not,
                           operand: Variable {
                            identifier: "localDB",
                            position: (222, 145),
                           },
                           position: (222, 144),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "-h ",
                             position: (222, 155),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (222, 160),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "database",
                                 position: (222, 164),
                                },
                                Raw {
                                 content: "host",
                                 position: (222, 173),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: " -U ",
                             position: (222, 178),
                            },
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (222, 184),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "database",
                                 position: (222, 188),
                                },
                                Raw {
                                 content: "username",
                                 position: (222, 197),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: " ",
                             position: (222, 206),
                            },
                           ],
                           position: (222, 154),
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " ",
                        position: (222, 209),
                       },
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (222, 212),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "database",
                            position: (222, 216),
                           },
                           Raw {
                            content: "dbname",
                            position: (222, 225),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                      ],
                      position: (222, 18),
                     },
                    },
                   ],
                   target: String {
                    parts: [
                     Raw {
                      content: "version=\"$(",
                      position: (225, 1),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "psql",
                       position: (225, 24),
                      },
                     },
                     Raw {
                      content: " -t <<< \"select value from system where name = 'roundcube-version';\" || true)\"\nif ! (grep -E '[a-zA-Z0-9]' <<< \"$version\"); then\n  ",
                      position: (225, 29),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "psql",
                       position: (227, 15),
                      },
                     },
                     Raw {
                      content: " -f ",
                      position: (227, 20),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (227, 26),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "package",
                          position: (227, 30),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/SQL/postgres.initial.sql\nfi\n\nif [ ! -f /var/lib/roundcube/des_key ]; then\n  base64 /dev/urandom | head -c 24 > /var/lib/roundcube/des_key;\n  # we need to log out everyone in case change the des_key\n  # from the default when upgrading from nixos 19.09\n  ",
                      position: (227, 38),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "psql",
                       position: (234, 15),
                      },
                     },
                     Raw {
                      content: " <<< 'TRUNCATE TABLE session;'\nfi\n\n",
                      position: (234, 20),
                     },
                     Expression {
                      expression: Variable {
                       identifier: "phpWithPspell",
                       position: (237, 13),
                      },
                     },
                     Raw {
                      content: "/bin/php ",
                      position: (237, 27),
                     },
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (237, 38),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "package",
                          position: (237, 42),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/update.sh\n",
                      position: (237, 50),
                     },
                    ],
                    position: (224, 9),
                   },
                   position: (221, 18),
                  },
                 },
                 Binding {
                  from: AttributePath {
                   parts: [
                    Raw {
                     content: "serviceConfig",
                     position: (239, 9),
                    },
                   ],
                  },
                  to: Map {
                   bindings: [
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "Type",
                        position: (240, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "oneshot",
                        position: (240, 19),
                       },
                      ],
                      position: (240, 18),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "StateDirectory",
                        position: (241, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "roundcube",
                        position: (241, 29),
                       },
                      ],
                      position: (241, 28),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "User",
                        position: (242, 11),
                       },
                      ],
                     },
                     to: IfThenElse {
                      predicate: Variable {
                       identifier: "localDB",
                       position: (242, 21),
                      },
                      then: Variable {
                       identifier: "user",
                       position: (242, 34),
                      },
                      else_: String {
                       parts: [
                        Raw {
                         content: "nginx",
                         position: (242, 45),
                        },
                       ],
                       position: (242, 44),
                      },
                      position: (242, 18),
                     },
                    },
                    Binding {
                     from: AttributePath {
                      parts: [
                       Raw {
                        content: "StateDirectoryMode",
                        position: (244, 11),
                       },
                      ],
                     },
                     to: String {
                      parts: [
                       Raw {
                        content: "0700",
                        position: (244, 33),
                       },
                      ],
                      position: (244, 32),
                     },
                    },
                   ],
                   recursive: false,
                   position: (239, 25),
                  },
                 },
                ],
                recursive: false,
                position: (219, 7),
               },
              ],
              position: (213, 48),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (118, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (12, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}