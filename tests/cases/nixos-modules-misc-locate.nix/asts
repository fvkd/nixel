---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "locate",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "isMLocate",
        position: (7, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "hasPrefix",
       position: (7, 15),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "mlocate",
          position: (7, 26),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (7, 35),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "locate",
           position: (7, 39),
          },
          Raw {
           content: "name",
           position: (7, 46),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "isPLocate",
        position: (8, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "hasPrefix",
       position: (8, 15),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "plocate",
          position: (8, 26),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (8, 35),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "locate",
           position: (8, 39),
          },
          Raw {
           content: "name",
           position: (8, 46),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "isMorPLocate",
        position: (9, 3),
       },
      ],
     },
     BinaryOperation {
      operator: LogicalOr,
      operands: [
       Variable {
        identifier: "isMLocate",
        position: (9, 19),
       },
       Variable {
        identifier: "isPLocate",
        position: (9, 32),
       },
      ],
      position: (9, 29),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "isFindutils",
        position: (10, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "hasPrefix",
       position: (10, 17),
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "findutils",
          position: (10, 28),
         },
        ],
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (10, 39),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "locate",
           position: (10, 43),
          },
          Raw {
           content: "name",
           position: (10, 50),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (13, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (14, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (14, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "locate",
               position: (14, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "period",
               position: (14, 51),
              },
             ],
            },
           ],
           position: (14, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (14, 64),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "locate",
               position: (14, 75),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "interval",
               position: (14, 84),
              },
             ],
            },
           ],
           position: (14, 61),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (15, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (15, 31),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "locate",
               position: (15, 42),
              },
             ],
            },
            String {
             parts: [
              Raw {
               content: "includeStore",
               position: (15, 51),
              },
             ],
            },
           ],
           position: (15, 28),
          },
          String {
           parts: [
            Raw {
             content: "Use services.locate.prunePaths",
             position: (15, 68),
            },
           ],
          },
         ],
        },
       ],
       position: (13, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (18, 3),
        },
        Raw {
         content: "services",
         position: (18, 11),
        },
        Raw {
         content: "locate",
         position: (18, 20),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "types",
        position: (18, 34),
       },
       target: Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "enable",
             position: (19, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (19, 14),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (20, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (20, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (21, 7),
                 },
                ],
               },
               Variable {
                identifier: "false",
                position: (21, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (22, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "If enabled, NixOS will periodically update the database of\nfiles used by the <command>locate</command> command.\n",
                  position: (23, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (19, 23),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "locate",
             position: (28, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (28, 14),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (29, 7),
                 },
                ],
               },
               Variable {
                identifier: "package",
                position: (29, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (30, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (30, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "findutils",
                   position: (30, 22),
                  },
                  Raw {
                   content: "locate",
                   position: (30, 32),
                  },
                 ],
                },
                default: None,
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (31, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (31, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "pkgs.findutils",
                    position: (31, 40),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "example",
                  position: (32, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalExpression",
                 position: (32, 17),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "pkgs.mlocate",
                    position: (32, 36),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (33, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "The locate implementation to use\n",
                  position: (34, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (28, 23),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "interval",
             position: (38, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (38, 16),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (39, 7),
                 },
                ],
               },
               Variable {
                identifier: "str",
                position: (39, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (40, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "02:15",
                  position: (40, 18),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "example",
                  position: (41, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "hourly",
                  position: (41, 18),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (42, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Update the locate database at this interval. Updates by\ndefault at 2:15 AM every day.\n\nThe format is described in\n<citerefentry><refentrytitle>systemd.time</refentrytitle>\n<manvolnum>7</manvolnum></citerefentry>.\n\nTo disable automatic updates, set to <literal>\"never\"</literal>\nand run <command>updatedb</command> manually.\n",
                  position: (43, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (38, 25),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "extraFlags",
             position: (55, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (55, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (56, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (56, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (56, 21),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (57, 7),
                 },
                ],
               },
               List {
                elements: [],
                position: (57, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (58, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Extra flags to pass to <command>updatedb</command>.\n",
                  position: (59, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (55, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "output",
             position: (63, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (63, 14),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (64, 7),
                 },
                ],
               },
               Variable {
                identifier: "path",
                position: (64, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (65, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "/var/cache/locatedb",
                  position: (65, 18),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (66, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "The database file to build.\n",
                  position: (67, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (63, 23),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "localuser",
             position: (71, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (71, 17),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (72, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "nullOr",
                 position: (72, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (72, 21),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (73, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "nobody",
                  position: (73, 18),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (74, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "The user to search non-network directories as, using\n<command>su</command>.\n",
                  position: (75, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (71, 26),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "pruneFS",
             position: (80, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (80, 15),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (81, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (81, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (81, 21),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (82, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "afs",
                    position: (83, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "anon_inodefs",
                    position: (84, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "auto",
                    position: (85, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "autofs",
                    position: (86, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "bdev",
                    position: (87, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "binfmt",
                    position: (88, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "binfmt_misc",
                    position: (89, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ceph",
                    position: (90, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cgroup",
                    position: (91, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cgroup2",
                    position: (92, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cifs",
                    position: (93, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "coda",
                    position: (94, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "configfs",
                    position: (95, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cramfs",
                    position: (96, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "cpuset",
                    position: (97, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "curlftpfs",
                    position: (98, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "debugfs",
                    position: (99, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "devfs",
                    position: (100, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "devpts",
                    position: (101, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "devtmpfs",
                    position: (102, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ecryptfs",
                    position: (103, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "eventpollfs",
                    position: (104, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "exofs",
                    position: (105, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "futexfs",
                    position: (106, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ftpfs",
                    position: (107, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse",
                    position: (108, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fusectl",
                    position: (109, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fusesmb",
                    position: (110, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.ceph",
                    position: (111, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.glusterfs",
                    position: (112, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.gvfsd-fuse",
                    position: (113, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.mfs",
                    position: (114, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.rclone",
                    position: (115, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.rozofs",
                    position: (116, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "fuse.sshfs",
                    position: (117, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "gfs",
                    position: (118, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "gfs2",
                    position: (119, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hostfs",
                    position: (120, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hugetlbfs",
                    position: (121, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "inotifyfs",
                    position: (122, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "iso9660",
                    position: (123, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "jffs2",
                    position: (124, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "lustre",
                    position: (125, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "lustre_lite",
                    position: (126, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "misc",
                    position: (127, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mfs",
                    position: (128, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mqueue",
                    position: (129, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ncpfs",
                    position: (130, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "nfs",
                    position: (131, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "NFS",
                    position: (132, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "nfs4",
                    position: (133, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "nfsd",
                    position: (134, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "nnpfs",
                    position: (135, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ocfs",
                    position: (136, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ocfs2",
                    position: (137, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "pipefs",
                    position: (138, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "proc",
                    position: (139, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ramfs",
                    position: (140, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "rpc_pipefs",
                    position: (141, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "securityfs",
                    position: (142, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "selinuxfs",
                    position: (143, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sfs",
                    position: (144, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "shfs",
                    position: (145, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "smbfs",
                    position: (146, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sockfs",
                    position: (147, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "spufs",
                    position: (148, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sshfs",
                    position: (149, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "subfs",
                    position: (150, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "supermount",
                    position: (151, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "sysfs",
                    position: (152, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "tmpfs",
                    position: (153, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "tracefs",
                    position: (154, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "ubifs",
                    position: (155, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "udev",
                    position: (156, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "udf",
                    position: (157, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "usbfs",
                    position: (158, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "vboxsf",
                    position: (159, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "vperfctrfs",
                    position: (160, 10),
                   },
                  ],
                 },
                ],
                position: (82, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (162, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Which filesystem types to exclude from indexing\n",
                  position: (163, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (80, 24),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "prunePaths",
             position: (167, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (167, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (168, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (168, 14),
                },
                arguments: [
                 Variable {
                  identifier: "path",
                  position: (168, 21),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (169, 7),
                 },
                ],
               },
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "/tmp",
                    position: (170, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/tmp",
                    position: (171, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/cache",
                    position: (172, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/lock",
                    position: (173, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/run",
                    position: (174, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/spool",
                    position: (175, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/nix/store",
                    position: (176, 10),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/nix/var/log/nix",
                    position: (177, 10),
                   },
                  ],
                 },
                ],
                position: (169, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (179, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Which paths to exclude from indexing\n",
                  position: (180, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (167, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "pruneNames",
             position: (184, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (184, 18),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (185, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "listOf",
                 position: (185, 14),
                },
                arguments: [
                 Variable {
                  identifier: "str",
                  position: (185, 21),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (186, 7),
                 },
                ],
               },
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (186, 17),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "optionals",
                    position: (186, 21),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 UnaryOperation {
                  operator: Not,
                  operand: Variable {
                   identifier: "isFindutils",
                   position: (186, 33),
                  },
                  position: (186, 32),
                 },
                 List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: ".bzr",
                      position: (186, 49),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: ".cache",
                      position: (186, 56),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: ".git",
                      position: (186, 65),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: ".hg",
                      position: (186, 72),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: ".svn",
                      position: (186, 78),
                     },
                    ],
                   },
                  ],
                  position: (186, 46),
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "defaultText",
                  position: (187, 7),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "literalDocBook",
                 position: (187, 21),
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "<literal>[ \".bzr\" \".cache\" \".git\" \".hg\" \".svn\" ]</literal>, if\nsupported by the locate implementation (i.e. mlocate or plocate).\n",
                    position: (188, 1),
                   },
                  ],
                 },
                ],
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (191, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Directory components which should exclude paths containing them from indexing\n",
                  position: (192, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (184, 27),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "pruneBindMounts",
             position: (196, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "mkOption",
            position: (196, 23),
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "type",
                  position: (197, 7),
                 },
                ],
               },
               Variable {
                identifier: "bool",
                position: (197, 14),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "default",
                  position: (198, 7),
                 },
                ],
               },
               Variable {
                identifier: "false",
                position: (198, 17),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "description",
                  position: (199, 7),
                 },
                ],
               },
               String {
                parts: [
                 Raw {
                  content: "Whether not to index bind mounts\n",
                  position: (200, 1),
                 },
                ],
               },
              ),
             ],
             recursive: false,
             position: (196, 32),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (18, 41),
       },
       position: (18, 29),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (206, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (206, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (206, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (206, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (207, 5),
             },
             Raw {
              content: "groups",
              position: (207, 11),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (207, 20),
            },
            arguments: [
             List {
              elements: [
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (208, 8),
                },
                arguments: [
                 Variable {
                  identifier: "isMLocate",
                  position: (208, 13),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "mlocate",
                       position: (208, 25),
                      },
                     ],
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (208, 35),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (208, 23),
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (209, 8),
                },
                arguments: [
                 Variable {
                  identifier: "isPLocate",
                  position: (209, 13),
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "plocate",
                       position: (209, 25),
                      },
                     ],
                    },
                    Map {
                     bindings: [],
                     recursive: false,
                     position: (209, 35),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (209, 23),
                 },
                ],
               },
              ],
              position: (207, 28),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "security",
              position: (212, 5),
             },
             Raw {
              content: "wrappers",
              position: (212, 14),
             },
            ],
           },
           LetIn {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "common",
                 position: (214, 9),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "owner",
                    position: (215, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "root",
                    position: (215, 20),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "permissions",
                    position: (216, 11),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "u+rx,g+x,o+x",
                    position: (216, 26),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "setgid",
                    position: (217, 11),
                   },
                  ],
                 },
                 Variable {
                  identifier: "true",
                  position: (217, 20),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "setuid",
                    position: (218, 11),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (218, 20),
                 },
                ),
               ],
               recursive: false,
               position: (214, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "mlocate",
                 position: (220, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (220, 20),
               },
               arguments: [
                Variable {
                 identifier: "isMLocate",
                 position: (220, 25),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (221, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "mlocate",
                      position: (221, 20),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "source",
                      position: (222, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (222, 23),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "locate",
                          position: (222, 27),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/locate",
                      position: (222, 34),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                 position: (220, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "plocate",
                 position: (224, 9),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (224, 20),
               },
               arguments: [
                Variable {
                 identifier: "isPLocate",
                 position: (224, 25),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (225, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Raw {
                      content: "plocate",
                      position: (225, 20),
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "source",
                      position: (226, 11),
                     },
                    ],
                   },
                   String {
                    parts: [
                     Expression {
                      expression: PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (226, 23),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "locate",
                          position: (226, 27),
                         },
                        ],
                       },
                       default: None,
                      },
                     },
                     Raw {
                      content: "/bin/plocate",
                      position: (226, 34),
                     },
                    ],
                   },
                  ),
                 ],
                 recursive: false,
                 position: (224, 35),
                },
               ],
              },
             ),
            ],
            target: FunctionApplication {
             function: Variable {
              identifier: "mkIf",
              position: (229, 7),
             },
             arguments: [
              Variable {
               identifier: "isMorPLocate",
               position: (229, 12),
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "locate",
                    position: (230, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mkMerge",
                   position: (230, 18),
                  },
                  arguments: [
                   List {
                    elements: [
                     Variable {
                      identifier: "common",
                      position: (230, 28),
                     },
                     Variable {
                      identifier: "mlocate",
                      position: (230, 35),
                     },
                     Variable {
                      identifier: "plocate",
                      position: (230, 43),
                     },
                    ],
                    position: (230, 26),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "plocate",
                    position: (231, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "mkIf",
                   position: (231, 20),
                  },
                  arguments: [
                   Variable {
                    identifier: "isPLocate",
                    position: (231, 25),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "mkMerge",
                     position: (231, 36),
                    },
                    arguments: [
                     List {
                      elements: [
                       Variable {
                        identifier: "common",
                        position: (231, 46),
                       },
                       Variable {
                        identifier: "plocate",
                        position: (231, 53),
                       },
                      ],
                      position: (231, 44),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (229, 25),
              },
             ],
            },
            position: (213, 7),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "nixpkgs",
              position: (234, 5),
             },
             Raw {
              content: "config",
              position: (234, 13),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "locate",
                 position: (234, 24),
                },
                Raw {
                 content: "dbfile",
                 position: (234, 31),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (234, 40),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "output",
                  position: (234, 44),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (234, 22),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (236, 5),
             },
             Raw {
              content: "systemPackages",
              position: (236, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (236, 36),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "locate",
                 position: (236, 40),
                },
               ],
              },
              default: None,
             },
            ],
            position: (236, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (238, 5),
             },
             Raw {
              content: "variables",
              position: (238, 17),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (238, 29),
            },
            arguments: [
             UnaryOperation {
              operator: Not,
              operand: Variable {
               identifier: "isMorPLocate",
               position: (238, 36),
              },
              position: (238, 35),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "LOCATE_PATH",
                   position: (238, 52),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (238, 66),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "output",
                    position: (238, 70),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
              position: (238, 50),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (240, 5),
             },
             Raw {
              content: "etc",
              position: (240, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Expression {
                 expression: String {
                  parts: [
                   Raw {
                    content: "updatedb.conf",
                    position: (242, 8),
                   },
                  ],
                 },
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "text",
                    position: (243, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "PRUNEFS=\"",
                    position: (244, 1),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "lib",
                       position: (244, 22),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "concatStringsSep",
                         position: (244, 26),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (244, 44),
                        },
                       ],
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (244, 47),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "pruneFS",
                          position: (244, 51),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\"\nPRUNENAMES=\"",
                    position: (244, 59),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "lib",
                       position: (245, 25),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "concatStringsSep",
                         position: (245, 29),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (245, 47),
                        },
                       ],
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (245, 50),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "pruneNames",
                          position: (245, 54),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\"\nPRUNEPATHS=\"",
                    position: (245, 65),
                   },
                   Expression {
                    expression: FunctionApplication {
                     function: PropertyAccess {
                      expression: Variable {
                       identifier: "lib",
                       position: (246, 25),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "concatStringsSep",
                         position: (246, 29),
                        },
                       ],
                      },
                      default: None,
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (246, 47),
                        },
                       ],
                      },
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (246, 50),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "prunePaths",
                          position: (246, 54),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "\"\nPRUNE_BIND_MOUNTS=\"",
                    position: (246, 65),
                   },
                   Expression {
                    expression: IfThenElse {
                     predicate: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (247, 35),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "pruneBindMounts",
                         position: (247, 39),
                        },
                       ],
                      },
                      default: None,
                     },
                     then: String {
                      parts: [
                       Raw {
                        content: "yes",
                        position: (247, 61),
                       },
                      ],
                     },
                     else_: String {
                      parts: [
                       Raw {
                        content: "no",
                        position: (247, 72),
                       },
                      ],
                     },
                     position: (247, 32),
                    },
                   },
                   Raw {
                    content: "\"\n",
                    position: (247, 76),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (242, 25),
              },
             ),
            ],
            recursive: false,
            position: (240, 23),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "warnings",
              position: (252, 5),
             },
            ],
           },
           BinaryOperation {
            operator: Concatenation,
            operands: [
             FunctionApplication {
              function: Variable {
               identifier: "optional",
               position: (252, 16),
              },
              arguments: [
               BinaryOperation {
                operator: LogicalAnd,
                operands: [
                 Variable {
                  identifier: "isMorPLocate",
                  position: (252, 26),
                 },
                 BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (252, 42),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "localuser",
                       position: (252, 46),
                      },
                     ],
                    },
                    default: None,
                   },
                   Variable {
                    identifier: "null",
                    position: (252, 59),
                   },
                  ],
                  position: (252, 56),
                 },
                ],
                position: (252, 39),
               },
               String {
                parts: [
                 Raw {
                  content: "mlocate does not support the services.locate.localuser option; updatedb will run as root. (Silence with services.locate.localuser = null.)",
                  position: (253, 8),
                 },
                ],
               },
              ],
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (254, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   Variable {
                    identifier: "isFindutils",
                    position: (254, 18),
                   },
                   BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (254, 33),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "pruneNames",
                         position: (254, 37),
                        },
                       ],
                      },
                      default: None,
                     },
                     List {
                      elements: [],
                      position: (254, 51),
                     },
                    ],
                    position: (254, 48),
                   },
                  ],
                  position: (254, 30),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "findutils locate does not support pruning by directory component",
                    position: (255, 8),
                   },
                  ],
                 },
                ],
               },
               FunctionApplication {
                function: Variable {
                 identifier: "optional",
                 position: (256, 8),
                },
                arguments: [
                 BinaryOperation {
                  operator: LogicalAnd,
                  operands: [
                   Variable {
                    identifier: "isFindutils",
                    position: (256, 18),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (256, 33),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "pruneBindMounts",
                       position: (256, 37),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                  position: (256, 30),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "findutils locate does not support skipping bind mounts",
                    position: (257, 8),
                   },
                  ],
                 },
                ],
               },
              ],
              position: (256, 5),
             },
            ],
            position: (254, 5),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (259, 5),
             },
             Raw {
              content: "services",
              position: (259, 13),
             },
             Raw {
              content: "update-locatedb",
              position: (259, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (260, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Update Locate Database",
                 position: (260, 22),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (261, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkIf",
                position: (261, 14),
               },
               arguments: [
                UnaryOperation {
                 operator: Not,
                 operand: Variable {
                  identifier: "isMorPLocate",
                  position: (261, 21),
                 },
                 position: (261, 20),
                },
                List {
                 elements: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "pkgs",
                    position: (261, 37),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "su",
                      position: (261, 42),
                     },
                    ],
                   },
                   default: None,
                  },
                 ],
                 position: (261, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "script",
                 position: (265, 7),
                },
               ],
              },
              IfThenElse {
               predicate: Variable {
                identifier: "isMorPLocate",
                position: (266, 12),
               },
               then: LetIn {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "toFlags",
                     position: (268, 13),
                    },
                   ],
                  },
                  Function {
                   argument: Some(
                    "x",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: FunctionApplication {
                    function: Variable {
                     identifier: "optional",
                     position: (269, 15),
                    },
                    arguments: [
                     BinaryOperation {
                      operator: NotEqualTo,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (269, 25),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Expression {
                           expression: Variable {
                            identifier: "x",
                            position: (269, 31),
                           },
                          },
                         ],
                        },
                        default: None,
                       },
                       List {
                        elements: [],
                        position: (269, 37),
                       },
                      ],
                      position: (269, 34),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "--",
                        position: (270, 18),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: PropertyAccess {
                          expression: Variable {
                           identifier: "lib",
                           position: (270, 22),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "toLower",
                             position: (270, 26),
                            },
                           ],
                          },
                          default: None,
                         },
                         arguments: [
                          Variable {
                           identifier: "x",
                           position: (270, 34),
                          },
                         ],
                        },
                       },
                       Raw {
                        content: " '",
                        position: (270, 36),
                       },
                       Expression {
                        expression: FunctionApplication {
                         function: Variable {
                          identifier: "concatStringsSep",
                          position: (270, 40),
                         },
                         arguments: [
                          String {
                           parts: [
                            Raw {
                             content: " ",
                             position: (270, 58),
                            },
                           ],
                          },
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (270, 61),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Expression {
                              expression: Variable {
                               identifier: "x",
                               position: (270, 67),
                              },
                             },
                            ],
                           },
                           default: None,
                          },
                         ],
                        },
                       },
                       Raw {
                        content: "'",
                        position: (270, 70),
                       },
                      ],
                     },
                    ],
                   },
                   position: (268, 23),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "args",
                     position: (271, 13),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "concatLists",
                    position: (271, 20),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "map",
                      position: (271, 33),
                     },
                     arguments: [
                      Variable {
                       identifier: "toFlags",
                       position: (271, 37),
                      },
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "pruneFS",
                           position: (271, 48),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "pruneNames",
                           position: (271, 58),
                          },
                         ],
                        },
                        String {
                         parts: [
                          Raw {
                           content: "prunePaths",
                           position: (271, 71),
                          },
                         ],
                        },
                       ],
                       position: (271, 45),
                      },
                     ],
                    },
                   ],
                  },
                 ),
                ],
                target: String {
                 parts: [
                  Raw {
                   content: "exec ",
                   position: (274, 1),
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (274, 20),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "locate",
                       position: (274, 24),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "/bin/updatedb \\\n  --output ",
                   position: (274, 31),
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "toString",
                     position: (275, 26),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (275, 35),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "output",
                         position: (275, 39),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  },
                  Raw {
                   content: " ",
                   position: (275, 46),
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (275, 49),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: " ",
                        position: (275, 67),
                       },
                      ],
                     },
                     Variable {
                      identifier: "args",
                      position: (275, 70),
                     },
                    ],
                   },
                  },
                  Raw {
                   content: " \\\n  --prune-bind-mounts ",
                   position: (275, 75),
                  },
                  Expression {
                   expression: IfThenElse {
                    predicate: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (276, 40),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "pruneBindMounts",
                        position: (276, 44),
                       },
                      ],
                     },
                     default: None,
                    },
                    then: String {
                     parts: [
                      Raw {
                       content: "yes",
                       position: (276, 66),
                      },
                     ],
                    },
                    else_: String {
                     parts: [
                      Raw {
                       content: "no",
                       position: (276, 77),
                      },
                     ],
                    },
                    position: (276, 37),
                   },
                  },
                  Raw {
                   content: " \\\n  ",
                   position: (276, 81),
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (277, 17),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: " ",
                        position: (277, 35),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (277, 38),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "extraFlags",
                         position: (277, 42),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  },
                  Raw {
                   content: "\n",
                   position: (277, 53),
                  },
                 ],
                },
                position: (267, 11),
               },
               else_: String {
                parts: [
                 Raw {
                  content: "exec ",
                  position: (280, 1),
                 },
                 Expression {
                  expression: PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (280, 18),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "locate",
                      position: (280, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                 },
                 Raw {
                  content: "/bin/updatedb \\\n  ",
                  position: (280, 29),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "optionalString",
                    position: (281, 15),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (281, 31),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "localuser",
                            position: (281, 35),
                           },
                          ],
                         },
                         default: None,
                        },
                        Variable {
                         identifier: "null",
                         position: (281, 48),
                        },
                       ],
                       position: (281, 45),
                      },
                      UnaryOperation {
                       operator: Not,
                       operand: Variable {
                        identifier: "isMorPLocate",
                        position: (281, 57),
                       },
                       position: (281, 56),
                      },
                     ],
                     position: (281, 53),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "--localuser=",
                       position: (281, 72),
                      },
                      Expression {
                       expression: PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (281, 86),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "localuser",
                           position: (281, 90),
                          },
                         ],
                        },
                        default: None,
                       },
                      },
                     ],
                    },
                   ],
                  },
                 },
                 Raw {
                  content: " \\\n  --output=",
                  position: (281, 102),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toString",
                    position: (282, 24),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (282, 33),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "output",
                        position: (282, 37),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                 Raw {
                  content: " ",
                  position: (282, 44),
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "concatStringsSep",
                    position: (282, 47),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: " ",
                       position: (282, 65),
                      },
                     ],
                    },
                    PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (282, 68),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "extraFlags",
                        position: (282, 72),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\n",
                  position: (282, 83),
                 },
                ],
               },
               position: (266, 9),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (284, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "optionalAttrs",
                position: (284, 21),
               },
               arguments: [
                UnaryOperation {
                 operator: Not,
                 operand: Variable {
                  identifier: "isMorPLocate",
                  position: (284, 37),
                 },
                 position: (284, 36),
                },
                Map {
                 bindings: [
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "PRUNEFS",
                      position: (285, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (285, 19),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: " ",
                        position: (285, 37),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (285, 40),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "pruneFS",
                         position: (285, 44),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "PRUNEPATHS",
                      position: (286, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (286, 22),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: " ",
                        position: (286, 40),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (286, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "prunePaths",
                         position: (286, 47),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "PRUNENAMES",
                      position: (287, 9),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "concatStringsSep",
                     position: (287, 22),
                    },
                    arguments: [
                     String {
                      parts: [
                       Raw {
                        content: " ",
                        position: (287, 40),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (287, 43),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "pruneNames",
                         position: (287, 47),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  ),
                  KeyValue(
                   AttributePath {
                    attributes: [
                     Raw {
                      content: "PRUNE_BIND_MOUNTS",
                      position: (288, 9),
                     },
                    ],
                   },
                   IfThenElse {
                    predicate: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (288, 32),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "pruneBindMounts",
                        position: (288, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                    then: String {
                     parts: [
                      Raw {
                       content: "yes",
                       position: (288, 58),
                      },
                     ],
                    },
                    else_: String {
                     parts: [
                      Raw {
                       content: "no",
                       position: (288, 69),
                      },
                     ],
                    },
                    position: (288, 29),
                   },
                  ),
                 ],
                 recursive: false,
                 position: (284, 51),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (290, 7),
                },
                Raw {
                 content: "Nice",
                 position: (290, 21),
                },
               ],
              },
              Int {
               value: 19,
               position: (290, 28),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (291, 7),
                },
                Raw {
                 content: "IOSchedulingClass",
                 position: (291, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "idle",
                 position: (291, 42),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (292, 7),
                },
                Raw {
                 content: "PrivateTmp",
                 position: (292, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "yes",
                 position: (292, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (293, 7),
                },
                Raw {
                 content: "PrivateNetwork",
                 position: (293, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "yes",
                 position: (293, 39),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (294, 7),
                },
                Raw {
                 content: "NoNewPrivileges",
                 position: (294, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "yes",
                 position: (294, 40),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (295, 7),
                },
                Raw {
                 content: "ReadOnlyPaths",
                 position: (295, 21),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/",
                 position: (295, 38),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (301, 7),
                },
                Raw {
                 content: "ReadWritePaths",
                 position: (301, 21),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "dirOf",
                position: (301, 38),
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (301, 44),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "output",
                    position: (301, 48),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
            ],
            recursive: false,
            position: (259, 40),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (304, 5),
             },
             Raw {
              content: "timers",
              position: (304, 13),
             },
             Raw {
              content: "update-locatedb",
              position: (304, 20),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (304, 38),
            },
            arguments: [
             BinaryOperation {
              operator: NotEqualTo,
              operands: [
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (304, 44),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "interval",
                   position: (304, 48),
                  },
                 ],
                },
                default: None,
               },
               String {
                parts: [
                 Raw {
                  content: "never",
                  position: (304, 61),
                 },
                ],
               },
              ],
              position: (304, 57),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (305, 7),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Update timer for locate database",
                   position: (305, 22),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "partOf",
                   position: (306, 7),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "update-locatedb.service",
                     position: (306, 19),
                    },
                   ],
                  },
                 ],
                 position: (306, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "wantedBy",
                   position: (307, 7),
                  },
                 ],
                },
                List {
                 elements: [
                  String {
                   parts: [
                    Raw {
                     content: "timers.target",
                     position: (307, 21),
                    },
                   ],
                  },
                 ],
                 position: (307, 18),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "timerConfig",
                   position: (308, 7),
                  },
                  Raw {
                   content: "OnCalendar",
                   position: (308, 19),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (308, 32),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "interval",
                    position: (308, 36),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
              position: (304, 69),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (206, 28),
        },
       ],
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (312, 3),
        },
        Raw {
         content: "maintainers",
         position: (312, 8),
        },
       ],
      },
      With {
       expression: PropertyAccess {
        expression: Variable {
         identifier: "lib",
         position: (312, 27),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (312, 31),
          },
         ],
        },
        default: None,
       },
       target: List {
        elements: [
         Variable {
          identifier: "SuperSandro2000",
          position: (312, 46),
         },
        ],
        position: (312, 44),
       },
       position: (312, 22),
      },
     ),
    ],
    recursive: false,
    position: (12, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}