---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "siproxd",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "conf",
        position: (9, 3),
       },
      ],
     },
     to: String {
      parts: [
       Raw {
        content: "daemonize = 0\nrtp_proxy_enable = 1\nuser = siproxd\nif_inbound  = ",
        position: (10, 1),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (13, 21),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "ifInbound",
            position: (13, 25),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "\nif_outbound = ",
        position: (13, 35),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (14, 21),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "ifOutbound",
            position: (14, 25),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "\nsip_listen_port = ",
        position: (14, 36),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "toString",
          position: (15, 25),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (15, 34),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "sipListenPort",
              position: (15, 38),
             },
            ],
           },
           default: None,
          },
         ],
        },
       },
       Raw {
        content: "\nrtp_port_low    = ",
        position: (15, 52),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "toString",
          position: (16, 25),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (16, 34),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "rtpPortLow",
              position: (16, 38),
             },
            ],
           },
           default: None,
          },
         ],
        },
       },
       Raw {
        content: "\nrtp_port_high   = ",
        position: (16, 49),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "toString",
          position: (17, 25),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (17, 34),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "rtpPortHigh",
              position: (17, 38),
             },
            ],
           },
           default: None,
          },
         ],
        },
       },
       Raw {
        content: "\nrtp_dscp        = ",
        position: (17, 50),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "toString",
          position: (18, 25),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (18, 34),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "rtpDscp",
              position: (18, 38),
             },
            ],
           },
           default: None,
          },
         ],
        },
       },
       Raw {
        content: "\nsip_dscp        = ",
        position: (18, 46),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "toString",
          position: (19, 25),
         },
         arguments: [
          PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (19, 34),
           },
           attribute_path: AttributePath {
            parts: [
             Raw {
              content: "sipDscp",
              position: (19, 38),
             },
            ],
           },
           default: None,
          },
         ],
        },
       },
       Raw {
        content: "\n",
        position: (19, 46),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "optionalString",
          position: (20, 7),
         },
         arguments: [
          Parentheses {
           expression: BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (20, 23),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "hostsAllowReg",
                 position: (20, 27),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [],
              position: (20, 44),
             },
            ],
            position: (20, 41),
           },
           position: (20, 22),
          },
          String {
           parts: [
            Raw {
             content: "hosts_allow_reg = ",
             position: (20, 49),
            },
            Interpolation {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (20, 69),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: ",",
                  position: (20, 87),
                 },
                ],
                position: (20, 86),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (20, 90),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "hostsAllowReg",
                   position: (20, 94),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
           ],
           position: (20, 48),
          },
         ],
        },
       },
       Raw {
        content: "\n",
        position: (20, 110),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "optionalString",
          position: (21, 7),
         },
         arguments: [
          Parentheses {
           expression: BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (21, 23),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "hostsAllowSip",
                 position: (21, 27),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [],
              position: (21, 44),
             },
            ],
            position: (21, 41),
           },
           position: (21, 22),
          },
          String {
           parts: [
            Raw {
             content: "hosts_allow_sip = ",
             position: (21, 49),
            },
            Interpolation {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (21, 69),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: ",",
                  position: (21, 87),
                 },
                ],
                position: (21, 86),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (21, 90),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "hostsAllowSip",
                   position: (21, 94),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
           ],
           position: (21, 48),
          },
         ],
        },
       },
       Raw {
        content: "\n",
        position: (21, 110),
       },
       Interpolation {
        expression: FunctionApplication {
         function: Variable {
          identifier: "optionalString",
          position: (22, 7),
         },
         arguments: [
          Parentheses {
           expression: BinaryOperation {
            operator: NotEqualTo,
            operands: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (22, 23),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "hostsDenySip",
                 position: (22, 27),
                },
               ],
              },
              default: None,
             },
             List {
              elements: [],
              position: (22, 43),
             },
            ],
            position: (22, 40),
           },
           position: (22, 22),
          },
          String {
           parts: [
            Raw {
             content: "hosts_deny_sip  = ",
             position: (22, 48),
            },
            Interpolation {
             expression: FunctionApplication {
              function: Variable {
               identifier: "concatStringsSep",
               position: (22, 68),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: ",",
                  position: (22, 86),
                 },
                ],
                position: (22, 85),
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (22, 89),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "hostsDenySip",
                   position: (22, 93),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            },
           ],
           position: (22, 47),
          },
         ],
        },
       },
       Raw {
        content: "\n",
        position: (22, 108),
       },
       Interpolation {
        expression: IfThenElse {
         predicate: Parentheses {
          expression: BinaryOperation {
           operator: NotEqualTo,
           operands: [
            PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (23, 11),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "passwordFile",
                position: (23, 15),
               },
              ],
             },
             default: None,
            },
            String {
             parts: [],
             position: (23, 31),
            },
           ],
           position: (23, 28),
          },
          position: (23, 10),
         },
         then: String {
          parts: [
           Raw {
            content: "proxy_auth_pwfile = ",
            position: (23, 41),
           },
           Interpolation {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (23, 63),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "passwordFile",
                position: (23, 67),
               },
              ],
             },
             default: None,
            },
           },
          ],
          position: (23, 40),
         },
         else_: String {
          parts: [],
          position: (23, 87),
         },
         position: (23, 7),
        },
       },
       Raw {
        content: "\n",
        position: (23, 90),
       },
       Interpolation {
        expression: PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (24, 7),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "extraConfig",
            position: (24, 11),
           },
          ],
         },
         default: None,
        },
       },
       Raw {
        content: "\n",
        position: (24, 23),
       },
      ],
      position: (9, 10),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "confFile",
        position: (27, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "builtins",
        position: (27, 14),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "toFile",
          position: (27, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "siproxd.conf",
          position: (27, 31),
         },
        ],
        position: (27, 30),
       },
       Variable {
        identifier: "conf",
        position: (27, 45),
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (33, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (35, 5),
           },
           Raw {
            content: "siproxd",
            position: (35, 14),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (37, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (37, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (38, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (38, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (38, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (39, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (39, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (40, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether to enable the Siproxd SIP\nproxy/masquerading daemon.\n",
                    position: (41, 1),
                   },
                  ],
                  position: (40, 23),
                 },
                },
               ],
               recursive: false,
               position: (37, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ifInbound",
               position: (46, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (46, 19),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (47, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (47, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (47, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (48, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "eth0",
                    position: (48, 20),
                   },
                  ],
                  position: (48, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (49, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Local network interface",
                    position: (49, 24),
                   },
                  ],
                  position: (49, 23),
                 },
                },
               ],
               recursive: false,
               position: (46, 28),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "ifOutbound",
               position: (52, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (52, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (53, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (53, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "ppp0",
                    position: (54, 20),
                   },
                  ],
                  position: (54, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (55, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Public network interface",
                    position: (55, 24),
                   },
                  ],
                  position: (55, 23),
                 },
                },
               ],
               recursive: false,
               position: (52, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "hostsAllowReg",
               position: (58, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (58, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (59, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (59, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (59, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (59, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (59, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (60, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (60, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "192.168.1.0/24",
                      position: (61, 22),
                     },
                    ],
                    position: (61, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "192.168.2.0/24",
                      position: (61, 39),
                     },
                    ],
                    position: (61, 38),
                   },
                  ],
                  position: (61, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Acess control list for incoming SIP registrations.\n",
                    position: (63, 1),
                   },
                  ],
                  position: (62, 23),
                 },
                },
               ],
               recursive: false,
               position: (58, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "hostsAllowSip",
               position: (67, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (67, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (68, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (68, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (68, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (68, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (68, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (69, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (69, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (70, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "123.45.0.0/16",
                      position: (70, 22),
                     },
                    ],
                    position: (70, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "123.46.0.0/16",
                      position: (70, 38),
                     },
                    ],
                    position: (70, 37),
                   },
                  ],
                  position: (70, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (71, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Acess control list for incoming SIP traffic.\n",
                    position: (72, 1),
                   },
                  ],
                  position: (71, 23),
                 },
                },
               ],
               recursive: false,
               position: (67, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "hostsDenySip",
               position: (76, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (76, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (77, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (77, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (77, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (77, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (77, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (78, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (78, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (79, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [
                   String {
                    parts: [
                     Raw {
                      content: "10.0.0.0/8",
                      position: (79, 22),
                     },
                    ],
                    position: (79, 21),
                   },
                   String {
                    parts: [
                     Raw {
                      content: "11.0.0.0/8",
                      position: (79, 35),
                     },
                    ],
                    position: (79, 34),
                   },
                  ],
                  position: (79, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (80, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Acess control list for denying incoming\nSIP registrations and traffic.\n",
                    position: (81, 1),
                   },
                  ],
                  position: (80, 23),
                 },
                },
               ],
               recursive: false,
               position: (76, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "sipListenPort",
               position: (86, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (86, 23),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (87, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (87, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (87, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (88, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 5060,
                  position: (88, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (89, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Port to listen for incoming SIP messages.\n",
                    position: (90, 1),
                   },
                  ],
                  position: (89, 23),
                 },
                },
               ],
               recursive: false,
               position: (86, 32),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "rtpPortLow",
               position: (94, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (94, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (95, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (95, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (95, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (96, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 7070,
                  position: (96, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (97, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Bottom of UDP port range for incoming and outgoing RTP traffic\n",
                    position: (98, 1),
                   },
                  ],
                  position: (97, 23),
                 },
                },
               ],
               recursive: false,
               position: (94, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "rtpPortHigh",
               position: (102, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (102, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (103, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (103, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (103, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (104, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 7089,
                  position: (104, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (105, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Top of UDP port range for incoming and outgoing RTP traffic\n",
                    position: (106, 1),
                   },
                  ],
                  position: (105, 23),
                 },
                },
               ],
               recursive: false,
               position: (102, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "rtpTimeout",
               position: (110, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (110, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (111, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (111, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (111, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (112, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 300,
                  position: (112, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (113, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Timeout for an RTP stream. If for the specified\nnumber of seconds no data is relayed on an active\nstream, it is considered dead and will be killed.\n",
                    position: (114, 1),
                   },
                  ],
                  position: (113, 23),
                 },
                },
               ],
               recursive: false,
               position: (110, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "rtpDscp",
               position: (120, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (120, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (121, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (121, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (121, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (122, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 46,
                  position: (122, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (123, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "DSCP (differentiated services) value to be assigned\nto RTP packets. Allows QOS aware routers to handle\ndifferent types traffic with different priorities.\n",
                    position: (124, 1),
                   },
                  ],
                  position: (123, 23),
                 },
                },
               ],
               recursive: false,
               position: (120, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "sipDscp",
               position: (130, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (130, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (131, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (131, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "int",
                     position: (131, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (132, 9),
                   },
                  ],
                 },
                 to: Int {
                  value: 0,
                  position: (132, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (133, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "DSCP (differentiated services) value to be assigned\nto SIP packets. Allows QOS aware routers to handle\ndifferent types traffic with different priorities.\n",
                    position: (134, 1),
                   },
                  ],
                  position: (133, 23),
                 },
                },
               ],
               recursive: false,
               position: (130, 26),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "passwordFile",
               position: (140, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (140, 22),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (141, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (141, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (141, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (142, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (142, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (143, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Path to per-user password file.\n",
                    position: (144, 1),
                   },
                  ],
                  position: (143, 23),
                 },
                },
               ],
               recursive: false,
               position: (140, 31),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "extraConfig",
               position: (148, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (148, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (149, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (149, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (149, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (150, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (150, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (151, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Extra configuration to add to siproxd configuration.\n",
                    position: (152, 1),
                   },
                  ],
                  position: (151, 23),
                 },
                },
               ],
               recursive: false,
               position: (148, 30),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (35, 24),
         },
        },
       ],
       recursive: false,
       position: (33, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (162, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (162, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (162, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (162, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "users",
              position: (164, 5),
             },
             Raw {
              content: "users",
              position: (164, 11),
             },
             Raw {
              content: "siproxyd",
              position: (164, 17),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "uid",
                 position: (165, 7),
                },
               ],
              },
              to: PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (165, 13),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "ids",
                  position: (165, 20),
                 },
                 Raw {
                  content: "uids",
                  position: (165, 24),
                 },
                 Raw {
                  content: "siproxd",
                  position: (165, 29),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            recursive: false,
            position: (164, 28),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (168, 5),
             },
             Raw {
              content: "services",
              position: (168, 13),
             },
             Raw {
              content: "siproxd",
              position: (168, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (169, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "SIP proxy/masquerading daemon",
                 position: (169, 22),
                },
               ],
               position: (169, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (170, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (170, 21),
                  },
                 ],
                 position: (170, 20),
                },
               ],
               position: (170, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (171, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (171, 18),
                  },
                 ],
                 position: (171, 17),
                },
               ],
               position: (171, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (172, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ExecStart",
                    position: (173, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (173, 24),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "siproxd",
                        position: (173, 29),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/sbin/siproxd -c ",
                    position: (173, 37),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "confFile",
                     position: (173, 56),
                    },
                   },
                  ],
                  position: (173, 21),
                 },
                },
               ],
               recursive: false,
               position: (172, 23),
              },
             },
            ],
            recursive: false,
            position: (168, 32),
           },
          },
         ],
         recursive: false,
         position: (162, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (30, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}