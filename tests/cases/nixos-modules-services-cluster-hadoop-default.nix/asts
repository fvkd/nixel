---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (3, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (3, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (3, 16),
       },
       Raw {
        content: "hadoop",
        position: (3, 25),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "opt",
       position: (4, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "options",
      position: (4, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (4, 17),
       },
       Raw {
        content: "hadoop",
        position: (4, 26),
       },
      ],
     },
     default: None,
    },
   ),
  ],
  target: With {
   expression: Variable {
    identifier: "lib",
    position: (6, 6),
   },
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (8, 3),
        },
       ],
      },
      List {
       elements: [
        Path {
         parts: [
          Raw {
           content: "./yarn.nix",
          },
         ],
         position: (8, 15),
        },
        Path {
         parts: [
          Raw {
           content: "./hdfs.nix",
          },
         ],
         position: (8, 26),
        },
       ],
       position: (8, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (10, 3),
        },
        Raw {
         content: "services",
         position: (10, 11),
        },
        Raw {
         content: "hadoop",
         position: (10, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "coreSite",
            position: (11, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (11, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (12, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (12, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (13, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (13, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (13, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (13, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (13, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (14, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (14, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"fs.defaultFS\" = \"hdfs://localhost\";\n}\n",
                  },
                 ],
                 position: (14, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (19, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Hadoop core-site.xml definition\n<link xlink:href=\"https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/core-default.xml\"/>\n",
                },
               ],
               position: (19, 21),
              },
             ),
            ],
            recursive: false,
            position: (11, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "coreSiteInternal",
            position: (24, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (24, 24),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (25, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (25, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (26, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (26, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (26, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (26, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (26, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "internal",
                 position: (27, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (27, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (28, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Internal option to add configs to core-site.xml based on module options\n",
                },
               ],
               position: (28, 21),
              },
             ),
            ],
            recursive: false,
            position: (24, 33),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "hdfsSiteDefault",
            position: (33, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (33, 23),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (34, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "dfs.namenode.rpc-bind-host",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0.0.0.0",
                   },
                  ],
                  position: (35, 40),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "dfs.namenode.http-address",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0.0.0.0:9870",
                   },
                  ],
                  position: (36, 39),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "dfs.namenode.servicerpc-bind-host",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0.0.0.0",
                   },
                  ],
                  position: (37, 47),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "dfs.namenode.http-bind-host",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0.0.0.0",
                   },
                  ],
                  position: (38, 41),
                 },
                ),
               ],
               recursive: false,
               position: (34, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (40, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (40, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (40, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (40, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (40, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (41, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Default options for hdfs-site.xml\n",
                },
               ],
               position: (41, 21),
              },
             ),
            ],
            recursive: false,
            position: (33, 32),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "hdfsSite",
            position: (45, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (45, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (46, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (46, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (47, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (47, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (47, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (47, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (47, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (48, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (48, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"dfs.nameservices\" = \"namenode1\";\n}\n",
                  },
                 ],
                 position: (48, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (53, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional options and overrides for hdfs-site.xml\n<link xlink:href=\"https://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-hdfs/hdfs-default.xml\"/>\n",
                },
               ],
               position: (53, 21),
              },
             ),
            ],
            recursive: false,
            position: (45, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "hdfsSiteInternal",
            position: (58, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (58, 24),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (59, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (59, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (60, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (60, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (60, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (60, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (60, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "internal",
                 position: (61, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (61, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (62, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Internal option to add configs to hdfs-site.xml based on module options\n",
                },
               ],
               position: (62, 21),
              },
             ),
            ],
            recursive: false,
            position: (58, 33),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mapredSiteDefault",
            position: (67, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (67, 25),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (68, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "mapreduce.framework.name",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "yarn",
                   },
                  ],
                  position: (69, 38),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.app.mapreduce.am.env",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "HADOOP_MAPRED_HOME=",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (70, 61),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (70, 65),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/lib/",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (70, 80),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (70, 84),
                       },
                       Raw {
                        content: "untarDir",
                        position: (70, 92),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (70, 39),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "mapreduce.map.env",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "HADOOP_MAPRED_HOME=",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (71, 53),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (71, 57),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/lib/",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (71, 72),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (71, 76),
                       },
                       Raw {
                        content: "untarDir",
                        position: (71, 84),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (71, 31),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "mapreduce.reduce.env",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "HADOOP_MAPRED_HOME=",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (72, 56),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (72, 60),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/lib/",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (72, 75),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "package",
                        position: (72, 79),
                       },
                       Raw {
                        content: "untarDir",
                        position: (72, 87),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                  position: (72, 34),
                 },
                ),
               ],
               recursive: false,
               position: (68, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (74, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (74, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"mapreduce.framework.name\" = \"yarn\";\n  \"yarn.app.mapreduce.am.env\" = \"HADOOP_MAPRED_HOME=",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (77, 74),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (77, 78),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "}/lib/",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (77, 105),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (77, 109),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: ".untarDir}\";\n  \"mapreduce.map.env\" = \"HADOOP_MAPRED_HOME=",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (78, 66),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (78, 70),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "}/lib/",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (78, 97),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (78, 101),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: ".untarDir}\";\n  \"mapreduce.reduce.env\" = \"HADOOP_MAPRED_HOME=",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (79, 69),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (79, 73),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "}/lib/",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (79, 100),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (79, 104),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: ".untarDir}\";\n}\n",
                  },
                 ],
                 position: (74, 39),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (82, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (82, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (82, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (82, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (82, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (83, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Default options for mapred-site.xml\n",
                },
               ],
               position: (83, 21),
              },
             ),
            ],
            recursive: false,
            position: (67, 34),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "mapredSite",
            position: (87, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (87, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (88, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (88, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (89, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (89, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (89, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (89, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (89, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (90, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (90, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"mapreduce.map.java.opts\" = \"-Xmx900m -XX:+UseParallelGC\";\n}\n",
                  },
                 ],
                 position: (90, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (95, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional options and overrides for mapred-site.xml\n<link xlink:href=\"https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml\"/>\n",
                },
               ],
               position: (95, 21),
              },
             ),
            ],
            recursive: false,
            position: (87, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "yarnSiteDefault",
            position: (101, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (101, 23),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (102, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.admin-env",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "PATH=$PATH",
                   },
                  ],
                  position: (103, 40),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.aux-services",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "mapreduce_shuffle",
                   },
                  ],
                  position: (104, 43),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.aux-services.mapreduce_shuffle.class",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "org.apache.hadoop.mapred.ShuffleHandler",
                   },
                  ],
                  position: (105, 67),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.bind-host",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0.0.0.0",
                   },
                  ],
                  position: (106, 40),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.container-executor.class",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor",
                   },
                  ],
                  position: (107, 55),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.env-whitelist",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,LANG,TZ",
                   },
                  ],
                  position: (108, 44),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.linux-container-executor.group",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hadoop",
                   },
                  ],
                  position: (109, 61),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.linux-container-executor.path",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/run/wrappers/yarn-nodemanager/bin/container-executor",
                   },
                  ],
                  position: (110, 60),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.log-dirs",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/log/hadoop/yarn/nodemanager",
                   },
                  ],
                  position: (111, 39),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.resourcemanager.bind-host",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "0.0.0.0",
                   },
                  ],
                  position: (112, 44),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.resourcemanager.scheduler.class",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler",
                   },
                  ],
                  position: (113, 50),
                 },
                ),
               ],
               recursive: false,
               position: (102, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (115, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (115, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (115, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (115, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (115, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (116, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Default options for yarn-site.xml\n",
                },
               ],
               position: (116, 21),
              },
             ),
            ],
            recursive: false,
            position: (101, 32),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "yarnSite",
            position: (120, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (120, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (121, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (121, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (122, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (122, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (122, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (122, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (122, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (123, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (123, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"yarn.resourcemanager.hostname\" = \"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.networking.hostName}\";\n}\n",
                  },
                 ],
                 position: (123, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (128, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Additional options and overrides for yarn-site.xml\n<link xlink:href=\"https://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-common/yarn-default.xml\"/>\n",
                },
               ],
               position: (128, 21),
              },
             ),
            ],
            recursive: false,
            position: (120, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "yarnSiteInternal",
            position: (133, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (133, 24),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (134, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (134, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (135, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (135, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (135, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (135, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (135, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "internal",
                 position: (136, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (136, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (137, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Internal option to add configs to yarn-site.xml based on module options\n",
                },
               ],
               position: (137, 21),
              },
             ),
            ],
            recursive: false,
            position: (133, 33),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "httpfsSite",
            position: (142, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (142, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (143, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (143, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (144, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (144, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (144, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (144, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (144, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (145, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (145, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  \"hadoop.http.max.threads\" = 500;\n}\n",
                  },
                 ],
                 position: (145, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (150, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Hadoop httpfs-site.xml definition\n<link xlink:href=\"https://hadoop.apache.org/docs/current/hadoop-hdfs-httpfs/httpfs-default.html\"/>\n",
                },
               ],
               position: (150, 21),
              },
             ),
            ],
            recursive: false,
            position: (142, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "log4jProperties",
            position: (156, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (156, 23),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (157, 7),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (157, 20),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (157, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/lib/",
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (157, 39),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (157, 43),
                    },
                    Raw {
                     content: "untarDir",
                     position: (157, 51),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/etc/hadoop/log4j.properties",
                },
               ],
               position: (157, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (158, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (158, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (159, 23),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (159, 27),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "}/lib/",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{config.",
                  },
                  Expression {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "opt",
                     position: (159, 54),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "package",
                       position: (159, 58),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: ".untarDir}/etc/hadoop/log4j.properties\"\n",
                  },
                 ],
                 position: (158, 39),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (161, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (161, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "path",
                  position: (161, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (162, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (162, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{pkgs.hadoop}/lib/",
                  },
                  Raw {
                   content: "$",
                  },
                  Raw {
                   content: "{pkgs.hadoop.untarDir}/etc/hadoop/log4j.properties\";\n",
                  },
                 ],
                 position: (162, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (165, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "log4j.properties file added to HADOOP_CONF_DIR",
                },
               ],
               position: (165, 21),
              },
             ),
            ],
            recursive: false,
            position: (156, 32),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "containerExecutorCfg",
            position: (168, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (168, 28),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (169, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "yarn.nodemanager.linux-container-executor.group",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "hadoop",
                   },
                  ],
                  position: (171, 59),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "min.user.id",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 Int {
                  value: 1000,
                  position: (172, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "feature.terminal.enabled",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 Int {
                  value: 1,
                  position: (173, 36),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Expression {
                    expression: __StringParts(
                     [
                      Raw {
                       content: "feature.mount-cgroup.enabled",
                      },
                     ],
                    ),
                   },
                  ],
                 },
                 Int {
                  value: 1,
                  position: (174, 42),
                 },
                ),
               ],
               recursive: false,
               position: (169, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (176, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (176, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (176, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (176, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "anything",
                    position: (176, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (177, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (177, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "options.services.hadoop.containerExecutorCfg.default // {\n  \"feature.terminal.enabled\" = 0;\n}\n",
                  },
                 ],
                 position: (177, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (182, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Yarn container-executor.cfg definition\n<link xlink:href=\"https://hadoop.apache.org/docs/r2.7.2/hadoop-yarn/hadoop-yarn-site/SecureContainer.html\"/>\n",
                },
               ],
               position: (182, 21),
              },
             ),
            ],
            recursive: false,
            position: (168, 37),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "extraConfDirs",
            position: (188, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (188, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (189, 7),
                },
               ],
              },
              List {
               elements: [],
               position: (189, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (190, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (190, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "listOf",
                   position: (190, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (190, 27),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (190, 33),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (191, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (191, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[\n  ./extraHDFSConfs\n  ./extraYARNConfs\n]\n",
                  },
                 ],
                 position: (191, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (197, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Directories containing additional config files to be added to HADOOP_CONF_DIR",
                },
               ],
               position: (197, 21),
              },
             ),
            ],
            recursive: false,
            position: (188, 30),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "gatewayRole",
            position: (200, 5),
           },
           Raw {
            content: "enable",
            position: (200, 17),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (200, 26),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "gateway role for deploying hadoop configs",
             },
            ],
            position: (200, 41),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (202, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (202, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (203, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (203, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (203, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (204, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (204, 17),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "hadoop",
                  position: (204, 22),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (205, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (205, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.hadoop",
                  },
                 ],
                 position: (205, 39),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (206, 7),
                },
               ],
              },
              String {
               parts: [],
               position: (206, 21),
              },
             ),
            ],
            recursive: false,
            position: (202, 24),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (10, 29),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (211, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (211, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (211, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "gatewayRole",
            position: (211, 21),
           },
           Raw {
            content: "enable",
            position: (211, 33),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (212, 5),
             },
             Raw {
              content: "groups",
              position: (212, 11),
             },
             Raw {
              content: "hadoop",
              position: (212, 18),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "gid",
                 position: (213, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "config",
                position: (213, 13),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "ids",
                  position: (213, 20),
                 },
                 Raw {
                  content: "gids",
                  position: (213, 24),
                 },
                 Raw {
                  content: "hadoop",
                  position: (213, 29),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
            position: (212, 27),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (215, 5),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "systemPackages",
                 position: (216, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "cfg",
                  position: (216, 26),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (216, 30),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (216, 24),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "etc",
                 position: (217, 7),
                },
                Expression {
                 expression: __StringParts(
                  [
                   Raw {
                    content: "hadoop-conf",
                   },
                  ],
                 ),
                },
                Raw {
                 content: "source",
                 position: (217, 25),
                },
               ],
              },
              LetIn {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "hadoopConf",
                    position: (218, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "import",
                      position: (218, 25),
                     },
                     arguments: [
                      Path {
                       parts: [
                        Raw {
                         content: "./conf.nix",
                        },
                       ],
                       position: (218, 32),
                      },
                      Map {
                       bindings: [
                        Inherit(
                         None,
                         [
                          Raw {
                           content: "cfg",
                           position: (218, 53),
                          },
                          Raw {
                           content: "pkgs",
                           position: (218, 57),
                          },
                          Raw {
                           content: "lib",
                           position: (218, 62),
                          },
                         ],
                        ),
                       ],
                       recursive: false,
                       position: (218, 43),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "/",
                   },
                  ],
                  position: (218, 22),
                 },
                ),
               ],
               target: String {
                parts: [
                 Expression {
                  expression: Variable {
                   identifier: "hadoopConf",
                   position: (219, 13),
                  },
                 },
                ],
                position: (219, 10),
               },
               position: (217, 34),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "variables",
                 position: (220, 7),
                },
                Raw {
                 content: "HADOOP_CONF_DIR",
                 position: (220, 17),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/etc/hadoop-conf/",
                },
               ],
               position: (220, 35),
              },
             ),
            ],
            recursive: false,
            position: (215, 19),
           },
          ),
         ],
         recursive: false,
         position: (211, 40),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (7, 1),
   },
   position: (6, 1),
  },
  position: (2, 1),
 },
 position: (1, 1),
}