---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "deliantra-server",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "serverPort",
        position: (7, 3),
       },
      ],
     },
     Int {
      value: 13327,
      position: (7, 16),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (9, 3),
        },
        Raw {
         content: "services",
         position: (9, 11),
        },
        Raw {
         content: "deliantra-server",
         position: (9, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (10, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (10, 14),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (11, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (11, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (11, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (12, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (12, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (13, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "If enabled, the Deliantra game server will be started at boot.\n",
                 position: (14, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (18, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (18, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (19, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (19, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (19, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (20, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (20, 17),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "deliantra-server",
                  position: (20, 22),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (21, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (21, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.deliantra-server",
                   position: (21, 40),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (22, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The package to use for the Deliantra server (and map/arch data, if you\ndon't change dataDir).\n",
                 position: (23, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "dataDir",
            position: (28, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (28, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (29, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (29, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (29, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (30, 7),
                },
               ],
              },
              String {
               parts: [
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (30, 20),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "deliantra-data",
                     position: (30, 25),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (31, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (31, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "\"",
                   position: (31, 41),
                  },
                  Raw {
                   content: "$",
                   position: (31, 42),
                  },
                  Raw {
                   content: "{pkgs.deliantra-data}\"",
                   position: (31, 45),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (32, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Where to store readonly data (maps, archetypes, sprites, etc).\nNote that if you plan to use the live map editor (rather than editing\nthe maps offline and then nixos-rebuilding), THIS MUST BE WRITEABLE --\ncopy the deliantra-data someplace writeable (say,\n/var/lib/deliantra/data) and update this option accordingly.\n",
                 position: (33, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "stateDir",
            position: (41, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (41, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (42, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (42, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (42, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (43, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/var/lib/deliantra",
                 position: (43, 18),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (44, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Where to store runtime data (save files, persistent items, etc).\n\nIf left at the default, this will be automatically created on server\nstartup if it does not already exist. If changed, it is the admin's\nresponsibility to make sure that the directory exists and is writeable\nby the `crossfire` user.\n",
                 position: (45, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "openFirewall",
            position: (54, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (54, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (55, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (55, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (55, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (56, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (56, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (57, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Whether to open ports in the firewall for the server.\n",
                 position: (58, 1),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configFiles",
            position: (62, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (62, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (63, 7),
                },
               ],
              },
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (63, 14),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "attrsOf",
                   position: (63, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (63, 28),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (63, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (64, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Contents of the server configuration files. These will be appended to\nthe example configurations the server comes with and overwrite any\ndefault settings defined therein.\n\nThe example here is not comprehensive. See the files in\n/etc/deliantra-server after enabling this module for full documentation.\n",
                 position: (65, 1),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (72, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (72, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  dm_file = ",
                   position: (73, 1),
                  },
                  Raw {
                   content: "''",
                   position: (74, 21),
                  },
                  Raw {
                   content: "\n    admin:secret_password:localhost\n    jane:xyzzy:*\n  ",
                   position: (74, 24),
                  },
                  Raw {
                   content: "''",
                   position: (77, 11),
                  },
                  Raw {
                   content: ";\n  motd = \"Welcome to Deliantra!\";\n  settings = ",
                   position: (77, 14),
                  },
                  Raw {
                   content: "''",
                   position: (79, 22),
                  },
                  Raw {
                   content: "\n    # Settings for game mechanics.\n    stat_loss_on_death true\n    armor_max_enchant 7\n  ",
                   position: (79, 25),
                  },
                  Raw {
                   content: "''",
                   position: (83, 11),
                  },
                  Raw {
                   content: ";\n  config = ",
                   position: (83, 14),
                  },
                  Raw {
                   content: "''",
                   position: (84, 20),
                  },
                  Raw {
                   content: "\n    # Settings for the server daemon.\n    hiscore_url https://deliantra.example.net/scores/\n    max_map_reset 86400\n  ",
                   position: (84, 23),
                  },
                  Raw {
                   content: "''",
                   position: (88, 11),
                  },
                  Raw {
                   content: ";\n}\n",
                   position: (88, 14),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (91, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "motd",
                    position: (92, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                 },
                ),
               ],
               recursive: false,
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ),
       ],
       recursive: false,
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (97, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (97, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (97, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (97, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (98, 5),
             },
             Raw {
              content: "users",
              position: (98, 11),
             },
             Raw {
              content: "deliantra",
              position: (98, 17),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (99, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Deliantra server daemon user",
                 position: (99, 26),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "home",
                 position: (100, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (100, 25),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "stateDir",
                  position: (100, 29),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "createHome",
                 position: (101, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (101, 25),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "isSystemUser",
                 position: (102, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (102, 25),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "group",
                 position: (103, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "deliantra",
                 position: (103, 26),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (105, 5),
             },
             Raw {
              content: "groups",
              position: (105, 11),
             },
             Raw {
              content: "deliantra",
              position: (105, 18),
             },
            ],
           },
           Map {
            bindings: [],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (112, 5),
             },
             Raw {
              content: "etc",
              position: (112, 17),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "lib",
              position: (112, 23),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "attrsets",
                position: (112, 27),
               },
               Raw {
                content: "mapAttrs'",
                position: (112, 36),
               },
              ],
             },
             default: None,
            },
            arguments: [
             Function {
              argument: Some(
               "name",
              ),
              arguments: FunctionArguments {
               arguments: [],
               ellipsis: false,
              },
              definition: Function {
               argument: Some(
                "value",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "lib",
                  position: (113, 21),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "attrsets",
                    position: (113, 25),
                   },
                   Raw {
                    content: "nameValuePair",
                    position: (113, 34),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 String {
                  parts: [
                   Raw {
                    content: "deliantra-server/",
                    position: (113, 49),
                   },
                   Expression {
                    expression: Variable {
                     identifier: "name",
                     position: (113, 68),
                    },
                   },
                  ],
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "mode",
                       position: (114, 9),
                      },
                     ],
                    },
                    String {
                     parts: [
                      Raw {
                       content: "0644",
                       position: (114, 17),
                      },
                     ],
                    },
                   ),
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "text",
                       position: (115, 9),
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Addition,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "optionalString",
                        position: (118, 12),
                       },
                       arguments: [
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          Variable {
                           identifier: "name",
                           position: (118, 28),
                          },
                          String {
                           parts: [
                            Raw {
                             content: "motd",
                             position: (118, 37),
                            },
                           ],
                          },
                         ],
                         position: (118, 33),
                        },
                        FunctionApplication {
                         function: Variable {
                          identifier: "fileContents",
                          position: (119, 14),
                         },
                         arguments: [
                          String {
                           parts: [
                            Expression {
                             expression: PropertyAccess {
                              expression: Variable {
                               identifier: "cfg",
                               position: (119, 30),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "package",
                                 position: (119, 34),
                                },
                               ],
                              },
                              default: None,
                             },
                            },
                            Raw {
                             content: "/etc/deliantra-server/",
                             position: (119, 42),
                            },
                            Expression {
                             expression: Variable {
                              identifier: "name",
                              position: (119, 66),
                             },
                            },
                           ],
                          },
                         ],
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "\n",
                         position: (120, 14),
                        },
                        Expression {
                         expression: Variable {
                          identifier: "value",
                          position: (120, 18),
                         },
                        },
                       ],
                      },
                     ],
                     position: (120, 11),
                    },
                   ),
                  ],
                  recursive: false,
                 },
                ],
               },
               position: (113, 14),
              },
              position: (113, 8),
             },
             BinaryOperation {
              operator: Update,
              operands: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "motd",
                     position: (122, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "settings",
                     position: (123, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "config",
                     position: (124, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "dm_file",
                     position: (125, 9),
                    },
                   ],
                  },
                  String {
                   parts: [],
                  },
                 ),
                ],
                recursive: false,
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "cfg",
                 position: (126, 12),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "configFiles",
                   position: (126, 16),
                  },
                 ],
                },
                default: None,
               },
              ],
              position: (126, 9),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (128, 5),
             },
             Raw {
              content: "services",
              position: (128, 13),
             },
             Raw {
              content: "deliantra-server",
              position: (128, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (129, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Deliantra Server Daemon",
                 position: (129, 24),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (130, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (130, 26),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "after",
                 position: (131, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "network.target",
                   position: (131, 26),
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "environment",
                 position: (133, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DELIANTRA_DATADIR",
                    position: (134, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (134, 30),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "dataDir",
                        position: (134, 34),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DELIANTRA_LOCALDIR",
                    position: (135, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (135, 31),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "stateDir",
                        position: (135, 35),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "DELIANTRA_CONFDIR",
                    position: (136, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/etc/deliantra-server",
                    position: (136, 28),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (139, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "mkMerge",
                position: (139, 23),
               },
               arguments: [
                List {
                 elements: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "ExecStart",
                        position: (141, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Expression {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (141, 26),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "package",
                            position: (141, 30),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "/bin/deliantra-server",
                        position: (141, 38),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Restart",
                        position: (142, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "always",
                        position: (142, 22),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "User",
                        position: (143, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "deliantra",
                        position: (143, 19),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "Group",
                        position: (144, 11),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "deliantra",
                        position: (144, 20),
                       },
                      ],
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "WorkingDirectory",
                        position: (145, 11),
                       },
                      ],
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (145, 30),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "stateDir",
                         position: (145, 34),
                        },
                       ],
                      },
                      default: None,
                     },
                    ),
                   ],
                   recursive: false,
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkIf",
                    position: (147, 10),
                   },
                   arguments: [
                    BinaryOperation {
                     operator: EqualTo,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (147, 16),
                       },
                       attribute_path: AttributePath {
                        attributes: [
                         Raw {
                          content: "stateDir",
                          position: (147, 20),
                         },
                        ],
                       },
                       default: None,
                      },
                      String {
                       parts: [
                        Raw {
                         content: "/var/lib/deliantra",
                         position: (147, 33),
                        },
                       ],
                      },
                     ],
                     position: (147, 29),
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "StateDirectory",
                          position: (148, 11),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "deliantra",
                          position: (148, 29),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                    },
                   ],
                  },
                 ],
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "preStart",
                 position: (160, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "if [ ! -e \"",
                 position: (161, 1),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (161, 22),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "stateDir",
                     position: (161, 26),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "\"/bookarch ]; then\n  ",
                 position: (161, 35),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (162, 13),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "rsync",
                     position: (162, 18),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/bin/rsync -a --chmod=u=rwX,go=rX \\\n    \"",
                 position: (162, 24),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (163, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (163, 20),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/var/deliantra-server/\" \"",
                 position: (163, 28),
                },
                Expression {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "cfg",
                   position: (163, 55),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "stateDir",
                     position: (163, 59),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Raw {
                 content: "/\"\nfi\n",
                 position: (163, 68),
                },
               ],
              },
             ),
            ],
            recursive: false,
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "networking",
              position: (168, 5),
             },
             Raw {
              content: "firewall",
              position: (168, 16),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (168, 27),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (168, 32),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "openFirewall",
                 position: (168, 36),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "allowedTCPPorts",
                   position: (169, 7),
                  },
                 ],
                },
                List {
                 elements: [
                  Variable {
                   identifier: "serverPort",
                   position: (169, 27),
                  },
                 ],
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ),
         ],
         recursive: false,
        },
       ],
      },
     ),
    ],
    recursive: false,
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}