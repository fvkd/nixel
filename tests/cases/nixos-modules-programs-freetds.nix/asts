---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (5, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (9, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (9, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "environment",
         position: (9, 16),
        },
        Raw {
         content: "freetds",
         position: (9, 28),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (15, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "environment",
            position: (17, 5),
           },
           Raw {
            content: "freetds",
            position: (17, 17),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (17, 27),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (18, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (18, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "attrsOf",
                   position: (18, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (18, 28),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "str",
                    position: (18, 34),
                   },
                  ],
                 },
                 default: None,
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (19, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (19, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (20, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (20, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{ MYDATABASE = ",
                   position: (21, 1),
                  },
                  Raw {
                   content: "''",
                   position: (21, 24),
                  },
                  Raw {
                   content: "\n    host = 10.0.2.100\n    port = 1433\n    tds version = 7.2\n  ",
                   position: (21, 27),
                  },
                  Raw {
                   content: "''",
                   position: (25, 11),
                  },
                  Raw {
                   content: ";\n}\n",
                   position: (25, 14),
                  },
                 ],
                 position: (20, 35),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (28, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Configure freetds database entries. Each attribute denotes\na section within freetds.conf, and the value (a string) is the config\ncontent for that section. When at least one entry is configured\nthe global environment variables FREETDSCONF, FREETDS and SYBASE\nwill be configured to allow the programs that use freetds to find the\nlibrary and config.\n",
                 position: (30, 1),
                },
               ],
               position: (29, 9),
              },
             },
            ],
            recursive: false,
            position: (17, 36),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (15, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (44, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (44, 12),
       },
       arguments: [
        BinaryOperation {
         operator: GreaterThan,
         operands: [
          FunctionApplication {
           function: Variable {
            identifier: "length",
            position: (44, 18),
           },
           arguments: [
            FunctionApplication {
             function: Variable {
              identifier: "attrNames",
              position: (44, 26),
             },
             arguments: [
              Variable {
               identifier: "cfg",
               position: (44, 36),
              },
             ],
            },
           ],
          },
          Int {
           value: 0,
           position: (44, 43),
          },
         ],
         position: (44, 41),
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (46, 5),
             },
             Raw {
              content: "variables",
              position: (46, 17),
             },
             Raw {
              content: "FREETDSCONF",
              position: (46, 27),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "/etc/freetds.conf",
              position: (46, 42),
             },
            ],
            position: (46, 41),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (47, 5),
             },
             Raw {
              content: "variables",
              position: (47, 17),
             },
             Raw {
              content: "FREETDS",
              position: (47, 27),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "/etc/freetds.conf",
              position: (47, 38),
             },
            ],
            position: (47, 37),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (48, 5),
             },
             Raw {
              content: "variables",
              position: (48, 17),
             },
             Raw {
              content: "SYBASE",
              position: (48, 27),
             },
            ],
           },
           to: String {
            parts: [
             Expression {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (48, 39),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "freetds",
                  position: (48, 44),
                 },
                ],
               },
               default: None,
              },
             },
            ],
            position: (48, 36),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (50, 5),
             },
             Raw {
              content: "etc",
              position: (50, 17),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "freetds.conf",
                 position: (50, 22),
                },
               ],
               position: (50, 21),
              },
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "text",
                 position: (50, 40),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "concatStrings",
                position: (51, 8),
               },
               arguments: [
                FunctionApplication {
                 function: Variable {
                  identifier: "mapAttrsToList",
                  position: (51, 23),
                 },
                 arguments: [
                  Function {
                   argument: Simple {
                    identifier: "name",
                   },
                   definition: Function {
                    argument: Simple {
                     identifier: "value",
                    },
                    definition: String {
                     parts: [
                      Raw {
                       content: "[",
                       position: (53, 1),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "name",
                        position: (53, 12),
                       },
                      },
                      Raw {
                       content: "]\n",
                       position: (53, 17),
                      },
                      Expression {
                       expression: Variable {
                        identifier: "value",
                        position: (54, 11),
                       },
                      },
                      Raw {
                       content: "\n",
                       position: (54, 17),
                      },
                     ],
                     position: (52, 9),
                    },
                    position: (51, 45),
                   },
                   position: (51, 39),
                  },
                  Variable {
                   identifier: "cfg",
                   position: (56, 9),
                  },
                 ],
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (50, 38),
           },
          },
         ],
         recursive: false,
         position: (44, 46),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (12, 1),
   },
   position: (7, 1),
  },
  position: (5, 1),
 },
 position: (3, 1),
}