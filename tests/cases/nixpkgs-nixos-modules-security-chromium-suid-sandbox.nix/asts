---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 13),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "security",
         position: (6, 20),
        },
        Raw {
         content: "chromiumSuidSandbox",
         position: (6, 29),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "sandbox",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (7, 13),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "chromium",
         position: (7, 18),
        },
        Raw {
         content: "sandbox",
         position: (7, 27),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "imports",
         position: (10, 3),
        },
       ],
      },
      to: List {
       elements: [
        Parentheses {
         expression: FunctionApplication {
          function: Variable {
           identifier: "mkRenamedOptionModule",
           position: (11, 6),
          },
          arguments: [
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "programs",
                position: (11, 31),
               },
              ],
              position: (11, 30),
             },
             String {
              parts: [
               Raw {
                content: "unity3d",
                position: (11, 42),
               },
              ],
              position: (11, 41),
             },
             String {
              parts: [
               Raw {
                content: "enable",
                position: (11, 52),
               },
              ],
              position: (11, 51),
             },
            ],
            position: (11, 28),
           },
           List {
            elements: [
             String {
              parts: [
               Raw {
                content: "security",
                position: (11, 65),
               },
              ],
              position: (11, 64),
             },
             String {
              parts: [
               Raw {
                content: "chromiumSuidSandbox",
                position: (11, 76),
               },
              ],
              position: (11, 75),
             },
             String {
              parts: [
               Raw {
                content: "enable",
                position: (11, 98),
               },
              ],
              position: (11, 97),
             },
            ],
            position: (11, 62),
           },
          ],
         },
         position: (11, 5),
        },
       ],
       position: (10, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (14, 3),
        },
        Raw {
         content: "security",
         position: (14, 11),
        },
        Raw {
         content: "chromiumSuidSandbox",
         position: (14, 20),
        },
        Raw {
         content: "enable",
         position: (14, 40),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkOption",
        position: (14, 49),
       },
       arguments: [
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "type",
              position: (15, 5),
             },
            ],
           },
           to: PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (15, 12),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "bool",
               position: (15, 18),
              },
             ],
            },
            default: None,
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "default",
              position: (16, 5),
             },
            ],
           },
           to: Variable {
            identifier: "false",
            position: (16, 15),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "description",
              position: (17, 5),
             },
            ],
           },
           to: String {
            parts: [
             Raw {
              content: "Whether to install the Chromium SUID sandbox which is an executable that\nChromium may use in order to achieve sandboxing.\n\nIf you get the error \"The SUID sandbox helper binary was found, but is not\nconfigured correctly.\", turning this on might help.\n\nAlso, if the URL chrome://sandbox tells you that \"You are not adequately\nsandboxed!\", turning this on might resolve the issue.\n",
              position: (18, 1),
             },
            ],
            position: (17, 19),
           },
          },
         ],
         recursive: false,
         position: (14, 58),
        },
       ],
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (29, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (29, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (29, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (29, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "environment",
              position: (30, 5),
             },
             Raw {
              content: "systemPackages",
              position: (30, 17),
             },
            ],
           },
           to: List {
            elements: [
             Variable {
              identifier: "sandbox",
              position: (30, 36),
             },
            ],
            position: (30, 34),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "security",
              position: (31, 5),
             },
             Raw {
              content: "wrappers",
              position: (31, 14),
             },
             Interpolation {
              expression: PropertyAccess {
               expression: Variable {
                identifier: "sandbox",
                position: (31, 25),
               },
               attribute_path: AttributePath {
                parts: [
                 Raw {
                  content: "passthru",
                  position: (31, 33),
                 },
                 Raw {
                  content: "sandboxExecutableName",
                  position: (31, 42),
                 },
                ],
               },
               default: None,
              },
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "setuid",
                 position: (32, 9),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (32, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "owner",
                 position: (33, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "root",
                 position: (33, 18),
                },
               ],
               position: (33, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "group",
                 position: (34, 9),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "root",
                 position: (34, 18),
                },
               ],
               position: (34, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "source",
                 position: (35, 9),
                },
               ],
              },
              to: String {
               parts: [
                Interpolation {
                 expression: Variable {
                  identifier: "sandbox",
                  position: (35, 21),
                 },
                },
                Raw {
                 content: "/bin/",
                 position: (35, 29),
                },
                Interpolation {
                 expression: PropertyAccess {
                  expression: Variable {
                   identifier: "sandbox",
                   position: (35, 36),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "passthru",
                     position: (35, 44),
                    },
                    Raw {
                     content: "sandboxExecutableName",
                     position: (35, 53),
                    },
                   ],
                  },
                  default: None,
                 },
                },
               ],
               position: (35, 18),
              },
             },
            ],
            recursive: false,
            position: (32, 7),
           },
          },
         ],
         recursive: false,
         position: (29, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (9, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}