---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "logstash",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "ops",
        position: (7, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "optionalString",
         position: (7, 13),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "verbosityFlag",
        position: (8, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Addition,
      operands: [
       String {
        parts: [
         Raw {
          content: "--log.level ",
         },
        ],
        position: (8, 19),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (8, 36),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "logLevel",
           position: (8, 40),
          },
         ],
        },
        default: None,
       },
      ],
      position: (8, 34),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "logstashConf",
        position: (10, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (10, 18),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (10, 23),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "logstash.conf",
         },
        ],
        position: (10, 33),
       },
       String {
        parts: [
         Raw {
          content: "input {\n  ",
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (12, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "inputConfig",
              position: (12, 13),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n}\n\nfilter {\n  ",
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (16, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "filterConfig",
              position: (16, 13),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n}\n\noutput {\n  ",
         },
         Expression {
          expression: PropertyAccess {
           expression: Variable {
            identifier: "cfg",
            position: (20, 9),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "outputConfig",
              position: (20, 13),
             },
            ],
           },
           default: None,
          },
         },
         Raw {
          content: "\n}\n",
         },
        ],
        position: (10, 49),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "logstashSettingsYml",
        position: (24, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (24, 25),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (24, 30),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "logstash.yml",
         },
        ],
        position: (24, 40),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (24, 55),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "extraSettings",
           position: (24, 59),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "logstashJvmOptionsFile",
        position: (26, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (26, 28),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "writeText",
          position: (26, 33),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "jvm.options",
         },
        ],
        position: (26, 43),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (26, 57),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "extraJvmOptions",
           position: (26, 61),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "logstashSettingsDir",
        position: (28, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (28, 25),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "runCommand",
          position: (28, 30),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "logstash-settings",
         },
        ],
        position: (28, 41),
       },
       Map {
        bindings: [
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "logstashJvmOptionsFile",
            position: (29, 15),
           },
          ],
         },
         Inherit {
          from: None,
          attributes: [
           Raw {
            content: "logstashSettingsYml",
            position: (30, 15),
           },
          ],
         },
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "preferLocalBuild",
             position: (31, 7),
            },
           ],
          },
          Variable {
           identifier: "true",
           position: (31, 26),
          },
         ),
        ],
        recursive: false,
        position: (28, 61),
       },
       String {
        parts: [
         Raw {
          content: "mkdir -p $out\nln -s $logstashSettingsYml $out/logstash.yml\nln -s $logstashJvmOptionsFile $out/jvm.options\n",
         },
        ],
        position: (32, 7),
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "imports",
         position: (40, 3),
        },
       ],
      },
      List {
       elements: [
        FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (41, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (41, 30),
            },
            String {
             parts: [
              Raw {
               content: "logstash",
              },
             ],
             position: (41, 41),
            },
            String {
             parts: [
              Raw {
               content: "address",
              },
             ],
             position: (41, 52),
            },
           ],
           position: (41, 28),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (41, 66),
            },
            String {
             parts: [
              Raw {
               content: "logstash",
              },
             ],
             position: (41, 77),
            },
            String {
             parts: [
              Raw {
               content: "listenAddress",
              },
             ],
             position: (41, 88),
            },
           ],
           position: (41, 64),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkRemovedOptionModule",
          position: (42, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (42, 30),
            },
            String {
             parts: [
              Raw {
               content: "logstash",
              },
             ],
             position: (42, 41),
            },
            String {
             parts: [
              Raw {
               content: "enableWeb",
              },
             ],
             position: (42, 52),
            },
           ],
           position: (42, 28),
          },
          String {
           parts: [
            Raw {
             content: "The web interface was removed from logstash",
            },
           ],
           position: (42, 66),
          },
         ],
        },
       ],
       position: (40, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (47, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (49, 5),
           },
           Raw {
            content: "logstash",
            position: (49, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "enable",
               position: (51, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (51, 16),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (52, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (52, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "bool",
                     position: (52, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (53, 9),
                   },
                  ],
                 },
                 Variable {
                  identifier: "false",
                  position: (53, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (54, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Enable logstash.",
                   },
                  ],
                  position: (54, 23),
                 },
                ),
               ],
               recursive: false,
               position: (51, 25),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "package",
               position: (57, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (57, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (58, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (58, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "package",
                     position: (58, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (59, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "pkgs",
                   position: (59, 19),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "logstash",
                     position: (59, 24),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "defaultText",
                    position: (60, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (60, 23),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "pkgs.logstash",
                     },
                    ],
                    position: (60, 41),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (61, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Logstash package to use.",
                   },
                  ],
                  position: (61, 23),
                 },
                ),
               ],
               recursive: false,
               position: (57, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "plugins",
               position: (64, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (64, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (65, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (65, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "listOf",
                      position: (65, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (65, 29),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "path",
                       position: (65, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (66, 9),
                   },
                  ],
                 },
                 List {
                  elements: [],
                  position: (66, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (67, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (67, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ pkgs.logstash-contrib ]",
                     },
                    ],
                    position: (67, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (68, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The paths to find other logstash plugins in.",
                   },
                  ],
                  position: (68, 23),
                 },
                ),
               ],
               recursive: false,
               position: (64, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "dataDir",
               position: (71, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (71, 17),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (72, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (72, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (72, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (73, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "/var/lib/logstash",
                   },
                  ],
                  position: (73, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (74, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "A path to directory writable by logstash that it uses to store data.\nPlugins will also have access to this path.\n",
                   },
                  ],
                  position: (74, 23),
                 },
                ),
               ],
               recursive: false,
               position: (71, 26),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "logLevel",
               position: (80, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (80, 18),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (81, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (81, 16),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "enum",
                      position: (81, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "debug",
                       },
                      ],
                      position: (81, 29),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "info",
                       },
                      ],
                      position: (81, 37),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "warn",
                       },
                      ],
                      position: (81, 44),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "error",
                       },
                      ],
                      position: (81, 51),
                     },
                     String {
                      parts: [
                       Raw {
                        content: "fatal",
                       },
                      ],
                      position: (81, 59),
                     },
                    ],
                    position: (81, 27),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (82, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "warn",
                   },
                  ],
                  position: (82, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (83, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Logging verbosity level.",
                   },
                  ],
                  position: (83, 23),
                 },
                ),
               ],
               recursive: false,
               position: (80, 27),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "filterWorkers",
               position: (86, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (86, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (87, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (87, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (87, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (88, 9),
                   },
                  ],
                 },
                 Int {
                  value: 1,
                  position: (88, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (89, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "The quantity of filter workers to run.",
                   },
                  ],
                  position: (89, 23),
                 },
                ),
               ],
               recursive: false,
               position: (86, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "listenAddress",
               position: (92, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (92, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (93, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (93, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (93, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (94, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "127.0.0.1",
                   },
                  ],
                  position: (94, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (95, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Address on which to start webserver.",
                   },
                  ],
                  position: (95, 23),
                 },
                ),
               ],
               recursive: false,
               position: (92, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "port",
               position: (98, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (98, 14),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (99, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (99, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "str",
                     position: (99, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (100, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "9292",
                   },
                  ],
                  position: (100, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (101, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Port on which to start webserver.",
                   },
                  ],
                  position: (101, 23),
                 },
                ),
               ],
               recursive: false,
               position: (98, 23),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "inputConfig",
               position: (104, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (104, 21),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (105, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (105, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (105, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (106, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "generator { }",
                   },
                  ],
                  position: (106, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (107, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Logstash input configuration.",
                   },
                  ],
                  position: (107, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (108, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (108, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "",
                     },
                     Raw {
                      content: "''",
                     },
                     Raw {
                      content: "\n  # Read from journal\n  pipe {\n    command => \"",
                     },
                     Raw {
                      content: "$",
                     },
                     Raw {
                      content: "{pkgs.systemd}/bin/journalctl -f -o json\"\n    type => \"syslog\" codec => json {}\n  }\n",
                     },
                     Raw {
                      content: "''",
                     },
                     Raw {
                      content: "\n",
                     },
                    ],
                    position: (108, 37),
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (104, 30),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "filterConfig",
               position: (119, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (119, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (120, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (120, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (120, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (121, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                  position: (121, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (122, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "logstash filter configuration.",
                   },
                  ],
                  position: (122, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (123, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "if [type] == \"syslog\" {\n  # Keep only relevant systemd fields\n  # http://www.freedesktop.org/software/systemd/man/systemd.journal-fields.html\n  prune {\n    whitelist_names => [\n      \"type\", \"@timestamp\", \"@version\",\n      \"MESSAGE\", \"PRIORITY\", \"SYSLOG_FACILITY\"\n    ]\n  }\n}\n",
                   },
                  ],
                  position: (123, 19),
                 },
                ),
               ],
               recursive: false,
               position: (119, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "outputConfig",
               position: (137, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (137, 22),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (138, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (138, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (138, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (139, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "stdout { codec => rubydebug }",
                   },
                  ],
                  position: (139, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (140, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Logstash output configuration.",
                   },
                  ],
                  position: (140, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (141, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "redis { host => [\"localhost\"] data_type => \"list\" key => \"logstash\" codec => json }\nelasticsearch { }\n",
                   },
                  ],
                  position: (141, 19),
                 },
                ),
               ],
               recursive: false,
               position: (137, 31),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraSettings",
               position: (147, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (147, 23),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (148, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (148, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (148, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (149, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                  position: (149, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (150, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra Logstash settings in YAML format.",
                   },
                  ],
                  position: (150, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (151, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "pipeline:\n  batch:\n    size: 125\n    delay: 5\n",
                   },
                  ],
                  position: (151, 19),
                 },
                ),
               ],
               recursive: false,
               position: (147, 32),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "extraJvmOptions",
               position: (159, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (159, 25),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (160, 9),
                   },
                  ],
                 },
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (160, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "lines",
                     position: (160, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (161, 9),
                   },
                  ],
                 },
                 String {
                  parts: [],
                  position: (161, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (162, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "Extra JVM options, one per line (jvm.options format).",
                   },
                  ],
                  position: (162, 23),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (163, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "-Xms2g\n-Xmx2g\n",
                   },
                  ],
                  position: (163, 19),
                 },
                ),
               ],
               recursive: false,
               position: (159, 34),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (49, 25),
         },
        ),
       ],
       recursive: false,
       position: (47, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (175, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (175, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (175, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (175, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (176, 5),
             },
             Raw {
              content: "services",
              position: (176, 13),
             },
             Raw {
              content: "logstash",
              position: (176, 22),
             },
            ],
           },
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (177, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Logstash Daemon",
                },
               ],
               position: (177, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "wantedBy",
                 position: (178, 7),
                },
               ],
              },
              List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                  },
                 ],
                 position: (178, 20),
                },
               ],
               position: (178, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "path",
                 position: (179, 7),
                },
               ],
              },
              List {
               elements: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "pkgs",
                  position: (179, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bash",
                    position: (179, 21),
                   },
                  ],
                 },
                 default: None,
                },
               ],
               position: (179, 14),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "serviceConfig",
                 position: (180, 7),
                },
               ],
              },
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStartPre",
                    position: (181, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (181, 28),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "coreutils",
                        position: (181, 33),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/mkdir -p \"",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (181, 60),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "dataDir",
                        position: (181, 64),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\" ; ",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (181, 78),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "coreutils",
                        position: (181, 83),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/chmod 700 \"",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (181, 111),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "dataDir",
                        position: (181, 115),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\"",
                   },
                  ],
                  position: (181, 24),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "ExecStart",
                    position: (182, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "concatStringsSep",
                   position: (182, 21),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: " ",
                     },
                    ],
                    position: (182, 38),
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "filter",
                     position: (182, 43),
                    },
                    arguments: [
                     Function {
                      argument: Simple {
                       identifier: "s",
                      },
                      definition: BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        FunctionApplication {
                         function: Variable {
                          identifier: "stringLength",
                          position: (182, 54),
                         },
                         arguments: [
                          Variable {
                           identifier: "s",
                           position: (182, 67),
                          },
                         ],
                        },
                        Int {
                         value: 0,
                         position: (182, 72),
                        },
                       ],
                       position: (182, 69),
                      },
                      position: (182, 51),
                     },
                     List {
                      elements: [
                       String {
                        parts: [
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (183, 14),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "package",
                              position: (183, 18),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/bin/logstash",
                         },
                        ],
                        position: (183, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "-w ",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "toString",
                            position: (184, 17),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "cfg",
                              position: (184, 26),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "filterWorkers",
                                position: (184, 30),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                        ],
                        position: (184, 11),
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "concatMapStringsSep",
                         position: (185, 12),
                        },
                        arguments: [
                         String {
                          parts: [
                           Raw {
                            content: " ",
                           },
                          ],
                          position: (185, 32),
                         },
                         Function {
                          argument: Simple {
                           identifier: "x",
                          },
                          definition: String {
                           parts: [
                            Raw {
                             content: "--path.plugins ",
                            },
                            Expression {
                             expression: Variable {
                              identifier: "x",
                              position: (185, 58),
                             },
                            },
                           ],
                           position: (185, 40),
                          },
                          position: (185, 37),
                         },
                         PropertyAccess {
                          expression: Variable {
                           identifier: "cfg",
                           position: (185, 63),
                          },
                          attribute_path: AttributePath {
                           attributes: [
                            Raw {
                             content: "plugins",
                             position: (185, 67),
                            },
                           ],
                          },
                          default: None,
                         },
                        ],
                       },
                       String {
                        parts: [
                         Expression {
                          expression: Variable {
                           identifier: "verbosityFlag",
                           position: (186, 14),
                          },
                         },
                        ],
                        position: (186, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "-f ",
                         },
                         Expression {
                          expression: Variable {
                           identifier: "logstashConf",
                           position: (187, 17),
                          },
                         },
                        ],
                        position: (187, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "--path.settings ",
                         },
                         Expression {
                          expression: Variable {
                           identifier: "logstashSettingsDir",
                           position: (188, 30),
                          },
                         },
                        ],
                        position: (188, 11),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "--path.data ",
                         },
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (189, 26),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Raw {
                              content: "dataDir",
                              position: (189, 30),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                        ],
                        position: (189, 11),
                       },
                      ],
                      position: (182, 75),
                     },
                    ],
                   },
                  ],
                 },
                ),
               ],
               recursive: false,
               position: (180, 23),
              },
             ),
            ],
            recursive: false,
            position: (176, 33),
           },
          ),
         ],
         recursive: false,
         position: (175, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (39, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}