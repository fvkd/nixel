---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "services",
         position: (6, 16),
        },
        Raw {
         content: "prometheus",
         position: (6, 25),
        },
        Raw {
         content: "exporters",
         position: (6, 36),
        },
        Raw {
         content: "openldap",
         position: (6, 46),
        },
       ],
      },
      default: None,
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "port",
         position: (8, 3),
        },
       ],
      },
      Int {
       value: 9330,
       position: (8, 10),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "extraOpts",
         position: (9, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "ldapCredentialFile",
            position: (10, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (10, 26),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (11, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (11, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "path",
                  position: (11, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (12, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/run/keys/ldap_pass",
                },
               ],
               position: (12, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (13, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Environment file to contain the credentials to authenticate against\n<package>openldap</package>.\n\nThe file should look like this:\n<programlisting>\n---\nldapUser: \"cn=monitoring,cn=Monitor\"\nldapPass: \"secret\"\n</programlisting>\n",
                },
               ],
               position: (13, 21),
              },
             ),
            ],
            recursive: false,
            position: (10, 35),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "protocol",
            position: (25, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (25, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (26, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "tcp",
                },
               ],
               position: (26, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (27, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "udp",
                },
               ],
               position: (27, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (28, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (28, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (28, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (29, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Which protocol to use to connect against <package>openldap</package>.\n",
                },
               ],
               position: (29, 21),
              },
             ),
            ],
            recursive: false,
            position: (25, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "ldapAddr",
            position: (33, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (33, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (34, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "localhost:389",
                },
               ],
               position: (34, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (35, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (35, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (35, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (36, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Address of the <package>openldap</package>-instance.\n",
                },
               ],
               position: (36, 21),
              },
             ),
            ],
            recursive: false,
            position: (33, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "metricsPath",
            position: (40, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (40, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (41, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "/metrics",
                },
               ],
               position: (41, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (42, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (42, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (42, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (43, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "URL path where metrics should be exposed.\n",
                },
               ],
               position: (43, 21),
              },
             ),
            ],
            recursive: false,
            position: (40, 28),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "interval",
            position: (47, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (47, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (48, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "30s",
                },
               ],
               position: (48, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (49, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (49, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "str",
                  position: (49, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (50, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "1m",
                },
               ],
               position: (50, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (51, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Scrape interval of the exporter.\n",
                },
               ],
               position: (51, 21),
              },
             ),
            ],
            recursive: false,
            position: (47, 25),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (9, 15),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "serviceOpts",
         position: (56, 3),
        },
        Raw {
         content: "serviceConfig",
         position: (56, 15),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "ExecStart",
            position: (57, 5),
           },
          ],
         },
         String {
          parts: [
           Raw {
            content: "",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (58, 9),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "prometheus-openldap-exporter",
                position: (58, 14),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: "/bin/openldap_exporter \\\n  --promAddr ",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (59, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "listenAddress",
                position: (59, 26),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: ":",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "toString",
              position: (59, 43),
             },
             arguments: [
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (59, 52),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "port",
                  position: (59, 56),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: " \\\n  --metrPath ",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (60, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "metricsPath",
                position: (60, 26),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: " \\\n  --ldapNet ",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (61, 21),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "protocol",
                position: (61, 25),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: " \\\n  --interval ",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (62, 22),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "interval",
                position: (62, 26),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: " \\\n  --config ",
           },
           Expression {
            expression: PropertyAccess {
             expression: Variable {
              identifier: "cfg",
              position: (63, 20),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "ldapCredentialFile",
                position: (63, 24),
               },
              ],
             },
             default: None,
            },
           },
           Raw {
            content: " \\\n  ",
           },
           Expression {
            expression: FunctionApplication {
             function: Variable {
              identifier: "concatStringsSep",
              position: (64, 11),
             },
             arguments: [
              String {
               parts: [
                Raw {
                 content: " \\\n  ",
                },
               ],
               position: (64, 28),
              },
              PropertyAccess {
               expression: Variable {
                identifier: "cfg",
                position: (64, 38),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "extraFlags",
                  position: (64, 42),
                 },
                ],
               },
               default: None,
              },
             ],
            },
           },
           Raw {
            content: "\n",
           },
          ],
          position: (57, 17),
         },
        ),
       ],
       recursive: false,
       position: (56, 31),
      },
     ),
    ],
    recursive: false,
    position: (7, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}