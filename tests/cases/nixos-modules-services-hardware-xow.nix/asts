---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Binding {
    from: AttributePath {
     parts: [
      Raw {
       content: "cfg",
       position: (4, 3),
      },
     ],
    },
    to: PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (4, 9),
     },
     attribute_path: AttributePath {
      parts: [
       Raw {
        content: "services",
        position: (4, 16),
       },
       Raw {
        content: "hardware",
        position: (4, 25),
       },
       Raw {
        content: "xow",
        position: (4, 34),
       },
      ],
     },
     default: None,
    },
   },
  ],
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "options",
        position: (6, 3),
       },
       Raw {
        content: "services",
        position: (6, 11),
       },
       Raw {
        content: "hardware",
        position: (6, 20),
       },
       Raw {
        content: "xow",
        position: (6, 29),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "enable",
           position: (7, 5),
          },
         ],
        },
        to: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (7, 14),
          },
          attribute_path: AttributePath {
           parts: [
            Raw {
             content: "mkEnableOption",
             position: (7, 18),
            },
           ],
          },
          default: None,
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "xow as a systemd service",
             position: (7, 34),
            },
           ],
           position: (7, 33),
          },
         ],
        },
       },
      ],
      recursive: false,
      position: (6, 35),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "config",
        position: (10, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (10, 12),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "mkIf",
          position: (10, 16),
         },
        ],
       },
       default: None,
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (10, 21),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "enable",
           position: (10, 25),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "hardware",
             position: (11, 5),
            },
            Raw {
             content: "uinput",
             position: (11, 14),
            },
            Raw {
             content: "enable",
             position: (11, 21),
            },
           ],
          },
          to: Variable {
           identifier: "true",
           position: (11, 30),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "boot",
             position: (13, 5),
            },
            Raw {
             content: "extraModprobeConfig",
             position: (13, 10),
            },
           ],
          },
          to: FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "lib",
             position: (13, 32),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "readFile",
               position: (13, 36),
              },
             ],
            },
            default: None,
           },
           arguments: [
            String {
             parts: [
              Expression {
               expression: PropertyAccess {
                expression: Variable {
                 identifier: "pkgs",
                 position: (13, 48),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "xow",
                   position: (13, 53),
                  },
                 ],
                },
                default: None,
               },
              },
              Raw {
               content: "/lib/modprobe.d/xow-blacklist.conf",
               position: (13, 57),
              },
             ],
             position: (13, 45),
            },
           ],
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "systemd",
             position: (15, 5),
            },
            Raw {
             content: "packages",
             position: (15, 13),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (15, 26),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "xow",
                position: (15, 31),
               },
              ],
             },
             default: None,
            },
           ],
           position: (15, 24),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "systemd",
             position: (16, 5),
            },
            Raw {
             content: "services",
             position: (16, 13),
            },
            Raw {
             content: "xow",
             position: (16, 22),
            },
            Raw {
             content: "wantedBy",
             position: (16, 26),
            },
           ],
          },
          to: List {
           elements: [
            String {
             parts: [
              Raw {
               content: "multi-user.target",
               position: (16, 40),
              },
             ],
             position: (16, 39),
            },
           ],
           position: (16, 37),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "services",
             position: (18, 5),
            },
            Raw {
             content: "udev",
             position: (18, 14),
            },
            Raw {
             content: "packages",
             position: (18, 19),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (18, 32),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "xow",
                position: (18, 37),
               },
              ],
             },
             default: None,
            },
           ],
           position: (18, 30),
          },
         },
        ],
        recursive: false,
        position: (10, 32),
       },
      ],
     },
    },
   ],
   recursive: false,
   position: (5, 4),
  },
  position: (3, 1),
 },
 position: (1, 1),
}