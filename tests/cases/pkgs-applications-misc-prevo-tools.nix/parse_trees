---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "stdenv" (1, 8)
          , := lexemes ","
            , "," (1, 14)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchFromGitHub" (1, 16)
            , := lexemes ","
              , "," (1, 31)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "autoreconfHook" (1, 33)
              , := lexemes ","
                , "," (1, 47)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "pkg-config" (1, 49)
                , := lexemes ","
                  , "," (1, 59)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "glib" (1, 61)
                  , := lexemes ","
                    , "," (1, 65)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "expat" (1, 67)
                    , := lexemes ","
                      , "," (2, 1)
                    formals := rules "formal"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "installShellFiles" (2, 3)
      } := lexemes "}"
        } "}" (2, 21)
      : := lexemes ":"
        : ":" (2, 22)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple" "." "attrpath"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "stdenv" (4, 1)
                  . := lexemes "."
                    . "." (4, 7)
                  attrpath := rules "attr"
                    attr := rules "ID"
                      ID := lexemes "ID"
                        ID "mkDerivation" (4, 8)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (4, 21)
                  { := lexemes "{"
                    { "{" (4, 25)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules 
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "pname" (5, 3)
                                = := lexemes "="
                                  = "=" (5, 9)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (5, 11)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "prevo-tools" (5, 12)
                                              " := lexemes "\""
                                                " "\"" (5, 23)
                                ; := lexemes ";"
                                  ; ";" (5, 24)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "version" (6, 3)
                              = := lexemes "="
                                = "=" (6, 11)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "\"" "string_parts" "\""
                                            " := lexemes "\""
                                              " "\"" (6, 13)
                                            string_parts := rules "STR"
                                              STR := lexemes "STR"
                                                STR "0.2" (6, 14)
                                            " := lexemes "\""
                                              " "\"" (6, 17)
                              ; := lexemes ";"
                                ; ";" (6, 18)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "src" (8, 3)
                            = := lexemes "="
                              = "=" (8, 7)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_app" "expr_select"
                                      expr_app := rules "expr_select"
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "fetchFromGitHub" (8, 9)
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "{" "binds" "}"
                                          { := lexemes "{"
                                            { "{" (8, 25)
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                                  binds := rules 
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "owner" (9, 5)
                                                  = := lexemes "="
                                                    = "=" (9, 11)
                                                  expr := rules "expr_function"
                                                    expr_function := rules "expr_if"
                                                      expr_if := rules "expr_op"
                                                        expr_op := rules "expr_app"
                                                          expr_app := rules "expr_select"
                                                            expr_select := rules "expr_simple"
                                                              expr_simple := rules "\"" "string_parts" "\""
                                                                " := lexemes "\""
                                                                  " "\"" (9, 13)
                                                                string_parts := rules "STR"
                                                                  STR := lexemes "STR"
                                                                    STR "bpeel" (9, 14)
                                                                " := lexemes "\""
                                                                  " "\"" (9, 19)
                                                  ; := lexemes ";"
                                                    ; ";" (9, 20)
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "repo" (10, 5)
                                                = := lexemes "="
                                                  = "=" (10, 10)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (10, 12)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "prevodb" (10, 13)
                                                              " := lexemes "\""
                                                                " "\"" (10, 20)
                                                ; := lexemes ";"
                                                  ; ";" (10, 21)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "rev" (11, 5)
                                              = := lexemes "="
                                                = "=" (11, 9)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "version" (11, 11)
                                              ; := lexemes ";"
                                                ; ";" (11, 18)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "sha256" (12, 5)
                                            = := lexemes "="
                                              = "=" (12, 12)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (12, 14)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "1fyrc4g9qdq04nxs4g8x0krxfani5xady6v9m0qfqpbh4xk2ry2d" (12, 15)
                                                          " := lexemes "\""
                                                            " "\"" (12, 67)
                                            ; := lexemes ";"
                                              ; ";" (12, 68)
                                          } := lexemes "}"
                                            } "}" (13, 3)
                            ; := lexemes ";"
                              ; ";" (13, 4)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "nativeBuildInputs" (15, 3)
                          = := lexemes "="
                            = "=" (15, 21)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (15, 23)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules 
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "autoreconfHook" (15, 25)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "pkg-config" (15, 40)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "installShellFiles" (15, 51)
                                        ] := lexemes "]"
                                          ] "]" (15, 69)
                          ; := lexemes ";"
                            ; ";" (15, 70)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "buildInputs" (16, 3)
                        = := lexemes "="
                          = "=" (16, 15)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "[" "expr_list" "]"
                                      [ := lexemes "["
                                        [ "[" (16, 17)
                                      expr_list := rules "expr_list" "expr_select"
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules 
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "glib" (16, 19)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "ID"
                                            ID := lexemes "ID"
                                              ID "expat" (16, 24)
                                      ] := lexemes "]"
                                        ] "]" (16, 30)
                        ; := lexemes ";"
                          ; ";" (16, 31)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "postInstall" (18, 3)
                      = := lexemes "="
                        = "=" (18, 15)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (18, 17)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules 
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "    installShellCompletion --bash src/prevo-completion\n  " (19, 1)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (20, 3)
                      ; := lexemes ";"
                        ; ";" (20, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (22, 3)
                    = := lexemes "="
                      = "=" (22, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (22, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (22, 15)
                        ; := lexemes ";"
                          ; ";" (22, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (22, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                                binds := rules 
                                                attrpath := rules "attr"
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "description" (23, 5)
                                                = := lexemes "="
                                                  = "=" (23, 17)
                                                expr := rules "expr_function"
                                                  expr_function := rules "expr_if"
                                                    expr_if := rules "expr_op"
                                                      expr_op := rules "expr_app"
                                                        expr_app := rules "expr_select"
                                                          expr_select := rules "expr_simple"
                                                            expr_simple := rules "\"" "string_parts" "\""
                                                              " := lexemes "\""
                                                                " "\"" (24, 7)
                                                              string_parts := rules "STR"
                                                                STR := lexemes "STR"
                                                                  STR "CLI tools for the offline version of the Esperanto dictionary Reta Vortaro" (24, 8)
                                                              " := lexemes "\""
                                                                " "\"" (24, 82)
                                                ; := lexemes ";"
                                                  ; ";" (24, 83)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "longDescription" (25, 5)
                                              = := lexemes "="
                                                = "=" (25, 21)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                                            IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                                              IND_STRING_OPEN "''\n" (25, 23)
                                                            ind_string_parts := rules "ind_string_parts" "IND_STR"
                                                              ind_string_parts := rules 
                                                              IND_STR := lexemes "IND_STR"
                                                                IND_STR "      PReVo is the \"portable\" ReVo, i.e., the offline version\n      of the Esperanto dictionary Reta Vortaro.\n\n      This package provides the command line application prevo to query a local\n      ReVo database, as well as the command line tool revodb to create such a\n      database for this application or for the Android app of the same name.\n    " (26, 1)
                                                            IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                                              IND_STRING_CLOSE "''" (32, 5)
                                              ; := lexemes ";"
                                                ; ";" (32, 7)
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (33, 5)
                                            = := lexemes "="
                                              = "=" (33, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (33, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "https://github.com/bpeel/prevodb" (33, 17)
                                                          " := lexemes "\""
                                                            " "\"" (33, 49)
                                            ; := lexemes ";"
                                              ; ";" (33, 50)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "license" (34, 5)
                                          = := lexemes "="
                                            = "=" (34, 13)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple" "." "attrpath"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "licenses" (34, 15)
                                                      . := lexemes "."
                                                        . "." (34, 23)
                                                      attrpath := rules "attr"
                                                        attr := rules "ID"
                                                          ID := lexemes "ID"
                                                            ID "gpl2Only" (34, 24)
                                          ; := lexemes ";"
                                            ; ";" (34, 32)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "maintainers" (35, 5)
                                        = := lexemes "="
                                          = "=" (35, 17)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (35, 19)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple" "." "attrpath"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "maintainers" (35, 21)
                                                          . := lexemes "."
                                                            . "." (35, 32)
                                                          attrpath := rules "attr"
                                                            attr := rules "ID"
                                                              ID := lexemes "ID"
                                                                ID "das-g" (35, 33)
                                                      ] := lexemes "]"
                                                        ] "]" (35, 39)
                                        ; := lexemes ";"
                                          ; ";" (35, 40)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "platforms" (36, 5)
                                      = := lexemes "="
                                        = "=" (36, 15)
                                      expr := rules "expr_function"
                                        expr_function := rules "expr_if"
                                          expr_if := rules "expr_op"
                                            expr_op := rules "expr_app"
                                              expr_app := rules "expr_select"
                                                expr_select := rules "expr_simple" "." "attrpath"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "platforms" (36, 17)
                                                  . := lexemes "."
                                                    . "." (36, 26)
                                                  attrpath := rules "attr"
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "linux" (36, 27)
                                      ; := lexemes ";"
                                        ; ";" (36, 32)
                                    } := lexemes "}"
                                      } "}" (37, 3)
                    ; := lexemes ";"
                      ; ";" (37, 4)
                  } := lexemes "}"
                    } "}" (38, 1)