---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: false,
 },
 definition: LetIn {
  bindings: [
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (3, 12),
     },
    ),
    [
     Raw {
      content: "lists",
      position: (3, 17),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (4, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "systems",
         position: (4, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "parse",
      position: (4, 25),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (5, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "systems",
         position: (5, 16),
        },
        Raw {
         content: "inspect",
         position: (5, 24),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "predicates",
      position: (5, 33),
     },
    ],
   ),
   Inherit(
    Some(
     PropertyAccess {
      expression: Variable {
       identifier: "lib",
       position: (6, 12),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "attrsets",
         position: (6, 16),
        },
       ],
      },
      default: None,
     },
    ),
    [
     Raw {
      content: "matchAttrs",
      position: (6, 26),
     },
    ],
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "all",
       position: (8, 3),
      },
     ],
    },
    List {
     elements: [
      String {
       parts: [
        Raw {
         content: "i686-cygwin",
         position: (10, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-cygwin",
         position: (10, 20),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-darwin",
         position: (13, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-darwin",
         position: (13, 22),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "aarch64-darwin",
         position: (13, 36),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv7a-darwin",
         position: (13, 53),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-freebsd",
         position: (16, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-freebsd",
         position: (16, 21),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "aarch64-genode",
         position: (19, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-genode",
         position: (19, 23),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-genode",
         position: (19, 37),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-solaris",
         position: (22, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "js-ghcjs",
         position: (25, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "aarch64-linux",
         position: (28, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv5tel-linux",
         position: (28, 22),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv6l-linux",
         position: (28, 39),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv7a-linux",
         position: (28, 54),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv7l-linux",
         position: (29, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-linux",
         position: (29, 21),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "m68k-linux",
         position: (29, 34),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "mipsel-linux",
         position: (29, 47),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "powerpc64-linux",
         position: (30, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "powerpc64le-linux",
         position: (30, 24),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "riscv32-linux",
         position: (30, 44),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "riscv64-linux",
         position: (31, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "s390-linux",
         position: (31, 22),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "s390x-linux",
         position: (31, 35),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-linux",
         position: (31, 49),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "mmix-mmixware",
         position: (34, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "aarch64-netbsd",
         position: (37, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv6l-netbsd",
         position: (37, 23),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv7a-netbsd",
         position: (37, 39),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv7l-netbsd",
         position: (37, 55),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-netbsd",
         position: (38, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "m68k-netbsd",
         position: (38, 20),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "mipsel-netbsd",
         position: (38, 34),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "powerpc-netbsd",
         position: (38, 50),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "riscv32-netbsd",
         position: (39, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "riscv64-netbsd",
         position: (39, 23),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-netbsd",
         position: (39, 40),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "aarch64_be-none",
         position: (42, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "aarch64-none",
         position: (42, 24),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "arm-none",
         position: (42, 39),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "armv6l-none",
         position: (42, 50),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "avr-none",
         position: (42, 64),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-none",
         position: (42, 75),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "msp430-none",
         position: (43, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "or1k-none",
         position: (43, 20),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "m68k-none",
         position: (43, 32),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "powerpc-none",
         position: (43, 44),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "powerpcle-none",
         position: (43, 59),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "riscv32-none",
         position: (44, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "riscv64-none",
         position: (44, 21),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "s390-none",
         position: (44, 36),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "s390x-none",
         position: (44, 48),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "vc4-none",
         position: (44, 61),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-none",
         position: (45, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-openbsd",
         position: (48, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-openbsd",
         position: (48, 21),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-redox",
         position: (51, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "wasm64-wasi",
         position: (54, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "wasm32-wasi",
         position: (54, 20),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "x86_64-windows",
         position: (57, 6),
        },
       ],
      },
      String {
       parts: [
        Raw {
         content: "i686-windows",
         position: (57, 23),
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "allParsed",
       position: (60, 3),
      },
     ],
    },
    FunctionApplication {
     function: Variable {
      identifier: "map",
      position: (60, 15),
     },
     arguments: [
      PropertyAccess {
       expression: Variable {
        identifier: "parse",
        position: (60, 19),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "mkSystemFromString",
          position: (60, 25),
         },
        ],
       },
       default: None,
      },
      Variable {
       identifier: "all",
       position: (60, 44),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "filterDoubles",
       position: (62, 3),
      },
     ],
    },
    Function {
     argument: Some(
      "f",
     ),
     arguments: FunctionArguments {
      arguments: [],
      ellipsis: false,
     },
     definition: FunctionApplication {
      function: Variable {
       identifier: "map",
       position: (62, 22),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "parse",
         position: (62, 26),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "doubleFromSystem",
           position: (62, 32),
          },
         ],
        },
        default: None,
       },
       FunctionApplication {
        function: PropertyAccess {
         expression: Variable {
          identifier: "lists",
          position: (62, 50),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "filter",
            position: (62, 56),
           },
          ],
         },
         default: None,
        },
        arguments: [
         Variable {
          identifier: "f",
          position: (62, 63),
         },
         Variable {
          identifier: "allParsed",
          position: (62, 65),
         },
        ],
       },
      ],
     },
     position: (62, 19),
    },
   ),
  ],
  target: Map {
   bindings: [
    Inherit(
     None,
     [
      Raw {
       content: "all",
       position: (65, 11),
      },
     ],
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "none",
        position: (67, 3),
       },
      ],
     },
     List {
      elements: [],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "arm",
        position: (69, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (69, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (69, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isAarch32",
           position: (69, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "aarch64",
        position: (70, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (70, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (70, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isAarch64",
           position: (70, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "x86",
        position: (71, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (71, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (71, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isx86",
           position: (71, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "i686",
        position: (72, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (72, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (72, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isi686",
           position: (72, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "x86_64",
        position: (73, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (73, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (73, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isx86_64",
           position: (73, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mips",
        position: (74, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (74, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (74, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isMips",
           position: (74, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mmix",
        position: (75, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (75, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (75, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isMmix",
           position: (75, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "riscv",
        position: (76, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (76, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (76, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isRiscV",
           position: (76, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "vc4",
        position: (77, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (77, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (77, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isVc4",
           position: (77, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "or1k",
        position: (78, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (78, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (78, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isOr1k",
           position: (78, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "m68k",
        position: (79, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (79, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (79, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isM68k",
           position: (79, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "s390",
        position: (80, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (80, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (80, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isS390",
           position: (80, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "js",
        position: (81, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (81, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (81, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isJavaScript",
           position: (81, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "bigEndian",
        position: (83, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (83, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (83, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isBigEndian",
           position: (83, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "littleEndian",
        position: (84, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (84, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (84, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isLittleEndian",
           position: (84, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cygwin",
        position: (86, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (86, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (86, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isCygwin",
           position: (86, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "darwin",
        position: (87, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (87, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (87, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isDarwin",
           position: (87, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "freebsd",
        position: (88, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (88, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (88, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isFreeBSD",
           position: (88, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "gnu",
        position: (90, 3),
       },
      ],
     },
     BinaryOperation {
      operator: Concatenation,
      operands: [
       FunctionApplication {
        function: Variable {
         identifier: "filterDoubles",
         position: (90, 19),
        },
        arguments: [
         FunctionApplication {
          function: Variable {
           identifier: "matchAttrs",
           position: (90, 34),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "kernel",
                 position: (90, 47),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "parse",
                position: (90, 56),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "kernels",
                  position: (90, 62),
                 },
                 Raw {
                  content: "linux",
                  position: (90, 70),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "abi",
                 position: (90, 77),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "parse",
                position: (90, 83),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "abis",
                  position: (90, 89),
                 },
                 Raw {
                  content: "gnu",
                  position: (90, 94),
                 },
                ],
               },
               default: None,
              },
             ),
            ],
            recursive: false,
           },
          ],
         },
        ],
       },
       BinaryOperation {
        operator: Concatenation,
        operands: [
         FunctionApplication {
          function: Variable {
           identifier: "filterDoubles",
           position: (90, 105),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "matchAttrs",
             position: (90, 120),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "kernel",
                   position: (90, 133),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "parse",
                  position: (90, 142),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "kernels",
                    position: (90, 148),
                   },
                   Raw {
                    content: "linux",
                    position: (90, 156),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "abi",
                   position: (90, 163),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "parse",
                  position: (90, 169),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "abis",
                    position: (90, 175),
                   },
                   Raw {
                    content: "gnueabi",
                    position: (90, 180),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "filterDoubles",
           position: (90, 195),
          },
          arguments: [
           FunctionApplication {
            function: Variable {
             identifier: "matchAttrs",
             position: (90, 210),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "kernel",
                   position: (90, 223),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "parse",
                  position: (90, 232),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "kernels",
                    position: (90, 238),
                   },
                   Raw {
                    content: "linux",
                    position: (90, 246),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "abi",
                   position: (90, 253),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "parse",
                  position: (90, 259),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "abis",
                    position: (90, 265),
                   },
                   Raw {
                    content: "gnueabihf",
                    position: (90, 270),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
             },
            ],
           },
          ],
         },
        ],
        position: (90, 192),
       },
      ],
      position: (90, 102),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "illumos",
        position: (91, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (91, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (91, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isSunOS",
           position: (91, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "linux",
        position: (92, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (92, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (92, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isLinux",
           position: (92, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "netbsd",
        position: (93, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (93, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (93, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isNetBSD",
           position: (93, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "openbsd",
        position: (94, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (94, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (94, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isOpenBSD",
           position: (94, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "unix",
        position: (95, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (95, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (95, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isUnix",
           position: (95, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "wasi",
        position: (96, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (96, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (96, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isWasi",
           position: (96, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "redox",
        position: (97, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (97, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (97, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isRedox",
           position: (97, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "windows",
        position: (98, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (98, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (98, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isWindows",
           position: (98, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "genode",
        position: (99, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (99, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (99, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isGenode",
           position: (99, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "embedded",
        position: (101, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filterDoubles",
       position: (101, 19),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "predicates",
         position: (101, 33),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "isNone",
           position: (101, 44),
          },
         ],
        },
        default: None,
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "mesaPlatforms",
        position: (103, 3),
       },
      ],
     },
     List {
      elements: [
       String {
        parts: [
         Raw {
          content: "i686-linux",
          position: (103, 21),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "x86_64-linux",
          position: (103, 34),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "x86_64-darwin",
          position: (103, 49),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "armv5tel-linux",
          position: (103, 65),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "armv6l-linux",
          position: (103, 82),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "armv7l-linux",
          position: (103, 97),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "armv7a-linux",
          position: (103, 112),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "aarch64-linux",
          position: (103, 127),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "powerpc64-linux",
          position: (103, 143),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "powerpc64le-linux",
          position: (103, 161),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "aarch64-darwin",
          position: (103, 181),
         },
        ],
       },
       String {
        parts: [
         Raw {
          content: "riscv64-linux",
          position: (103, 198),
         },
        ],
       },
      ],
     },
    ),
   ],
   recursive: false,
  },
  position: (2, 1),
 },
 position: (1, 1),
}