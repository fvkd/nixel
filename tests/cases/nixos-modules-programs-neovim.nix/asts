---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       attributes: [
        Raw {
         content: "programs",
         position: (6, 16),
        },
        Raw {
         content: "neovim",
         position: (6, 25),
        },
       ],
      },
      default: None,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "runtime'",
        position: (8, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "filter",
       position: (8, 14),
      },
      arguments: [
       Function {
        argument: Simple {
         identifier: "f",
        },
        definition: PropertyAccess {
         expression: Variable {
          identifier: "f",
          position: (8, 25),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (8, 27),
           },
          ],
         },
         default: None,
        },
        position: (8, 22),
       },
       FunctionApplication {
        function: Variable {
         identifier: "attrValues",
         position: (8, 36),
        },
        arguments: [
         PropertyAccess {
          expression: Variable {
           identifier: "cfg",
           position: (8, 47),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "runtime",
             position: (8, 51),
            },
           ],
          },
          default: None,
         },
        ],
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "runtime",
        position: (10, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (10, 13),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "linkFarm",
          position: (10, 18),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "neovim-runtime",
         },
        ],
        position: (10, 27),
       },
       FunctionApplication {
        function: Variable {
         identifier: "map",
         position: (10, 45),
        },
        arguments: [
         Function {
          argument: Simple {
           identifier: "x",
          },
          definition: Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "name",
                position: (10, 55),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (10, 62),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "target",
                 position: (10, 64),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "path",
                position: (10, 72),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "x",
               position: (10, 79),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "source",
                 position: (10, 81),
                },
               ],
              },
              default: None,
             },
            ),
           ],
           recursive: false,
           position: (10, 53),
          },
          position: (10, 50),
         },
         Variable {
          identifier: "runtime'",
          position: (10, 92),
         },
        ],
       },
      ],
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (13, 3),
        },
        Raw {
         content: "programs",
         position: (13, 11),
        },
        Raw {
         content: "neovim",
         position: (13, 20),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (14, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (14, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "Neovim",
             },
            ],
            position: (14, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "defaultEditor",
            position: (16, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (16, 21),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (17, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (17, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (17, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (18, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (18, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (19, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "When enabled, installs neovim and configures neovim to be the default editor\nusing the EDITOR environment variable.\n",
                },
               ],
               position: (19, 21),
              },
             ),
            ],
            recursive: false,
            position: (16, 30),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "viAlias",
            position: (25, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (25, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (26, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (26, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (26, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (27, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (27, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (28, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Symlink <command>vi</command> to <command>nvim</command> binary.\n",
                },
               ],
               position: (28, 21),
              },
             ),
            ],
            recursive: false,
            position: (25, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "vimAlias",
            position: (33, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (33, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (34, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (34, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (34, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (35, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (35, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (36, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Symlink <command>vim</command> to <command>nvim</command> binary.\n",
                },
               ],
               position: (36, 21),
              },
             ),
            ],
            recursive: false,
            position: (33, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "withRuby",
            position: (41, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (41, 16),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (42, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (42, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (42, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (43, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (43, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (44, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Enable Ruby provider.",
                },
               ],
               position: (44, 21),
              },
             ),
            ],
            recursive: false,
            position: (41, 25),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "withPython3",
            position: (47, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (47, 19),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (48, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (48, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (48, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (49, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (49, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (50, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Enable Python 3 provider.",
                },
               ],
               position: (50, 21),
              },
             ),
            ],
            recursive: false,
            position: (47, 28),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "withNodeJs",
            position: (53, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (53, 18),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (54, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (54, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "bool",
                  position: (54, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (55, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (55, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (56, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Enable Node provider.",
                },
               ],
               position: (56, 21),
              },
             ),
            ],
            recursive: false,
            position: (53, 27),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "configure",
            position: (59, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (59, 17),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (60, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (60, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "attrs",
                  position: (60, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (61, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (61, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (62, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (62, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  customRC = ",
                  },
                  Raw {
                   content: "''",
                  },
                  Raw {
                   content: "\n    \" here your custom configuration goes!\n  ",
                  },
                  Raw {
                   content: "''",
                  },
                  Raw {
                   content: ";\n  packages.myVimPackage = with pkgs.vimPlugins; {\n    # loaded on launch\n    start = [ fugitive ];\n    # manually loadable by calling `:packadd $plugin-name`\n    opt = [ ];\n  };\n}\n",
                  },
                 ],
                 position: (62, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (75, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Generate your init file from your list of plugins and custom commands.\nNeovim will then be wrapped to load <command>nvim -u /nix/store/<replaceable>hash</replaceable>-vimrc</command>\n",
                },
               ],
               position: (75, 21),
              },
             ),
            ],
            recursive: false,
            position: (59, 26),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "package",
            position: (81, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (81, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (82, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (82, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (82, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (83, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "pkgs",
                position: (83, 17),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "neovim-unwrapped",
                  position: (83, 22),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "defaultText",
                 position: (84, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (84, 21),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "pkgs.neovim-unwrapped",
                  },
                 ],
                 position: (84, 39),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (85, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "The package to use for the neovim binary.",
                },
               ],
               position: (85, 21),
              },
             ),
            ],
            recursive: false,
            position: (81, 24),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "finalPackage",
            position: (88, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (88, 20),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (89, 7),
                },
               ],
              },
              PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (89, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "package",
                  position: (89, 20),
                 },
                ],
               },
               default: None,
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "visible",
                 position: (90, 7),
                },
               ],
              },
              Variable {
               identifier: "false",
               position: (90, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "readOnly",
                 position: (91, 7),
                },
               ],
              },
              Variable {
               identifier: "true",
               position: (91, 18),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (92, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Resulting customized neovim package.",
                },
               ],
               position: (92, 21),
              },
             ),
            ],
            recursive: false,
            position: (88, 29),
           },
          ],
         },
        ),
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "runtime",
            position: (95, 5),
           },
          ],
         },
         FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (95, 15),
          },
          arguments: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "default",
                 position: (96, 7),
                },
               ],
              },
              Map {
               bindings: [],
               recursive: false,
               position: (96, 17),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "example",
                 position: (97, 7),
                },
               ],
              },
              FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (97, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{ \"ftplugin/c.vim\".text = \"setlocal omnifunc=v:lua.vim.lsp.omnifunc\"; }\n",
                  },
                 ],
                 position: (97, 35),
                },
               ],
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "description",
                 position: (100, 7),
                },
               ],
              },
              String {
               parts: [
                Raw {
                 content: "Set of files that have to be linked in <filename>runtime</filename>.\n",
                },
               ],
               position: (100, 21),
              },
             ),
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "type",
                 position: (104, 7),
                },
               ],
              },
              With {
               expression: Variable {
                identifier: "types",
                position: (104, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (104, 26),
                },
                arguments: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "submodule",
                   position: (104, 35),
                  },
                  arguments: [
                   Function {
                    argument: Destructured {
                     identifier: None,
                     arguments: [
                      DestructuredArgument {
                       identifier: "config",
                       default: None,
                      },
                      DestructuredArgument {
                       identifier: "name",
                       default: None,
                      },
                     ],
                     ellipsis: true,
                    },
                    definition: Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "options",
                          position: (106, 11),
                         },
                        ],
                       },
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "enable",
                             position: (108, 13),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (108, 22),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (109, 15),
                                 },
                                ],
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "types",
                                 position: (109, 22),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "bool",
                                   position: (109, 28),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "default",
                                  position: (110, 15),
                                 },
                                ],
                               },
                               Variable {
                                identifier: "true",
                                position: (110, 25),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (111, 15),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Whether this /etc file should be generated.  This\noption allows specific /etc files to be disabled.\n",
                                 },
                                ],
                                position: (111, 29),
                               },
                              ),
                             ],
                             recursive: false,
                             position: (108, 31),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "target",
                             position: (117, 13),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (117, 22),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (118, 15),
                                 },
                                ],
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "types",
                                 position: (118, 22),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "str",
                                   position: (118, 28),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (119, 15),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Name of symlink.  Defaults to the attribute\nname.\n",
                                 },
                                ],
                                position: (119, 29),
                               },
                              ),
                             ],
                             recursive: false,
                             position: (117, 31),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "text",
                             position: (125, 13),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (125, 20),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "default",
                                  position: (126, 15),
                                 },
                                ],
                               },
                               Variable {
                                identifier: "null",
                                position: (126, 25),
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (127, 15),
                                 },
                                ],
                               },
                               FunctionApplication {
                                function: PropertyAccess {
                                 expression: Variable {
                                  identifier: "types",
                                  position: (127, 22),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "nullOr",
                                    position: (127, 28),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "types",
                                   position: (127, 35),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "lines",
                                     position: (127, 41),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ],
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (128, 15),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Text of the file.",
                                 },
                                ],
                                position: (128, 29),
                               },
                              ),
                             ],
                             recursive: false,
                             position: (125, 29),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "source",
                             position: (131, 13),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkOption",
                            position: (131, 22),
                           },
                           arguments: [
                            Map {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "type",
                                  position: (132, 15),
                                 },
                                ],
                               },
                               PropertyAccess {
                                expression: Variable {
                                 identifier: "types",
                                 position: (132, 22),
                                },
                                attribute_path: AttributePath {
                                 attributes: [
                                  Raw {
                                   content: "path",
                                   position: (132, 28),
                                  },
                                 ],
                                },
                                default: None,
                               },
                              ),
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "description",
                                  position: (133, 15),
                                 },
                                ],
                               },
                               String {
                                parts: [
                                 Raw {
                                  content: "Path of the source file.",
                                 },
                                ],
                                position: (133, 29),
                               },
                              ),
                             ],
                             recursive: false,
                             position: (131, 31),
                            },
                           ],
                          },
                         ),
                        ],
                        recursive: false,
                        position: (106, 21),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "config",
                          position: (138, 11),
                         },
                        ],
                       },
                       Map {
                        bindings: [
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "target",
                             position: (139, 13),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkDefault",
                            position: (139, 22),
                           },
                           arguments: [
                            Variable {
                             identifier: "name",
                             position: (139, 32),
                            },
                           ],
                          },
                         ),
                         KeyValue(
                          AttributePath {
                           attributes: [
                            Raw {
                             content: "source",
                             position: (140, 13),
                            },
                           ],
                          },
                          FunctionApplication {
                           function: Variable {
                            identifier: "mkIf",
                            position: (140, 22),
                           },
                           arguments: [
                            BinaryOperation {
                             operator: NotEqualTo,
                             operands: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "config",
                                position: (140, 28),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "text",
                                  position: (140, 35),
                                 },
                                ],
                               },
                               default: None,
                              },
                              Variable {
                               identifier: "null",
                               position: (140, 43),
                              },
                             ],
                             position: (140, 40),
                            },
                            LetIn {
                             bindings: [
                              KeyValue(
                               AttributePath {
                                attributes: [
                                 Raw {
                                  content: "name'",
                                  position: (141, 19),
                                 },
                                ],
                               },
                               BinaryOperation {
                                operator: Addition,
                                operands: [
                                 String {
                                  parts: [
                                   Raw {
                                    content: "neovim-runtime",
                                   },
                                  ],
                                  position: (141, 27),
                                 },
                                 FunctionApplication {
                                  function: Variable {
                                   identifier: "baseNameOf",
                                   position: (141, 46),
                                  },
                                  arguments: [
                                   Variable {
                                    identifier: "name",
                                    position: (141, 57),
                                   },
                                  ],
                                 },
                                ],
                                position: (141, 44),
                               },
                              ),
                             ],
                             target: FunctionApplication {
                              function: Variable {
                               identifier: "mkDefault",
                               position: (142, 18),
                              },
                              arguments: [
                               FunctionApplication {
                                function: PropertyAccess {
                                 expression: Variable {
                                  identifier: "pkgs",
                                  position: (142, 29),
                                 },
                                 attribute_path: AttributePath {
                                  attributes: [
                                   Raw {
                                    content: "writeText",
                                    position: (142, 34),
                                   },
                                  ],
                                 },
                                 default: None,
                                },
                                arguments: [
                                 Variable {
                                  identifier: "name'",
                                  position: (142, 44),
                                 },
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (142, 50),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "text",
                                     position: (142, 57),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ],
                               },
                              ],
                             },
                             position: (141, 15),
                            },
                           ],
                          },
                         ),
                        ],
                        recursive: false,
                        position: (138, 20),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (106, 9),
                    },
                    position: (105, 9),
                   },
                  ],
                 },
                ],
               },
               position: (104, 14),
              },
             ),
            ],
            recursive: false,
            position: (95, 24),
           },
          ],
         },
        ),
       ],
       recursive: false,
       position: (13, 29),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (150, 3),
        },
       ],
      },
      FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (150, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (150, 17),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (150, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (151, 5),
             },
             Raw {
              content: "systemPackages",
              position: (151, 17),
             },
            ],
           },
           List {
            elements: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (152, 7),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "finalPackage",
                 position: (152, 11),
                },
               ],
              },
              default: None,
             },
            ],
            position: (151, 34),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (154, 5),
             },
             Raw {
              content: "variables",
              position: (154, 17),
             },
             Raw {
              content: "EDITOR",
              position: (154, 27),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (154, 36),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (154, 41),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "defaultEditor",
                 position: (154, 45),
                },
               ],
              },
              default: None,
             },
             FunctionApplication {
              function: Variable {
               identifier: "mkOverride",
               position: (154, 60),
              },
              arguments: [
               Int {
                value: 900,
                position: (154, 71),
               },
               String {
                parts: [
                 Raw {
                  content: "nvim",
                 },
                ],
                position: (154, 75),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "programs",
              position: (156, 5),
             },
             Raw {
              content: "neovim",
              position: (156, 14),
             },
             Raw {
              content: "finalPackage",
              position: (156, 21),
             },
            ],
           },
           FunctionApplication {
            function: PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (156, 36),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "wrapNeovim",
                position: (156, 41),
               },
              ],
             },
             default: None,
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "cfg",
               position: (156, 52),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "package",
                 position: (156, 56),
                },
               ],
              },
              default: None,
             },
             Map {
              bindings: [
               Inherit {
                from: Some(
                 Variable {
                  identifier: "cfg",
                  position: (157, 16),
                 },
                ),
                attributes: [
                 Raw {
                  content: "viAlias",
                  position: (157, 21),
                 },
                 Raw {
                  content: "vimAlias",
                  position: (157, 29),
                 },
                 Raw {
                  content: "withPython3",
                  position: (157, 38),
                 },
                 Raw {
                  content: "withNodeJs",
                  position: (157, 50),
                 },
                 Raw {
                  content: "withRuby",
                  position: (157, 61),
                 },
                ],
               },
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "configure",
                   position: (158, 7),
                  },
                 ],
                },
                BinaryOperation {
                 operator: Update,
                 operands: [
                  PropertyAccess {
                   expression: Variable {
                    identifier: "cfg",
                    position: (158, 19),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "configure",
                      position: (158, 23),
                     },
                    ],
                   },
                   default: None,
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "customRC",
                        position: (160, 9),
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: Addition,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (160, 21),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "configure",
                           position: (160, 25),
                          },
                          Raw {
                           content: "customRC",
                           position: (160, 35),
                          },
                         ],
                        },
                        default: Some(
                         String {
                          parts: [],
                          position: (160, 47),
                         },
                        ),
                       },
                       String {
                        parts: [
                         Raw {
                          content: "set runtimepath^=",
                         },
                         Expression {
                          expression: Variable {
                           identifier: "runtime",
                           position: (161, 30),
                          },
                         },
                         Raw {
                          content: "/etc\n",
                         },
                        ],
                        position: (160, 53),
                       },
                      ],
                      position: (160, 51),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (158, 36),
                  },
                 ],
                 position: (158, 33),
                },
               ),
              ],
              recursive: false,
              position: (156, 64),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (150, 28),
        },
       ],
      },
     ),
    ],
    recursive: false,
    position: (12, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}