---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (4, 6),
  },
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "meta",
        position: (7, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (8, 5),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "teams",
          position: (8, 19),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "gnome",
            position: (8, 25),
           },
           Raw {
            content: "members",
            position: (8, 31),
           },
          ],
         },
         default: None,
        },
       ),
      ],
      recursive: false,
      position: (7, 10),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (11, 3),
       },
      ],
     },
     List {
      elements: [
       FunctionApplication {
        function: Variable {
         identifier: "mkRenamedOptionModule",
         position: (13, 6),
        },
        arguments: [
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (14, 9),
           },
           String {
            parts: [
             Raw {
              content: "gnome3",
             },
            ],
            position: (14, 20),
           },
           String {
            parts: [
             Raw {
              content: "rygel",
             },
            ],
            position: (14, 29),
           },
           String {
            parts: [
             Raw {
              content: "enable",
             },
            ],
            position: (14, 37),
           },
          ],
          position: (14, 7),
         },
         List {
          elements: [
           String {
            parts: [
             Raw {
              content: "services",
             },
            ],
            position: (15, 9),
           },
           String {
            parts: [
             Raw {
              content: "gnome",
             },
            ],
            position: (15, 20),
           },
           String {
            parts: [
             Raw {
              content: "rygel",
             },
            ],
            position: (15, 28),
           },
           String {
            parts: [
             Raw {
              content: "enable",
             },
            ],
            position: (15, 36),
           },
          ],
          position: (15, 7),
         },
        ],
       },
      ],
      position: (11, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (20, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (21, 5),
          },
          Raw {
           content: "gnome",
           position: (21, 14),
          },
          Raw {
           content: "rygel",
           position: (21, 20),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "enable",
              position: (22, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (22, 16),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (23, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (23, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (24, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Whether to enable Rygel UPnP Mediaserver.\n\nYou will need to also allow UPnP connections in firewall, see the following <link xlink:href=\"https://github.com/NixOS/nixpkgs/pull/45045#issuecomment-416030795\">comment</link>.\n",
                  },
                 ],
                 position: (24, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (29, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (29, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bool",
                    position: (29, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
              ],
              recursive: false,
              position: (22, 25),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (21, 28),
        },
       ),
      ],
      recursive: false,
      position: (20, 13),
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (35, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (35, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (35, 17),
        },
        attribute_path: AttributePath {
         attributes: [
          Raw {
           content: "services",
           position: (35, 24),
          },
          Raw {
           content: "gnome",
           position: (35, 33),
          },
          Raw {
           content: "rygel",
           position: (35, 39),
          },
          Raw {
           content: "enable",
           position: (35, 45),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (36, 5),
            },
            Raw {
             content: "systemPackages",
             position: (36, 17),
            },
           ],
          },
          List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (36, 36),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "gnome",
                position: (36, 41),
               },
               Raw {
                content: "rygel",
                position: (36, 47),
               },
              ],
             },
             default: None,
            },
           ],
           position: (36, 34),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (38, 5),
            },
            Raw {
             content: "dbus",
             position: (38, 14),
            },
            Raw {
             content: "packages",
             position: (38, 19),
            },
           ],
          },
          List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (38, 32),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "gnome",
                position: (38, 37),
               },
               Raw {
                content: "rygel",
                position: (38, 43),
               },
              ],
             },
             default: None,
            },
           ],
           position: (38, 30),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "systemd",
             position: (40, 5),
            },
            Raw {
             content: "packages",
             position: (40, 13),
            },
           ],
          },
          List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (40, 26),
             },
             attribute_path: AttributePath {
              attributes: [
               Raw {
                content: "gnome",
                position: (40, 31),
               },
               Raw {
                content: "rygel",
                position: (40, 37),
               },
              ],
             },
             default: None,
            },
           ],
           position: (40, 24),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "environment",
             position: (42, 5),
            },
            Raw {
             content: "etc",
             position: (42, 17),
            },
            Expression {
             expression: __StringParts(
              [
               Raw {
                content: "rygel.conf",
               },
              ],
             ),
            },
            Raw {
             content: "source",
             position: (42, 34),
            },
           ],
          },
          String {
           parts: [
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (42, 46),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "gnome",
                 position: (42, 51),
                },
                Raw {
                 content: "rygel",
                 position: (42, 57),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "/etc/rygel.conf",
            },
           ],
           position: (42, 43),
          },
         ),
        ],
        recursive: false,
        position: (35, 52),
       },
      ],
     },
    ),
   ],
   recursive: false,
   position: (6, 1),
  },
  position: (4, 1),
 },
 position: (2, 1),
}