---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (4, 6),
  },
  target: Map {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "meta",
        position: (7, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "maintainers",
           position: (8, 5),
          },
         ],
        },
        to: PropertyAccess {
         expression: Variable {
          identifier: "teams",
          position: (8, 19),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "gnome",
            position: (8, 25),
           },
           Raw {
            content: "members",
            position: (8, 31),
           },
          ],
         },
         default: None,
        },
       },
      ],
      recursive: false,
      position: (7, 10),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "imports",
        position: (11, 3),
       },
      ],
     },
     to: List {
      elements: [
       Parentheses {
        expression: FunctionApplication {
         function: Variable {
          identifier: "mkRenamedOptionModule",
          position: (13, 6),
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (14, 10),
              },
             ],
             position: (14, 9),
            },
            String {
             parts: [
              Raw {
               content: "gnome3",
               position: (14, 21),
              },
             ],
             position: (14, 20),
            },
            String {
             parts: [
              Raw {
               content: "rygel",
               position: (14, 30),
              },
             ],
             position: (14, 29),
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (14, 38),
              },
             ],
             position: (14, 37),
            },
           ],
           position: (14, 7),
          },
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
               position: (15, 10),
              },
             ],
             position: (15, 9),
            },
            String {
             parts: [
              Raw {
               content: "gnome",
               position: (15, 21),
              },
             ],
             position: (15, 20),
            },
            String {
             parts: [
              Raw {
               content: "rygel",
               position: (15, 29),
              },
             ],
             position: (15, 28),
            },
            String {
             parts: [
              Raw {
               content: "enable",
               position: (15, 37),
              },
             ],
             position: (15, 36),
            },
           ],
           position: (15, 7),
          },
         ],
        },
        position: (13, 5),
       },
      ],
      position: (11, 13),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "options",
        position: (20, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "services",
           position: (21, 5),
          },
          Raw {
           content: "gnome",
           position: (21, 14),
          },
          Raw {
           content: "rygel",
           position: (21, 20),
          },
         ],
        },
        to: Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "enable",
              position: (22, 7),
             },
            ],
           },
           to: FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (22, 16),
            },
            arguments: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "default",
                   position: (23, 9),
                  },
                 ],
                },
                to: Variable {
                 identifier: "false",
                 position: (23, 19),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "description",
                   position: (24, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "Whether to enable Rygel UPnP Mediaserver.\n\nYou will need to also allow UPnP connections in firewall, see the following <link xlink:href=\"https://github.com/NixOS/nixpkgs/pull/45045#issuecomment-416030795\">comment</link>.\n",
                   position: (25, 1),
                  },
                 ],
                 position: (24, 23),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "type",
                   position: (29, 9),
                  },
                 ],
                },
                to: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (29, 16),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "bool",
                    position: (29, 22),
                   },
                  ],
                 },
                 default: None,
                },
               },
              ],
              recursive: false,
              position: (22, 25),
             },
            ],
           },
          },
         ],
         recursive: false,
         position: (21, 28),
        },
       },
      ],
      recursive: false,
      position: (20, 13),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "config",
        position: (35, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: Variable {
       identifier: "mkIf",
       position: (35, 12),
      },
      arguments: [
       PropertyAccess {
        expression: Variable {
         identifier: "config",
         position: (35, 17),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "services",
           position: (35, 24),
          },
          Raw {
           content: "gnome",
           position: (35, 33),
          },
          Raw {
           content: "rygel",
           position: (35, 39),
          },
          Raw {
           content: "enable",
           position: (35, 45),
          },
         ],
        },
        default: None,
       },
       Map {
        bindings: [
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "environment",
             position: (36, 5),
            },
            Raw {
             content: "systemPackages",
             position: (36, 17),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (36, 36),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "gnome",
                position: (36, 41),
               },
               Raw {
                content: "rygel",
                position: (36, 47),
               },
              ],
             },
             default: None,
            },
           ],
           position: (36, 34),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "services",
             position: (38, 5),
            },
            Raw {
             content: "dbus",
             position: (38, 14),
            },
            Raw {
             content: "packages",
             position: (38, 19),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (38, 32),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "gnome",
                position: (38, 37),
               },
               Raw {
                content: "rygel",
                position: (38, 43),
               },
              ],
             },
             default: None,
            },
           ],
           position: (38, 30),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "systemd",
             position: (40, 5),
            },
            Raw {
             content: "packages",
             position: (40, 13),
            },
           ],
          },
          to: List {
           elements: [
            PropertyAccess {
             expression: Variable {
              identifier: "pkgs",
              position: (40, 26),
             },
             attribute_path: AttributePath {
              parts: [
               Raw {
                content: "gnome",
                position: (40, 31),
               },
               Raw {
                content: "rygel",
                position: (40, 37),
               },
              ],
             },
             default: None,
            },
           ],
           position: (40, 24),
          },
         },
         Binding {
          from: AttributePath {
           parts: [
            Raw {
             content: "environment",
             position: (42, 5),
            },
            Raw {
             content: "etc",
             position: (42, 17),
            },
            Expression {
             expression: String {
              parts: [
               Raw {
                content: "rygel.conf",
                position: (42, 22),
               },
              ],
              position: (42, 21),
             },
            },
            Raw {
             content: "source",
             position: (42, 34),
            },
           ],
          },
          to: String {
           parts: [
            Expression {
             expression: PropertyAccess {
              expression: Variable {
               identifier: "pkgs",
               position: (42, 46),
              },
              attribute_path: AttributePath {
               parts: [
                Raw {
                 content: "gnome",
                 position: (42, 51),
                },
                Raw {
                 content: "rygel",
                 position: (42, 57),
                },
               ],
              },
              default: None,
             },
            },
            Raw {
             content: "/etc/rygel.conf",
             position: (42, 63),
            },
           ],
           position: (42, 43),
          },
         },
        ],
        recursive: false,
        position: (35, 52),
       },
      ],
     },
    },
   ],
   recursive: false,
   position: (6, 1),
  },
  position: (4, 1),
 },
 position: (2, 1),
}