---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Inherit(
    Some(
     Variable {
      identifier: "lib",
      position: (3, 12),
     },
    ),
    [
     Raw {
      content: "types",
      position: (3, 17),
     },
    ],
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (6, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "int",
           position: (7, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (7, 11),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkOption",
             position: (7, 15),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (8, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (8, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lazyAttrsOf",
                  position: (8, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (8, 32),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "int",
                   position: (8, 38),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "list",
           position: (10, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (10, 12),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkOption",
             position: (10, 16),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (11, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (11, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lazyAttrsOf",
                  position: (11, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (11, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "listOf",
                    position: (11, 39),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (11, 46),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (11, 52),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "nonEmptyList",
           position: (13, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (13, 20),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkOption",
             position: (13, 24),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (14, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (14, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lazyAttrsOf",
                  position: (14, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (14, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "nonEmptyListOf",
                    position: (14, 39),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (14, 54),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (14, 60),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "attrs",
           position: (16, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (16, 13),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkOption",
             position: (16, 17),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (17, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (17, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lazyAttrsOf",
                  position: (17, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (17, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "attrsOf",
                    position: (17, 39),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (17, 47),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (17, 53),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "null",
           position: (19, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (19, 12),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkOption",
             position: (19, 16),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (20, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (20, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lazyAttrsOf",
                  position: (20, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (20, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "nullOr",
                    position: (20, 39),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (20, 46),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "int",
                     position: (20, 52),
                    },
                   ],
                  },
                  default: None,
                 },
                ],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "submodule",
           position: (22, 5),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (22, 17),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkOption",
             position: (22, 21),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (23, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (23, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "lazyAttrsOf",
                  position: (23, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               FunctionApplication {
                function: PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (23, 33),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "submodule",
                    position: (23, 39),
                   },
                  ],
                 },
                 default: None,
                },
                arguments: [
                 Map {
                  bindings: [],
                  recursive: false,
                 },
                ],
               },
              ],
             },
            ),
           ],
           recursive: false,
          },
         ],
        },
       ),
      ],
      recursive: false,
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (27, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "int",
           position: (28, 5),
          },
          Raw {
           content: "a",
           position: (28, 9),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (28, 13),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkIf",
             position: (28, 17),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "false",
           position: (28, 22),
          },
          Variable {
           identifier: "null",
           position: (28, 28),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "list",
           position: (29, 5),
          },
          Raw {
           content: "a",
           position: (29, 10),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (29, 14),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkIf",
             position: (29, 18),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "false",
           position: (29, 23),
          },
          Variable {
           identifier: "null",
           position: (29, 29),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "nonEmptyList",
           position: (30, 5),
          },
          Raw {
           content: "a",
           position: (30, 18),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (30, 22),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkIf",
             position: (30, 26),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "false",
           position: (30, 31),
          },
          Variable {
           identifier: "null",
           position: (30, 37),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "attrs",
           position: (31, 5),
          },
          Raw {
           content: "a",
           position: (31, 11),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (31, 15),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkIf",
             position: (31, 19),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "false",
           position: (31, 24),
          },
          Variable {
           identifier: "null",
           position: (31, 30),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "null",
           position: (32, 5),
          },
          Raw {
           content: "a",
           position: (32, 10),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (32, 14),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkIf",
             position: (32, 18),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "false",
           position: (32, 23),
          },
          Variable {
           identifier: "null",
           position: (32, 29),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "submodule",
           position: (33, 5),
          },
          Raw {
           content: "a",
           position: (33, 15),
          },
         ],
        },
        FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (33, 19),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkIf",
             position: (33, 23),
            },
           ],
          },
          default: None,
         },
         arguments: [
          Variable {
           identifier: "false",
           position: (33, 28),
          },
          Variable {
           identifier: "null",
           position: (33, 34),
          },
         ],
        },
       ),
      ],
      recursive: false,
     },
    ),
   ],
   recursive: false,
  },
 },
}