---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "jenkinsCfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 16),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (6, 23),
        },
        Raw {
         content: "jenkins",
         position: (6, 32),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "jenkins",
         position: (7, 25),
        },
        Raw {
         content: "jobBuilder",
         position: (7, 33),
        },
       ],
      },
      default: None,
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (10, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "services",
            position: (11, 5),
           },
           Raw {
            content: "jenkins",
            position: (11, 14),
           },
           Raw {
            content: "jobBuilder",
            position: (11, 22),
           },
          ],
         },
         to: Map {
          bindings: [
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (12, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (12, 16),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (13, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (13, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "bool",
                     position: (13, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (14, 9),
                   },
                  ],
                 },
                 to: Variable {
                  identifier: "false",
                  position: (14, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (15, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Whether or not to enable the Jenkins Job Builder (JJB) service. It\nallows defining jobs for Jenkins in a declarative manner.\n\nJobs managed through the Jenkins WebUI (or by other means) are left\nunchanged.\n\nNote that it really is declarative configuration; if you remove a\npreviously defined job, the corresponding job directory will be\ndeleted.\n\nPlease see the Jenkins Job Builder documentation for more info:\n<link xlink:href=\"http://docs.openstack.org/infra/jenkins-job-builder/\">\nhttp://docs.openstack.org/infra/jenkins-job-builder/</link>\n",
                    position: (16, 1),
                   },
                  ],
                  position: (15, 23),
                 },
                },
               ],
               recursive: false,
               position: (12, 25),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "accessUser",
               position: (32, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (32, 20),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (33, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (33, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (34, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (34, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (34, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (35, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "User id in Jenkins used to reload config.\n",
                    position: (36, 1),
                   },
                  ],
                  position: (35, 23),
                 },
                },
               ],
               recursive: false,
               position: (32, 29),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "accessToken",
               position: (40, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (40, 21),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (41, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (41, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (42, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (42, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (42, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (43, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "User token in Jenkins used to reload config.\nWARNING: This token will be world readable in the Nix store. To keep\nit secret, use the <option>accessTokenFile</option> option instead.\n",
                    position: (44, 1),
                   },
                  ],
                  position: (43, 23),
                 },
                },
               ],
               recursive: false,
               position: (40, 30),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "accessTokenFile",
               position: (50, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (50, 25),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (51, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (51, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (52, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (52, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "str",
                     position: (52, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (53, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/run/keys/jenkins-job-builder-access-token",
                    position: (53, 20),
                   },
                  ],
                  position: (53, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (54, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "File containing the API token for the <option>accessUser</option>\nuser.\n",
                    position: (55, 1),
                   },
                  ],
                  position: (54, 23),
                 },
                },
               ],
               recursive: false,
               position: (50, 34),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "yamlJobs",
               position: (60, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (60, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (61, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [],
                  position: (61, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (62, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (62, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "lines",
                     position: (62, 22),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (63, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "- job:\n    name: jenkins-job-test-1\n    builders:\n      - shell: echo 'Hello world!'\n",
                    position: (64, 1),
                   },
                  ],
                  position: (63, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (69, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Job descriptions for Jenkins Job Builder in YAML format.\n",
                    position: (70, 1),
                   },
                  ],
                  position: (69, 23),
                 },
                },
               ],
               recursive: false,
               position: (60, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "jsonJobs",
               position: (74, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (74, 18),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (75, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (75, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (76, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (76, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (76, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (76, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "str",
                       position: (76, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (77, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (77, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[\n  ",
                      position: (78, 1),
                     },
                     Raw {
                      content: "''",
                      position: (79, 13),
                     },
                     Raw {
                      content: "\n    [ { \"job\":\n        { \"name\": \"jenkins-job-test-2\",\n          \"builders\": [ \"shell\": \"echo 'Hello world!'\" ]\n        }\n      }\n    ]\n  ",
                      position: (79, 16),
                     },
                     Raw {
                      content: "''",
                      position: (86, 13),
                     },
                     Raw {
                      content: "\n]\n",
                      position: (86, 16),
                     },
                    ],
                    position: (77, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (89, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Job descriptions for Jenkins Job Builder in JSON format.\n",
                    position: (90, 1),
                   },
                  ],
                  position: (89, 23),
                 },
                },
               ],
               recursive: false,
               position: (74, 27),
              },
             ],
            },
           },
           Binding {
            from: AttributePath {
             parts: [
              Raw {
               content: "nixJobs",
               position: (94, 7),
              },
             ],
            },
            to: FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (94, 17),
             },
             arguments: [
              Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "default",
                    position: (95, 9),
                   },
                  ],
                 },
                 to: List {
                  elements: [],
                  position: (95, 19),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "type",
                    position: (96, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "types",
                    position: (96, 16),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "listOf",
                      position: (96, 22),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "types",
                     position: (96, 29),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "attrs",
                       position: (96, 35),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "example",
                    position: (97, 9),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (97, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "[ { job =\n    { name = \"jenkins-job-test-3\";\n      builders = [\n        { shell = \"echo 'Hello world!'\"; }\n      ];\n    };\n  }\n]\n",
                      position: (98, 1),
                     },
                    ],
                    position: (97, 37),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "description",
                    position: (107, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "Job descriptions for Jenkins Job Builder in Nix format.\n\nThis is a trivial wrapper around jsonJobs, using builtins.toJSON\nbehind the scene.\n",
                    position: (108, 1),
                   },
                  ],
                  position: (107, 23),
                 },
                },
               ],
               recursive: false,
               position: (94, 26),
              },
             ],
            },
           },
          ],
          recursive: false,
          position: (11, 35),
         },
        },
       ],
       recursive: false,
       position: (10, 13),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (117, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (117, 12),
       },
       arguments: [
        Parentheses {
         expression: BinaryOperation {
          operator: LogicalAnd,
          operands: [
           PropertyAccess {
            expression: Variable {
             identifier: "jenkinsCfg",
             position: (117, 18),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (117, 29),
              },
             ],
            },
            default: None,
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (117, 39),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "enable",
               position: (117, 43),
              },
             ],
            },
            default: None,
           },
          ],
          position: (117, 36),
         },
         position: (117, 17),
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "assertions",
              position: (118, 5),
             },
            ],
           },
           to: List {
            elements: [
             Map {
              bindings: [
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "assertion",
                   position: (119, 9),
                  },
                 ],
                },
                to: IfThenElse {
                 predicate: BinaryOperation {
                  operator: NotEqualTo,
                  operands: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (120, 14),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "accessUser",
                       position: (120, 18),
                      },
                     ],
                    },
                    default: None,
                   },
                   String {
                    parts: [],
                    position: (120, 32),
                   },
                  ],
                  position: (120, 29),
                 },
                 then: BinaryOperation {
                  operator: LogicalOr,
                  operands: [
                   Parentheses {
                    expression: BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (121, 17),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "accessToken",
                            position: (121, 21),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                         position: (121, 36),
                        },
                       ],
                       position: (121, 33),
                      },
                      BinaryOperation {
                       operator: EqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (121, 42),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "accessTokenFile",
                            position: (121, 46),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                         position: (121, 65),
                        },
                       ],
                       position: (121, 62),
                      },
                     ],
                     position: (121, 39),
                    },
                    position: (121, 16),
                   },
                   Parentheses {
                    expression: BinaryOperation {
                     operator: LogicalAnd,
                     operands: [
                      BinaryOperation {
                       operator: EqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (122, 17),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "accessToken",
                            position: (122, 21),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                         position: (122, 36),
                        },
                       ],
                       position: (122, 33),
                      },
                      BinaryOperation {
                       operator: NotEqualTo,
                       operands: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (122, 42),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "accessTokenFile",
                            position: (122, 46),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [],
                         position: (122, 65),
                        },
                       ],
                       position: (122, 62),
                      },
                     ],
                     position: (122, 39),
                    },
                    position: (122, 16),
                   },
                  ],
                  position: (121, 69),
                 },
                 else_: Variable {
                  identifier: "true",
                  position: (123, 16),
                 },
                 position: (120, 11),
                },
               },
               Binding {
                from: AttributePath {
                 parts: [
                  Raw {
                   content: "message",
                   position: (124, 9),
                  },
                 ],
                },
                to: String {
                 parts: [
                  Raw {
                   content: "One of accessToken and accessTokenFile options must be non-empty\nstrings, but not both. Current values:\n  services.jenkins.jobBuilder.accessToken = \"",
                   position: (125, 1),
                  },
                  Interpolation {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (127, 58),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "accessToken",
                       position: (127, 62),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\"\n  services.jenkins.jobBuilder.accessTokenFile = \"",
                   position: (127, 74),
                  },
                  Interpolation {
                   expression: PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (128, 62),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "accessTokenFile",
                       position: (128, 66),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                  Raw {
                   content: "\"\n",
                   position: (128, 82),
                  },
                 ],
                 position: (124, 19),
                },
               },
              ],
              recursive: false,
              position: (119, 7),
             },
            ],
            position: (118, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (133, 5),
             },
             Raw {
              content: "services",
              position: (133, 13),
             },
             Raw {
              content: "jenkins-job-builder",
              position: (133, 22),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (134, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Jenkins Job Builder Service",
                 position: (134, 22),
                },
               ],
               position: (134, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "after",
                 position: (137, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "jenkins.service",
                   position: (137, 18),
                  },
                 ],
                 position: (137, 17),
                },
               ],
               position: (137, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "wantedBy",
                 position: (138, 7),
                },
               ],
              },
              to: List {
               elements: [
                String {
                 parts: [
                  Raw {
                   content: "multi-user.target",
                   position: (138, 21),
                  },
                 ],
                 position: (138, 20),
                },
               ],
               position: (138, 18),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "path",
                 position: (140, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "pkgs",
                position: (140, 19),
               },
               target: List {
                elements: [
                 Variable {
                  identifier: "jenkins-job-builder",
                  position: (140, 27),
                 },
                 Variable {
                  identifier: "curl",
                  position: (140, 47),
                 },
                ],
                position: (140, 25),
               },
               position: (140, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "script",
                 position: (146, 7),
                },
               ],
              },
              to: LetIn {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "yamlJobsFile",
                    position: (148, 11),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: PropertyAccess {
                   expression: Variable {
                    identifier: "builtins",
                    position: (148, 26),
                   },
                   attribute_path: AttributePath {
                    parts: [
                     Raw {
                      content: "toFile",
                      position: (148, 35),
                     },
                    ],
                   },
                   default: None,
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "jobs.yaml",
                      position: (148, 43),
                     },
                    ],
                    position: (148, 42),
                   },
                   PropertyAccess {
                    expression: Variable {
                     identifier: "cfg",
                     position: (148, 54),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "yamlJobs",
                       position: (148, 58),
                      },
                     ],
                    },
                    default: None,
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "jsonJobsFiles",
                    position: (149, 11),
                   },
                  ],
                 },
                 to: FunctionApplication {
                  function: Variable {
                   identifier: "map",
                   position: (150, 13),
                  },
                  arguments: [
                   Parentheses {
                    expression: Function {
                     argument: Simple {
                      identifier: "x",
                     },
                     definition: Parentheses {
                      expression: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "builtins",
                         position: (150, 22),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "toFile",
                           position: (150, 31),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "jobs.json",
                           position: (150, 39),
                          },
                         ],
                         position: (150, 38),
                        },
                        Variable {
                         identifier: "x",
                         position: (150, 50),
                        },
                       ],
                      },
                      position: (150, 21),
                     },
                     position: (150, 18),
                    },
                    position: (150, 17),
                   },
                   Parentheses {
                    expression: BinaryOperation {
                     operator: Concatenation,
                     operands: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "cfg",
                        position: (151, 16),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "jsonJobs",
                          position: (151, 20),
                         },
                        ],
                       },
                       default: None,
                      },
                      List {
                       elements: [
                        Parentheses {
                         expression: FunctionApplication {
                          function: PropertyAccess {
                           expression: Variable {
                            identifier: "builtins",
                            position: (151, 34),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "toJSON",
                              position: (151, 43),
                             },
                            ],
                           },
                           default: None,
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (151, 50),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "nixJobs",
                               position: (151, 54),
                              },
                             ],
                            },
                            default: None,
                           },
                          ],
                         },
                         position: (151, 33),
                        },
                       ],
                       position: (151, 32),
                      },
                     ],
                     position: (151, 29),
                    },
                    position: (151, 15),
                   },
                  ],
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "jobBuilderOutputDir",
                    position: (152, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "/run/jenkins-job-builder/output",
                    position: (152, 34),
                   },
                  ],
                  position: (152, 33),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "ownerStamp",
                    position: (155, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: ".config-xml-managed-by-nixos-jenkins-job-builder",
                    position: (155, 25),
                   },
                  ],
                  position: (155, 24),
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "reloadScript",
                    position: (156, 11),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "echo \"Asking Jenkins to reload config\"\ncurl_opts=\"--silent --fail --show-error\"\naccess_token=",
                    position: (157, 1),
                   },
                   Interpolation {
                    expression: IfThenElse {
                     predicate: BinaryOperation {
                      operator: NotEqualTo,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (159, 31),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "accessTokenFile",
                           position: (159, 35),
                          },
                         ],
                        },
                        default: None,
                       },
                       String {
                        parts: [],
                        position: (159, 54),
                       },
                      ],
                      position: (159, 51),
                     },
                     then: String {
                      parts: [
                       Raw {
                        content: "$(cat '",
                        position: (160, 34),
                       },
                       Interpolation {
                        expression: PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (160, 43),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "accessTokenFile",
                            position: (160, 47),
                           },
                          ],
                         },
                         default: None,
                        },
                       },
                       Raw {
                        content: "')",
                        position: (160, 63),
                       },
                      ],
                      position: (160, 33),
                     },
                     else_: PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (161, 33),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "accessToken",
                         position: (161, 37),
                        },
                       ],
                      },
                      default: None,
                     },
                     position: (159, 28),
                    },
                   },
                   Raw {
                    content: "\njenkins_url=\"http://",
                    position: (161, 49),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "cfg",
                      position: (162, 35),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "accessUser",
                        position: (162, 39),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: ":$access_token@",
                    position: (162, 50),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (162, 67),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "listenAddress",
                        position: (162, 78),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: ":",
                    position: (162, 92),
                   },
                   Interpolation {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "toString",
                      position: (162, 95),
                     },
                     arguments: [
                      PropertyAccess {
                       expression: Variable {
                        identifier: "jenkinsCfg",
                        position: (162, 104),
                       },
                       attribute_path: AttributePath {
                        parts: [
                         Raw {
                          content: "port",
                          position: (162, 115),
                         },
                        ],
                       },
                       default: None,
                      },
                     ],
                    },
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (162, 122),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "prefix",
                        position: (162, 133),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\"\ncrumb=$(curl $curl_opts \"$jenkins_url\"'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)')\ncurl $curl_opts -X POST -H \"$crumb\" \"$jenkins_url\"/reload\n",
                    position: (162, 140),
                   },
                  ],
                  position: (156, 26),
                 },
                },
               ],
               target: BinaryOperation {
                operator: Addition,
                operands: [
                 String {
                  parts: [
                   Raw {
                    content: "joinByString()\n{\n    local separator=\"$1\"\n    shift\n    local first=\"$1\"\n    shift\n    printf \"%s\" \"$first\" \"",
                    position: (168, 1),
                   },
                   Raw {
                    content: "$",
                    position: (174, 39),
                   },
                   Raw {
                    content: "{@/#/$separator}\"\n}\n\n# Map a relative directory path in the output from\n# jenkins-job-builder (jobname) to the layout expected by jenkins:\n# each directory level gets prepended \"jobs/\".\ngetJenkinsJobDir()\n{\n    IFS='/' read -ra input_dirs <<< \"$1\"\n    printf \"jobs/\"\n    joinByString \"/jobs/\" \"",
                    position: (174, 42),
                   },
                   Raw {
                    content: "$",
                    position: (184, 40),
                   },
                   Raw {
                    content: "{input_dirs[@]}\"\n}\n\n# The inverse of getJenkinsJobDir (remove the \"jobs/\" prefixes)\ngetJobname()\n{\n    IFS='/' read -ra input_dirs <<< \"$1\"\n    local i=0\n    local nelem=",
                    position: (184, 43),
                   },
                   Raw {
                    content: "$",
                    position: (192, 29),
                   },
                   Raw {
                    content: "{#input_dirs[@]}\n    for e in \"",
                    position: (192, 32),
                   },
                   Raw {
                    content: "$",
                    position: (193, 27),
                   },
                   Raw {
                    content: "{input_dirs[@]}\"; do\n        if [ $((i % 2)) -eq 1 ]; then\n            printf \"$e\"\n            if [ $i -lt $(( nelem - 1 )) ]; then\n                printf \"/\"\n            fi\n        fi\n        i=$((i + 1))\n    done\n}\n\nrm -rf ",
                    position: (193, 30),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "jobBuilderOutputDir",
                     position: (204, 22),
                    },
                   },
                   Raw {
                    content: "\ncur_decl_jobs=/run/jenkins-job-builder/declarative-jobs\nrm -f \"$cur_decl_jobs\"\n\n# Create / update jobs\nmkdir -p ",
                    position: (204, 42),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "jobBuilderOutputDir",
                     position: (209, 24),
                    },
                   },
                   Raw {
                    content: "\nfor inputFile in ",
                    position: (209, 44),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "yamlJobsFile",
                     position: (210, 32),
                    },
                   },
                   Raw {
                    content: " ",
                    position: (210, 45),
                   },
                   Interpolation {
                    expression: FunctionApplication {
                     function: Variable {
                      identifier: "concatStringsSep",
                      position: (210, 48),
                     },
                     arguments: [
                      String {
                       parts: [
                        Raw {
                         content: " ",
                         position: (210, 66),
                        },
                       ],
                       position: (210, 65),
                      },
                      Variable {
                       identifier: "jsonJobsFiles",
                       position: (210, 69),
                      },
                     ],
                    },
                   },
                   Raw {
                    content: "; do\n    HOME=\"",
                    position: (210, 83),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (211, 25),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "home",
                        position: (211, 36),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\" \"",
                    position: (211, 41),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "pkgs",
                      position: (211, 46),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "jenkins-job-builder",
                        position: (211, 51),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/bin/jenkins-jobs\" --ignore-cache test --config-xml -o \"",
                    position: (211, 71),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "jobBuilderOutputDir",
                     position: (211, 129),
                    },
                   },
                   Raw {
                    content: "\" \"$inputFile\"\ndone\n\nfind \"",
                    position: (211, 149),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "jobBuilderOutputDir",
                     position: (214, 21),
                    },
                   },
                   Raw {
                    content: "\" -type f -name config.xml | while read -r f; do echo \"$(dirname \"$f\")\"; done | sort | while read -r dir; do\n    jobname=\"$(realpath --relative-to=\"",
                    position: (214, 41),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "jobBuilderOutputDir",
                     position: (215, 54),
                    },
                   },
                   Raw {
                    content: "\" \"$dir\")\"\n    jenkinsjobname=$(getJenkinsJobDir \"$jobname\")\n    jenkinsjobdir=\"",
                    position: (215, 74),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (217, 34),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "home",
                        position: (217, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/$jenkinsjobname\"\n    echo \"Creating / updating job \\\"$jobname\\\"\"\n    mkdir -p \"$jenkinsjobdir\"\n    touch \"$jenkinsjobdir/",
                    position: (217, 50),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "ownerStamp",
                     position: (220, 41),
                    },
                   },
                   Raw {
                    content: "\"\n    cp \"$dir\"/config.xml \"$jenkinsjobdir/config.xml\"\n    echo \"$jenkinsjobname\" >> \"$cur_decl_jobs\"\ndone\n\n# Remove stale jobs\nfind \"",
                    position: (220, 52),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (226, 21),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "home",
                        position: (226, 32),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\" -type f -name \"",
                    position: (226, 37),
                   },
                   Interpolation {
                    expression: Variable {
                     identifier: "ownerStamp",
                     position: (226, 56),
                    },
                   },
                   Raw {
                    content: "\" | while read -r f; do echo \"$(dirname \"$f\")\"; done | sort --reverse | while read -r dir; do\n    jenkinsjobname=\"$(realpath --relative-to=\"",
                    position: (226, 67),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (227, 61),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "home",
                        position: (227, 72),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "\" \"$dir\")\"\n    grep --quiet --line-regexp \"$jenkinsjobname\" \"$cur_decl_jobs\" 2>/dev/null && continue\n    jobname=$(getJobname \"$jenkinsjobname\")\n    echo \"Deleting stale job \\\"$jobname\\\"\"\n    jobdir=\"",
                    position: (227, 77),
                   },
                   Interpolation {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "jenkinsCfg",
                      position: (231, 27),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "home",
                        position: (231, 38),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: "/$jenkinsjobname\"\n    rm -rf \"$jobdir\"\ndone\n",
                    position: (231, 43),
                   },
                  ],
                  position: (167, 11),
                 },
                 Parentheses {
                  expression: IfThenElse {
                   predicate: BinaryOperation {
                    operator: NotEqualTo,
                    operands: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "cfg",
                       position: (234, 20),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "accessUser",
                         position: (234, 24),
                        },
                       ],
                      },
                      default: None,
                     },
                     String {
                      parts: [],
                      position: (234, 38),
                     },
                    ],
                    position: (234, 35),
                   },
                   then: Variable {
                    identifier: "reloadScript",
                    position: (234, 46),
                   },
                   else_: String {
                    parts: [],
                    position: (234, 64),
                   },
                   position: (234, 17),
                  },
                  position: (234, 16),
                 },
                ],
                position: (234, 14),
               },
               position: (147, 9),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "serviceConfig",
                 position: (235, 7),
                },
               ],
              },
              to: Map {
               bindings: [
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "User",
                    position: (236, 9),
                   },
                  ],
                 },
                 to: PropertyAccess {
                  expression: Variable {
                   identifier: "jenkinsCfg",
                   position: (236, 16),
                  },
                  attribute_path: AttributePath {
                   parts: [
                    Raw {
                     content: "user",
                     position: (236, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                },
                Binding {
                 from: AttributePath {
                  parts: [
                   Raw {
                    content: "RuntimeDirectory",
                    position: (237, 9),
                   },
                  ],
                 },
                 to: String {
                  parts: [
                   Raw {
                    content: "jenkins-job-builder",
                    position: (237, 29),
                   },
                  ],
                  position: (237, 28),
                 },
                },
               ],
               recursive: false,
               position: (235, 23),
              },
             },
            ],
            recursive: false,
            position: (133, 44),
           },
          },
         ],
         recursive: false,
         position: (117, 51),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (9, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}