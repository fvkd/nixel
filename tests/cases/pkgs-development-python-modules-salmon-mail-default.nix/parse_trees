---
Î“ := rules "expr"
  expr := rules "expr_function"
    expr_function := rules "{" "formals" "}" ":" "expr_function"
      { := lexemes "{"
        { "{" (1, 1)
      formals := rules "formal" "," "formals"
        formal := rules "ID"
          ID := lexemes "ID"
            ID "lib" (1, 3)
        , := lexemes ","
          , "," (1, 6)
        formals := rules "formal" "," "formals"
          formal := rules "ID"
            ID := lexemes "ID"
              ID "buildPythonPackage" (1, 8)
          , := lexemes ","
            , "," (1, 26)
          formals := rules "formal" "," "formals"
            formal := rules "ID"
              ID := lexemes "ID"
                ID "fetchPypi" (1, 28)
            , := lexemes ","
              , "," (1, 37)
            formals := rules "formal" "," "formals"
              formal := rules "ID"
                ID := lexemes "ID"
                  ID "dnspython" (1, 39)
              , := lexemes ","
                , "," (1, 48)
              formals := rules "formal" "," "formals"
                formal := rules "ID"
                  ID := lexemes "ID"
                    ID "chardet" (1, 50)
                , := lexemes ","
                  , "," (1, 57)
                formals := rules "formal" "," "formals"
                  formal := rules "ID"
                    ID := lexemes "ID"
                      ID "lmtpd" (1, 59)
                  , := lexemes ","
                    , "," (2, 1)
                  formals := rules "formal" "," "formals"
                    formal := rules "ID"
                      ID := lexemes "ID"
                        ID "python-daemon" (2, 3)
                    , := lexemes ","
                      , "," (2, 16)
                    formals := rules "formal" "," "formals"
                      formal := rules "ID"
                        ID := lexemes "ID"
                          ID "six" (2, 18)
                      , := lexemes ","
                        , "," (2, 21)
                      formals := rules "formal" "," "formals"
                        formal := rules "ID"
                          ID := lexemes "ID"
                            ID "jinja2" (2, 23)
                        , := lexemes ","
                          , "," (2, 29)
                        formals := rules "formal" "," "formals"
                          formal := rules "ID"
                            ID := lexemes "ID"
                              ID "mock" (2, 31)
                          , := lexemes ","
                            , "," (2, 35)
                          formals := rules "formal"
                            formal := rules "ID"
                              ID := lexemes "ID"
                                ID "click" (2, 37)
      } := lexemes "}"
        } "}" (2, 43)
      : := lexemes ":"
        : ":" (2, 44)
      expr_function := rules "expr_if"
        expr_if := rules "expr_op"
          expr_op := rules "expr_app"
            expr_app := rules "expr_app" "expr_select"
              expr_app := rules "expr_select"
                expr_select := rules "expr_simple"
                  expr_simple := rules "ID"
                    ID := lexemes "ID"
                      ID "buildPythonPackage" (4, 1)
              expr_select := rules "expr_simple"
                expr_simple := rules "REC" "{" "binds" "}"
                  REC := lexemes "REC"
                    REC "rec" (4, 20)
                  { := lexemes "{"
                    { "{" (4, 24)
                  binds := rules "binds" "attrpath" "=" "expr" ";"
                    binds := rules "binds" "attrpath" "=" "expr" ";"
                      binds := rules "binds" "attrpath" "=" "expr" ";"
                        binds := rules "binds" "attrpath" "=" "expr" ";"
                          binds := rules "binds" "attrpath" "=" "expr" ";"
                            binds := rules "binds" "attrpath" "=" "expr" ";"
                              binds := rules "binds" "attrpath" "=" "expr" ";"
                                binds := rules "binds" "attrpath" "=" "expr" ";"
                                  binds := rules 
                                  attrpath := rules "attr"
                                    attr := rules "ID"
                                      ID := lexemes "ID"
                                        ID "pname" (5, 3)
                                  = := lexemes "="
                                    = "=" (5, 9)
                                  expr := rules "expr_function"
                                    expr_function := rules "expr_if"
                                      expr_if := rules "expr_op"
                                        expr_op := rules "expr_app"
                                          expr_app := rules "expr_select"
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "\"" "string_parts" "\""
                                                " := lexemes "\""
                                                  " "\"" (5, 11)
                                                string_parts := rules "STR"
                                                  STR := lexemes "STR"
                                                    STR "salmon-mail" (5, 12)
                                                " := lexemes "\""
                                                  " "\"" (5, 23)
                                  ; := lexemes ";"
                                    ; ";" (5, 24)
                                attrpath := rules "attr"
                                  attr := rules "ID"
                                    ID := lexemes "ID"
                                      ID "version" (6, 3)
                                = := lexemes "="
                                  = "=" (6, 11)
                                expr := rules "expr_function"
                                  expr_function := rules "expr_if"
                                    expr_if := rules "expr_op"
                                      expr_op := rules "expr_app"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "\"" "string_parts" "\""
                                              " := lexemes "\""
                                                " "\"" (6, 13)
                                              string_parts := rules "STR"
                                                STR := lexemes "STR"
                                                  STR "3.2.0" (6, 14)
                                              " := lexemes "\""
                                                " "\"" (6, 19)
                                ; := lexemes ";"
                                  ; ";" (6, 20)
                              attrpath := rules "attr"
                                attr := rules "ID"
                                  ID := lexemes "ID"
                                    ID "src" (8, 3)
                              = := lexemes "="
                                = "=" (8, 7)
                              expr := rules "expr_function"
                                expr_function := rules "expr_if"
                                  expr_if := rules "expr_op"
                                    expr_op := rules "expr_app"
                                      expr_app := rules "expr_app" "expr_select"
                                        expr_app := rules "expr_select"
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "fetchPypi" (8, 9)
                                        expr_select := rules "expr_simple"
                                          expr_simple := rules "{" "binds" "}"
                                            { := lexemes "{"
                                              { "{" (8, 19)
                                            binds := rules "binds" "attrpath" "=" "expr" ";"
                                              binds := rules "binds" "INHERIT" "attrs" ";"
                                                binds := rules 
                                                INHERIT := lexemes "INHERIT"
                                                  INHERIT "inherit" (9, 5)
                                                attrs := rules "attrs" "attr"
                                                  attrs := rules "attrs" "attr"
                                                    attrs := rules 
                                                    attr := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "pname" (9, 13)
                                                  attr := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "version" (9, 19)
                                                ; := lexemes ";"
                                                  ; ";" (9, 26)
                                              attrpath := rules "attr"
                                                attr := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "sha256" (10, 5)
                                              = := lexemes "="
                                                = "=" (10, 12)
                                              expr := rules "expr_function"
                                                expr_function := rules "expr_if"
                                                  expr_if := rules "expr_op"
                                                    expr_op := rules "expr_app"
                                                      expr_app := rules "expr_select"
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "\"" "string_parts" "\""
                                                            " := lexemes "\""
                                                              " "\"" (10, 14)
                                                            string_parts := rules "STR"
                                                              STR := lexemes "STR"
                                                                STR "0q2m6xri1b7qv46rqpv2qfdgk2jvswj8lpaacnxwjna3m685fhfx" (10, 15)
                                                            " := lexemes "\""
                                                              " "\"" (10, 67)
                                              ; := lexemes ";"
                                                ; ";" (10, 68)
                                            } := lexemes "}"
                                              } "}" (11, 3)
                              ; := lexemes ";"
                                ; ";" (11, 4)
                            attrpath := rules "attr"
                              attr := rules "ID"
                                ID := lexemes "ID"
                                  ID "checkInputs" (13, 3)
                            = := lexemes "="
                              = "=" (13, 15)
                            expr := rules "expr_function"
                              expr_function := rules "expr_if"
                                expr_if := rules "expr_op"
                                  expr_op := rules "expr_app"
                                    expr_app := rules "expr_select"
                                      expr_select := rules "expr_simple"
                                        expr_simple := rules "[" "expr_list" "]"
                                          [ := lexemes "["
                                            [ "[" (13, 17)
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules 
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "jinja2" (13, 19)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "mock" (13, 26)
                                          ] := lexemes "]"
                                            ] "]" (13, 31)
                            ; := lexemes ";"
                              ; ";" (13, 32)
                          attrpath := rules "attr"
                            attr := rules "ID"
                              ID := lexemes "ID"
                                ID "propagatedBuildInputs" (14, 3)
                          = := lexemes "="
                            = "=" (14, 25)
                          expr := rules "expr_function"
                            expr_function := rules "expr_if"
                              expr_if := rules "expr_op"
                                expr_op := rules "expr_app"
                                  expr_app := rules "expr_select"
                                    expr_select := rules "expr_simple"
                                      expr_simple := rules "[" "expr_list" "]"
                                        [ := lexemes "["
                                          [ "[" (14, 27)
                                        expr_list := rules "expr_list" "expr_select"
                                          expr_list := rules "expr_list" "expr_select"
                                            expr_list := rules "expr_list" "expr_select"
                                              expr_list := rules "expr_list" "expr_select"
                                                expr_list := rules "expr_list" "expr_select"
                                                  expr_list := rules "expr_list" "expr_select"
                                                    expr_list := rules 
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "chardet" (14, 29)
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "dnspython" (14, 37)
                                                expr_select := rules "expr_simple"
                                                  expr_simple := rules "ID"
                                                    ID := lexemes "ID"
                                                      ID "lmtpd" (14, 47)
                                              expr_select := rules "expr_simple"
                                                expr_simple := rules "ID"
                                                  ID := lexemes "ID"
                                                    ID "python-daemon" (14, 53)
                                            expr_select := rules "expr_simple"
                                              expr_simple := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "six" (14, 67)
                                          expr_select := rules "expr_simple"
                                            expr_simple := rules "ID"
                                              ID := lexemes "ID"
                                                ID "click" (14, 71)
                                        ] := lexemes "]"
                                          ] "]" (14, 77)
                          ; := lexemes ";"
                            ; ";" (14, 78)
                        attrpath := rules "attr"
                          attr := rules "ID"
                            ID := lexemes "ID"
                              ID "__darwinAllowLocalNetworking" (18, 3)
                        = := lexemes "="
                          = "=" (18, 32)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "true" (18, 34)
                        ; := lexemes ";"
                          ; ";" (18, 38)
                      attrpath := rules "attr"
                        attr := rules "ID"
                          ID := lexemes "ID"
                            ID "checkPhase" (22, 3)
                      = := lexemes "="
                        = "=" (22, 14)
                      expr := rules "expr_function"
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "IND_STRING_OPEN" "ind_string_parts" "IND_STRING_CLOSE"
                                    IND_STRING_OPEN := lexemes "IND_STRING_OPEN"
                                      IND_STRING_OPEN "''\n" (22, 16)
                                    ind_string_parts := rules "ind_string_parts" "IND_STR"
                                      ind_string_parts := rules 
                                      IND_STR := lexemes "IND_STR"
                                        IND_STR "    # tests fail and pytest is not supported\n    rm tests/server_tests.py\n    PATH=$out/bin:$PATH python setup.py test\n  " (23, 1)
                                    IND_STRING_CLOSE := lexemes "IND_STRING_CLOSE"
                                      IND_STRING_CLOSE "''" (26, 3)
                      ; := lexemes ";"
                        ; ";" (26, 5)
                    attrpath := rules "attr"
                      attr := rules "ID"
                        ID := lexemes "ID"
                          ID "meta" (28, 3)
                    = := lexemes "="
                      = "=" (28, 8)
                    expr := rules "expr_function"
                      expr_function := rules "WITH" "expr" ";" "expr_function"
                        WITH := lexemes "WITH"
                          WITH "with" (28, 10)
                        expr := rules "expr_function"
                          expr_function := rules "expr_if"
                            expr_if := rules "expr_op"
                              expr_op := rules "expr_app"
                                expr_app := rules "expr_select"
                                  expr_select := rules "expr_simple"
                                    expr_simple := rules "ID"
                                      ID := lexemes "ID"
                                        ID "lib" (28, 15)
                        ; := lexemes ";"
                          ; ";" (28, 18)
                        expr_function := rules "expr_if"
                          expr_if := rules "expr_op"
                            expr_op := rules "expr_app"
                              expr_app := rules "expr_select"
                                expr_select := rules "expr_simple"
                                  expr_simple := rules "{" "binds" "}"
                                    { := lexemes "{"
                                      { "{" (28, 20)
                                    binds := rules "binds" "attrpath" "=" "expr" ";"
                                      binds := rules "binds" "attrpath" "=" "expr" ";"
                                        binds := rules "binds" "attrpath" "=" "expr" ";"
                                          binds := rules "binds" "attrpath" "=" "expr" ";"
                                            binds := rules 
                                            attrpath := rules "attr"
                                              attr := rules "ID"
                                                ID := lexemes "ID"
                                                  ID "homepage" (29, 5)
                                            = := lexemes "="
                                              = "=" (29, 14)
                                            expr := rules "expr_function"
                                              expr_function := rules "expr_if"
                                                expr_if := rules "expr_op"
                                                  expr_op := rules "expr_app"
                                                    expr_app := rules "expr_select"
                                                      expr_select := rules "expr_simple"
                                                        expr_simple := rules "\"" "string_parts" "\""
                                                          " := lexemes "\""
                                                            " "\"" (29, 16)
                                                          string_parts := rules "STR"
                                                            STR := lexemes "STR"
                                                              STR "https://salmon-mail.readthedocs.org/" (29, 17)
                                                          " := lexemes "\""
                                                            " "\"" (29, 53)
                                            ; := lexemes ";"
                                              ; ";" (29, 54)
                                          attrpath := rules "attr"
                                            attr := rules "ID"
                                              ID := lexemes "ID"
                                                ID "description" (30, 5)
                                          = := lexemes "="
                                            = "=" (30, 17)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "\"" "string_parts" "\""
                                                        " := lexemes "\""
                                                          " "\"" (30, 19)
                                                        string_parts := rules "STR"
                                                          STR := lexemes "STR"
                                                            STR "Pythonic mail application server" (30, 20)
                                                        " := lexemes "\""
                                                          " "\"" (30, 52)
                                          ; := lexemes ";"
                                            ; ";" (30, 53)
                                        attrpath := rules "attr"
                                          attr := rules "ID"
                                            ID := lexemes "ID"
                                              ID "license" (31, 5)
                                        = := lexemes "="
                                          = "=" (31, 13)
                                        expr := rules "expr_function"
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple" "." "attrpath"
                                                    expr_simple := rules "ID"
                                                      ID := lexemes "ID"
                                                        ID "licenses" (31, 15)
                                                    . := lexemes "."
                                                      . "." (31, 23)
                                                    attrpath := rules "attr"
                                                      attr := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "gpl3Only" (31, 24)
                                        ; := lexemes ";"
                                          ; ";" (31, 32)
                                      attrpath := rules "attr"
                                        attr := rules "ID"
                                          ID := lexemes "ID"
                                            ID "maintainers" (32, 5)
                                      = := lexemes "="
                                        = "=" (32, 17)
                                      expr := rules "expr_function"
                                        expr_function := rules "WITH" "expr" ";" "expr_function"
                                          WITH := lexemes "WITH"
                                            WITH "with" (32, 19)
                                          expr := rules "expr_function"
                                            expr_function := rules "expr_if"
                                              expr_if := rules "expr_op"
                                                expr_op := rules "expr_app"
                                                  expr_app := rules "expr_select"
                                                    expr_select := rules "expr_simple"
                                                      expr_simple := rules "ID"
                                                        ID := lexemes "ID"
                                                          ID "maintainers" (32, 24)
                                          ; := lexemes ";"
                                            ; ";" (32, 35)
                                          expr_function := rules "expr_if"
                                            expr_if := rules "expr_op"
                                              expr_op := rules "expr_app"
                                                expr_app := rules "expr_select"
                                                  expr_select := rules "expr_simple"
                                                    expr_simple := rules "[" "expr_list" "]"
                                                      [ := lexemes "["
                                                        [ "[" (32, 37)
                                                      expr_list := rules "expr_list" "expr_select"
                                                        expr_list := rules 
                                                        expr_select := rules "expr_simple"
                                                          expr_simple := rules "ID"
                                                            ID := lexemes "ID"
                                                              ID "jluttine" (32, 39)
                                                      ] := lexemes "]"
                                                        ] "]" (32, 48)
                                      ; := lexemes ";"
                                        ; ";" (32, 49)
                                    } := lexemes "}"
                                      } "}" (33, 3)
                    ; := lexemes ";"
                      ; ";" (33, 4)
                  } := lexemes "}"
                    } "}" (34, 1)