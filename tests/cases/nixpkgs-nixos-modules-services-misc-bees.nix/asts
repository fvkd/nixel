---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (7, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "services",
         position: (7, 16),
        },
        Raw {
         content: "beesd",
         position: (7, 25),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "logLevels",
        position: (9, 3),
       },
      ],
     },
     to: Map {
      bindings: [
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "emerg",
           position: (9, 17),
          },
         ],
        },
        to: Int {
         value: 0,
         position: (9, 25),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "alert",
           position: (9, 28),
          },
         ],
        },
        to: Int {
         value: 1,
         position: (9, 36),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "crit",
           position: (9, 39),
          },
         ],
        },
        to: Int {
         value: 2,
         position: (9, 46),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "err",
           position: (9, 49),
          },
         ],
        },
        to: Int {
         value: 3,
         position: (9, 55),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "warning",
           position: (9, 58),
          },
         ],
        },
        to: Int {
         value: 4,
         position: (9, 68),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "notice",
           position: (9, 71),
          },
         ],
        },
        to: Int {
         value: 5,
         position: (9, 80),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "info",
           position: (9, 83),
          },
         ],
        },
        to: Int {
         value: 6,
         position: (9, 90),
        },
       },
       Binding {
        from: AttributePath {
         parts: [
          Raw {
           content: "debug",
           position: (9, 93),
          },
         ],
        },
        to: Int {
         value: 7,
         position: (9, 101),
        },
       },
      ],
      recursive: false,
      position: (9, 15),
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "fsOptions",
        position: (11, 3),
       },
      ],
     },
     to: With {
      expression: Variable {
       identifier: "types",
       position: (11, 20),
      },
      target: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (12, 5),
           },
           Raw {
            content: "spec",
            position: (12, 13),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (12, 20),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (13, 7),
                },
               ],
              },
              to: Variable {
               identifier: "str",
               position: (13, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (14, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Description of how to identify the filesystem to be duplicated by this\ninstance of bees. Note that deduplication crosses subvolumes; one must\nnot configure multiple instances for subvolumes of the same filesystem\n(or block devices which are part of the same filesystem), but only for\ncompletely independent btrfs filesystems.\n</para>\n<para>\nThis must be in a format usable by findmnt; that could be a key=value\npair, or a bare path to a mount point.\nUsing bare paths will allow systemd to start the beesd service only\nafter mounting the associated path.\n",
                 position: (15, 1),
                },
               ],
               position: (14, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (27, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "LABEL=MyBulkDataDrive",
                 position: (27, 18),
                },
               ],
               position: (27, 17),
              },
             },
            ],
            recursive: false,
            position: (12, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (29, 5),
           },
           Raw {
            content: "hashTableSizeMB",
            position: (29, 13),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (29, 31),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (30, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (30, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "addCheck",
                   position: (30, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (30, 29),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Raw {
                    content: "int",
                    position: (30, 35),
                   },
                  ],
                 },
                 default: None,
                },
                Parentheses {
                 expression: Function {
                  argument: Simple {
                   identifier: "n",
                  },
                  definition: BinaryOperation {
                   operator: EqualTo,
                   operands: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "mod",
                      position: (30, 43),
                     },
                     arguments: [
                      Variable {
                       identifier: "n",
                       position: (30, 47),
                      },
                      Int {
                       value: 16,
                       position: (30, 49),
                      },
                     ],
                    },
                    Int {
                     value: 0,
                     position: (30, 55),
                    },
                   ],
                   position: (30, 52),
                  },
                  position: (30, 40),
                 },
                 position: (30, 39),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (31, 7),
                },
               ],
              },
              to: Int {
               value: 1024,
               position: (31, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (32, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Hash table size in MB; must be a multiple of 16.\n</para>\n<para>\nA larger ratio of index size to storage size means smaller blocks of\nduplicate content are recognized.\n</para>\n<para>\nIf you have 1TB of data, a 4GB hash table (which is to say, a value of\n4096) will permit 4KB extents (the smallest possible size) to be\nrecognized, whereas a value of 1024 -- creating a 1GB hash table --\nwill recognize only aligned duplicate blocks of 16KB.\n",
                 position: (33, 1),
                },
               ],
               position: (32, 21),
              },
             },
            ],
            recursive: false,
            position: (29, 40),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (46, 5),
           },
           Raw {
            content: "verbosity",
            position: (46, 13),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (46, 25),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (47, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (47, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "enum",
                   position: (47, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Parentheses {
                 expression: BinaryOperation {
                  operator: Concatenation,
                  operands: [
                   FunctionApplication {
                    function: Variable {
                     identifier: "attrNames",
                     position: (47, 26),
                    },
                    arguments: [
                     Variable {
                      identifier: "logLevels",
                      position: (47, 36),
                     },
                    ],
                   },
                   FunctionApplication {
                    function: Variable {
                     identifier: "attrValues",
                     position: (47, 49),
                    },
                    arguments: [
                     Variable {
                      identifier: "logLevels",
                      position: (47, 60),
                     },
                    ],
                   },
                  ],
                  position: (47, 46),
                 },
                 position: (47, 25),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "apply",
                 position: (48, 7),
                },
               ],
              },
              to: Function {
               argument: Simple {
                identifier: "v",
               },
               definition: IfThenElse {
                predicate: FunctionApplication {
                 function: Variable {
                  identifier: "isString",
                  position: (48, 21),
                 },
                 arguments: [
                  Variable {
                   identifier: "v",
                   position: (48, 30),
                  },
                 ],
                },
                then: PropertyAccess {
                 expression: Variable {
                  identifier: "logLevels",
                  position: (48, 37),
                 },
                 attribute_path: AttributePath {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "v",
                     position: (48, 49),
                    },
                   },
                  ],
                 },
                 default: None,
                },
                else_: Variable {
                 identifier: "v",
                 position: (48, 57),
                },
                position: (48, 18),
               },
               position: (48, 15),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (49, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "info",
                 position: (49, 18),
                },
               ],
               position: (49, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (50, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Log verbosity (syslog keyword/level).",
                 position: (50, 22),
                },
               ],
               position: (50, 21),
              },
             },
            ],
            recursive: false,
            position: (46, 34),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (52, 5),
           },
           Raw {
            content: "workDir",
            position: (52, 13),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (52, 23),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (53, 7),
                },
               ],
              },
              to: Variable {
               identifier: "str",
               position: (53, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (54, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: ".beeshome",
                 position: (54, 18),
                },
               ],
               position: (54, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (55, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Name (relative to the root of the filesystem) of the subvolume where\nthe hash table will be stored.\n",
                 position: (56, 1),
                },
               ],
               position: (55, 21),
              },
             },
            ],
            recursive: false,
            position: (52, 32),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "options",
            position: (60, 5),
           },
           Raw {
            content: "extraOptions",
            position: (60, 13),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (60, 28),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (61, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "listOf",
                position: (61, 14),
               },
               arguments: [
                Variable {
                 identifier: "str",
                 position: (61, 21),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (62, 7),
                },
               ],
              },
              to: List {
               elements: [],
               position: (62, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (63, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Extra command-line options passed to the daemon. See upstream bees documentation.\n",
                 position: (64, 1),
                },
               ],
               position: (63, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (66, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (66, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "[ \"--thread-count\" \"4\" ]\n",
                   position: (67, 1),
                  },
                 ],
                 position: (66, 35),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (60, 37),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (11, 27),
      },
      position: (11, 15),
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (75, 3),
        },
        Raw {
         content: "services",
         position: (75, 11),
        },
        Raw {
         content: "beesd",
         position: (75, 20),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "filesystems",
            position: (76, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (76, 19),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (77, 7),
                },
               ],
              },
              to: With {
               expression: Variable {
                identifier: "types",
                position: (77, 19),
               },
               target: FunctionApplication {
                function: Variable {
                 identifier: "attrsOf",
                 position: (77, 26),
                },
                arguments: [
                 Parentheses {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "submodule",
                    position: (77, 35),
                   },
                   arguments: [
                    Variable {
                     identifier: "fsOptions",
                     position: (77, 45),
                    },
                   ],
                  },
                  position: (77, 34),
                 },
                ],
               },
               position: (77, 14),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (78, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "BTRFS filesystems to run block-level deduplication on.",
                 position: (78, 22),
                },
               ],
               position: (78, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (79, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (79, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (80, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (80, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  root = {\n    spec = \"LABEL=root\";\n    hashTableSizeMB = 2048;\n    verbosity = \"crit\";\n    extraOptions = [ \"--loadavg-target\" \"5.0\" ];\n  };\n}\n",
                   position: (81, 1),
                  },
                 ],
                 position: (80, 35),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (76, 28),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (75, 28),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (92, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "systemd",
            position: (93, 5),
           },
           Raw {
            content: "services",
            position: (93, 13),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mapAttrs'",
           position: (93, 24),
          },
          arguments: [
           Parentheses {
            expression: Function {
             argument: Simple {
              identifier: "name",
             },
             definition: Function {
              argument: Simple {
               identifier: "fs",
              },
              definition: FunctionApplication {
               function: Variable {
                identifier: "nameValuePair",
                position: (94, 18),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "beesd@",
                   position: (94, 33),
                  },
                  Expression {
                   expression: Variable {
                    identifier: "name",
                    position: (94, 41),
                   },
                  },
                 ],
                 position: (94, 32),
                },
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "description",
                      position: (95, 9),
                     },
                    ],
                   },
                   to: String {
                    parts: [
                     Raw {
                      content: "Block-level BTRFS deduplication for %i",
                      position: (95, 24),
                     },
                    ],
                    position: (95, 23),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "after",
                      position: (96, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "sysinit.target",
                        position: (96, 20),
                       },
                      ],
                      position: (96, 19),
                     },
                    ],
                    position: (96, 17),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "serviceConfig",
                      position: (98, 9),
                     },
                    ],
                   },
                   to: LetIn {
                    bindings: [
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "configOpts",
                         position: (100, 13),
                        },
                       ],
                      },
                      to: List {
                       elements: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "fs",
                          position: (101, 15),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "spec",
                            position: (101, 18),
                           },
                          ],
                         },
                         default: None,
                        },
                        String {
                         parts: [
                          Raw {
                           content: "verbosity=",
                           position: (102, 16),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "toString",
                             position: (102, 28),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "fs",
                               position: (102, 37),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "verbosity",
                                 position: (102, 40),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                         ],
                         position: (102, 15),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "idxSizeMB=",
                           position: (103, 16),
                          },
                          Expression {
                           expression: FunctionApplication {
                            function: Variable {
                             identifier: "toString",
                             position: (103, 28),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "fs",
                               position: (103, 37),
                              },
                              attribute_path: AttributePath {
                               parts: [
                                Raw {
                                 content: "hashTableSizeMB",
                                 position: (103, 40),
                                },
                               ],
                              },
                              default: None,
                             },
                            ],
                           },
                          },
                         ],
                         position: (103, 15),
                        },
                        String {
                         parts: [
                          Raw {
                           content: "workDir=",
                           position: (104, 16),
                          },
                          Expression {
                           expression: PropertyAccess {
                            expression: Variable {
                             identifier: "fs",
                             position: (104, 26),
                            },
                            attribute_path: AttributePath {
                             parts: [
                              Raw {
                               content: "workDir",
                               position: (104, 29),
                              },
                             ],
                            },
                            default: None,
                           },
                          },
                         ],
                         position: (104, 15),
                        },
                       ],
                       position: (100, 26),
                      },
                     },
                     Binding {
                      from: AttributePath {
                       parts: [
                        Raw {
                         content: "configOptsStr",
                         position: (106, 13),
                        },
                       ],
                      },
                      to: FunctionApplication {
                       function: Variable {
                        identifier: "escapeShellArgs",
                        position: (106, 29),
                       },
                       arguments: [
                        Variable {
                         identifier: "configOpts",
                         position: (106, 45),
                        },
                       ],
                      },
                     },
                    ],
                    target: Map {
                     bindings: [
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "ExecStart",
                          position: (110, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "pkgs",
                            position: (110, 28),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "bees",
                              position: (110, 33),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/bin/bees-service-wrapper run ",
                          position: (110, 38),
                         },
                         Expression {
                          expression: Variable {
                           identifier: "configOptsStr",
                           position: (110, 70),
                          },
                         },
                         Raw {
                          content: " -- --no-timestamps ",
                          position: (110, 84),
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "escapeShellArgs",
                            position: (110, 106),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "fs",
                              position: (110, 122),
                             },
                             attribute_path: AttributePath {
                              parts: [
                               Raw {
                                content: "extraOptions",
                                position: (110, 125),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                        ],
                        position: (110, 25),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "ExecStopPost",
                          position: (111, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Expression {
                          expression: PropertyAccess {
                           expression: Variable {
                            identifier: "pkgs",
                            position: (111, 31),
                           },
                           attribute_path: AttributePath {
                            parts: [
                             Raw {
                              content: "bees",
                              position: (111, 36),
                             },
                            ],
                           },
                           default: None,
                          },
                         },
                         Raw {
                          content: "/bin/bees-service-wrapper cleanup ",
                          position: (111, 41),
                         },
                         Expression {
                          expression: Variable {
                           identifier: "configOptsStr",
                           position: (111, 77),
                          },
                         },
                        ],
                        position: (111, 28),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "CPUAccounting",
                          position: (112, 13),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "true",
                        position: (112, 29),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "CPUSchedulingPolicy",
                          position: (113, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "batch",
                          position: (113, 36),
                         },
                        ],
                        position: (113, 35),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "CPUWeight",
                          position: (114, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 12,
                        position: (114, 25),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "IOSchedulingClass",
                          position: (115, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "idle",
                          position: (115, 34),
                         },
                        ],
                        position: (115, 33),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "IOSchedulingPriority",
                          position: (116, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 7,
                        position: (116, 36),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "IOWeight",
                          position: (117, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 10,
                        position: (117, 24),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "KillMode",
                          position: (118, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "control-group",
                          position: (118, 25),
                         },
                        ],
                        position: (118, 24),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "KillSignal",
                          position: (119, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "SIGTERM",
                          position: (119, 27),
                         },
                        ],
                        position: (119, 26),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "MemoryAccounting",
                          position: (120, 13),
                         },
                        ],
                       },
                       to: Variable {
                        identifier: "true",
                        position: (120, 32),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "Nice",
                          position: (121, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 19,
                        position: (121, 20),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "Restart",
                          position: (122, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "on-abnormal",
                          position: (122, 24),
                         },
                        ],
                        position: (122, 23),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "StartupCPUWeight",
                          position: (123, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 25,
                        position: (123, 32),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "StartupIOWeight",
                          position: (124, 13),
                         },
                        ],
                       },
                       to: Int {
                        value: 25,
                        position: (124, 31),
                       },
                      },
                      Binding {
                       from: AttributePath {
                        parts: [
                         Raw {
                          content: "SyslogIdentifier",
                          position: (125, 13),
                         },
                        ],
                       },
                       to: String {
                        parts: [
                         Raw {
                          content: "beesd",
                          position: (125, 33),
                         },
                        ],
                        position: (125, 32),
                       },
                      },
                     ],
                     recursive: false,
                     position: (108, 11),
                    },
                    position: (99, 11),
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "unitConfig",
                      position: (127, 9),
                     },
                     Raw {
                      content: "RequiresMountsFor",
                      position: (127, 20),
                     },
                    ],
                   },
                   to: FunctionApplication {
                    function: PropertyAccess {
                     expression: Variable {
                      identifier: "lib",
                      position: (127, 40),
                     },
                     attribute_path: AttributePath {
                      parts: [
                       Raw {
                        content: "mkIf",
                        position: (127, 44),
                       },
                      ],
                     },
                     default: None,
                    },
                    arguments: [
                     Parentheses {
                      expression: FunctionApplication {
                       function: PropertyAccess {
                        expression: Variable {
                         identifier: "lib",
                         position: (127, 50),
                        },
                        attribute_path: AttributePath {
                         parts: [
                          Raw {
                           content: "hasPrefix",
                           position: (127, 54),
                          },
                         ],
                        },
                        default: None,
                       },
                       arguments: [
                        String {
                         parts: [
                          Raw {
                           content: "/",
                           position: (127, 65),
                          },
                         ],
                         position: (127, 64),
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "fs",
                          position: (127, 68),
                         },
                         attribute_path: AttributePath {
                          parts: [
                           Raw {
                            content: "spec",
                            position: (127, 71),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                      position: (127, 49),
                     },
                     PropertyAccess {
                      expression: Variable {
                       identifier: "fs",
                       position: (127, 77),
                      },
                      attribute_path: AttributePath {
                       parts: [
                        Raw {
                         content: "spec",
                         position: (127, 80),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  },
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "wantedBy",
                      position: (128, 9),
                     },
                    ],
                   },
                   to: List {
                    elements: [
                     String {
                      parts: [
                       Raw {
                        content: "multi-user.target",
                        position: (128, 23),
                       },
                      ],
                      position: (128, 22),
                     },
                    ],
                    position: (128, 20),
                   },
                  },
                 ],
                 recursive: false,
                 position: (94, 48),
                },
               ],
              },
              position: (94, 14),
             },
             position: (94, 8),
            },
            position: (94, 7),
           },
           PropertyAccess {
            expression: Variable {
             identifier: "cfg",
             position: (130, 7),
            },
            attribute_path: AttributePath {
             parts: [
              Raw {
               content: "filesystems",
               position: (130, 11),
              },
             ],
            },
            default: None,
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (92, 12),
      },
     },
    ],
    recursive: false,
    position: (73, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}