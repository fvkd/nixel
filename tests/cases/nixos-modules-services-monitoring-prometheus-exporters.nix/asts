---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "options",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: LetIn {
  bindings: [
   Inherit {
    from: Some(
     Variable {
      identifier: "lib",
      position: (4, 12),
     },
    ),
    attributes: [
     Raw {
      content: "concatStrings",
      position: (4, 17),
     },
     Raw {
      content: "foldl",
      position: (4, 31),
     },
     Raw {
      content: "foldl'",
      position: (4, 37),
     },
     Raw {
      content: "genAttrs",
      position: (4, 44),
     },
     Raw {
      content: "literalExpression",
      position: (4, 53),
     },
     Raw {
      content: "maintainers",
      position: (4, 71),
     },
     Raw {
      content: "mapAttrsToList",
      position: (5, 17),
     },
     Raw {
      content: "mkDefault",
      position: (5, 32),
     },
     Raw {
      content: "mkEnableOption",
      position: (5, 42),
     },
     Raw {
      content: "mkIf",
      position: (5, 57),
     },
     Raw {
      content: "mkMerge",
      position: (5, 62),
     },
     Raw {
      content: "mkOption",
      position: (5, 70),
     },
     Raw {
      content: "optional",
      position: (6, 17),
     },
     Raw {
      content: "types",
      position: (6, 26),
     },
     Raw {
      content: "mkOptionDefault",
      position: (6, 32),
     },
     Raw {
      content: "flip",
      position: (6, 48),
     },
     Raw {
      content: "attrNames",
      position: (6, 53),
     },
    ],
   },
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "cfg",
       position: (8, 3),
      },
     ],
    },
    PropertyAccess {
     expression: Variable {
      identifier: "config",
      position: (8, 9),
     },
     attribute_path: AttributePath {
      attributes: [
       Raw {
        content: "services",
        position: (8, 16),
       },
       Raw {
        content: "prometheus",
        position: (8, 25),
       },
       Raw {
        content: "exporters",
        position: (8, 36),
       },
      ],
     },
     default: None,
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "exporterOpts",
       position: (23, 3),
      },
     ],
    },
    FunctionApplication {
     function: Variable {
      identifier: "genAttrs",
      position: (23, 18),
     },
     arguments: [
      List {
       elements: [
        String {
         parts: [
          Raw {
           content: "apcupsd",
          },
         ],
         position: (24, 5),
        },
        String {
         parts: [
          Raw {
           content: "artifactory",
          },
         ],
         position: (25, 5),
        },
        String {
         parts: [
          Raw {
           content: "bind",
          },
         ],
         position: (26, 5),
        },
        String {
         parts: [
          Raw {
           content: "bird",
          },
         ],
         position: (27, 5),
        },
        String {
         parts: [
          Raw {
           content: "bitcoin",
          },
         ],
         position: (28, 5),
        },
        String {
         parts: [
          Raw {
           content: "blackbox",
          },
         ],
         position: (29, 5),
        },
        String {
         parts: [
          Raw {
           content: "buildkite-agent",
          },
         ],
         position: (30, 5),
        },
        String {
         parts: [
          Raw {
           content: "collectd",
          },
         ],
         position: (31, 5),
        },
        String {
         parts: [
          Raw {
           content: "dmarc",
          },
         ],
         position: (32, 5),
        },
        String {
         parts: [
          Raw {
           content: "dnsmasq",
          },
         ],
         position: (33, 5),
        },
        String {
         parts: [
          Raw {
           content: "domain",
          },
         ],
         position: (34, 5),
        },
        String {
         parts: [
          Raw {
           content: "dovecot",
          },
         ],
         position: (35, 5),
        },
        String {
         parts: [
          Raw {
           content: "fastly",
          },
         ],
         position: (36, 5),
        },
        String {
         parts: [
          Raw {
           content: "fritzbox",
          },
         ],
         position: (37, 5),
        },
        String {
         parts: [
          Raw {
           content: "influxdb",
          },
         ],
         position: (38, 5),
        },
        String {
         parts: [
          Raw {
           content: "json",
          },
         ],
         position: (39, 5),
        },
        String {
         parts: [
          Raw {
           content: "jitsi",
          },
         ],
         position: (40, 5),
        },
        String {
         parts: [
          Raw {
           content: "kea",
          },
         ],
         position: (41, 5),
        },
        String {
         parts: [
          Raw {
           content: "keylight",
          },
         ],
         position: (42, 5),
        },
        String {
         parts: [
          Raw {
           content: "knot",
          },
         ],
         position: (43, 5),
        },
        String {
         parts: [
          Raw {
           content: "lnd",
          },
         ],
         position: (44, 5),
        },
        String {
         parts: [
          Raw {
           content: "mail",
          },
         ],
         position: (45, 5),
        },
        String {
         parts: [
          Raw {
           content: "mikrotik",
          },
         ],
         position: (46, 5),
        },
        String {
         parts: [
          Raw {
           content: "minio",
          },
         ],
         position: (47, 5),
        },
        String {
         parts: [
          Raw {
           content: "modemmanager",
          },
         ],
         position: (48, 5),
        },
        String {
         parts: [
          Raw {
           content: "nextcloud",
          },
         ],
         position: (49, 5),
        },
        String {
         parts: [
          Raw {
           content: "nginx",
          },
         ],
         position: (50, 5),
        },
        String {
         parts: [
          Raw {
           content: "nginxlog",
          },
         ],
         position: (51, 5),
        },
        String {
         parts: [
          Raw {
           content: "node",
          },
         ],
         position: (52, 5),
        },
        String {
         parts: [
          Raw {
           content: "openldap",
          },
         ],
         position: (53, 5),
        },
        String {
         parts: [
          Raw {
           content: "openvpn",
          },
         ],
         position: (54, 5),
        },
        String {
         parts: [
          Raw {
           content: "pihole",
          },
         ],
         position: (55, 5),
        },
        String {
         parts: [
          Raw {
           content: "postfix",
          },
         ],
         position: (56, 5),
        },
        String {
         parts: [
          Raw {
           content: "postgres",
          },
         ],
         position: (57, 5),
        },
        String {
         parts: [
          Raw {
           content: "process",
          },
         ],
         position: (58, 5),
        },
        String {
         parts: [
          Raw {
           content: "pve",
          },
         ],
         position: (59, 5),
        },
        String {
         parts: [
          Raw {
           content: "py-air-control",
          },
         ],
         position: (60, 5),
        },
        String {
         parts: [
          Raw {
           content: "redis",
          },
         ],
         position: (61, 5),
        },
        String {
         parts: [
          Raw {
           content: "rspamd",
          },
         ],
         position: (62, 5),
        },
        String {
         parts: [
          Raw {
           content: "rtl_433",
          },
         ],
         position: (63, 5),
        },
        String {
         parts: [
          Raw {
           content: "script",
          },
         ],
         position: (64, 5),
        },
        String {
         parts: [
          Raw {
           content: "snmp",
          },
         ],
         position: (65, 5),
        },
        String {
         parts: [
          Raw {
           content: "smartctl",
          },
         ],
         position: (66, 5),
        },
        String {
         parts: [
          Raw {
           content: "smokeping",
          },
         ],
         position: (67, 5),
        },
        String {
         parts: [
          Raw {
           content: "sql",
          },
         ],
         position: (68, 5),
        },
        String {
         parts: [
          Raw {
           content: "surfboard",
          },
         ],
         position: (69, 5),
        },
        String {
         parts: [
          Raw {
           content: "systemd",
          },
         ],
         position: (70, 5),
        },
        String {
         parts: [
          Raw {
           content: "tor",
          },
         ],
         position: (71, 5),
        },
        String {
         parts: [
          Raw {
           content: "unbound",
          },
         ],
         position: (72, 5),
        },
        String {
         parts: [
          Raw {
           content: "unifi",
          },
         ],
         position: (73, 5),
        },
        String {
         parts: [
          Raw {
           content: "unifi-poller",
          },
         ],
         position: (74, 5),
        },
        String {
         parts: [
          Raw {
           content: "varnish",
          },
         ],
         position: (75, 5),
        },
        String {
         parts: [
          Raw {
           content: "wireguard",
          },
         ],
         position: (76, 5),
        },
        String {
         parts: [
          Raw {
           content: "flow",
          },
         ],
         position: (77, 5),
        },
       ],
       position: (23, 27),
      },
      Function {
       argument: Some(
        "name",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: FunctionApplication {
        function: Variable {
         identifier: "import",
         position: (79, 5),
        },
        arguments: [
         BinaryOperation {
          operator: Addition,
          operands: [
           Path {
            parts: [
             Raw {
              content: "./.",
             },
            ],
            position: (79, 13),
           },
           String {
            parts: [
             Raw {
              content: "/exporters/",
             },
             Expression {
              expression: Variable {
               identifier: "name",
               position: (79, 33),
              },
             },
             Raw {
              content: ".nix",
             },
            ],
            position: (79, 19),
           },
          ],
          position: (79, 17),
         },
         Map {
          bindings: [
           Inherit {
            from: None,
            attributes: [
             Raw {
              content: "config",
              position: (79, 55),
             },
             Raw {
              content: "lib",
              position: (79, 62),
             },
             Raw {
              content: "pkgs",
              position: (79, 66),
             },
             Raw {
              content: "options",
              position: (79, 71),
             },
            ],
           },
          ],
          recursive: false,
          position: (79, 45),
         },
        ],
       },
       position: (78, 6),
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mkExporterOpts",
       position: (82, 3),
      },
     ],
    },
    Function {
     argument: None,
     arguments: FunctionArguments {
      arguments: [
       FunctionArgument {
        identifier: "port",
        default: None,
       },
       FunctionArgument {
        identifier: "name",
        default: None,
       },
      ],
      ellipsis: false,
     },
     definition: Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enable",
           position: (83, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkEnableOption",
          position: (83, 14),
         },
         arguments: [
          String {
           parts: [
            Raw {
             content: "the prometheus ",
            },
            Expression {
             expression: Variable {
              identifier: "name",
              position: (83, 47),
             },
            },
            Raw {
             content: " exporter",
            },
           ],
           position: (83, 29),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "port",
           position: (84, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (84, 12),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (85, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (85, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "port",
                 position: (85, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (86, 7),
               },
              ],
             },
             Variable {
              identifier: "port",
              position: (86, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (87, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Port to listen on.\n",
               },
              ],
              position: (87, 21),
             },
            ),
           ],
           recursive: false,
           position: (84, 21),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "listenAddress",
           position: (91, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (91, 21),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (92, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (92, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "str",
                 position: (92, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (93, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "0.0.0.0",
               },
              ],
              position: (93, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (94, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Address to listen on.\n",
               },
              ],
              position: (94, 21),
             },
            ),
           ],
           recursive: false,
           position: (91, 30),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "extraFlags",
           position: (98, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (98, 18),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (99, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (99, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "listOf",
                  position: (99, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (99, 27),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "str",
                   position: (99, 33),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (100, 7),
               },
              ],
             },
             List {
              elements: [],
              position: (100, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (101, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Extra commandline options to pass to the ",
               },
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (102, 52),
                },
               },
               Raw {
                content: " exporter.\n",
               },
              ],
              position: (101, 21),
             },
            ),
           ],
           recursive: false,
           position: (98, 27),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "openFirewall",
           position: (105, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (105, 20),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (106, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (106, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "bool",
                 position: (106, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (107, 7),
               },
              ],
             },
             Variable {
              identifier: "false",
              position: (107, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (108, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Open port in firewall for incoming connections.\n",
               },
              ],
              position: (108, 21),
             },
            ),
           ],
           recursive: false,
           position: (105, 29),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "firewallFilter",
           position: (112, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (112, 22),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (113, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (113, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "nullOr",
                  position: (113, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (113, 27),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "str",
                   position: (113, 33),
                  },
                 ],
                },
                default: None,
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (114, 7),
               },
              ],
             },
             Variable {
              identifier: "null",
              position: (114, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "example",
                position: (115, 7),
               },
              ],
             },
             FunctionApplication {
              function: Variable {
               identifier: "literalExpression",
               position: (115, 17),
              },
              arguments: [
               String {
                parts: [
                 Raw {
                  content: "\"-i eth0 -p tcp -m tcp --dport ",
                 },
                 Expression {
                  expression: FunctionApplication {
                   function: Variable {
                    identifier: "toString",
                    position: (116, 42),
                   },
                   arguments: [
                    Variable {
                     identifier: "port",
                     position: (116, 51),
                    },
                   ],
                  },
                 },
                 Raw {
                  content: "\"\n",
                 },
                ],
                position: (115, 35),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (118, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Specify a filter for iptables to use when\n<option>services.prometheus.exporters.",
               },
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (120, 49),
                },
               },
               Raw {
                content: ".openFirewall</option>\nis true. It is used as `ip46tables -I nixos-fw <option>firewallFilter</option> -j nixos-fw-accept`.\n",
               },
              ],
              position: (118, 21),
             },
            ),
           ],
           recursive: false,
           position: (112, 31),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "user",
           position: (124, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (124, 12),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (125, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (125, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "str",
                 position: (125, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (126, 7),
               },
              ],
             },
             String {
              parts: [
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (126, 20),
                },
               },
               Raw {
                content: "-exporter",
               },
              ],
              position: (126, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (127, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "User name under which the ",
               },
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (128, 37),
                },
               },
               Raw {
                content: " exporter shall be run.\n",
               },
              ],
              position: (127, 21),
             },
            ),
           ],
           recursive: false,
           position: (124, 21),
          },
         ],
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "group",
           position: (131, 5),
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (131, 13),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (132, 7),
               },
              ],
             },
             PropertyAccess {
              expression: Variable {
               identifier: "types",
               position: (132, 14),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "str",
                 position: (132, 20),
                },
               ],
              },
              default: None,
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (133, 7),
               },
              ],
             },
             String {
              parts: [
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (133, 20),
                },
               },
               Raw {
                content: "-exporter",
               },
              ],
              position: (133, 17),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "description",
                position: (134, 7),
               },
              ],
             },
             String {
              parts: [
               Raw {
                content: "Group under which the ",
               },
               Expression {
                expression: Variable {
                 identifier: "name",
                 position: (135, 33),
                },
               },
               Raw {
                content: " exporter shall be run.\n",
               },
              ],
              position: (134, 21),
             },
            ),
           ],
           recursive: false,
           position: (131, 22),
          },
         ],
        },
       ),
      ],
      recursive: false,
      position: (82, 37),
     },
     position: (82, 21),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mkSubModule",
       position: (140, 3),
      },
     ],
    },
    Function {
     argument: None,
     arguments: FunctionArguments {
      arguments: [
       FunctionArgument {
        identifier: "imports",
        default: None,
       },
       FunctionArgument {
        identifier: "extraOpts",
        default: None,
       },
       FunctionArgument {
        identifier: "port",
        default: None,
       },
       FunctionArgument {
        identifier: "name",
        default: None,
       },
      ],
      ellipsis: false,
     },
     definition: Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Expression {
           expression: Variable {
            identifier: "name",
            position: (141, 7),
           },
          },
         ],
        },
        FunctionApplication {
         function: Variable {
          identifier: "mkOption",
          position: (141, 15),
         },
         arguments: [
          Map {
           bindings: [
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "type",
                position: (142, 7),
               },
              ],
             },
             FunctionApplication {
              function: PropertyAccess {
               expression: Variable {
                identifier: "types",
                position: (142, 14),
               },
               attribute_path: AttributePath {
                attributes: [
                 Raw {
                  content: "submodule",
                  position: (142, 20),
                 },
                ],
               },
               default: None,
              },
              arguments: [
               List {
                elements: [
                 Map {
                  bindings: [
                   Inherit {
                    from: None,
                    attributes: [
                     Raw {
                      content: "imports",
                      position: (143, 17),
                     },
                    ],
                   },
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "options",
                       position: (144, 9),
                      },
                     ],
                    },
                    BinaryOperation {
                     operator: Update,
                     operands: [
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkExporterOpts",
                        position: (144, 20),
                       },
                       arguments: [
                        Map {
                         bindings: [
                          Inherit {
                           from: None,
                           attributes: [
                            Raw {
                             content: "name",
                             position: (145, 19),
                            },
                            Raw {
                             content: "port",
                             position: (145, 24),
                            },
                           ],
                          },
                         ],
                         recursive: false,
                         position: (144, 35),
                        },
                       ],
                      },
                      Variable {
                       identifier: "extraOpts",
                       position: (146, 14),
                      },
                     ],
                     position: (146, 11),
                    },
                   ),
                  ],
                  recursive: false,
                  position: (142, 31),
                 },
                 Function {
                  argument: None,
                  arguments: FunctionArguments {
                   arguments: [
                    FunctionArgument {
                     identifier: "config",
                     default: None,
                    },
                   ],
                   ellipsis: true,
                  },
                  definition: FunctionApplication {
                   function: Variable {
                    identifier: "mkIf",
                    position: (147, 27),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (147, 32),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "openFirewall",
                        position: (147, 39),
                       },
                      ],
                     },
                     default: None,
                    },
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "firewallFilter",
                          position: (148, 9),
                         },
                        ],
                       },
                       FunctionApplication {
                        function: Variable {
                         identifier: "mkDefault",
                         position: (148, 26),
                        },
                        arguments: [
                         String {
                          parts: [
                           Raw {
                            content: "-p tcp -m tcp --dport ",
                           },
                           Expression {
                            expression: FunctionApplication {
                             function: Variable {
                              identifier: "toString",
                              position: (148, 61),
                             },
                             arguments: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "config",
                                position: (148, 70),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "port",
                                  position: (148, 77),
                                 },
                                ],
                               },
                               default: None,
                              },
                             ],
                            },
                           },
                          ],
                          position: (148, 36),
                         },
                        ],
                       },
                      ),
                     ],
                     recursive: false,
                     position: (147, 52),
                    },
                   ],
                  },
                  position: (147, 10),
                 },
                ],
                position: (142, 30),
               },
              ],
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "internal",
                position: (150, 7),
               },
              ],
             },
             Variable {
              identifier: "true",
              position: (150, 18),
             },
            ),
            KeyValue(
             AttributePath {
              attributes: [
               Raw {
                content: "default",
                position: (151, 7),
               },
              ],
             },
             Map {
              bindings: [],
              recursive: false,
              position: (151, 17),
             },
            ),
           ],
           recursive: false,
           position: (141, 24),
          },
         ],
        },
       ),
      ],
      recursive: false,
      position: (140, 53),
     },
     position: (140, 17),
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mkSubModules",
       position: (155, 3),
      },
     ],
    },
    FunctionApplication {
     function: Variable {
      identifier: "foldl'",
      position: (155, 19),
     },
     arguments: [
      Function {
       argument: Some(
        "a",
       ),
       arguments: FunctionArguments {
        arguments: [],
        ellipsis: false,
       },
       definition: Function {
        argument: Some(
         "b",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: BinaryOperation {
         operator: Update,
         operands: [
          Variable {
           identifier: "a",
           position: (155, 33),
          },
          Variable {
           identifier: "b",
           position: (155, 36),
          },
         ],
         position: (155, 34),
        },
        position: (155, 30),
       },
       position: (155, 27),
      },
      Map {
       bindings: [],
       recursive: false,
       position: (155, 39),
      },
      FunctionApplication {
       function: Variable {
        identifier: "mapAttrsToList",
        position: (156, 6),
       },
       arguments: [
        Function {
         argument: Some(
          "name",
         ),
         arguments: FunctionArguments {
          arguments: [],
          ellipsis: false,
         },
         definition: Function {
          argument: Some(
           "opts",
          ),
          arguments: FunctionArguments {
           arguments: [],
           ellipsis: false,
          },
          definition: FunctionApplication {
           function: Variable {
            identifier: "mkSubModule",
            position: (156, 34),
           },
           arguments: [
            Map {
             bindings: [
              Inherit {
               from: None,
               attributes: [
                Raw {
                 content: "name",
                 position: (157, 15),
                },
               ],
              },
              Inherit {
               from: Some(
                Variable {
                 identifier: "opts",
                 position: (158, 16),
                },
               ),
               attributes: [
                Raw {
                 content: "port",
                 position: (158, 22),
                },
               ],
              },
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "extraOpts",
                  position: (159, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "opts",
                 position: (159, 19),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "extraOpts",
                   position: (159, 24),
                  },
                 ],
                },
                default: Some(
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (159, 37),
                 },
                ),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "imports",
                  position: (160, 7),
                 },
                ],
               },
               PropertyAccess {
                expression: Variable {
                 identifier: "opts",
                 position: (160, 17),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "imports",
                   position: (160, 22),
                  },
                 ],
                },
                default: Some(
                 List {
                  elements: [],
                  position: (160, 33),
                 },
                ),
               },
              ),
             ],
             recursive: false,
             position: (156, 46),
            },
           ],
          },
          position: (156, 28),
         },
         position: (156, 22),
        },
        Variable {
         identifier: "exporterOpts",
         position: (161, 8),
        },
       ],
      },
     ],
    },
   ),
   KeyValue(
    AttributePath {
     attributes: [
      Raw {
       content: "mkExporterConf",
       position: (164, 3),
      },
     ],
    },
    Function {
     argument: None,
     arguments: FunctionArguments {
      arguments: [
       FunctionArgument {
        identifier: "serviceOpts",
        default: None,
       },
       FunctionArgument {
        identifier: "conf",
        default: None,
       },
       FunctionArgument {
        identifier: "name",
        default: None,
       },
      ],
      ellipsis: false,
     },
     definition: LetIn {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "enableDynamicUser",
           position: (166, 7),
          },
         ],
        },
        PropertyAccess {
         expression: Variable {
          identifier: "serviceOpts",
          position: (166, 27),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "serviceConfig",
            position: (166, 39),
           },
           Raw {
            content: "DynamicUser",
            position: (166, 53),
           },
          ],
         },
         default: Some(
          Variable {
           identifier: "true",
           position: (166, 68),
          },
         ),
        },
       ),
      ],
      target: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (168, 5),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "conf",
          position: (168, 10),
         },
         attribute_path: AttributePath {
          attributes: [
           Raw {
            content: "enable",
            position: (168, 15),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "warnings",
              position: (169, 7),
             },
            ],
           },
           PropertyAccess {
            expression: Variable {
             identifier: "conf",
             position: (169, 18),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "warnings",
               position: (169, 23),
              },
             ],
            },
            default: Some(
             List {
              elements: [],
              position: (169, 35),
             },
            ),
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (170, 7),
             },
             Raw {
              content: "users",
              position: (170, 13),
             },
             Expression {
              expression: String {
               parts: [
                Expression {
                 expression: Variable {
                  identifier: "name",
                  position: (170, 22),
                 },
                },
                Raw {
                 content: "-exporter",
                },
               ],
               position: (170, 19),
              },
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (170, 41),
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               BinaryOperation {
                operator: EqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "conf",
                   position: (170, 47),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "user",
                     position: (170, 52),
                    },
                   ],
                  },
                  default: None,
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "name",
                     position: (170, 63),
                    },
                   },
                   Raw {
                    content: "-exporter",
                   },
                  ],
                  position: (170, 60),
                 },
                ],
                position: (170, 57),
               },
               UnaryOperation {
                operator: Not,
                operand: Variable {
                 identifier: "enableDynamicUser",
                 position: (170, 83),
                },
                position: (170, 82),
               },
              ],
              position: (170, 79),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (171, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Prometheus ",
                  },
                  Expression {
                   expression: Variable {
                    identifier: "name",
                    position: (171, 37),
                   },
                  },
                  Raw {
                   content: " exporter service user",
                  },
                 ],
                 position: (171, 23),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "isSystemUser",
                   position: (172, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "true",
                 position: (172, 24),
                },
               ),
               Inherit {
                from: Some(
                 Variable {
                  identifier: "conf",
                  position: (173, 18),
                 },
                ),
                attributes: [
                 Raw {
                  content: "group",
                  position: (173, 24),
                 },
                ],
               },
              ],
              recursive: false,
              position: (170, 102),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "users",
              position: (175, 7),
             },
             Raw {
              content: "groups",
              position: (175, 13),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (175, 23),
            },
            arguments: [
             BinaryOperation {
              operator: LogicalAnd,
              operands: [
               BinaryOperation {
                operator: EqualTo,
                operands: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "conf",
                   position: (175, 29),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "group",
                     position: (175, 34),
                    },
                   ],
                  },
                  default: None,
                 },
                 String {
                  parts: [
                   Expression {
                    expression: Variable {
                     identifier: "name",
                     position: (175, 46),
                    },
                   },
                   Raw {
                    content: "-exporter",
                   },
                  ],
                  position: (175, 43),
                 },
                ],
                position: (175, 40),
               },
               UnaryOperation {
                operator: Not,
                operand: Variable {
                 identifier: "enableDynamicUser",
                 position: (175, 66),
                },
                position: (175, 65),
               },
              ],
              position: (175, 62),
             },
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Expression {
                   expression: String {
                    parts: [
                     Expression {
                      expression: Variable {
                       identifier: "name",
                       position: (176, 12),
                      },
                     },
                     Raw {
                      content: "-exporter",
                     },
                    ],
                    position: (176, 9),
                   },
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                 position: (176, 30),
                },
               ),
              ],
              recursive: false,
              position: (175, 85),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "networking",
              position: (178, 7),
             },
             Raw {
              content: "firewall",
              position: (178, 18),
             },
             Raw {
              content: "extraCommands",
              position: (178, 27),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkIf",
             position: (178, 43),
            },
            arguments: [
             PropertyAccess {
              expression: Variable {
               identifier: "conf",
               position: (178, 48),
              },
              attribute_path: AttributePath {
               attributes: [
                Raw {
                 content: "openFirewall",
                 position: (178, 53),
                },
               ],
              },
              default: None,
             },
             FunctionApplication {
              function: Variable {
               identifier: "concatStrings",
               position: (178, 67),
              },
              arguments: [
               List {
                elements: [
                 String {
                  parts: [
                   Raw {
                    content: "ip46tables -A nixos-fw ",
                   },
                   Expression {
                    expression: PropertyAccess {
                     expression: Variable {
                      identifier: "conf",
                      position: (179, 35),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "firewallFilter",
                        position: (179, 40),
                       },
                      ],
                     },
                     default: None,
                    },
                   },
                   Raw {
                    content: " ",
                   },
                  ],
                  position: (179, 9),
                 },
                 String {
                  parts: [
                   Raw {
                    content: "-m comment --comment ",
                   },
                   Expression {
                    expression: Variable {
                     identifier: "name",
                     position: (180, 33),
                    },
                   },
                   Raw {
                    content: "-exporter -j nixos-fw-accept",
                   },
                  ],
                  position: (180, 9),
                 },
                ],
                position: (178, 81),
               },
              ],
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "systemd",
              position: (182, 7),
             },
             Raw {
              content: "services",
              position: (182, 15),
             },
             Expression {
              expression: String {
               parts: [
                Raw {
                 content: "prometheus-",
                },
                Expression {
                 expression: Variable {
                  identifier: "name",
                  position: (182, 38),
                 },
                },
                Raw {
                 content: "-exporter",
                },
               ],
               position: (182, 24),
              },
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkMerge",
             position: (182, 56),
            },
            arguments: [
             List {
              elements: [
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "wantedBy",
                     position: (183, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "multi-user.target",
                      },
                     ],
                     position: (183, 22),
                    },
                   ],
                   position: (183, 20),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "after",
                     position: (184, 9),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "network.target",
                      },
                     ],
                     position: (184, 19),
                    },
                   ],
                   position: (184, 17),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (185, 9),
                    },
                    Raw {
                     content: "Restart",
                     position: (185, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (185, 33),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "always",
                      },
                     ],
                     position: (185, 43),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (186, 9),
                    },
                    Raw {
                     content: "PrivateTmp",
                     position: (186, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (186, 36),
                   },
                   arguments: [
                    Variable {
                     identifier: "true",
                     position: (186, 46),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (187, 9),
                    },
                    Raw {
                     content: "WorkingDirectory",
                     position: (187, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (187, 42),
                   },
                   arguments: [
                    Path {
                     parts: [
                      Raw {
                       content: "/tmp",
                      },
                     ],
                     position: (187, 52),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (188, 9),
                    },
                    Raw {
                     content: "DynamicUser",
                     position: (188, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (188, 37),
                   },
                   arguments: [
                    Variable {
                     identifier: "enableDynamicUser",
                     position: (188, 47),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (189, 9),
                    },
                    Raw {
                     content: "User",
                     position: (189, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (189, 30),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "conf",
                      position: (189, 40),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "user",
                        position: (189, 45),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (190, 9),
                    },
                    Raw {
                     content: "Group",
                     position: (190, 23),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "conf",
                    position: (190, 31),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "group",
                      position: (190, 36),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (192, 9),
                    },
                    Raw {
                     content: "CapabilityBoundingSet",
                     position: (192, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (192, 47),
                   },
                   arguments: [
                    List {
                     elements: [
                      String {
                       parts: [],
                       position: (192, 59),
                      },
                     ],
                     position: (192, 57),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (193, 9),
                    },
                    Raw {
                     content: "DeviceAllow",
                     position: (193, 23),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [],
                     position: (193, 39),
                    },
                   ],
                   position: (193, 37),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (194, 9),
                    },
                    Raw {
                     content: "LockPersonality",
                     position: (194, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (194, 41),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (195, 9),
                    },
                    Raw {
                     content: "MemoryDenyWriteExecute",
                     position: (195, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (195, 48),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (196, 9),
                    },
                    Raw {
                     content: "NoNewPrivileges",
                     position: (196, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (196, 41),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (197, 9),
                    },
                    Raw {
                     content: "PrivateDevices",
                     position: (197, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (197, 40),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (198, 9),
                    },
                    Raw {
                     content: "ProtectClock",
                     position: (198, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (198, 38),
                   },
                   arguments: [
                    Variable {
                     identifier: "true",
                     position: (198, 48),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (199, 9),
                    },
                    Raw {
                     content: "ProtectControlGroups",
                     position: (199, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (199, 46),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (200, 9),
                    },
                    Raw {
                     content: "ProtectHome",
                     position: (200, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (200, 37),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (201, 9),
                    },
                    Raw {
                     content: "ProtectHostname",
                     position: (201, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (201, 41),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (202, 9),
                    },
                    Raw {
                     content: "ProtectKernelLogs",
                     position: (202, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (202, 43),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (203, 9),
                    },
                    Raw {
                     content: "ProtectKernelModules",
                     position: (203, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (203, 46),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (204, 9),
                    },
                    Raw {
                     content: "ProtectKernelTunables",
                     position: (204, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (204, 47),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (205, 9),
                    },
                    Raw {
                     content: "ProtectSystem",
                     position: (205, 23),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (205, 39),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "strict",
                      },
                     ],
                     position: (205, 49),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (206, 9),
                    },
                    Raw {
                     content: "RemoveIPC",
                     position: (206, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (206, 35),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (207, 9),
                    },
                    Raw {
                     content: "RestrictAddressFamilies",
                     position: (207, 23),
                    },
                   ],
                  },
                  List {
                   elements: [
                    String {
                     parts: [
                      Raw {
                       content: "AF_INET",
                      },
                     ],
                     position: (207, 51),
                    },
                    String {
                     parts: [
                      Raw {
                       content: "AF_INET6",
                      },
                     ],
                     position: (207, 61),
                    },
                   ],
                   position: (207, 49),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (208, 9),
                    },
                    Raw {
                     content: "RestrictNamespaces",
                     position: (208, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (208, 44),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (209, 9),
                    },
                    Raw {
                     content: "RestrictRealtime",
                     position: (209, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (209, 42),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (210, 9),
                    },
                    Raw {
                     content: "RestrictSUIDSGID",
                     position: (210, 23),
                    },
                   ],
                  },
                  Variable {
                   identifier: "true",
                   position: (210, 42),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (211, 9),
                    },
                    Raw {
                     content: "SystemCallArchitectures",
                     position: (211, 23),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "native",
                    },
                   ],
                   position: (211, 49),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "serviceConfig",
                     position: (212, 9),
                    },
                    Raw {
                     content: "UMask",
                     position: (212, 23),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "0077",
                    },
                   ],
                   position: (212, 31),
                  },
                 ),
                ],
                recursive: false,
                position: (182, 66),
               },
               Variable {
                identifier: "serviceOpts",
                position: (213, 9),
               },
              ],
              position: (182, 65),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (168, 22),
        },
       ],
      },
      position: (165, 5),
     },
     position: (164, 20),
    },
   ),
  ],
  target: Map {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "imports",
        position: (218, 3),
       },
      ],
     },
     FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "lib",
        position: (218, 14),
       },
       attribute_path: AttributePath {
        attributes: [
         Raw {
          content: "forEach",
          position: (218, 18),
         },
        ],
       },
       default: None,
      },
      arguments: [
       List {
        elements: [
         String {
          parts: [
           Raw {
            content: "blackboxExporter",
           },
          ],
          position: (218, 28),
         },
         String {
          parts: [
           Raw {
            content: "collectdExporter",
           },
          ],
          position: (218, 47),
         },
         String {
          parts: [
           Raw {
            content: "fritzboxExporter",
           },
          ],
          position: (218, 66),
         },
         String {
          parts: [
           Raw {
            content: "jsonExporter",
           },
          ],
          position: (219, 20),
         },
         String {
          parts: [
           Raw {
            content: "minioExporter",
           },
          ],
          position: (219, 35),
         },
         String {
          parts: [
           Raw {
            content: "nginxExporter",
           },
          ],
          position: (219, 51),
         },
         String {
          parts: [
           Raw {
            content: "nodeExporter",
           },
          ],
          position: (219, 67),
         },
         String {
          parts: [
           Raw {
            content: "snmpExporter",
           },
          ],
          position: (220, 20),
         },
         String {
          parts: [
           Raw {
            content: "unifiExporter",
           },
          ],
          position: (220, 35),
         },
         String {
          parts: [
           Raw {
            content: "varnishExporter",
           },
          ],
          position: (220, 51),
         },
        ],
        position: (218, 26),
       },
       Function {
        argument: Some(
         "opt",
        ),
        arguments: FunctionArguments {
         arguments: [],
         ellipsis: false,
        },
        definition: FunctionApplication {
         function: PropertyAccess {
          expression: Variable {
           identifier: "lib",
           position: (221, 14),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "mkRemovedOptionModule",
             position: (221, 18),
            },
           ],
          },
          default: None,
         },
         arguments: [
          List {
           elements: [
            String {
             parts: [
              Raw {
               content: "services",
              },
             ],
             position: (221, 42),
            },
            String {
             parts: [
              Raw {
               content: "prometheus",
              },
             ],
             position: (221, 53),
            },
            String {
             parts: [
              Expression {
               expression: Variable {
                identifier: "opt",
                position: (221, 69),
               },
              },
             ],
             position: (221, 66),
            },
           ],
           position: (221, 40),
          },
          String {
           parts: [
            Raw {
             content: "The prometheus exporters are now configured using `services.prometheus.exporters'.\nSee the 18.03 release notes for more information.\n",
            },
           ],
           position: (221, 77),
          },
         ],
        },
        position: (221, 9),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "options",
        position: (226, 3),
       },
       Raw {
        content: "services",
        position: (226, 11),
       },
       Raw {
        content: "prometheus",
        position: (226, 20),
       },
       Raw {
        content: "exporters",
        position: (226, 31),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkOption",
       position: (226, 43),
      },
      arguments: [
       Map {
        bindings: [
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "type",
             position: (227, 5),
            },
           ],
          },
          FunctionApplication {
           function: PropertyAccess {
            expression: Variable {
             identifier: "types",
             position: (227, 12),
            },
            attribute_path: AttributePath {
             attributes: [
              Raw {
               content: "submodule",
               position: (227, 18),
              },
             ],
            },
            default: None,
           },
           arguments: [
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "options",
                  position: (228, 7),
                 },
                ],
               },
               Variable {
                identifier: "mkSubModules",
                position: (228, 18),
               },
              ),
             ],
             recursive: false,
             position: (227, 28),
            },
           ],
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "description",
             position: (230, 5),
            },
           ],
          },
          String {
           parts: [
            Raw {
             content: "Prometheus exporter configuration",
            },
           ],
           position: (230, 19),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "default",
             position: (231, 5),
            },
           ],
          },
          Map {
           bindings: [],
           recursive: false,
           position: (231, 15),
          },
         ),
         KeyValue(
          AttributePath {
           attributes: [
            Raw {
             content: "example",
             position: (232, 5),
            },
           ],
          },
          FunctionApplication {
           function: Variable {
            identifier: "literalExpression",
            position: (232, 15),
           },
           arguments: [
            String {
             parts: [
              Raw {
               content: "{\n  node = {\n    enable = true;\n    enabledCollectors = [ \"systemd\" ];\n  };\n  varnish.enable = true;\n}\n",
              },
             ],
             position: (232, 33),
            },
           ],
          },
         ),
        ],
        recursive: false,
        position: (226, 52),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "config",
        position: (243, 3),
       },
      ],
     },
     FunctionApplication {
      function: Variable {
       identifier: "mkMerge",
       position: (243, 12),
      },
      arguments: [
       BinaryOperation {
        operator: Concatenation,
        operands: [
         List {
          elements: [
           Map {
            bindings: [
             KeyValue(
              AttributePath {
               attributes: [
                Raw {
                 content: "assertions",
                 position: (244, 5),
                },
               ],
              },
              BinaryOperation {
               operator: Concatenation,
               operands: [
                List {
                 elements: [
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "assertion",
                        position: (245, 7),
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: Implication,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (245, 19),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "snmp",
                           position: (245, 23),
                          },
                          Raw {
                           content: "enable",
                           position: (245, 28),
                          },
                         ],
                        },
                        default: None,
                       },
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (246, 10),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "snmp",
                               position: (246, 14),
                              },
                              Raw {
                               content: "configurationPath",
                               position: (246, 19),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (246, 40),
                           },
                          ],
                          position: (246, 37),
                         },
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (246, 50),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "snmp",
                               position: (246, 54),
                              },
                              Raw {
                               content: "configuration",
                               position: (246, 59),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (246, 76),
                           },
                          ],
                          position: (246, 73),
                         },
                        ],
                        position: (246, 46),
                       },
                      ],
                      position: (245, 35),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "message",
                        position: (248, 7),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Please ensure you have either `services.prometheus.exporters.snmp.configuration'\n  or `services.prometheus.exporters.snmp.configurationPath' set!\n",
                       },
                      ],
                      position: (248, 17),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (244, 20),
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "assertion",
                        position: (253, 7),
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: Implication,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (253, 19),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mikrotik",
                           position: (253, 23),
                          },
                          Raw {
                           content: "enable",
                           position: (253, 32),
                          },
                         ],
                        },
                        default: None,
                       },
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (254, 10),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mikrotik",
                               position: (254, 14),
                              },
                              Raw {
                               content: "configFile",
                               position: (254, 23),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (254, 37),
                           },
                          ],
                          position: (254, 34),
                         },
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (254, 47),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mikrotik",
                               position: (254, 51),
                              },
                              Raw {
                               content: "configuration",
                               position: (254, 60),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (254, 77),
                           },
                          ],
                          position: (254, 74),
                         },
                        ],
                        position: (254, 43),
                       },
                      ],
                      position: (253, 39),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "message",
                        position: (256, 7),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Please specify either `services.prometheus.exporters.mikrotik.configuration'\n  or `services.prometheus.exporters.mikrotik.configFile'.\n",
                       },
                      ],
                      position: (256, 17),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (252, 7),
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "assertion",
                        position: (261, 7),
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: Implication,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (261, 19),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "mail",
                           position: (261, 23),
                          },
                          Raw {
                           content: "enable",
                           position: (261, 28),
                          },
                         ],
                        },
                        default: None,
                       },
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (262, 10),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mail",
                               position: (262, 14),
                              },
                              Raw {
                               content: "configFile",
                               position: (262, 19),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (262, 33),
                           },
                          ],
                          position: (262, 30),
                         },
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (262, 43),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "mail",
                               position: (262, 47),
                              },
                              Raw {
                               content: "configuration",
                               position: (262, 52),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (262, 69),
                           },
                          ],
                          position: (262, 66),
                         },
                        ],
                        position: (262, 39),
                       },
                      ],
                      position: (261, 35),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "message",
                        position: (264, 7),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Please specify either 'services.prometheus.exporters.mail.configuration'\n  or 'services.prometheus.exporters.mail.configFile'.\n",
                       },
                      ],
                      position: (264, 17),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (260, 7),
                  },
                  Map {
                   bindings: [
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "assertion",
                        position: (269, 7),
                       },
                      ],
                     },
                     BinaryOperation {
                      operator: Implication,
                      operands: [
                       PropertyAccess {
                        expression: Variable {
                         identifier: "cfg",
                         position: (269, 19),
                        },
                        attribute_path: AttributePath {
                         attributes: [
                          Raw {
                           content: "sql",
                           position: (269, 23),
                          },
                          Raw {
                           content: "enable",
                           position: (269, 27),
                          },
                         ],
                        },
                        default: None,
                       },
                       BinaryOperation {
                        operator: NotEqualTo,
                        operands: [
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (270, 10),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "sql",
                               position: (270, 14),
                              },
                              Raw {
                               content: "configFile",
                               position: (270, 18),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (270, 32),
                           },
                          ],
                          position: (270, 29),
                         },
                         BinaryOperation {
                          operator: EqualTo,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "cfg",
                             position: (270, 42),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "sql",
                               position: (270, 46),
                              },
                              Raw {
                               content: "configuration",
                               position: (270, 50),
                              },
                             ],
                            },
                            default: None,
                           },
                           Variable {
                            identifier: "null",
                            position: (270, 67),
                           },
                          ],
                          position: (270, 64),
                         },
                        ],
                        position: (270, 38),
                       },
                      ],
                      position: (269, 34),
                     },
                    ),
                    KeyValue(
                     AttributePath {
                      attributes: [
                       Raw {
                        content: "message",
                        position: (272, 7),
                       },
                      ],
                     },
                     String {
                      parts: [
                       Raw {
                        content: "Please specify either 'services.prometheus.exporters.sql.configuration' or\n  'services.prometheus.exporters.sql.configFile'\n",
                       },
                      ],
                      position: (272, 17),
                     },
                    ),
                   ],
                   recursive: false,
                   position: (268, 7),
                  },
                 ],
                 position: (244, 18),
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "flip",
                  position: (276, 13),
                 },
                 arguments: [
                  Variable {
                   identifier: "map",
                   position: (276, 18),
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "attrNames",
                    position: (276, 23),
                   },
                   arguments: [
                    Variable {
                     identifier: "cfg",
                     position: (276, 33),
                    },
                   ],
                  },
                  Function {
                   argument: Some(
                    "exporter",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "assertion",
                         position: (277, 7),
                        },
                       ],
                      },
                      BinaryOperation {
                       operator: Implication,
                       operands: [
                        BinaryOperation {
                         operator: NotEqualTo,
                         operands: [
                          PropertyAccess {
                           expression: Variable {
                            identifier: "cfg",
                            position: (277, 19),
                           },
                           attribute_path: AttributePath {
                            attributes: [
                             Expression {
                              expression: Variable {
                               identifier: "exporter",
                               position: (277, 25),
                              },
                             },
                             Raw {
                              content: "firewallFilter",
                              position: (277, 35),
                             },
                            ],
                           },
                           default: None,
                          },
                          Variable {
                           identifier: "null",
                           position: (277, 53),
                          },
                         ],
                         position: (277, 50),
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (277, 61),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Expression {
                            expression: Variable {
                             identifier: "exporter",
                             position: (277, 67),
                            },
                           },
                           Raw {
                            content: "openFirewall",
                            position: (277, 77),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                       position: (277, 58),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "message",
                         position: (278, 7),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "The `firewallFilter'-option of exporter ",
                        },
                        Expression {
                         expression: Variable {
                          identifier: "exporter",
                          position: (279, 51),
                         },
                        },
                        Raw {
                         content: " doesn't have any effect unless\n`openFirewall' is set to `true'!\n",
                        },
                       ],
                       position: (278, 17),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (276, 49),
                   },
                   position: (276, 39),
                  },
                 ],
                },
               ],
               position: (276, 9),
              },
             ),
            ],
            recursive: false,
            position: (243, 22),
           },
          ],
          position: (243, 21),
         },
         BinaryOperation {
          operator: Concatenation,
          operands: [
           List {
            elements: [
             FunctionApplication {
              function: Variable {
               identifier: "mkIf",
               position: (283, 11),
              },
              arguments: [
               PropertyAccess {
                expression: Variable {
                 identifier: "config",
                 position: (283, 16),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "services",
                   position: (283, 23),
                  },
                  Raw {
                   content: "minio",
                   position: (283, 32),
                  },
                  Raw {
                   content: "enable",
                   position: (283, 38),
                  },
                 ],
                },
                default: None,
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "services",
                     position: (284, 5),
                    },
                    Raw {
                     content: "prometheus",
                     position: (284, 14),
                    },
                    Raw {
                     content: "exporters",
                     position: (284, 25),
                    },
                    Raw {
                     content: "minio",
                     position: (284, 35),
                    },
                    Raw {
                     content: "minioAddress",
                     position: (284, 41),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (284, 57),
                   },
                   arguments: [
                    String {
                     parts: [
                      Raw {
                       content: "http://localhost:9000",
                      },
                     ],
                     position: (284, 67),
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "services",
                     position: (285, 5),
                    },
                    Raw {
                     content: "prometheus",
                     position: (285, 14),
                    },
                    Raw {
                     content: "exporters",
                     position: (285, 25),
                    },
                    Raw {
                     content: "minio",
                     position: (285, 35),
                    },
                    Raw {
                     content: "minioAccessKey",
                     position: (285, 41),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (285, 58),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (285, 68),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "services",
                        position: (285, 75),
                       },
                       Raw {
                        content: "minio",
                        position: (285, 84),
                       },
                       Raw {
                        content: "accessKey",
                        position: (285, 90),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "services",
                     position: (286, 5),
                    },
                    Raw {
                     content: "prometheus",
                     position: (286, 14),
                    },
                    Raw {
                     content: "exporters",
                     position: (286, 25),
                    },
                    Raw {
                     content: "minio",
                     position: (286, 35),
                    },
                    Raw {
                     content: "minioAccessSecret",
                     position: (286, 41),
                    },
                   ],
                  },
                  FunctionApplication {
                   function: Variable {
                    identifier: "mkDefault",
                    position: (286, 61),
                   },
                   arguments: [
                    PropertyAccess {
                     expression: Variable {
                      identifier: "config",
                      position: (286, 71),
                     },
                     attribute_path: AttributePath {
                      attributes: [
                       Raw {
                        content: "services",
                        position: (286, 78),
                       },
                       Raw {
                        content: "minio",
                        position: (286, 87),
                       },
                       Raw {
                        content: "secretKey",
                        position: (286, 93),
                       },
                      ],
                     },
                     default: None,
                    },
                   ],
                  },
                 ),
                ],
                recursive: false,
                position: (283, 45),
               },
              ],
             },
            ],
            position: (283, 9),
           },
           BinaryOperation {
            operator: Concatenation,
            operands: [
             List {
              elements: [
               FunctionApplication {
                function: Variable {
                 identifier: "mkIf",
                 position: (287, 12),
                },
                arguments: [
                 PropertyAccess {
                  expression: Variable {
                   identifier: "config",
                   position: (287, 17),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "services",
                     position: (287, 24),
                    },
                    Raw {
                     content: "prometheus",
                     position: (287, 33),
                    },
                    Raw {
                     content: "exporters",
                     position: (287, 44),
                    },
                    Raw {
                     content: "rtl_433",
                     position: (287, 54),
                    },
                    Raw {
                     content: "enable",
                     position: (287, 62),
                    },
                   ],
                  },
                  default: None,
                 },
                 Map {
                  bindings: [
                   KeyValue(
                    AttributePath {
                     attributes: [
                      Raw {
                       content: "hardware",
                       position: (288, 5),
                      },
                      Raw {
                       content: "rtl-sdr",
                       position: (288, 14),
                      },
                      Raw {
                       content: "enable",
                       position: (288, 22),
                      },
                     ],
                    },
                    FunctionApplication {
                     function: Variable {
                      identifier: "mkDefault",
                      position: (288, 31),
                     },
                     arguments: [
                      Variable {
                       identifier: "true",
                       position: (288, 41),
                      },
                     ],
                    },
                   ),
                  ],
                  recursive: false,
                  position: (287, 69),
                 },
                ],
               },
              ],
              position: (287, 10),
             },
             BinaryOperation {
              operator: Concatenation,
              operands: [
               List {
                elements: [
                 FunctionApplication {
                  function: Variable {
                   identifier: "mkIf",
                   position: (289, 12),
                  },
                  arguments: [
                   PropertyAccess {
                    expression: Variable {
                     identifier: "config",
                     position: (289, 17),
                    },
                    attribute_path: AttributePath {
                     attributes: [
                      Raw {
                       content: "services",
                       position: (289, 24),
                      },
                      Raw {
                       content: "postfix",
                       position: (289, 33),
                      },
                      Raw {
                       content: "enable",
                       position: (289, 41),
                      },
                     ],
                    },
                    default: None,
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "services",
                         position: (290, 5),
                        },
                        Raw {
                         content: "prometheus",
                         position: (290, 14),
                        },
                        Raw {
                         content: "exporters",
                         position: (290, 25),
                        },
                        Raw {
                         content: "postfix",
                         position: (290, 35),
                        },
                        Raw {
                         content: "group",
                         position: (290, 43),
                        },
                       ],
                      },
                      FunctionApplication {
                       function: Variable {
                        identifier: "mkDefault",
                        position: (290, 51),
                       },
                       arguments: [
                        PropertyAccess {
                         expression: Variable {
                          identifier: "config",
                          position: (290, 61),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Raw {
                            content: "services",
                            position: (290, 68),
                           },
                           Raw {
                            content: "postfix",
                            position: (290, 77),
                           },
                           Raw {
                            content: "setgidGroup",
                            position: (290, 85),
                           },
                          ],
                         },
                         default: None,
                        },
                       ],
                      },
                     ),
                    ],
                    recursive: false,
                    position: (289, 48),
                   },
                  ],
                 },
                ],
                position: (289, 10),
               },
               FunctionApplication {
                function: Variable {
                 identifier: "mapAttrsToList",
                 position: (291, 11),
                },
                arguments: [
                 Function {
                  argument: Some(
                   "name",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: Function {
                   argument: Some(
                    "conf",
                   ),
                   arguments: FunctionArguments {
                    arguments: [],
                    ellipsis: false,
                   },
                   definition: FunctionApplication {
                    function: Variable {
                     identifier: "mkExporterConf",
                     position: (292, 5),
                    },
                    arguments: [
                     Map {
                      bindings: [
                       Inherit {
                        from: None,
                        attributes: [
                         Raw {
                          content: "name",
                          position: (293, 15),
                         },
                        ],
                       },
                       Inherit {
                        from: Some(
                         Variable {
                          identifier: "conf",
                          position: (294, 16),
                         },
                        ),
                        attributes: [
                         Raw {
                          content: "serviceOpts",
                          position: (294, 22),
                         },
                        ],
                       },
                       KeyValue(
                        AttributePath {
                         attributes: [
                          Raw {
                           content: "conf",
                           position: (295, 7),
                          },
                         ],
                        },
                        PropertyAccess {
                         expression: Variable {
                          identifier: "cfg",
                          position: (295, 14),
                         },
                         attribute_path: AttributePath {
                          attributes: [
                           Expression {
                            expression: Variable {
                             identifier: "name",
                             position: (295, 20),
                            },
                           },
                          ],
                         },
                         default: None,
                        },
                       ),
                      ],
                      recursive: false,
                      position: (292, 20),
                     },
                    ],
                   },
                   position: (291, 33),
                  },
                  position: (291, 27),
                 },
                 Variable {
                  identifier: "exporterOpts",
                  position: (296, 8),
                 },
                ],
               },
              ],
              position: (291, 7),
             },
            ],
            position: (289, 7),
           },
          ],
          position: (287, 7),
         },
        ],
        position: (283, 6),
       },
      ],
     },
    ),
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "meta",
        position: (299, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "doc",
           position: (300, 5),
          },
         ],
        },
        Path {
         parts: [
          Raw {
           content: "./exporters.xml",
          },
         ],
         position: (300, 11),
        },
       ),
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "maintainers",
           position: (301, 5),
          },
         ],
        },
        List {
         elements: [
          PropertyAccess {
           expression: Variable {
            identifier: "maintainers",
            position: (301, 21),
           },
           attribute_path: AttributePath {
            attributes: [
             Raw {
              content: "willibutz",
              position: (301, 33),
             },
            ],
           },
           default: None,
          },
         ],
         position: (301, 19),
        },
       ),
      ],
      recursive: false,
      position: (299, 10),
     },
    ),
   ],
   recursive: false,
   position: (216, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}