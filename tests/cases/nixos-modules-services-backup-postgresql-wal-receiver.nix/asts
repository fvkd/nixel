---
Function {
 argument: None,
 arguments: FunctionArguments {
  arguments: [
   FunctionArgument {
    identifier: "pkgs",
    default: None,
   },
   FunctionArgument {
    identifier: "lib",
    default: None,
   },
   FunctionArgument {
    identifier: "config",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    KeyValue(
     AttributePath {
      attributes: [
       Raw {
        content: "receiverSubmodule",
        position: (6, 3),
       },
      ],
     },
     Map {
      bindings: [
       KeyValue(
        AttributePath {
         attributes: [
          Raw {
           content: "options",
           position: (7, 5),
          },
         ],
        },
        Map {
         bindings: [
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "postgresqlPackage",
              position: (8, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (8, 27),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (9, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (9, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "package",
                    position: (9, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (10, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (10, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "pkgs.postgresql_11",
                    },
                   ],
                   position: (10, 37),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (11, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "PostgreSQL package to use.\n",
                  },
                 ],
                 position: (11, 23),
                },
               ),
              ],
              recursive: false,
              position: (8, 36),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "directory",
              position: (16, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (16, 19),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (17, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (17, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "path",
                    position: (17, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (18, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (18, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "/mnt/pg_wal/main/",
                    },
                   ],
                   position: (18, 37),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (19, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Directory to write the output to.\n",
                  },
                 ],
                 position: (19, 23),
                },
               ),
              ],
              recursive: false,
              position: (16, 28),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "statusInterval",
              position: (24, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (24, 24),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (25, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (25, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "int",
                    position: (25, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (26, 9),
                  },
                 ],
                },
                Int {
                 value: 10,
                 position: (26, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (27, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Specifies the number of seconds between status packets sent back to the server.\nThis allows for easier monitoring of the progress from server.\nA value of zero disables the periodic status updates completely,\nalthough an update will still be sent when requested by the server, to avoid timeout disconnect.\n",
                  },
                 ],
                 position: (27, 23),
                },
               ),
              ],
              recursive: false,
              position: (24, 33),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "slot",
              position: (35, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (35, 14),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (36, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (36, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (36, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (37, 9),
                  },
                 ],
                },
                String {
                 parts: [],
                 position: (37, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (38, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "some_slot_name",
                  },
                 ],
                 position: (38, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (39, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Require <command>pg_receivewal</command> to use an existing replication slot (see\n<link xlink:href=\"https://www.postgresql.org/docs/current/warm-standby.html#STREAMING-REPLICATION-SLOTS\">Section 26.2.6 of the PostgreSQL manual</link>).\nWhen this option is used, <command>pg_receivewal</command> will report a flush position to the server,\nindicating when each segment has been synchronized to disk so that the server can remove that segment if it is not otherwise needed.\n\nWhen the replication client of <command>pg_receivewal</command> is configured on the server as a synchronous standby,\nthen using a replication slot will report the flush position to the server, but only when a WAL file is closed.\nTherefore, that configuration will cause transactions on the primary to wait for a long time and effectively not work satisfactorily.\nThe option <option>synchronous</option> must be specified in addition to make this work correctly.\n",
                  },
                 ],
                 position: (39, 23),
                },
               ),
              ],
              recursive: false,
              position: (35, 23),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "synchronous",
              position: (52, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (52, 21),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (53, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (53, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "bool",
                    position: (53, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (54, 9),
                  },
                 ],
                },
                Variable {
                 identifier: "false",
                 position: (54, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (55, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Flush the WAL data to disk immediately after it has been received.\nAlso send a status packet back to the server immediately after flushing, regardless of <option>statusInterval</option>.\n\nThis option should be specified if the replication client of <command>pg_receivewal</command> is configured on the server as a synchronous standby,\nto ensure that timely feedback is sent to the server.\n",
                  },
                 ],
                 position: (55, 23),
                },
               ),
              ],
              recursive: false,
              position: (52, 30),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "compress",
              position: (64, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (64, 18),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (65, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: PropertyAccess {
                  expression: Variable {
                   identifier: "types",
                   position: (65, 16),
                  },
                  attribute_path: AttributePath {
                   attributes: [
                    Raw {
                     content: "ints",
                     position: (65, 22),
                    },
                    Raw {
                     content: "between",
                     position: (65, 27),
                    },
                   ],
                  },
                  default: None,
                 },
                 arguments: [
                  Int {
                   value: 0,
                   position: (65, 35),
                  },
                  Int {
                   value: 9,
                   position: (65, 37),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (66, 9),
                  },
                 ],
                },
                Int {
                 value: 0,
                 position: (66, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (67, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Enables gzip compression of write-ahead logs, and specifies the compression level\n(<literal>0</literal> through <literal>9</literal>, <literal>0</literal> being no compression and <literal>9</literal> being best compression).\nThe suffix <literal>.gz</literal> will automatically be added to all filenames.\n\nThis option requires PostgreSQL >= 10.\n",
                  },
                 ],
                 position: (67, 23),
                },
               ),
              ],
              recursive: false,
              position: (64, 27),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "connection",
              position: (76, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (76, 20),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (77, 9),
                  },
                 ],
                },
                PropertyAccess {
                 expression: Variable {
                  identifier: "types",
                  position: (77, 16),
                 },
                 attribute_path: AttributePath {
                  attributes: [
                   Raw {
                    content: "str",
                    position: (77, 22),
                   },
                  ],
                 },
                 default: None,
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (78, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "postgresql://user@somehost",
                  },
                 ],
                 position: (78, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (79, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Specifies parameters used to connect to the server, as a connection string.\nSee <link xlink:href=\"https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING\">Section 34.1.1 of the PostgreSQL manual</link> for more information.\n\nBecause <command>pg_receivewal</command> doesn't connect to any particular database in the cluster,\ndatabase name in the connection string will be ignored.\n",
                  },
                 ],
                 position: (79, 23),
                },
               ),
              ],
              recursive: false,
              position: (76, 29),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "extraArgs",
              position: (88, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (88, 19),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (89, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "types",
                  position: (89, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "listOf",
                   position: (89, 28),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (89, 35),
                   },
                  ],
                 },
                 position: (89, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (90, 9),
                  },
                 ],
                },
                List {
                 elements: [],
                 position: (90, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (91, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (91, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "[\n  \"--no-sync\"\n]\n",
                    },
                   ],
                   position: (91, 37),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (96, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "A list of extra arguments to pass to the <command>pg_receivewal</command> command.\n",
                  },
                 ],
                 position: (96, 23),
                },
               ),
              ],
              recursive: false,
              position: (88, 28),
             },
            ],
           },
          ),
          KeyValue(
           AttributePath {
            attributes: [
             Raw {
              content: "environment",
              position: (101, 7),
             },
            ],
           },
           FunctionApplication {
            function: Variable {
             identifier: "mkOption",
             position: (101, 21),
            },
            arguments: [
             Map {
              bindings: [
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "type",
                   position: (102, 9),
                  },
                 ],
                },
                With {
                 expression: Variable {
                  identifier: "types",
                  position: (102, 21),
                 },
                 target: FunctionApplication {
                  function: Variable {
                   identifier: "attrsOf",
                   position: (102, 28),
                  },
                  arguments: [
                   Variable {
                    identifier: "str",
                    position: (102, 36),
                   },
                  ],
                 },
                 position: (102, 16),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "default",
                   position: (103, 9),
                  },
                 ],
                },
                Map {
                 bindings: [],
                 recursive: false,
                 position: (103, 19),
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "example",
                   position: (104, 9),
                  },
                 ],
                },
                FunctionApplication {
                 function: Variable {
                  identifier: "literalExpression",
                  position: (104, 19),
                 },
                 arguments: [
                  String {
                   parts: [
                    Raw {
                     content: "{\n  PGPASSFILE = \"/private/passfile\";\n  PGSSLMODE = \"require\";\n}\n",
                    },
                   ],
                   position: (104, 37),
                  },
                 ],
                },
               ),
               KeyValue(
                AttributePath {
                 attributes: [
                  Raw {
                   content: "description",
                   position: (110, 9),
                  },
                 ],
                },
                String {
                 parts: [
                  Raw {
                   content: "Environment variables passed to the service.\nUsable parameters are listed in <link xlink:href=\"https://www.postgresql.org/docs/current/libpq-envars.html\">Section 34.14 of the PostgreSQL manual</link>.\n",
                  },
                 ],
                 position: (110, 23),
                },
               ),
              ],
              recursive: false,
              position: (101, 30),
             },
            ],
           },
          ),
         ],
         recursive: false,
         position: (7, 15),
        },
       ),
      ],
      recursive: false,
      position: (6, 23),
     },
    ),
   ],
   target: Map {
    bindings: [
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "options",
         position: (119, 3),
        },
       ],
      },
      Map {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "services",
            position: (120, 5),
           },
           Raw {
            content: "postgresqlWalReceiver",
            position: (120, 14),
           },
          ],
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "receivers",
               position: (121, 7),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mkOption",
              position: (121, 19),
             },
             arguments: [
              Map {
               bindings: [
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "type",
                    position: (122, 9),
                   },
                  ],
                 },
                 With {
                  expression: Variable {
                   identifier: "types",
                   position: (122, 21),
                  },
                  target: FunctionApplication {
                   function: Variable {
                    identifier: "attrsOf",
                    position: (122, 28),
                   },
                   arguments: [
                    FunctionApplication {
                     function: Variable {
                      identifier: "submodule",
                      position: (122, 37),
                     },
                     arguments: [
                      Variable {
                       identifier: "receiverSubmodule",
                       position: (122, 47),
                      },
                     ],
                    },
                   ],
                  },
                  position: (122, 16),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "default",
                    position: (123, 9),
                   },
                  ],
                 },
                 Map {
                  bindings: [],
                  recursive: false,
                  position: (123, 19),
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "example",
                    position: (124, 9),
                   },
                  ],
                 },
                 FunctionApplication {
                  function: Variable {
                   identifier: "literalExpression",
                   position: (124, 19),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "{\n  main = {\n    postgresqlPackage = pkgs.postgresql_11;\n    directory = /mnt/pg_wal/main/;\n    slot = \"main_wal_receiver\";\n    connection = \"postgresql://user@somehost\";\n  };\n}\n",
                     },
                    ],
                    position: (124, 37),
                   },
                  ],
                 },
                ),
                KeyValue(
                 AttributePath {
                  attributes: [
                   Raw {
                    content: "description",
                    position: (134, 9),
                   },
                  ],
                 },
                 String {
                  parts: [
                   Raw {
                    content: "PostgreSQL WAL receivers.\nStream write-ahead logs from a PostgreSQL server using <command>pg_receivewal</command> (formerly <command>pg_receivexlog</command>).\nSee <link xlink:href=\"https://www.postgresql.org/docs/current/app-pgreceivewal.html\">the man page</link> for more information.\n",
                   },
                  ],
                  position: (134, 23),
                 },
                ),
               ],
               recursive: false,
               position: (121, 28),
              },
             ],
            },
           ),
          ],
          recursive: false,
          position: (120, 38),
         },
        ),
       ],
       recursive: false,
       position: (119, 13),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "config",
         position: (143, 3),
        },
       ],
      },
      LetIn {
       bindings: [
        KeyValue(
         AttributePath {
          attributes: [
           Raw {
            content: "receivers",
            position: (144, 5),
           },
          ],
         },
         PropertyAccess {
          expression: Variable {
           identifier: "config",
           position: (144, 17),
          },
          attribute_path: AttributePath {
           attributes: [
            Raw {
             content: "services",
             position: (144, 24),
            },
            Raw {
             content: "postgresqlWalReceiver",
             position: (144, 33),
            },
            Raw {
             content: "receivers",
             position: (144, 55),
            },
           ],
          },
          default: None,
         },
        ),
       ],
       target: FunctionApplication {
        function: Variable {
         identifier: "mkIf",
         position: (145, 6),
        },
        arguments: [
         BinaryOperation {
          operator: NotEqualTo,
          operands: [
           Variable {
            identifier: "receivers",
            position: (145, 12),
           },
           Map {
            bindings: [],
            recursive: false,
            position: (145, 25),
           },
          ],
          position: (145, 22),
         },
         Map {
          bindings: [
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "users",
               position: (146, 5),
              },
             ],
            },
            Map {
             bindings: [
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "users",
                  position: (147, 7),
                 },
                 Raw {
                  content: "postgres",
                  position: (147, 13),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "uid",
                     position: (148, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (148, 15),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "ids",
                      position: (148, 22),
                     },
                     Raw {
                      content: "uids",
                      position: (148, 26),
                     },
                     Raw {
                      content: "postgres",
                      position: (148, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "group",
                     position: (149, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "postgres",
                    },
                   ],
                   position: (149, 17),
                  },
                 ),
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "description",
                     position: (150, 9),
                    },
                   ],
                  },
                  String {
                   parts: [
                    Raw {
                     content: "PostgreSQL server user",
                    },
                   ],
                   position: (150, 23),
                  },
                 ),
                ],
                recursive: false,
                position: (147, 24),
               },
              ),
              KeyValue(
               AttributePath {
                attributes: [
                 Raw {
                  content: "groups",
                  position: (153, 7),
                 },
                 Raw {
                  content: "postgres",
                  position: (153, 14),
                 },
                ],
               },
               Map {
                bindings: [
                 KeyValue(
                  AttributePath {
                   attributes: [
                    Raw {
                     content: "gid",
                     position: (154, 9),
                    },
                   ],
                  },
                  PropertyAccess {
                   expression: Variable {
                    identifier: "config",
                    position: (154, 15),
                   },
                   attribute_path: AttributePath {
                    attributes: [
                     Raw {
                      content: "ids",
                      position: (154, 22),
                     },
                     Raw {
                      content: "gids",
                      position: (154, 26),
                     },
                     Raw {
                      content: "postgres",
                      position: (154, 31),
                     },
                    ],
                   },
                   default: None,
                  },
                 ),
                ],
                recursive: false,
                position: (153, 25),
               },
              ),
             ],
             recursive: false,
             position: (146, 13),
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "assertions",
               position: (158, 5),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "concatLists",
              position: (158, 18),
             },
             arguments: [
              FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "attrsets",
                 position: (158, 31),
                },
                attribute_path: AttributePath {
                 attributes: [
                  Raw {
                   content: "mapAttrsToList",
                   position: (158, 40),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Function {
                 argument: Some(
                  "name",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: Function {
                  argument: Some(
                   "config",
                  ),
                  arguments: FunctionArguments {
                   arguments: [],
                   ellipsis: false,
                  },
                  definition: List {
                   elements: [
                    Map {
                     bindings: [
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "assertion",
                          position: (160, 9),
                         },
                        ],
                       },
                       BinaryOperation {
                        operator: Implication,
                        operands: [
                         BinaryOperation {
                          operator: GreaterThan,
                          operands: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "config",
                             position: (160, 21),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "compress",
                               position: (160, 28),
                              },
                             ],
                            },
                            default: None,
                           },
                           Int {
                            value: 0,
                            position: (160, 39),
                           },
                          ],
                          position: (160, 37),
                         },
                         FunctionApplication {
                          function: Variable {
                           identifier: "versionAtLeast",
                           position: (160, 44),
                          },
                          arguments: [
                           PropertyAccess {
                            expression: Variable {
                             identifier: "config",
                             position: (160, 59),
                            },
                            attribute_path: AttributePath {
                             attributes: [
                              Raw {
                               content: "postgresqlPackage",
                               position: (160, 66),
                              },
                              Raw {
                               content: "version",
                               position: (160, 84),
                              },
                             ],
                            },
                            default: None,
                           },
                           String {
                            parts: [
                             Raw {
                              content: "10",
                             },
                            ],
                            position: (160, 92),
                           },
                          ],
                         },
                        ],
                        position: (160, 41),
                       },
                      ),
                      KeyValue(
                       AttributePath {
                        attributes: [
                         Raw {
                          content: "message",
                          position: (161, 9),
                         },
                        ],
                       },
                       String {
                        parts: [
                         Raw {
                          content: "Invalid configuration for WAL receiver \"",
                         },
                         Expression {
                          expression: Variable {
                           identifier: "name",
                           position: (161, 63),
                          },
                         },
                         Raw {
                          content: "\": compress requires PostgreSQL version >= 10.",
                         },
                        ],
                        position: (161, 19),
                       },
                      ),
                     ],
                     recursive: false,
                     position: (159, 7),
                    },
                   ],
                   position: (158, 70),
                  },
                  position: (158, 62),
                 },
                 position: (158, 56),
                },
                Variable {
                 identifier: "receivers",
                 position: (163, 8),
                },
               ],
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (165, 5),
              },
              Raw {
               content: "tmpfiles",
               position: (165, 13),
              },
              Raw {
               content: "rules",
               position: (165, 22),
              },
             ],
            },
            FunctionApplication {
             function: Variable {
              identifier: "mapAttrsToList",
              position: (165, 30),
             },
             arguments: [
              Function {
               argument: Some(
                "name",
               ),
               arguments: FunctionArguments {
                arguments: [],
                ellipsis: false,
               },
               definition: Function {
                argument: Some(
                 "config",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: String {
                 parts: [
                  Raw {
                   content: "d ",
                  },
                  Expression {
                   expression: FunctionApplication {
                    function: Variable {
                     identifier: "escapeShellArg",
                     position: (166, 11),
                    },
                    arguments: [
                     PropertyAccess {
                      expression: Variable {
                       identifier: "config",
                       position: (166, 26),
                      },
                      attribute_path: AttributePath {
                       attributes: [
                        Raw {
                         content: "directory",
                         position: (166, 33),
                        },
                       ],
                      },
                      default: None,
                     },
                    ],
                   },
                  },
                  Raw {
                   content: " 0750 postgres postgres - -\n",
                  },
                 ],
                 position: (165, 60),
                },
                position: (165, 52),
               },
               position: (165, 46),
              },
              Variable {
               identifier: "receivers",
               position: (167, 9),
              },
             ],
            },
           ),
           KeyValue(
            AttributePath {
             attributes: [
              Raw {
               content: "systemd",
               position: (169, 5),
              },
              Raw {
               content: "services",
               position: (169, 13),
              },
             ],
            },
            With {
             expression: Variable {
              identifier: "attrsets",
              position: (169, 29),
             },
             target: FunctionApplication {
              function: Variable {
               identifier: "mapAttrs'",
               position: (169, 39),
              },
              arguments: [
               Function {
                argument: Some(
                 "name",
                ),
                arguments: FunctionArguments {
                 arguments: [],
                 ellipsis: false,
                },
                definition: Function {
                 argument: Some(
                  "config",
                 ),
                 arguments: FunctionArguments {
                  arguments: [],
                  ellipsis: false,
                 },
                 definition: FunctionApplication {
                  function: Variable {
                   identifier: "nameValuePair",
                   position: (169, 64),
                  },
                  arguments: [
                   String {
                    parts: [
                     Raw {
                      content: "postgresql-wal-receiver-",
                     },
                     Expression {
                      expression: Variable {
                       identifier: "name",
                       position: (169, 105),
                      },
                     },
                    ],
                    position: (169, 78),
                   },
                   Map {
                    bindings: [
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "description",
                         position: (170, 7),
                        },
                       ],
                      },
                      String {
                       parts: [
                        Raw {
                         content: "PostgreSQL WAL receiver (",
                        },
                        Expression {
                         expression: Variable {
                          identifier: "name",
                          position: (170, 49),
                         },
                        },
                        Raw {
                         content: ")",
                        },
                       ],
                       position: (170, 21),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "wantedBy",
                         position: (171, 7),
                        },
                       ],
                      },
                      List {
                       elements: [
                        String {
                         parts: [
                          Raw {
                           content: "multi-user.target",
                          },
                         ],
                         position: (171, 20),
                        },
                       ],
                       position: (171, 18),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "startLimitIntervalSec",
                         position: (172, 7),
                        },
                       ],
                      },
                      Int {
                       value: 0,
                       position: (172, 31),
                      },
                     ),
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "serviceConfig",
                         position: (174, 7),
                        },
                       ],
                      },
                      Map {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "User",
                            position: (175, 9),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "postgres",
                           },
                          ],
                          position: (175, 16),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "Group",
                            position: (176, 9),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "postgres",
                           },
                          ],
                          position: (176, 17),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "KillSignal",
                            position: (177, 9),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "SIGINT",
                           },
                          ],
                          position: (177, 22),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "Restart",
                            position: (178, 9),
                           },
                          ],
                         },
                         String {
                          parts: [
                           Raw {
                            content: "always",
                           },
                          ],
                          position: (178, 19),
                         },
                        ),
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "RestartSec",
                            position: (179, 9),
                           },
                          ],
                         },
                         Int {
                          value: 60,
                          position: (179, 22),
                         },
                        ),
                       ],
                       recursive: false,
                       position: (174, 23),
                      },
                     ),
                     Inherit {
                      from: Some(
                       Variable {
                        identifier: "config",
                        position: (182, 16),
                       },
                      ),
                      attributes: [
                       Raw {
                        content: "environment",
                        position: (182, 24),
                       },
                      ],
                     },
                     KeyValue(
                      AttributePath {
                       attributes: [
                        Raw {
                         content: "script",
                         position: (184, 7),
                        },
                       ],
                      },
                      LetIn {
                       bindings: [
                        KeyValue(
                         AttributePath {
                          attributes: [
                           Raw {
                            content: "receiverCommand",
                            position: (185, 9),
                           },
                          ],
                         },
                         Function {
                          argument: Some(
                           "postgresqlPackage",
                          ),
                          arguments: FunctionArguments {
                           arguments: [],
                           ellipsis: false,
                          },
                          definition: IfThenElse {
                           predicate: FunctionApplication {
                            function: Variable {
                             identifier: "versionAtLeast",
                             position: (186, 14),
                            },
                            arguments: [
                             PropertyAccess {
                              expression: Variable {
                               identifier: "postgresqlPackage",
                               position: (186, 29),
                              },
                              attribute_path: AttributePath {
                               attributes: [
                                Raw {
                                 content: "version",
                                 position: (186, 47),
                                },
                               ],
                              },
                              default: None,
                             },
                             String {
                              parts: [
                               Raw {
                                content: "10",
                               },
                              ],
                              position: (186, 55),
                             },
                            ],
                           },
                           then: String {
                            parts: [
                             Expression {
                              expression: Variable {
                               identifier: "postgresqlPackage",
                               position: (187, 20),
                              },
                             },
                             Raw {
                              content: "/bin/pg_receivewal",
                             },
                            ],
                            position: (187, 17),
                           },
                           else_: String {
                            parts: [
                             Expression {
                              expression: Variable {
                               identifier: "postgresqlPackage",
                               position: (188, 20),
                              },
                             },
                             Raw {
                              content: "/bin/pg_receivexlog",
                             },
                            ],
                            position: (188, 17),
                           },
                           position: (186, 10),
                          },
                          position: (185, 27),
                         },
                        ),
                       ],
                       target: String {
                        parts: [
                         Raw {
                          content: "",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "receiverCommand",
                            position: (190, 11),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (190, 27),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "postgresqlPackage",
                                position: (190, 34),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n --no-password \\\n --directory=",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "escapeShellArg",
                            position: (192, 25),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (192, 40),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "directory",
                                position: (192, 47),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n --status-interval=",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "toString",
                            position: (193, 31),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (193, 40),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "statusInterval",
                                position: (193, 47),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n --dbname=",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "escapeShellArg",
                            position: (194, 22),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (194, 37),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "connection",
                                position: (194, 44),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n ",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "optionalString",
                            position: (195, 13),
                           },
                           arguments: [
                            BinaryOperation {
                             operator: GreaterThan,
                             operands: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "config",
                                position: (195, 29),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "compress",
                                  position: (195, 36),
                                 },
                                ],
                               },
                               default: None,
                              },
                              Int {
                               value: 0,
                               position: (195, 47),
                              },
                             ],
                             position: (195, 45),
                            },
                            String {
                             parts: [
                              Raw {
                               content: "--compress=",
                              },
                              Expression {
                               expression: FunctionApplication {
                                function: Variable {
                                 identifier: "toString",
                                 position: (195, 64),
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (195, 73),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "compress",
                                     position: (195, 80),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ],
                               },
                              },
                             ],
                             position: (195, 50),
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n ",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "optionalString",
                            position: (196, 13),
                           },
                           arguments: [
                            BinaryOperation {
                             operator: NotEqualTo,
                             operands: [
                              PropertyAccess {
                               expression: Variable {
                                identifier: "config",
                                position: (196, 29),
                               },
                               attribute_path: AttributePath {
                                attributes: [
                                 Raw {
                                  content: "slot",
                                  position: (196, 36),
                                 },
                                ],
                               },
                               default: None,
                              },
                              String {
                               parts: [],
                               position: (196, 44),
                              },
                             ],
                             position: (196, 41),
                            },
                            String {
                             parts: [
                              Raw {
                               content: "--slot=",
                              },
                              Expression {
                               expression: FunctionApplication {
                                function: Variable {
                                 identifier: "escapeShellArg",
                                 position: (196, 58),
                                },
                                arguments: [
                                 PropertyAccess {
                                  expression: Variable {
                                   identifier: "config",
                                   position: (196, 73),
                                  },
                                  attribute_path: AttributePath {
                                   attributes: [
                                    Raw {
                                     content: "slot",
                                     position: (196, 80),
                                    },
                                   ],
                                  },
                                  default: None,
                                 },
                                ],
                               },
                              },
                             ],
                             position: (196, 48),
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n ",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "optionalString",
                            position: (197, 13),
                           },
                           arguments: [
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (197, 28),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "synchronous",
                                position: (197, 35),
                               },
                              ],
                             },
                             default: None,
                            },
                            String {
                             parts: [
                              Raw {
                               content: "--synchronous",
                              },
                             ],
                             position: (197, 47),
                            },
                           ],
                          },
                         },
                         Raw {
                          content: " \\\n ",
                         },
                         Expression {
                          expression: FunctionApplication {
                           function: Variable {
                            identifier: "concatStringsSep",
                            position: (198, 13),
                           },
                           arguments: [
                            String {
                             parts: [
                              Raw {
                               content: " ",
                              },
                             ],
                             position: (198, 30),
                            },
                            PropertyAccess {
                             expression: Variable {
                              identifier: "config",
                              position: (198, 34),
                             },
                             attribute_path: AttributePath {
                              attributes: [
                               Raw {
                                content: "extraArgs",
                                position: (198, 41),
                               },
                              ],
                             },
                             default: None,
                            },
                           ],
                          },
                         },
                         Raw {
                          content: "\n",
                         },
                        ],
                        position: (189, 10),
                       },
                       position: (184, 16),
                      },
                     ),
                    ],
                    recursive: false,
                    position: (169, 112),
                   },
                  ],
                 },
                 position: (169, 56),
                },
                position: (169, 50),
               },
               Variable {
                identifier: "receivers",
                position: (200, 8),
               },
              ],
             },
             position: (169, 24),
            },
           ),
          ],
          recursive: false,
          position: (145, 30),
         },
        ],
       },
       position: (143, 12),
      },
     ),
     KeyValue(
      AttributePath {
       attributes: [
        Raw {
         content: "meta",
         position: (203, 3),
        },
        Raw {
         content: "maintainers",
         position: (203, 8),
        },
       ],
      },
      With {
       expression: Variable {
        identifier: "maintainers",
        position: (203, 27),
       },
       target: List {
        elements: [
         Variable {
          identifier: "pacien",
          position: (203, 42),
         },
        ],
        position: (203, 40),
       },
       position: (203, 22),
      },
     ),
    ],
    recursive: false,
    position: (118, 4),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}