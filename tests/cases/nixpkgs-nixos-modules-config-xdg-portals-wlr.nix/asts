---
Function {
 argument: Destructured {
  identifier: None,
  arguments: [
   DestructuredArgument {
    identifier: "config",
    default: None,
   },
   DestructuredArgument {
    identifier: "pkgs",
    default: None,
   },
   DestructuredArgument {
    identifier: "lib",
    default: None,
   },
  ],
  ellipsis: true,
 },
 definition: With {
  expression: Variable {
   identifier: "lib",
   position: (3, 6),
  },
  target: LetIn {
   bindings: [
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "cfg",
        position: (6, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "config",
       position: (6, 9),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "xdg",
         position: (6, 16),
        },
        Raw {
         content: "portal",
         position: (6, 20),
        },
        Raw {
         content: "wlr",
         position: (6, 27),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "package",
        position: (7, 3),
       },
      ],
     },
     to: PropertyAccess {
      expression: Variable {
       identifier: "pkgs",
       position: (7, 13),
      },
      attribute_path: AttributePath {
       parts: [
        Raw {
         content: "xdg-desktop-portal-wlr",
         position: (7, 18),
        },
       ],
      },
      default: None,
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "settingsFormat",
        position: (8, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "pkgs",
        position: (8, 20),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "formats",
          position: (8, 25),
         },
         Raw {
          content: "ini",
          position: (8, 33),
         },
        ],
       },
       default: None,
      },
      arguments: [
       Map {
        bindings: [],
        recursive: false,
        position: (8, 37),
       },
      ],
     },
    },
    Binding {
     from: AttributePath {
      parts: [
       Raw {
        content: "configFile",
        position: (9, 3),
       },
      ],
     },
     to: FunctionApplication {
      function: PropertyAccess {
       expression: Variable {
        identifier: "settingsFormat",
        position: (9, 16),
       },
       attribute_path: AttributePath {
        parts: [
         Raw {
          content: "generate",
          position: (9, 31),
         },
        ],
       },
       default: None,
      },
      arguments: [
       String {
        parts: [
         Raw {
          content: "xdg-desktop-portal-wlr.ini",
          position: (9, 41),
         },
        ],
        position: (9, 40),
       },
       PropertyAccess {
        expression: Variable {
         identifier: "cfg",
         position: (9, 69),
        },
        attribute_path: AttributePath {
         parts: [
          Raw {
           content: "settings",
           position: (9, 73),
          },
         ],
        },
        default: None,
       },
      ],
     },
    },
   ],
   target: Map {
    bindings: [
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "meta",
         position: (12, 3),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "maintainers",
            position: (13, 5),
           },
          ],
         },
         to: With {
          expression: Variable {
           identifier: "maintainers",
           position: (13, 24),
          },
          target: List {
           elements: [
            Variable {
             identifier: "minijackson",
             position: (13, 39),
            },
           ],
           position: (13, 37),
          },
          position: (13, 19),
         },
        },
       ],
       recursive: false,
       position: (12, 10),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "options",
         position: (16, 3),
        },
        Raw {
         content: "xdg",
         position: (16, 11),
        },
        Raw {
         content: "portal",
         position: (16, 15),
        },
        Raw {
         content: "wlr",
         position: (16, 22),
        },
       ],
      },
      to: Map {
       bindings: [
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (17, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkEnableOption",
           position: (17, 14),
          },
          arguments: [
           String {
            parts: [
             Raw {
              content: "desktop portal for wlroots-based desktops\n\nThis will add the <package>xdg-desktop-portal-wlr</package> package into\nthe <option>xdg.portal.extraPortals</option> option, and provide the\nconfiguration file\n",
              position: (18, 1),
             },
            ],
            position: (17, 29),
           },
          ],
         },
        },
        Binding {
         from: AttributePath {
          parts: [
           Raw {
            content: "settings",
            position: (25, 5),
           },
          ],
         },
         to: FunctionApplication {
          function: Variable {
           identifier: "mkOption",
           position: (25, 16),
          },
          arguments: [
           Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "description",
                 position: (26, 7),
                },
               ],
              },
              to: String {
               parts: [
                Raw {
                 content: "Configuration for <package>xdg-desktop-portal-wlr</package>.\n\nSee <literal>xdg-desktop-portal-wlr(5)</literal> for supported\nvalues.\n",
                 position: (27, 1),
                },
               ],
               position: (26, 21),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "type",
                 position: (33, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: PropertyAccess {
                expression: Variable {
                 identifier: "types",
                 position: (33, 14),
                },
                attribute_path: AttributePath {
                 parts: [
                  Raw {
                   content: "submodule",
                   position: (33, 20),
                  },
                 ],
                },
                default: None,
               },
               arguments: [
                Map {
                 bindings: [
                  Binding {
                   from: AttributePath {
                    parts: [
                     Raw {
                      content: "freeformType",
                      position: (34, 9),
                     },
                    ],
                   },
                   to: PropertyAccess {
                    expression: Variable {
                     identifier: "settingsFormat",
                     position: (34, 24),
                    },
                    attribute_path: AttributePath {
                     parts: [
                      Raw {
                       content: "type",
                       position: (34, 39),
                      },
                     ],
                    },
                    default: None,
                   },
                  },
                 ],
                 recursive: false,
                 position: (33, 30),
                },
               ],
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "default",
                 position: (37, 7),
                },
               ],
              },
              to: Map {
               bindings: [],
               recursive: false,
               position: (37, 17),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "example",
                 position: (40, 7),
                },
               ],
              },
              to: FunctionApplication {
               function: Variable {
                identifier: "literalExpression",
                position: (40, 17),
               },
               arguments: [
                String {
                 parts: [
                  Raw {
                   content: "{\n  screencast = {\n    output_name = \"HDMI-A-1\";\n    max_fps = 30;\n    exec_before = \"disable_notifications.sh\";\n    exec_after = \"enable_notifications.sh\";\n    chooser_type = \"simple\";\n    chooser_cmd = \"",
                   position: (41, 1),
                  },
                  Raw {
                   content: "$",
                   position: (48, 28),
                  },
                  Raw {
                   content: "{pkgs.slurp}/bin/slurp -f %o -or\";\n  };\n}\n",
                   position: (48, 31),
                  },
                 ],
                 position: (40, 35),
                },
               ],
              },
             },
            ],
            recursive: false,
            position: (25, 25),
           },
          ],
         },
        },
       ],
       recursive: false,
       position: (16, 28),
      },
     },
     Binding {
      from: AttributePath {
       parts: [
        Raw {
         content: "config",
         position: (55, 3),
        },
       ],
      },
      to: FunctionApplication {
       function: Variable {
        identifier: "mkIf",
        position: (55, 12),
       },
       arguments: [
        PropertyAccess {
         expression: Variable {
          identifier: "cfg",
          position: (55, 17),
         },
         attribute_path: AttributePath {
          parts: [
           Raw {
            content: "enable",
            position: (55, 21),
           },
          ],
         },
         default: None,
        },
        Map {
         bindings: [
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "xdg",
              position: (56, 5),
             },
             Raw {
              content: "portal",
              position: (56, 9),
             },
            ],
           },
           to: Map {
            bindings: [
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "enable",
                 position: (57, 7),
                },
               ],
              },
              to: Variable {
               identifier: "true",
               position: (57, 16),
              },
             },
             Binding {
              from: AttributePath {
               parts: [
                Raw {
                 content: "extraPortals",
                 position: (58, 7),
                },
               ],
              },
              to: List {
               elements: [
                Variable {
                 identifier: "package",
                 position: (58, 24),
                },
               ],
               position: (58, 22),
              },
             },
            ],
            recursive: false,
            position: (56, 18),
           },
          },
          Binding {
           from: AttributePath {
            parts: [
             Raw {
              content: "systemd",
              position: (61, 5),
             },
             Raw {
              content: "user",
              position: (61, 13),
             },
             Raw {
              content: "services",
              position: (61, 18),
             },
             Raw {
              content: "xdg-desktop-portal-wlr",
              position: (61, 27),
             },
             Raw {
              content: "serviceConfig",
              position: (61, 50),
             },
             Raw {
              content: "ExecStart",
              position: (61, 64),
             },
            ],
           },
           to: List {
            elements: [
             String {
              parts: [],
              position: (63, 7),
             },
             String {
              parts: [
               Expression {
                expression: Variable {
                 identifier: "package",
                 position: (64, 10),
                },
               },
               Raw {
                content: "/libexec/xdg-desktop-portal-wlr --config=",
                position: (64, 18),
               },
               Expression {
                expression: Variable {
                 identifier: "configFile",
                 position: (64, 61),
                },
               },
              ],
              position: (64, 7),
             },
            ],
            position: (61, 76),
           },
          },
         ],
         recursive: false,
         position: (55, 28),
        },
       ],
      },
     },
    ],
    recursive: false,
    position: (11, 1),
   },
   position: (5, 1),
  },
  position: (3, 1),
 },
 position: (1, 1),
}